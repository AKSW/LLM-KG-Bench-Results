2023-07-03 18:27:58,633 [DEBUG] config used: {'tests': ['TurtleSampleGeneration'], 'models': [{'label': 'GPT-4', 'class': 'ModelGpt', 'params': [{'model': 'gpt-4'}]}], 'sizes': [1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000], 'iterations': 5}
2023-07-03 18:27:58,637 [INFO] test configuration: tests:['TurtleSampleGeneration']; iterations:5; sizes:[1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000]; models:[{'label': 'GPT-4', 'class': 'ModelGpt', 'params': {'model': 'gpt-4'}}]
2023-07-03 18:27:58,638 [INFO] Start for task 'TurtleSampleGeneration' version '1.0' at 2023-07-03 18:27:58.638216
2023-07-03 18:27:58,638 [DEBUG] init model: class=ModelGpt; params={'model': 'gpt-4'}.
2023-07-03 18:27:58,639 [INFO]   model=GPT-gpt-4 ...
2023-07-03 18:27:58,639 [INFO]   size=1000
2023-07-03 18:27:58,640 [INFO]   iteration=1/5 ...
2023-07-03 18:27:58,640 [INFO]     evaluating model=GPT-4--GPT-gpt-4; time=2023-07-03 18:27:58.640343; size=1000; i=1
2023-07-03 18:27:58,640 [DEBUG]       sending to model "gpt-4" message(~240 chars): "[{'role': 'user', 'content': 'Create a knowledge graph in turtle format that consists of 10 different objects of type foaf:person. Each should have at least 2 and at most 9 connections to other persons via foaf:knows. Give no extra text.'}]"
2023-07-03 18:27:58,643 [DEBUG] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-07-03 18:27:58,643 [DEBUG] api_version=None data='{"model": "gpt-4", "messages": [{"role": "user", "content": "Create a knowledge graph in turtle format that consists of 10 different objects of type foaf:person. Each should have at least 2 and at most 9 connections to other persons via foaf:knows. Give no extra text."}]}' message='Post details'
2023-07-03 18:27:58,643 [DEBUG] Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
2023-07-03 18:27:58,648 [DEBUG] Starting new HTTPS connection (1): api.openai.com:443
2023-07-03 18:28:36,054 [DEBUG] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-07-03 18:28:36,055 [DEBUG] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=37051 request_id=2c3f12eeac69964d005ee39fd4a524a3 response_code=200
2023-07-03 18:28:36,093 [DEBUG]       got from model "gpt-4" raw answer: {"id": "chatcmpl-7YGh4ylCZLZRmg2VrYLRUOaKNHrcE", "object": "chat.completion", "created": 1688401678, "model": "gpt-4-0613", "choices": [{"index": 0, "message": {"role": "assistant", "content": "@prefix foaf: <http://xmlns.com/foaf/0.1/> .\n\n<http://example.org/people#Alice> a foaf:Person ;\n  foaf:knows <http://example.org/people#Bob>,\n             <http://example.org/people#Charlie> .\n\n<http://example.org/people#Bob> a foaf:Person ;\n  foaf:knows <http://example.org/people#Alice>,\n             <http://example.org/people#Charlie>,\n             <http://example.org/people#Denise> .\n\n<http://example.org/people#Charlie> a foaf:Person ;\n  foaf:knows <http://example.org/people#Alice>,\n             <http://example.org/people#Bob>,\n             <http://example.org/people#Edna>,\n             <http://example.org/people#Fred> .\n\n<http://example.org/people#Denise> a foaf:Person ;\n  foaf:knows <http://example.org/people#Bob>,\n             <http://example.org/people#Charlie>,\n             <http://example.org/people#Fred>,\n             <http://example.org/people#George>.\n\n<http://example.org/people#Edna> a foaf:Person ;\n  foaf:knows <http://example.org/people#Charlie>,\n             <http://example.org/people#Fred>.\n\n<http://example.org/people#Fred> a foaf:Person ;\n  foaf:knows <http://example.org/people#Charlie>,\n             <http://example.org/people#Denise>,\n             <http://example.org/people#Edna>, \n             <http://example.org/people#George>, \n             <http://example.org/people#Hannah> .\n\n<http://example.org/people#George> a foaf:Person ;\n  foaf:knows <http://example.org/people#Denise>,\n             <http://example.org/people#Fred>,\n             <http://example.org/people#Hannah>,\n             <http://example.org/people#Ingrid>.\n\n<http://example.org/people#Hannah> a foaf:Person ;\n  foaf:knows <http://example.org/people#Fred>,\n             <http://example.org/people#George>,\n             <http://example.org/people#Ingrid>, \n             <http://example.org/people#Jon>.\n\n<http://example.org/people#Ingrid> a foaf:Person ;\n  foaf:knows <http://example.org/people#George>,\n             <http://example.org/people#Hannah>,\n             <http://example.org/people#Jon>.\n\n<http://example.org/people#Jon> a foaf:Person ;\n  foaf:knows <http://example.org/people#Hannah>,\n             <http://example.org/people#Ingrid>.\n"}, "finish_reason": "stop"}], "usage": {"prompt_tokens": 56, "completion_tokens": 572, "total_tokens": 628}}
2023-07-03 18:28:36,093 [DEBUG]       got from model "gpt-4-0613" answer(~2153 chars): "@prefix foaf: <http://xmlns.com/foaf/0.1/> .\n\n<http://example.org/people#Alice> a foaf:Person ;\n  foaf:knows <http://example.org/people#Bob>,\n             <http://example.org/people#Charlie> .\n\n<http://example.org/people#Bob> a foaf:Person ;\n  foaf:knows <http://example.org/people#Alice>,\n             <http://example.org/people#Charlie>,\n             <http://example.org/people#Denise> .\n\n<http://example.org/people#Charlie> a foaf:Person ;\n  foaf:knows <http://example.org/people#Alice>,\n             <http://example.org/people#Bob>,\n             <http://example.org/people#Edna>,\n             <http://example.org/people#Fred> .\n\n<http://example.org/people#Denise> a foaf:Person ;\n  foaf:knows <http://example.org/people#Bob>,\n             <http://example.org/people#Charlie>,\n             <http://example.org/people#Fred>,\n             <http://example.org/people#George>.\n\n<http://example.org/people#Edna> a foaf:Person ;\n  foaf:knows <http://example.org/people#Charlie>,\n             <http://example.org/people#Fred>.\n\n<http://example.org/people#Fred> a foaf:Person ;\n  foaf:knows <http://example.org/people#Charlie>,\n             <http://example.org/people#Denise>,\n             <http://example.org/people#Edna>, \n             <http://example.org/people#George>, \n             <http://example.org/people#Hannah> .\n\n<http://example.org/people#George> a foaf:Person ;\n  foaf:knows <http://example.org/people#Denise>,\n             <http://example.org/people#Fred>,\n             <http://example.org/people#Hannah>,\n             <http://example.org/people#Ingrid>.\n\n<http://example.org/people#Hannah> a foaf:Person ;\n  foaf:knows <http://example.org/people#Fred>,\n             <http://example.org/people#George>,\n             <http://example.org/people#Ingrid>, \n             <http://example.org/people#Jon>.\n\n<http://example.org/people#Ingrid> a foaf:Person ;\n  foaf:knows <http://example.org/people#George>,\n             <http://example.org/people#Hannah>,\n             <http://example.org/people#Jon>.\n\n<http://example.org/people#Jon> a foaf:Person ;\n  foaf:knows <http://example.org/people#Hannah>,\n             <http://example.org/people#Ingrid>.\n"
2023-07-03 18:28:36,516 [DEBUG]     evaluation done with result = {"startTime": "2023-07-03T18:27:58.640878", "modelId": "GPT--gpt-4--gpt-4-0613", "taskInfo": {"taskId": "SyntheticDatasetGeneration", "version": "1.0", "gitCommit": "6d9d86080f1bb453792d1733e903a2673d4cffde"}, "scores": {"parsable": 1.0, "persons_relative_error": 0.0, "min_friends_ok": 1, "max_friends_ok": 1}, "info": {"n_persons": 10}, "duration": "0:00:37.455608", "interactions": [["prompt", "2023-07-03T18:27:58.640883", "Create a knowledge graph in turtle format that consists of 10 different objects of type foaf:person. Each should have at least 2 and at most 9 connections to other persons via foaf:knows. Give no extra text."], ["response", "2023-07-03T18:28:36.096486", "@prefix foaf: <http://xmlns.com/foaf/0.1/> .\n\n<http://example.org/people#Alice> a foaf:Person ;\n  foaf:knows <http://example.org/people#Bob>,\n             <http://example.org/people#Charlie> .\n\n<http://example.org/people#Bob> a foaf:Person ;\n  foaf:knows <http://example.org/people#Alice>,\n             <http://example.org/people#Charlie>,\n             <http://example.org/people#Denise> .\n\n<http://example.org/people#Charlie> a foaf:Person ;\n  foaf:knows <http://example.org/people#Alice>,\n             <http://example.org/people#Bob>,\n             <http://example.org/people#Edna>,\n             <http://example.org/people#Fred> .\n\n<http://example.org/people#Denise> a foaf:Person ;\n  foaf:knows <http://example.org/people#Bob>,\n             <http://example.org/people#Charlie>,\n             <http://example.org/people#Fred>,\n             <http://example.org/people#George>.\n\n<http://example.org/people#Edna> a foaf:Person ;\n  foaf:knows <http://example.org/people#Charlie>,\n             <http://example.org/people#Fred>.\n\n<http://example.org/people#Fred> a foaf:Person ;\n  foaf:knows <http://example.org/people#Charlie>,\n             <http://example.org/people#Denise>,\n             <http://example.org/people#Edna>, \n             <http://example.org/people#George>, \n             <http://example.org/people#Hannah> .\n\n<http://example.org/people#George> a foaf:Person ;\n  foaf:knows <http://example.org/people#Denise>,\n             <http://example.org/people#Fred>,\n             <http://example.org/people#Hannah>,\n             <http://example.org/people#Ingrid>.\n\n<http://example.org/people#Hannah> a foaf:Person ;\n  foaf:knows <http://example.org/people#Fred>,\n             <http://example.org/people#George>,\n             <http://example.org/people#Ingrid>, \n             <http://example.org/people#Jon>.\n\n<http://example.org/people#Ingrid> a foaf:Person ;\n  foaf:knows <http://example.org/people#George>,\n             <http://example.org/people#Hannah>,\n             <http://example.org/people#Jon>.\n\n<http://example.org/people#Jon> a foaf:Person ;\n  foaf:knows <http://example.org/people#Hannah>,\n             <http://example.org/people#Ingrid>.\n"]]}
2023-07-03 18:28:36,517 [INFO]     scores: {'parsable': 1.0, 'persons_relative_error': 0.0, 'min_friends_ok': 1, 'max_friends_ok': 1}
2023-07-03 18:28:36,521 [INFO]   iteration=2/5 ...
2023-07-03 18:28:36,521 [INFO]     evaluating model=GPT-4--GPT-gpt-4; time=2023-07-03 18:28:36.521763; size=1000; i=2
2023-07-03 18:28:36,522 [DEBUG]       sending to model "gpt-4" message(~240 chars): "[{'role': 'user', 'content': 'Create a knowledge graph in turtle format that consists of 10 different objects of type foaf:person. Each should have at least 2 and at most 9 connections to other persons via foaf:knows. Give no extra text.'}]"
2023-07-03 18:28:36,523 [DEBUG] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-07-03 18:28:36,523 [DEBUG] api_version=None data='{"model": "gpt-4", "messages": [{"role": "user", "content": "Create a knowledge graph in turtle format that consists of 10 different objects of type foaf:person. Each should have at least 2 and at most 9 connections to other persons via foaf:knows. Give no extra text."}]}' message='Post details'
2023-07-03 18:28:58,396 [DEBUG] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-07-03 18:28:58,397 [DEBUG] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=21687 request_id=2783a2dab753cf311098e5b9c58ff016 response_code=200
2023-07-03 18:28:58,398 [DEBUG]       got from model "gpt-4" raw answer: {"id": "chatcmpl-7YGhgOp5WUW2xlyllb1e2sv6tUb18", "object": "chat.completion", "created": 1688401716, "model": "gpt-4-0613", "choices": [{"index": 0, "message": {"role": "assistant", "content": "@prefix foaf: <http://xmlns.com/foaf/0.1/> .\n\n:person1 a foaf:Person ;\n    foaf:knows :person2, :person3 .\n\n:person2 a foaf:Person ;\n    foaf:knows :person1, :person4, :person5 .\n\n:person3 a foaf:Person ;\n    foaf:knows :person1, :person6, :person7, :person8 .\n\n:person4 a foaf:Person ;\n    foaf:knows :person2, :person9 .\n\n:person5 a foaf:Person ;\n    foaf:knows :person2, :person6, :person10 .\n\n:person6 a foaf:Person ;\n    foaf:knows :person3, :person5 .\n\n:person7 a foaf:Person ;\n    foaf:knows :person3, :person8, :person9, :person10 .\n\n:person8 a foaf:Person ;\n    foaf:knows :person3, :person7 .\n\n:person9 a foaf:Person ;\n    foaf:knows :person4, :person7 .\n\n:person10 a foaf:Person ;\n    foaf:knows :person5, :person7 ."}, "finish_reason": "stop"}], "usage": {"prompt_tokens": 56, "completion_tokens": 273, "total_tokens": 329}}
2023-07-03 18:28:58,399 [DEBUG]       got from model "gpt-4-0613" answer(~727 chars): "@prefix foaf: <http://xmlns.com/foaf/0.1/> .\n\n:person1 a foaf:Person ;\n    foaf:knows :person2, :person3 .\n\n:person2 a foaf:Person ;\n    foaf:knows :person1, :person4, :person5 .\n\n:person3 a foaf:Person ;\n    foaf:knows :person1, :person6, :person7, :person8 .\n\n:person4 a foaf:Person ;\n    foaf:knows :person2, :person9 .\n\n:person5 a foaf:Person ;\n    foaf:knows :person2, :person6, :person10 .\n\n:person6 a foaf:Person ;\n    foaf:knows :person3, :person5 .\n\n:person7 a foaf:Person ;\n    foaf:knows :person3, :person8, :person9, :person10 .\n\n:person8 a foaf:Person ;\n    foaf:knows :person3, :person7 .\n\n:person9 a foaf:Person ;\n    foaf:knows :person4, :person7 .\n\n:person10 a foaf:Person ;\n    foaf:knows :person5, :person7 ."
2023-07-03 18:28:58,437 [DEBUG]     evaluation done with result = {"startTime": "2023-07-03T18:28:36.522548", "modelId": "GPT--gpt-4--gpt-4-0613", "taskInfo": {"taskId": "SyntheticDatasetGeneration", "version": "1.0", "gitCommit": "6d9d86080f1bb453792d1733e903a2673d4cffde"}, "scores": {"parsable": 1.0, "persons_relative_error": -1.0, "min_friends_ok": 0, "max_friends_ok": 0}, "info": {"n_persons": 10}, "duration": "0:00:21.880103", "interactions": [["prompt", "2023-07-03T18:28:36.522560", "Create a knowledge graph in turtle format that consists of 10 different objects of type foaf:person. Each should have at least 2 and at most 9 connections to other persons via foaf:knows. Give no extra text."], ["response", "2023-07-03T18:28:58.402651", "@prefix foaf: <http://xmlns.com/foaf/0.1/> .\n\n:person1 a foaf:Person ;\n    foaf:knows :person2, :person3 .\n\n:person2 a foaf:Person ;\n    foaf:knows :person1, :person4, :person5 .\n\n:person3 a foaf:Person ;\n    foaf:knows :person1, :person6, :person7, :person8 .\n\n:person4 a foaf:Person ;\n    foaf:knows :person2, :person9 .\n\n:person5 a foaf:Person ;\n    foaf:knows :person2, :person6, :person10 .\n\n:person6 a foaf:Person ;\n    foaf:knows :person3, :person5 .\n\n:person7 a foaf:Person ;\n    foaf:knows :person3, :person8, :person9, :person10 .\n\n:person8 a foaf:Person ;\n    foaf:knows :person3, :person7 .\n\n:person9 a foaf:Person ;\n    foaf:knows :person4, :person7 .\n\n:person10 a foaf:Person ;\n    foaf:knows :person5, :person7 ."]]}
2023-07-03 18:28:58,438 [INFO]     scores: {'parsable': 1.0, 'persons_relative_error': -1.0, 'min_friends_ok': 0, 'max_friends_ok': 0}
2023-07-03 18:28:58,441 [INFO]   iteration=3/5 ...
2023-07-03 18:28:58,442 [INFO]     evaluating model=GPT-4--GPT-gpt-4; time=2023-07-03 18:28:58.442449; size=1000; i=3
2023-07-03 18:28:58,442 [DEBUG]       sending to model "gpt-4" message(~240 chars): "[{'role': 'user', 'content': 'Create a knowledge graph in turtle format that consists of 10 different objects of type foaf:person. Each should have at least 2 and at most 9 connections to other persons via foaf:knows. Give no extra text.'}]"
2023-07-03 18:28:58,443 [DEBUG] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-07-03 18:28:58,443 [DEBUG] api_version=None data='{"model": "gpt-4", "messages": [{"role": "user", "content": "Create a knowledge graph in turtle format that consists of 10 different objects of type foaf:person. Each should have at least 2 and at most 9 connections to other persons via foaf:knows. Give no extra text."}]}' message='Post details'
2023-07-03 18:29:42,721 [DEBUG] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-07-03 18:29:42,722 [DEBUG] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=44078 request_id=712f9fc02770b00dc18bb3c161dcae60 response_code=200
2023-07-03 18:29:42,723 [DEBUG]       got from model "gpt-4" raw answer: {"id": "chatcmpl-7YGi2YFXNC2Rsll5tmO2WIywHqPfU", "object": "chat.completion", "created": 1688401738, "model": "gpt-4-0613", "choices": [{"index": 0, "message": {"role": "assistant", "content": "@prefix foaf: <http://xmlns.com/foaf/0.1/>.\n\n<http://example.org/people#Alice> a foaf:Person ;\n    foaf:knows <http://example.org/people#Bob>,\n               <http://example.org/people#Charlie>.\n\n<http://example.org/people#Bob> a foaf:Person ;\n    foaf:knows <http://example.org/people#Alice>,\n               <http://example.org/people#Charlie>,\n               <http://example.org/people#Denise>.\n\n<http://example.org/people#Charlie> a foaf:Person ;\n    foaf:knows <http://example.org/people#Alice>,\n               <http://example.org/people#Bob>,\n               <http://example.org/people#Evie>.\n\n<http://example.org/people#Denise> a foaf:Person ;\n    foaf:knows <http://example.org/people#Bob>,\n               <http://example.org/people#Evie>,\n               <http://example.org/people#Frank>.\n\n<http://example.org/people#Evie> a foaf:Person ;\n    foaf:knows <http://example.org/people#Charlie>,\n               <http://example.org/people#Denise>,\n               <http://example.org/people#Frank>,\n               <http://example.org/people#Grace>.\n\n<http://example.org/people#Frank> a foaf:Person ;\n    foaf:knows <http://example.org/people#Denise>,\n               <http://example.org/people#Evie>,\n               <http://example.org/people#Grace>,\n               <http://example.org/people#Harold>.\n\n<http://example.org/people#Grace> a foaf:Person ;\n    foaf:knows <http://example.org/people#Evie>,\n               <http://example.org/people#Frank>,\n               <http://example.org/people#Harold>,\n               <http://example.org/people#Irene>,\n               <http://example.org/people#Jack>.\n\n<http://example.org/people#Harold> a foaf:Person ;\n    foaf:knows <http://example.org/people#Frank>,\n               <http://example.org/people#Grace>,\n               <http://example.org/people#Irene>.\n\n<http://example.org/people#Irene> a foaf:Person ;\n    foaf:knows <http://example.org/people#Grace>,\n               <http://example.org/people#Harold>,\n               <http://example.org/people#Jack>.\n\n<http://example.org/people#Jack> a foaf:Person ;\n    foaf:knows <http://example.org/people#Grace>,\n               <http://example.org/people#Irene>."}, "finish_reason": "stop"}], "usage": {"prompt_tokens": 56, "completion_tokens": 555, "total_tokens": 611}}
2023-07-03 18:29:42,723 [DEBUG]       got from model "gpt-4-0613" answer(~2153 chars): "@prefix foaf: <http://xmlns.com/foaf/0.1/>.\n\n<http://example.org/people#Alice> a foaf:Person ;\n    foaf:knows <http://example.org/people#Bob>,\n               <http://example.org/people#Charlie>.\n\n<http://example.org/people#Bob> a foaf:Person ;\n    foaf:knows <http://example.org/people#Alice>,\n               <http://example.org/people#Charlie>,\n               <http://example.org/people#Denise>.\n\n<http://example.org/people#Charlie> a foaf:Person ;\n    foaf:knows <http://example.org/people#Alice>,\n               <http://example.org/people#Bob>,\n               <http://example.org/people#Evie>.\n\n<http://example.org/people#Denise> a foaf:Person ;\n    foaf:knows <http://example.org/people#Bob>,\n               <http://example.org/people#Evie>,\n               <http://example.org/people#Frank>.\n\n<http://example.org/people#Evie> a foaf:Person ;\n    foaf:knows <http://example.org/people#Charlie>,\n               <http://example.org/people#Denise>,\n               <http://example.org/people#Frank>,\n               <http://example.org/people#Grace>.\n\n<http://example.org/people#Frank> a foaf:Person ;\n    foaf:knows <http://example.org/people#Denise>,\n               <http://example.org/people#Evie>,\n               <http://example.org/people#Grace>,\n               <http://example.org/people#Harold>.\n\n<http://example.org/people#Grace> a foaf:Person ;\n    foaf:knows <http://example.org/people#Evie>,\n               <http://example.org/people#Frank>,\n               <http://example.org/people#Harold>,\n               <http://example.org/people#Irene>,\n               <http://example.org/people#Jack>.\n\n<http://example.org/people#Harold> a foaf:Person ;\n    foaf:knows <http://example.org/people#Frank>,\n               <http://example.org/people#Grace>,\n               <http://example.org/people#Irene>.\n\n<http://example.org/people#Irene> a foaf:Person ;\n    foaf:knows <http://example.org/people#Grace>,\n               <http://example.org/people#Harold>,\n               <http://example.org/people#Jack>.\n\n<http://example.org/people#Jack> a foaf:Person ;\n    foaf:knows <http://example.org/people#Grace>,\n               <http://example.org/people#Irene>."
2023-07-03 18:29:42,738 [DEBUG]     evaluation done with result = {"startTime": "2023-07-03T18:28:58.442923", "modelId": "GPT--gpt-4--gpt-4-0613", "taskInfo": {"taskId": "SyntheticDatasetGeneration", "version": "1.0", "gitCommit": "6d9d86080f1bb453792d1733e903a2673d4cffde"}, "scores": {"parsable": 1.0, "persons_relative_error": 0.0, "min_friends_ok": 1, "max_friends_ok": 1}, "info": {"n_persons": 10}, "duration": "0:00:44.284642", "interactions": [["prompt", "2023-07-03T18:28:58.442926", "Create a knowledge graph in turtle format that consists of 10 different objects of type foaf:person. Each should have at least 2 and at most 9 connections to other persons via foaf:knows. Give no extra text."], ["response", "2023-07-03T18:29:42.727565", "@prefix foaf: <http://xmlns.com/foaf/0.1/>.\n\n<http://example.org/people#Alice> a foaf:Person ;\n    foaf:knows <http://example.org/people#Bob>,\n               <http://example.org/people#Charlie>.\n\n<http://example.org/people#Bob> a foaf:Person ;\n    foaf:knows <http://example.org/people#Alice>,\n               <http://example.org/people#Charlie>,\n               <http://example.org/people#Denise>.\n\n<http://example.org/people#Charlie> a foaf:Person ;\n    foaf:knows <http://example.org/people#Alice>,\n               <http://example.org/people#Bob>,\n               <http://example.org/people#Evie>.\n\n<http://example.org/people#Denise> a foaf:Person ;\n    foaf:knows <http://example.org/people#Bob>,\n               <http://example.org/people#Evie>,\n               <http://example.org/people#Frank>.\n\n<http://example.org/people#Evie> a foaf:Person ;\n    foaf:knows <http://example.org/people#Charlie>,\n               <http://example.org/people#Denise>,\n               <http://example.org/people#Frank>,\n               <http://example.org/people#Grace>.\n\n<http://example.org/people#Frank> a foaf:Person ;\n    foaf:knows <http://example.org/people#Denise>,\n               <http://example.org/people#Evie>,\n               <http://example.org/people#Grace>,\n               <http://example.org/people#Harold>.\n\n<http://example.org/people#Grace> a foaf:Person ;\n    foaf:knows <http://example.org/people#Evie>,\n               <http://example.org/people#Frank>,\n               <http://example.org/people#Harold>,\n               <http://example.org/people#Irene>,\n               <http://example.org/people#Jack>.\n\n<http://example.org/people#Harold> a foaf:Person ;\n    foaf:knows <http://example.org/people#Frank>,\n               <http://example.org/people#Grace>,\n               <http://example.org/people#Irene>.\n\n<http://example.org/people#Irene> a foaf:Person ;\n    foaf:knows <http://example.org/people#Grace>,\n               <http://example.org/people#Harold>,\n               <http://example.org/people#Jack>.\n\n<http://example.org/people#Jack> a foaf:Person ;\n    foaf:knows <http://example.org/people#Grace>,\n               <http://example.org/people#Irene>."]]}
2023-07-03 18:29:42,739 [INFO]     scores: {'parsable': 1.0, 'persons_relative_error': 0.0, 'min_friends_ok': 1, 'max_friends_ok': 1}
2023-07-03 18:29:42,743 [INFO]   iteration=4/5 ...
2023-07-03 18:29:42,744 [INFO]     evaluating model=GPT-4--GPT-gpt-4; time=2023-07-03 18:29:42.744280; size=1000; i=4
2023-07-03 18:29:42,744 [DEBUG]       sending to model "gpt-4" message(~240 chars): "[{'role': 'user', 'content': 'Create a knowledge graph in turtle format that consists of 10 different objects of type foaf:person. Each should have at least 2 and at most 9 connections to other persons via foaf:knows. Give no extra text.'}]"
2023-07-03 18:29:42,745 [DEBUG] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-07-03 18:29:42,745 [DEBUG] api_version=None data='{"model": "gpt-4", "messages": [{"role": "user", "content": "Create a knowledge graph in turtle format that consists of 10 different objects of type foaf:person. Each should have at least 2 and at most 9 connections to other persons via foaf:knows. Give no extra text."}]}' message='Post details'
2023-07-03 18:30:14,427 [DEBUG] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-07-03 18:30:14,428 [DEBUG] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=31466 request_id=eeb8c7f73b45850b616cf65247e76295 response_code=200
2023-07-03 18:30:14,428 [DEBUG]       got from model "gpt-4" raw answer: {"id": "chatcmpl-7YGik6UuZjQdVSX9IVHWUNpBZBbR6", "object": "chat.completion", "created": 1688401782, "model": "gpt-4-0613", "choices": [{"index": 0, "message": {"role": "assistant", "content": "```\n@prefix foaf: <http://xmlns.com/foaf/0.1/> .\n\n_:person1 a foaf:Person ;\n    foaf:knows _:person2, _:person3, _:person4, _:person5 .\n\n_:person2 a foaf:Person ;\n    foaf:knows _:person1, _:person6 .\n\n_:person3 a foaf:Person ;\n    foaf:knows _:person1, _:person7, _:person8 .\n\n_:person4 a foaf:Person ;\n    foaf:knows _:person1, _:person6, _:person7, _:person8, _:person9 .\n\n_:person5 a foaf:Person ;\n    foaf:knows _:person1, _:person9 .\n\n_:person6 a foaf:Person ;\n    foaf:knows _:person2, _:person4, _:person7 .\n\n_:person7 a foaf:Person ;\n    foaf:knows _:person3, _:person4, _:person6, _:person8, _:person10 .\n\n_:person8 a foaf:Person ;\n    foaf:knows _:person3, _:person4, _:person7 .\n\n_:person9 a foaf:Person ;\n    foaf:knows _:person4, _:person5 .\n\n_:person10 a foaf:Person ;\n    foaf:knows _:person7 .\n```"}, "finish_reason": "stop"}], "usage": {"prompt_tokens": 56, "completion_tokens": 292, "total_tokens": 348}}
2023-07-03 18:30:14,429 [DEBUG]       got from model "gpt-4-0613" answer(~814 chars): "```\n@prefix foaf: <http://xmlns.com/foaf/0.1/> .\n\n_:person1 a foaf:Person ;\n    foaf:knows _:person2, _:person3, _:person4, _:person5 .\n\n_:person2 a foaf:Person ;\n    foaf:knows _:person1, _:person6 .\n\n_:person3 a foaf:Person ;\n    foaf:knows _:person1, _:person7, _:person8 .\n\n_:person4 a foaf:Person ;\n    foaf:knows _:person1, _:person6, _:person7, _:person8, _:person9 .\n\n_:person5 a foaf:Person ;\n    foaf:knows _:person1, _:person9 .\n\n_:person6 a foaf:Person ;\n    foaf:knows _:person2, _:person4, _:person7 .\n\n_:person7 a foaf:Person ;\n    foaf:knows _:person3, _:person4, _:person6, _:person8, _:person10 .\n\n_:person8 a foaf:Person ;\n    foaf:knows _:person3, _:person4, _:person7 .\n\n_:person9 a foaf:Person ;\n    foaf:knows _:person4, _:person5 .\n\n_:person10 a foaf:Person ;\n    foaf:knows _:person7 .\n```"
2023-07-03 18:30:14,448 [DEBUG]     evaluation done with result = {"startTime": "2023-07-03T18:29:42.744862", "modelId": "GPT--gpt-4--gpt-4-0613", "taskInfo": {"taskId": "SyntheticDatasetGeneration", "version": "1.0", "gitCommit": "6d9d86080f1bb453792d1733e903a2673d4cffde"}, "scores": {"parsable": 1.0, "persons_relative_error": 0.0, "min_friends_ok": 0, "max_friends_ok": 1}, "info": {"n_persons": 10}, "duration": "0:00:31.688000", "interactions": [["prompt", "2023-07-03T18:29:42.744865", "Create a knowledge graph in turtle format that consists of 10 different objects of type foaf:person. Each should have at least 2 and at most 9 connections to other persons via foaf:knows. Give no extra text."], ["response", "2023-07-03T18:30:14.432862", "```\n@prefix foaf: <http://xmlns.com/foaf/0.1/> .\n\n_:person1 a foaf:Person ;\n    foaf:knows _:person2, _:person3, _:person4, _:person5 .\n\n_:person2 a foaf:Person ;\n    foaf:knows _:person1, _:person6 .\n\n_:person3 a foaf:Person ;\n    foaf:knows _:person1, _:person7, _:person8 .\n\n_:person4 a foaf:Person ;\n    foaf:knows _:person1, _:person6, _:person7, _:person8, _:person9 .\n\n_:person5 a foaf:Person ;\n    foaf:knows _:person1, _:person9 .\n\n_:person6 a foaf:Person ;\n    foaf:knows _:person2, _:person4, _:person7 .\n\n_:person7 a foaf:Person ;\n    foaf:knows _:person3, _:person4, _:person6, _:person8, _:person10 .\n\n_:person8 a foaf:Person ;\n    foaf:knows _:person3, _:person4, _:person7 .\n\n_:person9 a foaf:Person ;\n    foaf:knows _:person4, _:person5 .\n\n_:person10 a foaf:Person ;\n    foaf:knows _:person7 .\n```"]]}
2023-07-03 18:30:14,448 [INFO]     scores: {'parsable': 1.0, 'persons_relative_error': 0.0, 'min_friends_ok': 0, 'max_friends_ok': 1}
2023-07-03 18:30:14,455 [INFO]   iteration=5/5 ...
2023-07-03 18:30:14,455 [INFO]     evaluating model=GPT-4--GPT-gpt-4; time=2023-07-03 18:30:14.455766; size=1000; i=5
2023-07-03 18:30:14,456 [DEBUG]       sending to model "gpt-4" message(~240 chars): "[{'role': 'user', 'content': 'Create a knowledge graph in turtle format that consists of 10 different objects of type foaf:person. Each should have at least 2 and at most 9 connections to other persons via foaf:knows. Give no extra text.'}]"
2023-07-03 18:30:14,456 [DEBUG] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-07-03 18:30:14,457 [DEBUG] api_version=None data='{"model": "gpt-4", "messages": [{"role": "user", "content": "Create a knowledge graph in turtle format that consists of 10 different objects of type foaf:person. Each should have at least 2 and at most 9 connections to other persons via foaf:knows. Give no extra text."}]}' message='Post details'
2023-07-03 18:30:42,426 [DEBUG] https://api.openai.com:443 "POST /v1/chat/completions HTTP/1.1" 200 None
2023-07-03 18:30:42,427 [DEBUG] message='OpenAI API response' path=https://api.openai.com/v1/chat/completions processing_ms=27765 request_id=d5a23a410d99b0be6440de9c4ca8d014 response_code=200
2023-07-03 18:30:42,427 [DEBUG]       got from model "gpt-4" raw answer: {"id": "chatcmpl-7YGjG4XKU6sNXCj19tGiUQfjbcA7p", "object": "chat.completion", "created": 1688401814, "model": "gpt-4-0613", "choices": [{"index": 0, "message": {"role": "assistant", "content": "@prefix foaf: <http://xmlns.com/foaf/0.1/> .\n\n<#Person1> a foaf:Person ;\n        foaf:knows <#Person2>, <#Person3> .\n\n<#Person2> a foaf:Person ;\n        foaf:knows <#Person1>, <#Person4>, <#Person5> .\n\n<#Person3> a foaf:Person ;\n        foaf:knows <#Person1>, <#Person6> .\n\n<#Person4> a foaf:Person ;\n        foaf:knows <#Person2>, <#Person7>, <#Person8> .\n\n<#Person5> a foaf:Person ;\n        foaf:knows <#Person2>, <#Person9> .\n\n<#Person6> a foaf:Person ;\n        foaf:knows <#Person3>, <#Person10> .\n\n<#Person7> a foaf:Person ;\n        foaf:knows <#Person4>, <#Person1>, <#Person5>, <#Person6> .\n\n<#Person8> a foaf:Person ;\n        foaf:knows <#Person4>, <#Person2>, <#Person3>, <#Person9> .\n\n<#Person9> a foaf:Person ;\n        foaf:knows <#Person5>, <#Person8>, <#Person10> .\n\n<#Person10> a foaf:Person ;\n        foaf:knows <#Person6>, <#Person9> .\n"}, "finish_reason": "stop"}], "usage": {"prompt_tokens": 56, "completion_tokens": 334, "total_tokens": 390}}
2023-07-03 18:30:42,428 [DEBUG]       got from model "gpt-4-0613" answer(~852 chars): "@prefix foaf: <http://xmlns.com/foaf/0.1/> .\n\n<#Person1> a foaf:Person ;\n        foaf:knows <#Person2>, <#Person3> .\n\n<#Person2> a foaf:Person ;\n        foaf:knows <#Person1>, <#Person4>, <#Person5> .\n\n<#Person3> a foaf:Person ;\n        foaf:knows <#Person1>, <#Person6> .\n\n<#Person4> a foaf:Person ;\n        foaf:knows <#Person2>, <#Person7>, <#Person8> .\n\n<#Person5> a foaf:Person ;\n        foaf:knows <#Person2>, <#Person9> .\n\n<#Person6> a foaf:Person ;\n        foaf:knows <#Person3>, <#Person10> .\n\n<#Person7> a foaf:Person ;\n        foaf:knows <#Person4>, <#Person1>, <#Person5>, <#Person6> .\n\n<#Person8> a foaf:Person ;\n        foaf:knows <#Person4>, <#Person2>, <#Person3>, <#Person9> .\n\n<#Person9> a foaf:Person ;\n        foaf:knows <#Person5>, <#Person8>, <#Person10> .\n\n<#Person10> a foaf:Person ;\n        foaf:knows <#Person6>, <#Person9> .\n"
2023-07-03 18:30:42,443 [DEBUG]     evaluation done with result = {"startTime": "2023-07-03T18:30:14.456203", "modelId": "GPT--gpt-4--gpt-4-0613", "taskInfo": {"taskId": "SyntheticDatasetGeneration", "version": "1.0", "gitCommit": "6d9d86080f1bb453792d1733e903a2673d4cffde"}, "scores": {"parsable": 1.0, "persons_relative_error": 0.0, "min_friends_ok": 1, "max_friends_ok": 1}, "info": {"n_persons": 10}, "duration": "0:00:27.975105", "interactions": [["prompt", "2023-07-03T18:30:14.456209", "Create a knowledge graph in turtle format that consists of 10 different objects of type foaf:person. Each should have at least 2 and at most 9 connections to other persons via foaf:knows. Give no extra text."], ["response", "2023-07-03T18:30:42.431308", "@prefix foaf: <http://xmlns.com/foaf/0.1/> .\n\n<#Person1> a foaf:Person ;\n        foaf:knows <#Person2>, <#Person3> .\n\n<#Person2> a foaf:Person ;\n        foaf:knows <#Person1>, <#Person4>, <#Person5> .\n\n<#Person3> a foaf:Person ;\n        foaf:knows <#Person1>, <#Person6> .\n\n<#Person4> a foaf:Person ;\n        foaf:knows <#Person2>, <#Person7>, <#Person8> .\n\n<#Person5> a foaf:Person ;\n        foaf:knows <#Person2>, <#Person9> .\n\n<#Person6> a foaf:Person ;\n        foaf:knows <#Person3>, <#Person10> .\n\n<#Person7> a foaf:Person ;\n        foaf:knows <#Person4>, <#Person1>, <#Person5>, <#Person6> .\n\n<#Person8> a foaf:Person ;\n        foaf:knows <#Person4>, <#Person2>, <#Person3>, <#Person9> .\n\n<#Person9> a foaf:Person ;\n        foaf:knows <#Person5>, <#Person8>, <#Person10> .\n\n<#Person10> a foaf:Person ;\n        foaf:knows <#Person6>, <#Person9> .\n"]]}
2023-07-03 18:30:42,444 [INFO]     scores: {'parsable': 1.0, 'persons_relative_error': 0.0, 'min_friends_ok': 1, 'max_friends_ok': 1}
2023-07-03 18:30:42,446 [INFO]   size=2000
2023-07-03 18:30:42,447 [INFO]   iteration=1/5 ...
2023-07-03 18:30:42,448 [INFO]     evaluating model=GPT-4--GPT-gpt-4; time=2023-07-03 18:30:42.448180; size=2000; i=1
2023-07-03 18:30:42,448 [DEBUG]       sending to model "gpt-4" message(~241 chars): "[{'role': 'user', 'content': 'Create a knowledge graph in turtle format that consists of 20 different objects of type foaf:person. Each should have at least 2 and at most 19 connections to other persons via foaf:knows. Give no extra text.'}]"
2023-07-03 18:30:42,449 [DEBUG] message='Request to OpenAI API' method=post path=https://api.openai.com/v1/chat/completions
2023-07-03 18:30:42,449 [DEBUG] api_version=None data='{"model": "gpt-4", "messages": [{"role": "user", "content": "Create a knowledge graph in turtle format that consists of 20 different objects of type foaf:person. Each should have at least 2 and at most 19 connections to other persons via foaf:knows. Give no extra text."}]}' message='Post details'
