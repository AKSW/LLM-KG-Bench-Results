TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 29, 22, 558949),
             modelId='GPT--gpt-4--gpt-4-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 0.8333333333333333,
                     'listPrecision': 0.7142857142857143,
                     'listRecall': 1.0,
                     'listTrimF1': 0.8333333333333333,
                     'listTrimPrecision': 0.7142857142857143,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 0.8333333333333333,
                     'textHttpPrecision': 0.7142857142857143,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 7,
                   'listCorrectCount': 5,
                   'listLineCount': 7,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 7,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=8, microseconds=243436),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 29, 22, 558960),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 29, 30, 802385),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/chiefResearchOfficer\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/marketingManager\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 29, 30, 811393),
             modelId='GPT--gpt-4--gpt-4-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 1.0,
                     'listPrecision': 1.0,
                     'listRecall': 1.0,
                     'listTrimF1': 1.0,
                     'listTrimPrecision': 1.0,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 1.0,
                     'textHttpPrecision': 1.0,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 5,
                   'listCorrectCount': 5,
                   'listLineCount': 5,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 5,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=4, microseconds=725606),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 29, 30, 811399),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 29, 35, 536999),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 29, 35, 543540),
             modelId='GPT--gpt-4--gpt-4-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 0.8333333333333333,
                     'listPrecision': 0.7142857142857143,
                     'listRecall': 1.0,
                     'listTrimF1': 0.8333333333333333,
                     'listTrimPrecision': 0.7142857142857143,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 0.8333333333333333,
                     'textHttpPrecision': 0.7142857142857143,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 7,
                   'listCorrectCount': 5,
                   'listLineCount': 7,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 7,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=7, microseconds=852724),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 29, 35, 543545),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 29, 43, 396264),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/chiefResearchOfficer\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/marketingManager\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 29, 43, 404542),
             modelId='GPT--gpt-4--gpt-4-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 1.0,
                     'listPrecision': 1.0,
                     'listRecall': 1.0,
                     'listTrimF1': 1.0,
                     'listTrimPrecision': 1.0,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 1.0,
                     'textHttpPrecision': 1.0,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 5,
                   'listCorrectCount': 5,
                   'listLineCount': 5,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 5,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=4, microseconds=894805),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 29, 43, 404548),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 29, 48, 299347),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 29, 48, 307272),
             modelId='GPT--gpt-4--gpt-4-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 1.0,
                     'listPrecision': 1.0,
                     'listRecall': 1.0,
                     'listTrimF1': 1.0,
                     'listTrimPrecision': 1.0,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 1.0,
                     'textHttpPrecision': 1.0,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 5,
                   'listCorrectCount': 5,
                   'listLineCount': 5,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 5,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=4, microseconds=397571),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 29, 48, 307276),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 29, 52, 704843),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 29, 52, 711620),
             modelId='GPT--gpt-4--gpt-4-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 1.0,
                     'listPrecision': 1.0,
                     'listRecall': 1.0,
                     'listTrimF1': 1.0,
                     'listTrimPrecision': 1.0,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 1.0,
                     'textHttpPrecision': 1.0,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 5,
                   'listCorrectCount': 5,
                   'listLineCount': 5,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 5,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=3, microseconds=599899),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 29, 52, 711625),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 29, 56, 311519),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 29, 56, 317875),
             modelId='GPT--gpt-4--gpt-4-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 0.625,
                     'listF1': 0.7692307692307693,
                     'listPrecision': 0.625,
                     'listRecall': 1.0,
                     'listTrimF1': 0.7692307692307693,
                     'listTrimPrecision': 0.625,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 1.0,
                     'textHttpPrecision': 1.0,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 8,
                   'listCorrectCount': 5,
                   'listLineCount': 5,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 5,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=8, microseconds=620710),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 29, 56, 317880),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 30, 4, 938585),
                            'https://abc.def/ghi/anne\n'
                            'http://www.w3.org/ns/org#Membership\n'
                            'https://abc.def/ghi/researchDep\n'
                            'http://www.w3.org/ns/org#unitOf\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'http://www.w3.org/ns/org#Membership\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 30, 4, 946534),
             modelId='GPT--gpt-4--gpt-4-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 1.0,
                     'listPrecision': 1.0,
                     'listRecall': 1.0,
                     'listTrimF1': 1.0,
                     'listTrimPrecision': 1.0,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 1.0,
                     'textHttpPrecision': 1.0,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 5,
                   'listCorrectCount': 5,
                   'listLineCount': 5,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 5,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=5, microseconds=949320),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 30, 4, 946539),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 30, 10, 895854),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 30, 10, 902559),
             modelId='GPT--gpt-4--gpt-4-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 1.0,
                     'listPrecision': 1.0,
                     'listRecall': 1.0,
                     'listTrimF1': 1.0,
                     'listTrimPrecision': 1.0,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 1.0,
                     'textHttpPrecision': 1.0,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 5,
                   'listCorrectCount': 5,
                   'listLineCount': 5,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 5,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=4, microseconds=533811),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 30, 10, 902564),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 30, 15, 436370),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 30, 15, 443261),
             modelId='GPT--gpt-4--gpt-4-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 1.0,
                     'listPrecision': 1.0,
                     'listRecall': 1.0,
                     'listTrimF1': 1.0,
                     'listTrimPrecision': 1.0,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 1.0,
                     'textHttpPrecision': 1.0,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 5,
                   'listCorrectCount': 5,
                   'listLineCount': 5,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 5,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=4, microseconds=187217),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 30, 15, 443264),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 30, 19, 630478),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 30, 19, 637265),
             modelId='GPT--gpt-4--gpt-4-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 1.0,
                     'listPrecision': 1.0,
                     'listRecall': 1.0,
                     'listTrimF1': 1.0,
                     'listTrimPrecision': 1.0,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 1.0,
                     'textHttpPrecision': 1.0,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 5,
                   'listCorrectCount': 5,
                   'listLineCount': 5,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 5,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=4, microseconds=659938),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 30, 19, 637270),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 30, 24, 297203),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 30, 24, 305529),
             modelId='GPT--gpt-4--gpt-4-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 1.0,
                     'listPrecision': 1.0,
                     'listRecall': 1.0,
                     'listTrimF1': 1.0,
                     'listTrimPrecision': 1.0,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 1.0,
                     'textHttpPrecision': 1.0,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 5,
                   'listCorrectCount': 5,
                   'listLineCount': 5,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 5,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=4, microseconds=32986),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 30, 24, 305533),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 30, 28, 338515),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 30, 28, 345492),
             modelId='GPT--gpt-4--gpt-4-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 1.0,
                     'listPrecision': 1.0,
                     'listRecall': 1.0,
                     'listTrimF1': 1.0,
                     'listTrimPrecision': 1.0,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 1.0,
                     'textHttpPrecision': 1.0,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 5,
                   'listCorrectCount': 5,
                   'listLineCount': 5,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 5,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=4, microseconds=11976),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 30, 28, 345498),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 30, 32, 357468),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 30, 32, 374793),
             modelId='GPT--gpt-4--gpt-4-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 1.0,
                     'listPrecision': 1.0,
                     'listRecall': 1.0,
                     'listTrimF1': 1.0,
                     'listTrimPrecision': 1.0,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 1.0,
                     'textHttpPrecision': 1.0,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 5,
                   'listCorrectCount': 5,
                   'listLineCount': 5,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 5,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=5, microseconds=369882),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 30, 32, 374799),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 30, 37, 744675),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 30, 37, 750771),
             modelId='GPT--gpt-4--gpt-4-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 1.0,
                     'listPrecision': 1.0,
                     'listRecall': 1.0,
                     'listTrimF1': 1.0,
                     'listTrimPrecision': 1.0,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 1.0,
                     'textHttpPrecision': 1.0,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 5,
                   'listCorrectCount': 5,
                   'listLineCount': 5,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 5,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=4, microseconds=192060),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 30, 37, 750775),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 30, 41, 942831),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 30, 41, 950921),
             modelId='GPT--gpt-4--gpt-4-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 1.0,
                     'listPrecision': 1.0,
                     'listRecall': 1.0,
                     'listTrimF1': 1.0,
                     'listTrimPrecision': 1.0,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 1.0,
                     'textHttpPrecision': 1.0,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 5,
                   'listCorrectCount': 5,
                   'listLineCount': 5,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 5,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=3, microseconds=960353),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 30, 41, 950926),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 30, 45, 911274),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 30, 45, 917687),
             modelId='GPT--gpt-4--gpt-4-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 1.0,
                     'listPrecision': 1.0,
                     'listRecall': 1.0,
                     'listTrimF1': 1.0,
                     'listTrimPrecision': 1.0,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 1.0,
                     'textHttpPrecision': 1.0,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 5,
                   'listCorrectCount': 5,
                   'listLineCount': 5,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 5,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=6, microseconds=857200),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 30, 45, 917691),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 30, 52, 774887),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 30, 52, 804022),
             modelId='GPT--gpt-4--gpt-4-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 0.8333333333333333,
                     'listPrecision': 0.7142857142857143,
                     'listRecall': 1.0,
                     'listTrimF1': 0.8333333333333333,
                     'listTrimPrecision': 0.7142857142857143,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 0.8333333333333333,
                     'textHttpPrecision': 0.7142857142857143,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 7,
                   'listCorrectCount': 5,
                   'listLineCount': 7,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 7,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=5, microseconds=969283),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 30, 52, 804029),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 30, 58, 773305),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/chiefResearchOfficer\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/marketingManager\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 30, 58, 782383),
             modelId='GPT--gpt-4--gpt-4-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 0.45454545454545453,
                     'listF1': 0.625,
                     'listPrecision': 0.45454545454545453,
                     'listRecall': 1.0,
                     'listTrimF1': 0.625,
                     'listTrimPrecision': 0.45454545454545453,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 1.0,
                     'textHttpPrecision': 1.0,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 11,
                   'listCorrectCount': 5,
                   'listLineCount': 5,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 5,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=9, microseconds=794606),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 30, 58, 782387),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 31, 8, 576989),
                            'https://abc.def/ghi/anne\n'
                            'http://www.w3.org/ns/org#member\n'
                            'http://www.w3.org/ns/org#organization\n'
                            'https://abc.def/ghi/researchDep\n'
                            'http://www.w3.org/ns/org#unitOf\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'http://www.w3.org/ns/org#unitOf\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'http://www.w3.org/ns/org#organization\n'
                            'http://www.w3.org/ns/org#member\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 31, 8, 590252),
             modelId='GPT--gpt-4--gpt-4-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 0.8333333333333333,
                     'listPrecision': 0.7142857142857143,
                     'listRecall': 1.0,
                     'listTrimF1': 0.8333333333333333,
                     'listTrimPrecision': 0.7142857142857143,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 0.8333333333333333,
                     'textHttpPrecision': 0.7142857142857143,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 7,
                   'listCorrectCount': 5,
                   'listLineCount': 7,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 7,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=7, microseconds=606968),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 31, 8, 590258),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 31, 16, 197220),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/chiefResearchOfficer\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/marketingManager\n'
                            'https://abc.def/ghi/bob')])
