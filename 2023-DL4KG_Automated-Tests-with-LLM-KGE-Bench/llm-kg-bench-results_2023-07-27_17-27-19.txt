TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 27, 19, 949416),
             modelId='GPT--gpt-3.5-turbo--gpt-3.5-turbo-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 1.0,
                     'listPrecision': 1.0,
                     'listRecall': 1.0,
                     'listTrimF1': 1.0,
                     'listTrimPrecision': 1.0,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 1.0,
                     'textHttpPrecision': 1.0,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 5,
                   'listCorrectCount': 5,
                   'listLineCount': 5,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 5,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=2, microseconds=93024),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 27, 19, 949430),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 27, 22, 42440),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 27, 22, 49600),
             modelId='GPT--gpt-3.5-turbo--gpt-3.5-turbo-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 1.0,
                     'listPrecision': 1.0,
                     'listRecall': 1.0,
                     'listTrimF1': 1.0,
                     'listTrimPrecision': 1.0,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 1.0,
                     'textHttpPrecision': 1.0,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 5,
                   'listCorrectCount': 5,
                   'listLineCount': 5,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 5,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=2, microseconds=295376),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 27, 22, 49606),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 27, 24, 344976),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 27, 24, 351542),
             modelId='GPT--gpt-3.5-turbo--gpt-3.5-turbo-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 1.0,
                     'listPrecision': 1.0,
                     'listRecall': 1.0,
                     'listTrimF1': 1.0,
                     'listTrimPrecision': 1.0,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 1.0,
                     'textHttpPrecision': 1.0,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 5,
                   'listCorrectCount': 5,
                   'listLineCount': 5,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 5,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=1, microseconds=973628),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 27, 24, 351547),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 27, 26, 325170),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 27, 26, 333304),
             modelId='GPT--gpt-3.5-turbo--gpt-3.5-turbo-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 1.0,
                     'listPrecision': 1.0,
                     'listRecall': 1.0,
                     'listTrimF1': 1.0,
                     'listTrimPrecision': 1.0,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 1.0,
                     'textHttpPrecision': 1.0,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 5,
                   'listCorrectCount': 5,
                   'listLineCount': 5,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 5,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=1, microseconds=959464),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 27, 26, 333309),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 27, 28, 292768),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 27, 28, 301283),
             modelId='GPT--gpt-3.5-turbo--gpt-3.5-turbo-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 1.0,
                     'listPrecision': 1.0,
                     'listRecall': 1.0,
                     'listTrimF1': 1.0,
                     'listTrimPrecision': 1.0,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 1.0,
                     'textHttpPrecision': 1.0,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 5,
                   'listCorrectCount': 5,
                   'listLineCount': 5,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 5,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=1, microseconds=967019),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 27, 28, 301288),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 27, 30, 268302),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 27, 30, 274283),
             modelId='GPT--gpt-3.5-turbo--gpt-3.5-turbo-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 0.888888888888889,
                     'listPrecision': 1.0,
                     'listRecall': 0.8,
                     'listTrimF1': 0.888888888888889,
                     'listTrimPrecision': 1.0,
                     'listTrimRecall': 0.8,
                     'textHttpF1': 0.888888888888889,
                     'textHttpPrecision': 1.0,
                     'textHttpRecall': 0.8,
                     'textShortF1': 0.888888888888889,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 0.8},
             info={'lineCount': 4,
                   'listCorrectCount': 4,
                   'listLineCount': 4,
                   'listTrimCorrectCount': 4,
                   'textHttpCount': 4,
                   'textHttpCountCorrect': 4,
                   'textShortCount': 4,
                   'textShortCountCorrect': 4},
             duration=datetime.timedelta(seconds=1, microseconds=508458),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 27, 30, 274287),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 27, 31, 782741),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 27, 31, 790101),
             modelId='GPT--gpt-3.5-turbo--gpt-3.5-turbo-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 1.0,
                     'listPrecision': 1.0,
                     'listRecall': 1.0,
                     'listTrimF1': 1.0,
                     'listTrimPrecision': 1.0,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 1.0,
                     'textHttpPrecision': 1.0,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 5,
                   'listCorrectCount': 5,
                   'listLineCount': 5,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 5,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=5, microseconds=114247),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 27, 31, 790105),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 27, 36, 904348),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 27, 36, 912129),
             modelId='GPT--gpt-3.5-turbo--gpt-3.5-turbo-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 1.0,
                     'listPrecision': 1.0,
                     'listRecall': 1.0,
                     'listTrimF1': 1.0,
                     'listTrimPrecision': 1.0,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 1.0,
                     'textHttpPrecision': 1.0,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 5,
                   'listCorrectCount': 5,
                   'listLineCount': 5,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 5,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=1, microseconds=572140),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 27, 36, 912134),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 27, 38, 484269),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 27, 38, 492864),
             modelId='GPT--gpt-3.5-turbo--gpt-3.5-turbo-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 1.0,
                     'listPrecision': 1.0,
                     'listRecall': 1.0,
                     'listTrimF1': 1.0,
                     'listTrimPrecision': 1.0,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 1.0,
                     'textHttpPrecision': 1.0,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 5,
                   'listCorrectCount': 5,
                   'listLineCount': 5,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 5,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=1, microseconds=926607),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 27, 38, 492870),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 27, 40, 419471),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 27, 40, 426444),
             modelId='GPT--gpt-3.5-turbo--gpt-3.5-turbo-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 1.0,
                     'listPrecision': 1.0,
                     'listRecall': 1.0,
                     'listTrimF1': 1.0,
                     'listTrimPrecision': 1.0,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 1.0,
                     'textHttpPrecision': 1.0,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 5,
                   'listCorrectCount': 5,
                   'listLineCount': 5,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 5,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=2, microseconds=58786),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 27, 40, 426449),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 27, 42, 485230),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 27, 42, 493606),
             modelId='GPT--gpt-3.5-turbo--gpt-3.5-turbo-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 0.8333333333333333,
                     'listPrecision': 0.7142857142857143,
                     'listRecall': 1.0,
                     'listTrimF1': 0.8333333333333333,
                     'listTrimPrecision': 0.7142857142857143,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 0.8333333333333333,
                     'textHttpPrecision': 0.7142857142857143,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 7,
                   'listCorrectCount': 5,
                   'listLineCount': 7,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 7,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=3, microseconds=791463),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 27, 42, 493612),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 27, 46, 285069),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/chiefResearchOfficer\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/marketingManager\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 27, 46, 292036),
             modelId='GPT--gpt-3.5-turbo--gpt-3.5-turbo-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 1.0,
                     'listPrecision': 1.0,
                     'listRecall': 1.0,
                     'listTrimF1': 1.0,
                     'listTrimPrecision': 1.0,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 1.0,
                     'textHttpPrecision': 1.0,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 5,
                   'listCorrectCount': 5,
                   'listLineCount': 5,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 5,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=2, microseconds=33648),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 27, 46, 292041),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 27, 48, 325684),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 27, 48, 333342),
             modelId='GPT--gpt-3.5-turbo--gpt-3.5-turbo-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 1.0,
                     'listPrecision': 1.0,
                     'listRecall': 1.0,
                     'listTrimF1': 1.0,
                     'listTrimPrecision': 1.0,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 1.0,
                     'textHttpPrecision': 1.0,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 5,
                   'listCorrectCount': 5,
                   'listLineCount': 5,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 5,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=1, microseconds=838600),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 27, 48, 333349),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 27, 50, 171942),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 27, 50, 179320),
             modelId='GPT--gpt-3.5-turbo--gpt-3.5-turbo-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 1.0,
                     'listPrecision': 1.0,
                     'listRecall': 1.0,
                     'listTrimF1': 1.0,
                     'listTrimPrecision': 1.0,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 1.0,
                     'textHttpPrecision': 1.0,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 5,
                   'listCorrectCount': 5,
                   'listLineCount': 5,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 5,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=2, microseconds=12556),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 27, 50, 179325),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 27, 52, 191876),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 27, 52, 199087),
             modelId='GPT--gpt-3.5-turbo--gpt-3.5-turbo-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 1.0,
                     'listPrecision': 1.0,
                     'listRecall': 1.0,
                     'listTrimF1': 1.0,
                     'listTrimPrecision': 1.0,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 1.0,
                     'textHttpPrecision': 1.0,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 5,
                   'listCorrectCount': 5,
                   'listLineCount': 5,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 5,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=1, microseconds=917286),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 27, 52, 199093),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 27, 54, 116373),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 27, 54, 123662),
             modelId='GPT--gpt-3.5-turbo--gpt-3.5-turbo-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 1.0,
                     'listPrecision': 1.0,
                     'listRecall': 1.0,
                     'listTrimF1': 1.0,
                     'listTrimPrecision': 1.0,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 1.0,
                     'textHttpPrecision': 1.0,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 5,
                   'listCorrectCount': 5,
                   'listLineCount': 5,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 5,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=2, microseconds=687447),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 27, 54, 123667),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 27, 56, 811109),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 27, 56, 819470),
             modelId='GPT--gpt-3.5-turbo--gpt-3.5-turbo-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 1.0,
                     'listPrecision': 1.0,
                     'listRecall': 1.0,
                     'listTrimF1': 1.0,
                     'listTrimPrecision': 1.0,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 1.0,
                     'textHttpPrecision': 1.0,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 5,
                   'listCorrectCount': 5,
                   'listLineCount': 5,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 5,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=3, microseconds=309150),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 27, 56, 819475),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 28, 0, 128620),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 28, 0, 135647),
             modelId='GPT--gpt-3.5-turbo--gpt-3.5-turbo-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 1.0,
                     'listPrecision': 1.0,
                     'listRecall': 1.0,
                     'listTrimF1': 1.0,
                     'listTrimPrecision': 1.0,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 1.0,
                     'textHttpPrecision': 1.0,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 5,
                   'listCorrectCount': 5,
                   'listLineCount': 5,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 5,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=1, microseconds=841690),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 28, 0, 135652),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 28, 1, 977337),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 28, 1, 983196),
             modelId='GPT--gpt-3.5-turbo--gpt-3.5-turbo-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 0.888888888888889,
                     'listPrecision': 1.0,
                     'listRecall': 0.8,
                     'listTrimF1': 0.888888888888889,
                     'listTrimPrecision': 1.0,
                     'listTrimRecall': 0.8,
                     'textHttpF1': 0.888888888888889,
                     'textHttpPrecision': 1.0,
                     'textHttpRecall': 0.8,
                     'textShortF1': 0.888888888888889,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 0.8},
             info={'lineCount': 4,
                   'listCorrectCount': 4,
                   'listLineCount': 4,
                   'listTrimCorrectCount': 4,
                   'textHttpCount': 4,
                   'textHttpCountCorrect': 4,
                   'textShortCount': 4,
                   'textShortCountCorrect': 4},
             duration=datetime.timedelta(seconds=1, microseconds=966097),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 28, 1, 983200),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 28, 3, 949293),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/bob')])
TaskExecInfo(startTime=datetime.datetime(2023, 7, 27, 17, 28, 3, 956585),
             modelId='GPT--gpt-3.5-turbo--gpt-3.5-turbo-0613',
             taskInfo=TaskInfo(taskId='TurtleConnectionExplainStatic',
                               version='1.0',
                               gitCommit='dd716f229c6d9c627544a513aa00d953882a1f45'),
             scores={'lineBrevity': 1.0,
                     'listF1': 1.0,
                     'listPrecision': 1.0,
                     'listRecall': 1.0,
                     'listTrimF1': 1.0,
                     'listTrimPrecision': 1.0,
                     'listTrimRecall': 1.0,
                     'textHttpF1': 1.0,
                     'textHttpPrecision': 1.0,
                     'textHttpRecall': 1.0,
                     'textShortF1': 1.0,
                     'textShortPrecision': 1.0,
                     'textShortRecall': 1.0},
             info={'lineCount': 5,
                   'listCorrectCount': 5,
                   'listLineCount': 5,
                   'listTrimCorrectCount': 5,
                   'textHttpCount': 5,
                   'textHttpCountCorrect': 5,
                   'textShortCount': 5,
                   'textShortCountCorrect': 5},
             duration=datetime.timedelta(seconds=1, microseconds=955562),
             interactions=[('prompt',
                            datetime.datetime(2023, 7, 27, 17, 28, 3, 956589),
                            'For the following turtle find the shortest non '
                            'trivial connection from Anne to Bob. Please '
                            'summarize the connection with just a list of '
                            'resource IRIs, one per line, starting with '
                            'https://abc.def/ghi/anne and ending with '
                            'https://abc.def/ghi/bob . Please leave out '
                            'rdf:type infos, leave out explanatory text and '
                            'answer with just the IRI lines.\n'
                            '\n'
                            'PREFIX : <https://abc.def/ghi/>\n'
                            'PREFIX rdfs: '
                            '<http://www.w3.org/2000/01/rdf-schema#>\n'
                            'PREFIX owl: <http://www.w3.org/2002/07/owl#>\n'
                            'PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n'
                            'PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>\n'
                            'PREFIX org: <http://www.w3.org/ns/org#>\n'
                            '\n'
                            ':anne a foaf:Person ; foaf:firstName "Anne" ; '
                            'foaf:surname "Miller" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "UK" ] .\n'
                            ':bob a foaf:Person ; foaf:firstName "Bob" ; '
                            'foaf:surname "Tanner" ;\n'
                            '  vcard:hasAddress [ a vcard:Home ; '
                            'vcard:country-name "US" ] .\n'
                            '\n'
                            ':wonderOrg a org:Organization .\n'
                            ':researchDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Research Department" .\n'
                            ':marketingDep a org:OrganizationalUnit ; '
                            'org:unitOf :wonderOrg ;\n'
                            '  rdfs:label "Marketing Department" .\n'
                            '\n'
                            ':chiefResearchOfficer a org:Role . '
                            ':marketingManager a org:Role .\n'
                            '\n'
                            '[ a org:Membership ; org:member :anne ; '
                            'org:organization :researchDep ;\n'
                            '  org:role :chiefResearchOfficer ] .\n'
                            '[ a org:Membership ; org:member :bob  ; '
                            'org:organization :marketingDep ;\n'
                            '  org:role :marketingManager ] .\n'),
                           ('response',
                            datetime.datetime(2023, 7, 27, 17, 28, 5, 912147),
                            'https://abc.def/ghi/anne\n'
                            'https://abc.def/ghi/researchDep\n'
                            'https://abc.def/ghi/wonderOrg\n'
                            'https://abc.def/ghi/marketingDep\n'
                            'https://abc.def/ghi/bob')])
