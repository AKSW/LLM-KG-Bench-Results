[
  {
    "startTime": "2024-05-13T13:42:24.401850",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubgraph",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 799,
      "actualSize": 1583
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary001",
        "sparql": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX ns1: <http://example.org/ns#>\nSELECT ?creature ?alignment\nWHERE {\n   ?creature rdf:type ns1:Creature ;\n            ns1:alignment ?alignment .\n   FILTER (NOT EXISTS { ?creature ns1:speaks ns1:Draconic })\n   FILTER (?alignment = \"Chaotic Good\")\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,9 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n+PREFIX ns1: <http://example.org/ns#>\n+SELECT ?creature ?alignment\n+WHERE {\n+   ?creature rdf:type ns1:Creature ;\n+            ns1:alignment ?alignment .\n+   FILTER (NOT EXISTS { ?creature ns1:speaks ns1:Draconic })\n+   FILTER (?alignment = \"Chaotic Good\")\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary001",
        "sparql": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX ns1: <http://example.org/ns#>\nSELECT ?creature ?alignment\nWHERE {\n    ?creature rdf:type ns1:Creature ;\n              ns1:alignment \"Chaotic Good\" ;\n              ns1:speaks ?language .\n    FILTER (?language != ns1:Draconic)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,9 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n+PREFIX ns1: <http://example.org/ns#>\n+SELECT ?creature ?alignment\n+WHERE {\n+    ?creature rdf:type ns1:Creature ;\n+              ns1:alignment \"Chaotic Good\" ;\n+              ns1:speaks ?language .\n+    FILTER (?language != ns1:Draconic)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary001",
        "sparql": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX ns1: <http://example.org/ns#>\nSELECT ?creature\nWHERE {\n    ?creature rdf:type ns1:Creature ;\n              ns1:alignment \"Chaotic Good\" ;\n              FILTER NOT EXISTS { ?creature ns1:speaks ns1:Draconic }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n+PREFIX ns1: <http://example.org/ns#>\n+SELECT ?creature\n+WHERE {\n+    ?creature rdf:type ns1:Creature ;\n+              ns1:alignment \"Chaotic Good\" ;\n+              FILTER NOT EXISTS { ?creature ns1:speaks ns1:Draconic }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary001",
        "sparql": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX ns1: <http://example.org/ns#>\nSELECT ?creature\nWHERE {\n    ?creature rdf:type ns1:Creature ;\n              ns1:alignment \"Chaotic Good\" ;\n              FILTER NOT EXISTS { ?creature ns1:speaks ns1:Draconic }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n+PREFIX ns1: <http://example.org/ns#>\n+SELECT ?creature\n+WHERE {\n+    ?creature rdf:type ns1:Creature ;\n+              ns1:alignment \"Chaotic Good\" ;\n+              FILTER NOT EXISTS { ?creature ns1:speaks ns1:Draconic }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary001",
      "question": "which creatures not speaking draconic language do have chaotic good alignment",
      "refSparql": "SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }",
      "refResultSet": [
        "ns1:Anhana",
        "ns1:Ataxian",
        "ns1:Azruverda",
        "ns1:BattleImp",
        "ns1:Biofreezer",
        "ns1:BlackButterfly",
        "ns1:Cayhound",
        "ns1:Caypup",
        "ns1:Celedeen",
        "ns1:Cynosoma",
        "ns1:Djinni",
        "ns1:Domovoi",
        "ns1:Dryad",
        "ns1:ElysianTitan",
        "ns1:Faun",
        "ns1:FungalNymph",
        "ns1:Gancanagh",
        "ns1:Garuda",
        "ns1:Hamadryad",
        "ns1:HeraldofDreams",
        "ns1:Munavri",
        "ns1:Muse",
        "ns1:Nisid",
        "ns1:NobleDjinniVizier",
        "ns1:Nymph",
        "ns1:RiftFlumph",
        "ns1:RimefireEidolon",
        "ns1:SapphireOoze",
        "ns1:SkirmishersTroop",
        "ns1:StarMonarch",
        "ns1:SwanMaiden",
        "ns1:Taniwha",
        "ns1:Unicorn",
        "ns1:WoodGiant",
        "ns1:caypup"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:AdultBrassDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AdultCopperDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AdultCrystalDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AdultSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AncientBrassDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AncientCopperDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AncientCrystalDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AncientSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Androsphinx ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Anhana ns1:hasAlignment ns1:chaoticGood .\n\nns1:Ataxian ns1:hasAlignment ns1:chaoticGood .\n\nns1:AuwazCouatl ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Azruverda ns1:hasAlignment ns1:chaoticGood .\n\nns1:BattleImp ns1:hasAlignment ns1:chaoticGood .\n\nns1:Biofreezer ns1:hasAlignment ns1:chaoticGood .\n\nns1:BlackButterfly ns1:hasAlignment ns1:chaoticGood .\n\nns1:Bralani ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonGreatWyrm ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonJuvenile ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonMatureAdult ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonOld ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonVeryOld ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonVeryYoung ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonWyrm ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonWyrmling ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonYoungAdult ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Brijidine ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Cayhound ns1:hasAlignment ns1:chaoticGood .\n\nns1:Caypup ns1:hasAlignment ns1:chaoticGood .\n\nns1:Celedeen ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonGreatWyrm ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonJuvenile ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonMatureAdult ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonOld ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonVeryOld ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonVeryYoung ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonWyrm ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonWyrmling ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonYoungAdult ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonGreatWyrm ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonJuvenile ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonMatureAdult ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonOld ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonVeryOld ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonVeryYoung ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonWyrm ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonWyrmling ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonYoungAdult ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Cynosoma ns1:hasAlignment ns1:chaoticGood .\n\nns1:Djinni ns1:hasAlignment ns1:chaoticGood .\n\nns1:Domovoi ns1:hasAlignment ns1:chaoticGood .\n\nns1:Dryad ns1:hasAlignment ns1:chaoticGood .\n\nns1:ElysianTitan ns1:hasAlignment ns1:chaoticGood .\n\nns1:FaerieDragonDracoFraudatioMinimus ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Faeriedragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Faun ns1:hasAlignment ns1:chaoticGood .\n\nns1:FungalNymph ns1:hasAlignment ns1:chaoticGood .\n\nns1:Gancanagh ns1:hasAlignment ns1:chaoticGood .\n\nns1:Garuda ns1:hasAlignment ns1:chaoticGood .\n\nns1:Hamadryad ns1:hasAlignment ns1:chaoticGood .\n\nns1:HeraldofDreams ns1:hasAlignment ns1:chaoticGood .\n\nns1:HeraldofFreedom ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:HeraldofFreedomandJustice ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:JuvenileSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:MatureAdultSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:MixCouatl ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Munavri ns1:hasAlignment ns1:chaoticGood .\n\nns1:Muse ns1:hasAlignment ns1:chaoticGood .\n\nns1:Nisid ns1:hasAlignment ns1:chaoticGood .\n\nns1:NobleDjinniVizier ns1:hasAlignment ns1:chaoticGood .\n\nns1:Nymph ns1:hasAlignment ns1:chaoticGood .\n\nns1:OldSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Prydanu ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Raelis ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:RiftFlumph ns1:hasAlignment ns1:chaoticGood .\n\nns1:RimefireEidolon ns1:hasAlignment ns1:chaoticGood .\n\nns1:SapphireOoze ns1:hasAlignment ns1:chaoticGood .\n\nns1:SkirmishersTroop ns1:hasAlignment ns1:chaoticGood .\n\nns1:StarMonarch ns1:hasAlignment ns1:chaoticGood .\n\nns1:StormGiant ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:SwanMaiden ns1:hasAlignment ns1:chaoticGood .\n\nns1:Taniwha ns1:hasAlignment ns1:chaoticGood .\n\nns1:TheHornedLord ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Thyrlien ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Uinuja ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Unicorn ns1:hasAlignment ns1:chaoticGood .\n\nns1:Veranallia ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:VeranalliaAzata ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:VeryYoungSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:VeryoldSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:WoodGiant ns1:hasAlignment ns1:chaoticGood .\n\nns1:WyrmlingSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Yamah ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:YoungAdultSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:YoungBrassDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:YoungCopperDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:YoungCrystalDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:YoungSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:caypup ns1:hasAlignment ns1:chaoticGood .\n\nns1:greatwyrmSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:wyrmSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "subgraph",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:07.267086",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:42:24.401859",
        "Please generate a SPARQL query for the given RDF graph and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:which creatures not speaking draconic language do have chaotic good alignment\n\ngraph:\n```turtle\nn...```"
      ],
      [
        "response",
        "2024-05-13T13:42:27.371457",
        "```sparql\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX ns1: <http://example.org/ns#>\nSELECT ?creature ?alignment\nWHERE {\n   ?creature rdf:type ns1:Creature ;\n            ns1:alignment ?alignment .\n   FILTER (NOT EXISTS { ?creature ns1:speaks ns1:Draconic })\n   FILTER (?alignment = \"Chaotic Good\")\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T13:42:27.542450",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T13:42:29.673478",
        "```sparql\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX ns1: <http://example.org/ns#>\nSELECT ?creature ?alignment\nWHERE {\n    ?creature rdf:type ns1:Creature ;\n              ns1:alignment \"Chaotic Good\" ;\n              ns1:speaks ?language .\n    FILTER (?language != ns1:Draconic)\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T13:42:29.733235",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T13:42:31.668936",
        "```sparql\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX ns1: <http://example.org/ns#>\nSELECT ?creature\nWHERE {\n    ?creature rdf:type ns1:Creature ;\n              ns1:alignment \"Chaotic Good\" ;\n              FILTER NOT EXISTS { ?creature ns1:speaks ns1:Draconic }\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:42:42.088376",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubgraph",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 1470,
      "actualSize": 973
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) as ?count)\nWHERE {\n  ?creature ns1:hasLanguages ns1:TreantL ;\n           ns1:hasAlignment ?alignment .\n  FILTER (?alignment != ns1:trueNeutral)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) as ?count)\n+WHERE {\n+  ?creature ns1:hasLanguages ns1:TreantL ;\n+           ns1:hasAlignment ?alignment .\n+  FILTER (?alignment != ns1:trueNeutral)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 0.6666666666666666,
        "sparqlIrisF1measure": 0.8,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 0.6666666666666666,
        "sparqlIrisSuffixF1measure": 0.8,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "4"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) as ?count)\nWHERE {\n  ?creature ns1:hasLanguages ns1:TreantL ;\n           ns1:hasAlignment ?alignment .\n  FILTER (?alignment != ns1:trueNeutral)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) as ?count)\n+WHERE {\n+  ?creature ns1:hasLanguages ns1:TreantL ;\n+           ns1:hasAlignment ?alignment .\n+  FILTER (?alignment != ns1:trueNeutral)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 0.6666666666666666,
        "sparqlIrisF1measure": 0.8,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 0.6666666666666666,
        "sparqlIrisSuffixF1measure": 0.8,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "4"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary005",
      "question": "how many creatures with non-neutral alignment do speak treant language",
      "refSparql": "SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }",
      "refResultSet": [
        "4"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:ArcticDruid ns1:hasLanguages ns1:TreantL .\n\nns1:Goemul ns1:hasLanguages ns1:TreantL .\n\nns1:ScytheTree ns1:hasLanguages ns1:TreantL .\n\nns1:Tobongo ns1:hasAlignment ns1:trueNeutral ;\n    ns1:hasLanguages ns1:TreantL .\n\nns1:Treant ns1:hasLanguages ns1:TreantL .\n\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "subgraph",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:02.044927",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:42:42.088385",
        "Please generate a SPARQL query for the given RDF graph and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:how many creatures with non-neutral alignment do speak treant language\n\ngraph:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:ArcticDruid ns1:hasLanguages ns1:TreantL .\n\nns1:Goemul ns1:hasLanguages ns1:TreantL .\n\nns1:ScytheTree ns1:hasLanguages ns1:TreantL .\n\nns1:Tobongo ns1:hasAlignment ns1:trueNeutral ;\n    ns1:hasLanguages ns1:TreantL .\n\nns1:Treant ns1:hasLanguages ns1:TreantL .\n\n```"
      ],
      [
        "response",
        "2024-05-13T13:42:44.133303",
        "```sparql\nSELECT (COUNT(?creature) as ?count)\nWHERE {\n  ?creature ns1:hasLanguages ns1:TreantL ;\n           ns1:hasAlignment ?alignment .\n  FILTER (?alignment != ns1:trueNeutral)\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:42:55.509617",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubgraph",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 1116,
      "actualSize": 902
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ns1:aasimar ns1:canSpell ?spell.\n  ns1:caypup ns1:canSpell ?spell.\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ns1:aasimar ns1:canSpell ?spell.\n+  ns1:caypup ns1:canSpell ?spell.\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:stabilize"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ns1:aasimar ns1:canSpell ?spell.\n  ns1:caypup ns1:canSpell ?spell.\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ns1:aasimar ns1:canSpell ?spell.\n+  ns1:caypup ns1:canSpell ?spell.\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:stabilize"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary007",
      "question": "what spells Aasimar and Caypup do have in common",
      "refSparql": "SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }",
      "refResultSet": [
        "ns1:stabilize"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:aasimar ns1:canSpell ns1:bless,\n        ns1:command,\n        ns1:daylight,\n        ns1:detectMagic,\n        ns1:guidance,\n        ns1:protectionFromEvil,\n        ns1:stabilize .\n\nns1:caypup ns1:canSpell ns1:dimensionDoor,\n        ns1:knock,\n        ns1:openClose,\n        ns1:stabilize .\n\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "subgraph",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:02.299304",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:42:55.509628",
        "Please generate a SPARQL query for the given RDF graph and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what spells Aasimar and Caypup do have in common\n\ngraph:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:aasimar ns1:canSpell ns1:bless,\n        ns1:command,\n        ns1:daylight,\n        ns1:detectMagic,\n        ns1:guidance,\n        ns1:protectionFromEvil,\n        ns1:stabilize .\n\nns1:caypup ns1:canSpell ns1:dimensionDoor,\n        ns1:knock,\n        ns1:openClose,\n        ns1:stabilize .\n\n```"
      ],
      [
        "response",
        "2024-05-13T13:42:57.808921",
        "```sparql\nSELECT ?spell\nWHERE {\n  ns1:aasimar ns1:canSpell ?spell.\n  ns1:caypup ns1:canSpell ?spell.\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:43:08.721066",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubgraph",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 579,
      "actualSize": 1289
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignmentType (COUNT(?alignmentType) as ?count)\nWHERE {\n  ?activity ns1:hasAlignment ?alignment .\n  ?alignment ns1:alignmentType ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignmentType (COUNT(?alignmentType) as ?count)\n+WHERE {\n+  ?activity ns1:hasAlignment ?alignment .\n+  ?alignment ns1:alignmentType ?alignmentType .\n+}\n+GROUP BY ?alignmentType\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.5,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 0.6666666666666666,
        "sparqlIrisSuffixPrecision": 0.5,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 0.6666666666666666,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignmentType (COUNT(?alignmentType) as ?count)\nWHERE {\n  ?activity ns1:hasAlignment ?alignment .\n  ?alignment ns1:alignmentType ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(COUNT(?alignmentType))\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignmentType (COUNT(?alignmentType) as ?count)\n+WHERE {\n+  ?activity ns1:hasAlignment ?alignment .\n+  ?alignment ns1:alignmentType ?alignmentType .\n+}\n+GROUP BY ?alignmentType\n+ORDER BY DESC(COUNT(?alignmentType))\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.5,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 0.6666666666666666,
        "sparqlIrisSuffixPrecision": 0.5,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 0.6666666666666666,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignmentType (COUNT(?alignmentType) as ?count)\nWHERE {\n  ?s ns1:hasAlignment ?o .\n  ?o ns1:alignmentType ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignmentType (COUNT(?alignmentType) as ?count)\n+WHERE {\n+  ?s ns1:hasAlignment ?o .\n+  ?o ns1:alignmentType ?alignmentType .\n+}\n+GROUP BY ?alignmentType\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.5,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 0.6666666666666666,
        "sparqlIrisSuffixPrecision": 0.5,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 0.6666666666666666,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignmentType (COUNT(?alignmentType) as ?count)\nWHERE {\n  ?s ns1:hasAlignment ?o .\n  ?o ns1:alignmentType ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignmentType (COUNT(?alignmentType) as ?count)\n+WHERE {\n+  ?s ns1:hasAlignment ?o .\n+  ?o ns1:alignmentType ?alignmentType .\n+}\n+GROUP BY ?alignmentType\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.5,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 0.6666666666666666,
        "sparqlIrisSuffixPrecision": 0.5,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 0.6666666666666666,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary011",
      "question": "what is the most common alignment type",
      "refSparql": "SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1",
      "refResultSet": [
        "ns1:trueNeutral"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1: ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aasimar ns1:hasAlignment ns1:neutralGood .\n\nns1:Aatheriexa ns1:hasAlignment ns1:neutralEvil .\n\nns1:Abaia ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aballonian ns1:hasAlignment ns1:trueNeutral .\n\nns1:AbandonedArmory ns1:hasAlignment ns1:neutralEvil .\n\nns1:AbasheenGenie ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aberrant ns1:hasAlignment ns1:neutralEvil .\n\nns1:Abhominal ns1:hasAlignment ns1:neutralEvil .\n\nns1:Aboleth ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Abrikandilu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AbyssGigas ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AbyssalBasilisk ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AbyssalCustodian ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AbyssalHarvester ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AbyssalLarva ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AbyssalWolf ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AccompliceDevilHesperian ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AccuserDevilZebub ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Achaierai ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AcidNaga ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AdamantineCobra ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdamantineGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdamantineWaspSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdaptiveOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Adaro ns1:hasAlignment ns1:neutralEvil .\n\nns1:Addanc ns1:hasAlignment ns1:neutralEvil .\n\nns1:AddictionDevilAtropocustra ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Addu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Adherer ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Adhukait ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Adlet ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AdolescentDarkYoung ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdultApocalypseDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdultAstralDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdultBlissDragon ns1:hasAlignment ns1:neutralGood .\n\nns1:AdultBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AdultBrassDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AdultBronzeDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:AdultCaveDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdultCloudDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AdultCopperDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AdultCrystalDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AdultDarkYoung ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdultDreamDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultEdictDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AdultEthericDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdultGoldDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:AdultGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AdultLunarDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AdultMagmaDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AdultMistDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultMithralDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultNightmareDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdultOccultDragon ns1:hasAlignment ns1:neutralGood .\n\nns1:AdultRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdultRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AdultSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AdultSilverDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:AdultSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:AdultSolarDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AdultSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultTimeDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultUmbralDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdultUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AdultVoidDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdultVortexDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AdultWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedAnimateDream ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedBulette ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedDraugr ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedEttercap ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedFrostWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedGiantFlytrap ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedGiantScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedHangmanTree ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedHorse ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedInvisibleStalker ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedLengSpider ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedLeukodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedLightningTreantppCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedMegaraptorSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedMummy ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedNightmare ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedNightwing ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedOgre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedTroglodyte ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedUnhallowedBodak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedUnhallowedTotenmaske ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedWoodGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aequoreal ns1:hasAlignment ns1:neutralGood .\n\nns1:AerialServant ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aerialservant ns1:hasAlignment ns1:trueNeutral .\n\nns1:AetherWysp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Afanc ns1:hasAlignment ns1:neutralEvil .\n\nns1:Aghash ns1:hasAlignment ns1:neutralEvil .\n\nns1:Aghasura ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Agnoia ns1:hasAlignment ns1:trueNeutral .\n\nns1:Agogwe ns1:hasAlignment ns1:trueNeutral .\n\nns1:Agorth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Agrawgh ns1:hasAlignment ns1:trueNeutral .\n\nns1:Agyra ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Ahkhat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ahlinni ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Ahmuuth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ahool ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ahooling ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ahuizotl ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ailuro ns1:hasAlignment ns1:trueNeutral .\n\nns1:AirElementalConstruct ns1:hasAlignment ns1:trueNeutral .\n\nns1:AirMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:AirShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:AirVeela ns1:hasAlignment ns1:trueNeutral .\n\nns1:AirWysp ns1:hasAlignment ns1:trueNeutral .\n\nns1:AirsuitSymbiontCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:AizskartzAsteroid ns1:hasAlignment ns1:neutralEvil .\n\nns1:Akaname ns1:hasAlignment ns1:trueNeutral .\n\nns1:Akaruzug ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Akata ns1:hasAlignment ns1:trueNeutral .\n\nns1:Akhana ns1:hasAlignment ns1:trueNeutral .\n\nns1:Akhlut ns1:hasAlignment ns1:trueNeutral .\n\nns1:Akizendri ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Akvan ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ala ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Alastor ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AlbinoCaveSolifugid ns1:hasAlignment ns1:trueNeutral .\n\nns1:AlbinoCaveSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:AlchemicAmoeba ns1:hasAlignment ns1:trueNeutral .\n\nns1:AlchemicalGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Algea ns1:hasAlignment ns1:trueNeutral .\n\nns1:Algoid ns1:hasAlignment ns1:trueNeutral .\n\nns1:Alligator ns1:hasAlignment ns1:trueNeutral .\n\nns1:Allip ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Allosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Almiraj ns1:hasAlignment ns1:trueNeutral .\n\nns1:Alp ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Alpluachra ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Alraune ns1:hasAlignment ns1:neutralEvil .\n\nns1:Alseid ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AluDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Aluum ns1:hasAlignment ns1:trueNeutral .\n\nns1:AmaimonDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Amalgamation ns1:hasAlignment ns1:trueNeutral .\n\nns1:Amanusya ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Amargasaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Amarok ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AmberOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ambergrim ns1:hasAlignment ns1:trueNeutral .\n\nns1:AmoebaSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Amon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Amphiptere ns1:hasAlignment ns1:trueNeutral .\n\nns1:Amphisbaena ns1:hasAlignment ns1:trueNeutral .\n\nns1:AmphisbaenaBasilisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:AmphisbaenaEncephalonGorger ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AncestralDragonTurtle ns1:hasAlignment ns1:neutralGood .\n\nns1:AncestralGorgon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientApocalypseDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AncientAstralDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AncientBlissDragon ns1:hasAlignment ns1:neutralGood .\n\nns1:AncientBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AncientBlueDragonRavener ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AncientBrassDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AncientCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientCopperDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AncientCrystalDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AncientDreamDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientEdictDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AncientEthericDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AncientGoldDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:AncientGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AncientGreenDragonRavener ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AncientLunarDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AncientMagmaDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AncientMistDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientMithralDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientNightmareDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AncientOccultDragon ns1:hasAlignment ns1:neutralGood .\n\nns1:AncientRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AncientRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AncientSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AncientSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:AncientSolarDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AncientSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientTimeDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientUmbralDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AncientUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AncientVoidDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AncientVortexDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AncientWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Andrenjinyi ns1:hasAlignment ns1:trueNeutral .\n\nns1:Android ns1:hasAlignment ns1:trueNeutral .\n\nns1:Androsphinx ns1:hasAlignment ns1:chaoticGood .\n\nns1:Anemos ns1:hasAlignment ns1:trueNeutral .\n\nns1:AngelicGuardian ns1:hasAlignment ns1:trueNeutral .\n\nns1:Anghenfil ns1:hasAlignment ns1:trueNeutral .\n\nns1:AngheuvoreMortic ns1:hasAlignment ns1:neutralEvil .\n\nns1:AngustidenShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Anhana ns1:hasAlignment ns1:chaoticGood .\n\nns1:AnimateAria ns1:hasAlignment ns1:trueNeutral .\n\nns1:AnimateDream ns1:hasAlignment ns1:neutralEvil .\n\nns1:AnimateHair ns1:hasAlignment ns1:neutralEvil .\n\nns1:AnimatedJackOLantern ns1:hasAlignment ns1:trueNeutral .\n\nns1:AnimatedManacles ns1:hasAlignment ns1:trueNeutral .\n\nns1:AnimatedShrineStone ns1:hasAlignment ns1:trueNeutral .\n\nns1:AnimatedStraitjacket ns1:hasAlignment ns1:trueNeutral .\n\nns1:Anisydaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ankheg ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ankhrav ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ankou ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ankylosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Annihilator ns1:hasAlignment ns1:trueNeutral .\n\nns1:AnnisHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AnnisHagAlterEgo ns1:hasAlignment ns1:trueNeutral .\n\nns1:AntLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:Antelope ns1:hasAlignment ns1:trueNeutral .\n\nns1:AnunnakiMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aoandon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Apallie ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aphorite ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ApkalluMR ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ApocalypseHorse ns1:hasAlignment ns1:neutralEvil .\n\nns1:ApocalypseLocustMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ApocalypseZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Apollyon ns1:hasAlignment ns1:neutralEvil .\n\nns1:ApostasyWraith ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ApostateDevilDeimavigga ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ApostleKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Apparition ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Aptom ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AquaticWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Arach ns1:hasAlignment ns1:neutralEvil .\n\nns1:ArachnidRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aranea ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aravax ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Arbiter ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Arcadex ns1:hasAlignment ns1:neutralEvil .\n\nns1:Arcanoplasm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Arcanotheign ns1:hasAlignment ns1:trueNeutral .\n\nns1:Archaeopteryx ns1:hasAlignment ns1:trueNeutral .\n\nns1:Archelon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArcherBush ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArcherfishGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArchonShield ns1:hasAlignment ns1:lawfulGood .\n\nns1:ArchonStar ns1:hasAlignment ns1:lawfulGood .\n\nns1:ArcticDruid ns1:hasAlignment ns1:neutralEvil .\n\nns1:ArcticHare ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArcticTern ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArgentWarden ns1:hasAlignment ns1:lawfulGood .\n\nns1:Argorth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ArgorthCinderscourge ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ArgusMR ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Armadillo ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArmoredClayGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArmoredOgreSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:ArmyAntSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Arrowhawk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Arsinoitherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:Asakku ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ascomoid ns1:hasAlignment ns1:trueNeutral .\n\nns1:AshGiant ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AshHag ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Asp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Asrai ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AssassinRingSymbiont ns1:hasAlignment ns1:trueNeutral .\n\nns1:AssassinVine ns1:hasAlignment ns1:trueNeutral .\n\nns1:Asswere ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Astradaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AstralDeva ns1:hasAlignment ns1:neutralGood .\n\nns1:AstralLeviathan ns1:hasAlignment ns1:trueNeutral .\n\nns1:AstralShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Asurendra ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AtamahutaOni ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ataxian ns1:hasAlignment ns1:chaoticGood .\n\nns1:Athach ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Atomie ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AtticWhisperer ns1:hasAlignment ns1:neutralEvil .\n\nns1:Atuikakura ns1:hasAlignment ns1:trueNeutral .\n\nns1:Augnagar ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AugurKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Aurochs ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aurosrath ns1:hasAlignment ns1:neutralEvil .\n\nns1:Aurspeily ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Aurumvorax ns1:hasAlignment ns1:trueNeutral .\n\nns1:AutomataDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AutumnDeath ns1:hasAlignment ns1:neutralEvil .\n\nns1:AuwazCouatl ns1:hasAlignment ns1:chaoticGood .\n\nns1:Avatarana ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AvatarofAlkumuoto ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Avoral ns1:hasAlignment ns1:neutralGood .\n\nns1:AwakenedDemilich ns1:hasAlignment ns1:neutralEvil .\n\nns1:AxeBeak ns1:hasAlignment ns1:trueNeutral .\n\nns1:AxialMonitor ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Axiomite ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AxiomiteGraveknight ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Azer ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AzizouPainDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Azruverda ns1:hasAlignment ns1:chaoticGood .\n\nns1:Azuretzi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BLOODHAWK ns1:hasAlignment ns1:trueNeutral .\n\nns1:Baal ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Baalzebul ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BaaphelDukeofHell ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Babau ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Babbler ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Baboon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bacallia ns1:hasAlignment ns1:trueNeutral .\n\nns1:Baccae ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BadWolfMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Badger ns1:hasAlignment ns1:trueNeutral .\n\nns1:Baetriov ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Bagiennik ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Bakekujira ns1:hasAlignment ns1:neutralEvil .\n\nns1:Baku ns1:hasAlignment ns1:trueNeutral .\n\nns1:BakuDreamweaver ns1:hasAlignment ns1:trueNeutral .\n\nns1:Balisse ns1:hasAlignment ns1:neutralGood .\n\nns1:BalisseAngel ns1:hasAlignment ns1:neutralGood .\n\nns1:Balor ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BalorLord ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Baluchitherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:Banderlog ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bandersnatch ns1:hasAlignment ns1:trueNeutral .\n\nns1:Banelight ns1:hasAlignment ns1:neutralEvil .\n\nns1:Banshee ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BaobhanSith ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Baphomet ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BaphometDemonLordofBeasts ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Barbatos ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BarbedDevilHamatula ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BarbedRam ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarbtonguedWyvern ns1:hasAlignment ns1:neutralEvil .\n\nns1:Baregara ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Barghest ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Baric ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarizouAssassinDemonCR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Barometz ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarracudaLarge ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarracudaMedium ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarracudaSmall ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarrierBreakerTroop ns1:hasAlignment ns1:neutralEvil .\n\nns1:BarrowRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarrowWight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Basidirond ns1:hasAlignment ns1:trueNeutral .\n\nns1:Basilisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Basilosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:BastionArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:BatMobat ns1:hasAlignment ns1:trueNeutral .\n\nns1:BatPlagueSwarmMR ns1:hasAlignment ns1:neutralEvil .\n\nns1:BatSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:BattleEmu ns1:hasAlignment ns1:trueNeutral .\n\nns1:BattleImp ns1:hasAlignment ns1:chaoticGood .\n\nns1:Baykok ns1:hasAlignment ns1:neutralEvil .\n\nns1:BeardedDevilBarbazu ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BeastDemonChaaor ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BeastDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:BeastmasterTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Bebilith ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Bedlam ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BeeMan ns1:hasAlignment ns1:neutralEvil .\n\nns1:BeetleGiantStag ns1:hasAlignment ns1:trueNeutral .\n\nns1:BegedhiParasite ns1:hasAlignment ns1:neutralEvil .\n\nns1:Beheaded ns1:hasAlignment ns1:neutralEvil .\n\nns1:BehemothGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:BehemothHippopotamus ns1:hasAlignment ns1:trueNeutral .\n\nns1:BehemothPudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:Behimiron ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Behir ns1:hasAlignment ns1:trueNeutral .\n\nns1:BeingofIb ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Belabra ns1:hasAlignment ns1:trueNeutral .\n\nns1:BelchingGiantBeheadedCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:BelchingMedusaHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:BelchingSeveredHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:Belial ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BelierDevilBdellavritra ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Belker ns1:hasAlignment ns1:neutralEvil .\n\nns1:BellyborerBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Belostomatid ns1:hasAlignment ns1:trueNeutral .\n\nns1:BeluiriTheTemptress ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Berbalang ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Bezravnis ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Bhole ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BholeHatchling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Bhuta ns1:hasAlignment ns1:neutralEvil .\n\nns1:Bibliodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Biclops ns1:hasAlignment ns1:trueNeutral .\n\nns1:Biddlytree ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Biddlywink ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BiddlywinkChrysalis ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Biggin ns1:hasAlignment ns1:trueNeutral .\n\nns1:Biloko ns1:hasAlignment ns1:neutralEvil .\n\nns1:Biofreezer ns1:hasAlignment ns1:chaoticGood .\n\nns1:BishaGaTsuku ns1:hasAlignment ns1:neutralEvil .\n\nns1:BishopAgathion ns1:hasAlignment ns1:neutralGood .\n\nns1:BisonCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:BlackBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:BlackButterfly ns1:hasAlignment ns1:chaoticGood .\n\nns1:BlackGoat ns1:hasAlignment ns1:neutralEvil .\n\nns1:BlackJinni ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BlackMagga ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BlackPudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:BlackScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:BlackShuck ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BlackSpotUrchin ns1:hasAlignment ns1:neutralEvil .\n\nns1:BlackWorm ns1:hasAlignment ns1:neutralEvil .\n\nns1:BlackwispEgret ns1:hasAlignment ns1:trueNeutral .\n\nns1:BlastShadow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BleedingHorrorMinotaur ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BlightedFeySatyr ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Blightrat ns1:hasAlignment ns1:neutralEvil .\n\nns1:Blightspawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Blindheim ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BlinkDog ns1:hasAlignment ns1:lawfulGood .\n\nns1:Blodeuwedd ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Blodeuweddqueen ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BloodAlgaeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodBramble ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodBush ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodCaterpillar ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodHag ns1:hasAlignment ns1:neutralEvil .\n\nns1:BloodKaktos ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BloodLily ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodMaize ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodOrc ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BloodOrchid ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BloodPudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodQueen ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BloodReaverDevilGaruginCR ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BloodWeird ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BloodWight ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bloodbrush ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodhazeMosquitoSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodplateBurster ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bloodsuckle ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodyBones ns1:hasAlignment ns1:neutralEvil .\n\nns1:BloodySkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:BlueRingedOctopus ns1:hasAlignment ns1:trueNeutral .\n\nns1:BlueWhale ns1:hasAlignment ns1:trueNeutral .\n\nns1:BluetipEurypterid ns1:hasAlignment ns1:trueNeutral .\n\nns1:Boalisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Boar ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoarDireDaeodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bodak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Bodythief ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BogBeast ns1:hasAlignment ns1:trueNeutral .\n\nns1:BogCreeper ns1:hasAlignment ns1:trueNeutral .\n\nns1:BogMummy ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BogNixie ns1:hasAlignment ns1:neutralEvil .\n\nns1:BogScum ns1:hasAlignment ns1:trueNeutral .\n\nns1:BogStrider ns1:hasAlignment ns1:trueNeutral .\n\nns1:BogStriderSeerQueen ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bogeyman ns1:hasAlignment ns1:neutralEvil .\n\nns1:Boggard ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Boggart ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Boggle ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Bogwid ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Bogwiggle ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Boilborn ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoneCobbler ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BoneCollective ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BoneCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoneCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoneDevilOsyluth ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BoneGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoneReaperReflection ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoneShip ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BonepowderGhoul ns1:hasAlignment ns1:neutralEvil .\n\nns1:Bonesnapper ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bonestorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Bonesucker ns1:hasAlignment ns1:neutralEvil .\n\nns1:Bonethorn ns1:hasAlignment ns1:trueNeutral .\n\nns1:BonewroughtWillow ns1:hasAlignment ns1:trueNeutral .\n\nns1:BookGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoreWormMonarch ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoreWormSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:BorealAnnisHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BorealManticore ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BorealWolf ns1:hasAlignment ns1:trueNeutral .\n\nns1:Boroboroton ns1:hasAlignment ns1:neutralEvil .\n\nns1:Boruta ns1:hasAlignment ns1:trueNeutral .\n\nns1:BotflySwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:BottledArmada ns1:hasAlignment ns1:trueNeutral .\n\nns1:Brachiosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrainMole ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrainMoleMonarch ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrainOoze ns1:hasAlignment ns1:neutralEvil .\n\nns1:BrainRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bralani ns1:hasAlignment ns1:chaoticGood .\n\nns1:Bramblelash ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrassDragonGreatWyrm ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonJuvenile ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonMatureAdult ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonOld ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonVeryOld ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonVeryYoung ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonWyrm ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonWyrmling ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonYoungAdult ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrassJuggernaut ns1:hasAlignment ns1:trueNeutral .\n\nns1:Brethedan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Brijidine ns1:hasAlignment ns1:chaoticGood .\n\nns1:Brimorak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BrimstoneOoze ns1:hasAlignment ns1:neutralEvil .\n\nns1:BrineDragonAncient ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonGreatWyrm ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonJuvenile ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonMatureAdult ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonOld ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonVeryOld ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonVeryYoung ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonWyrm ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonWyrmling ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonYoungAdult ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineSeaSerpent ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BrineZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Brinedragonadult ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BringDragonYoung ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BristleBoar ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrokenChild ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BrokenSoulLillend ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Brontotherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:BronzeDragonGreatWyrm ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonJuvenile ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonMatureAdult ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonOld ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonVeryOld ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonVeryYoung ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonWyrm ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonWyrmling ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonYoungAdult ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:BronzeSentinel ns1:hasAlignment ns1:trueNeutral .\n\nns1:Broodiken ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrownBearorGrizzlyKodiakRussianBrown ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrownPudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:Brownie ns1:hasAlignment ns1:trueNeutral .\n\nns1:Brume ns1:hasAlignment ns1:neutralEvil .\n\nns1:BrushThylacine ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrutalisDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BruteDemonBalban ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BruteWight ns1:hasAlignment ns1:trueNeutral .\n\nns1:Brykolakas ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Buckawn ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bugbear ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BugbearEchohusk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Buggane ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Bukavac ns1:hasAlignment ns1:neutralEvil .\n\nns1:Bulabar ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Bulette ns1:hasAlignment ns1:trueNeutral .\n\nns1:BullShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bunyip ns1:hasAlignment ns1:trueNeutral .\n\nns1:Buraq ns1:hasAlignment ns1:neutralGood .\n\nns1:Burleev ns1:hasAlignment ns1:trueNeutral .\n\nns1:BurningChild ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BurningDervish ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BurningGiantBeheaded ns1:hasAlignment ns1:neutralEvil .\n\nns1:BurningMedusaHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:BurningSeveredHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:Burrowling ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Burstigeit ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bushyasta ns1:hasAlignment ns1:neutralEvil .\n\nns1:Byakhee ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Bythos ns1:hasAlignment ns1:trueNeutral .\n\nns1:CAVEGIANT ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CHALKYDRI ns1:hasAlignment ns1:neutralGood .\n\nns1:CLOCKWORKSCOUT ns1:hasAlignment ns1:trueNeutral .\n\nns1:CRABMAN ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaasimolarFormerPresidentofHell ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Cacodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:CactusLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cadaver ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CadaverLord ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CairnLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CaizelDeposedQueenofSuccubi ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Calathgar ns1:hasAlignment ns1:trueNeutral .\n\nns1:Calikang ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:CallerinDarkness ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CalligraphyWyrm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Calpina ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Cambion ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Camel ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cameroceras ns1:hasAlignment ns1:trueNeutral .\n\nns1:CandleCorpse ns1:hasAlignment ns1:trueNeutral .\n\nns1:CandlestoneCourtier ns1:hasAlignment ns1:neutralEvil .\n\nns1:CannibalChild ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CannonGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:CanopyCreeper ns1:hasAlignment ns1:trueNeutral .\n\nns1:CanopyTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Cantor ns1:hasAlignment ns1:lawfulEvil .\n\nns1:CapacitorOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Capramace ns1:hasAlignment ns1:trueNeutral .\n\nns1:Carbuncle ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarbuncleChampion ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarbuncleCompanion ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarbuncleHero ns1:hasAlignment ns1:trueNeutral .\n\nns1:CardinalMartyr ns1:hasAlignment ns1:lawfulGood .\n\nns1:CarnivorousBlob ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarnivorousCrystal ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarrionBeast ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CarrionBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarrionClaw ns1:hasAlignment ns1:neutralEvil .\n\nns1:CarrionCreeper ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarrionGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarrionGolemMount ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarrionGolemstandin ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarrionMoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Carrionstorm ns1:hasAlignment ns1:neutralEvil .\n\nns1:CaryatidColumn ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaryatidGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cassisian ns1:hasAlignment ns1:neutralGood .\n\nns1:Castellan ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Cat ns1:hasAlignment ns1:trueNeutral .\n\nns1:CatLordPantherForm ns1:hasAlignment ns1:trueNeutral .\n\nns1:CatSith ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Cataboligne ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Caterprism ns1:hasAlignment ns1:trueNeutral .\n\nns1:Caterwaul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Catfolk ns1:hasAlignment ns1:neutralGood .\n\nns1:Catoblepas ns1:hasAlignment ns1:trueNeutral .\n\nns1:Catrina ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cauchemar ns1:hasAlignment ns1:trueNeutral .\n\nns1:Caulborn ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaulbornThoughtkeeper ns1:hasAlignment ns1:trueNeutral .\n\nns1:CauldronBloom ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveBlight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CaveCricket ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveFisher ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CaveLeech ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveMoray ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CavelightMoss ns1:hasAlignment ns1:trueNeutral .\n\nns1:CavernLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cayhound ns1:hasAlignment ns1:chaoticGood .\n\nns1:Caypup ns1:hasAlignment ns1:chaoticGood .\n\nns1:Cecaelia ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Celedeen ns1:hasAlignment ns1:chaoticGood .\n\nns1:Celedon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Centaur ns1:hasAlignment ns1:trueNeutral .\n\nns1:CentipedeGiantWhiptail ns1:hasAlignment ns1:trueNeutral .\n\nns1:CentipedeGreatForest ns1:hasAlignment ns1:trueNeutral .\n\nns1:CentipedeHissing ns1:hasAlignment ns1:trueNeutral .\n\nns1:CentipedeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:CentipedeTitan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cephalophore ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ceratioidi ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ceratosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cerberi ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Cerberus ns1:hasAlignment ns1:neutralEvil .\n\nns1:CerberusWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:CerebralStalker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CerebricCyst ns1:hasAlignment ns1:neutralEvil .\n\nns1:CerebricFungus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ceru ns1:hasAlignment ns1:neutralGood .\n\nns1:Cervapral ns1:hasAlignment ns1:neutralGood .\n\nns1:Cervinal ns1:hasAlignment ns1:neutralGood .\n\nns1:CervineProtector ns1:hasAlignment ns1:lawfulGood .\n\nns1:Cerynitis ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cetaceal ns1:hasAlignment ns1:neutralGood .\n\nns1:Cetus ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Ceustodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:ChagBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:ChainWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chalicotherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chalkost ns1:hasAlignment ns1:lawfulGood .\n\nns1:ChampionAutomaton ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ChampionofPeace ns1:hasAlignment ns1:neutralGood .\n\nns1:ChanequeMR ns1:hasAlignment ns1:neutralEvil .\n\nns1:Changeling ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ChaosBeast ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ChaosDemonChoronzon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CharauKa ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Charda ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ChariotBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:CharnelColossus ns1:hasAlignment ns1:neutralEvil .\n\nns1:CharnelGod ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CharnelWhisperer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Charon ns1:hasAlignment ns1:neutralEvil .\n\nns1:CharonBoatmanofthelowerplanesCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:Charonodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Charybdis ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Chavazvug ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Cheetah ns1:hasAlignment ns1:trueNeutral .\n\nns1:CheitanDjinni ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CheitanJanni ns1:hasAlignment ns1:neutralEvil .\n\nns1:Chelarac ns1:hasAlignment ns1:neutralEvil .\n\nns1:ChelaracBroodling ns1:hasAlignment ns1:neutralEvil .\n\nns1:Chelicerae ns1:hasAlignment ns1:neutralEvil .\n\nns1:Chelonidal ns1:hasAlignment ns1:neutralGood .\n\nns1:Chemosit ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chernobue ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Cherufe ns1:hasAlignment ns1:neutralEvil .\n\nns1:Cherum ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chickcharney ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chicken ns1:hasAlignment ns1:trueNeutral .\n\nns1:ChickenCoop ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chikfari ns1:hasAlignment ns1:trueNeutral .\n\nns1:ChildoftheBriar ns1:hasAlignment ns1:neutralEvil .\n\nns1:Chimera ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Chimpanzee ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chiropteal ns1:hasAlignment ns1:neutralGood .\n\nns1:Chitikin ns1:hasAlignment ns1:trueNeutral .\n\nns1:Choker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ChokerBrute ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CholericOozeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:ChonChon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ChonChonSwarm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Choral ns1:hasAlignment ns1:neutralGood .\n\nns1:ChortDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Choxani ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ChrestomathCaulborn ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chronogeist ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Chrystone ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chupacabra ns1:hasAlignment ns1:trueNeutral .\n\nns1:ChurchGrim ns1:hasAlignment ns1:lawfulGood .\n\nns1:Churr ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chuspiki ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Chuul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ChuulLesser ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Chyzaedu ns1:hasAlignment ns1:lawfulEvil .\n\nns1:CicadaSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cikavak ns1:hasAlignment ns1:trueNeutral .\n\nns1:CinderGhoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CinderWolf ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cinderghost ns1:hasAlignment ns1:neutralEvil .\n\nns1:Cipactli ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ClackingSkullSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:ClamGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:Clamor ns1:hasAlignment ns1:trueNeutral .\n\nns1:Clawbat ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClawedKadian ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ClayGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:CliffGiant ns1:hasAlignment ns1:neutralGood .\n\nns1:Cloaker ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ClockworkAdvancedBronzeGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkAngel ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkAssassin ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkBrainGear ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkDrone ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkExcavator ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkFamiliar ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkFiend ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkGoblin ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkGoliath ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkGuardian ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkGunslinger ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkHound ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkHuntsman ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkLeviathan ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkMage ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkMyrmidon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkNautiloid ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkOverseer ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkParasite ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkPriest ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkReliquary ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ClockworkServant ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkSoldier ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkSongbird ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkSpy ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkSteed ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkTitan ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkWarrior ns1:hasAlignment ns1:trueNeutral .\n\nns1:CloudDragonAncient ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonGreatWyrm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonJuvenile ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonMatureAdult ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonOld ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonVeryOld ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonVeryYoung ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonWyrm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonWyrmling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonYoung ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonYoungAdult ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudGiantSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:ClowderofCats ns1:hasAlignment ns1:trueNeutral .\n\nns1:CobraBackInphidian ns1:hasAlignment ns1:neutralEvil .\n\nns1:CobraFlower ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cockatrice ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cockroach ns1:hasAlignment ns1:trueNeutral .\n\nns1:CockroachGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:CockroachSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:CodexArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:CofferCorpse ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CoffinAnemone ns1:hasAlignment ns1:trueNeutral .\n\nns1:ColdMutatedOgreSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:ColdRider ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ColdsnapBasilisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Colliatur ns1:hasAlignment ns1:neutralGood .\n\nns1:ColossalAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:ColourOutofSpace ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Coloxus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CombatTrainedWolliped ns1:hasAlignment ns1:trueNeutral .\n\nns1:Combusted ns1:hasAlignment ns1:neutralEvil .\n\nns1:CommandoConstruct ns1:hasAlignment ns1:trueNeutral .\n\nns1:CommonBat ns1:hasAlignment ns1:trueNeutral .\n\nns1:CommonDrow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CommonEurypterid ns1:hasAlignment ns1:trueNeutral .\n\nns1:CommonInphidian ns1:hasAlignment ns1:neutralEvil .\n\nns1:CommonMite ns1:hasAlignment ns1:lawfulEvil .\n\nns1:CommonTimeElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ComozantWyrd ns1:hasAlignment ns1:trueNeutral .\n\nns1:Compsognathus ns1:hasAlignment ns1:trueNeutral .\n\nns1:ConfoundingBandersnatch ns1:hasAlignment ns1:trueNeutral .\n\nns1:ConquerorWorm ns1:hasAlignment ns1:neutralEvil .\n\nns1:ConstrictorSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:Contemplative ns1:hasAlignment ns1:trueNeutral .\n\nns1:ContractDevilPhistophilus ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Cooshee ns1:hasAlignment ns1:trueNeutral .\n\nns1:CopperDragonGreatWyrm ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonJuvenile ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonMatureAdult ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonOld ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonVeryOld ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonVeryYoung ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonWyrm ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonWyrmling ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonYoungAdult ns1:hasAlignment ns1:chaoticGood .\n\nns1:Copsewight ns1:hasAlignment ns1:neutralEvil .\n\nns1:CoralCapuchin ns1:hasAlignment ns1:trueNeutral .\n\nns1:CoralDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:CoralGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:CorpseCandle ns1:hasAlignment ns1:neutralEvil .\n\nns1:CorpseLotus ns1:hasAlignment ns1:trueNeutral .\n\nns1:CorpseOrgy ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CorpseRook ns1:hasAlignment ns1:trueNeutral .\n\nns1:CorpsefeasterOtyugh ns1:hasAlignment ns1:trueNeutral .\n\nns1:Corpsespinner ns1:hasAlignment ns1:trueNeutral .\n\nns1:CorpsewaterBogMummy ns1:hasAlignment ns1:lawfulEvil .\n\nns1:CorpulentGhoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Couatl ns1:hasAlignment ns1:lawfulGood .\n\nns1:CovenOctopus ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:CovenOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrabCoconut ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrabGreatReef ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrabHermitGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:CracklingSkullSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:CragMan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CrawlingHand ns1:hasAlignment ns1:neutralEvil .\n\nns1:CrawlingHandGiant ns1:hasAlignment ns1:neutralEvil .\n\nns1:CreamfootFennec ns1:hasAlignment ns1:trueNeutral .\n\nns1:CreeperIvy ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrimsonBasilisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrimsonDeath ns1:hasAlignment ns1:neutralEvil .\n\nns1:CrimsonJellyfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrimsonWhale ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrimsonWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Criosphinx ns1:hasAlignment ns1:trueNeutral .\n\nns1:Crocodile ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrocodileDire ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrocodileZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:CroneQueen ns1:hasAlignment ns1:neutralEvil .\n\nns1:Crucidaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:CrucifixionSpirit ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Cryohydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:CryptFlower ns1:hasAlignment ns1:trueNeutral .\n\nns1:CryptThing ns1:hasAlignment ns1:neutralEvil .\n\nns1:Cryptguard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Crysmal ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrystalDragonGreatWyrm ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonJuvenile ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonMatureAdult ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonOld ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonVeryOld ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonVeryYoung ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonWyrm ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonWyrmling ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonYoungAdult ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrystalOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrystallineHorror ns1:hasAlignment ns1:neutralEvil .\n\nns1:Crystallis ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cuero ns1:hasAlignment ns1:trueNeutral .\n\nns1:CultistTroop ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CursedBeast ns1:hasAlignment ns1:neutralEvil .\n\nns1:CursedKing ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CutlassSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cyclops ns1:hasAlignment ns1:neutralEvil .\n\nns1:Cynosoma ns1:hasAlignment ns1:chaoticGood .\n\nns1:Cyphergull ns1:hasAlignment ns1:trueNeutral .\n\nns1:CystTrinityHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Cythnigot ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Cytillipede ns1:hasAlignment ns1:trueNeutral .\n\nns1:Daggocrustler ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dagon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DagonDemonPrinceoftheSea ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Dahzagan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Daitengu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dakon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Dallo ns1:hasAlignment ns1:trueNeutral .\n\nns1:DamnationBook ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Damned ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DanavaMR ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:DancerInphidian ns1:hasAlignment ns1:neutralEvil .\n\nns1:Dandasuka ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DanseMacabre ns1:hasAlignment ns1:neutralEvil .\n\nns1:Danthienne ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Dapsara ns1:hasAlignment ns1:neutralGood .\n\nns1:DarakhulOgre ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DarkAngel ns1:hasAlignment ns1:neutralEvil .\n\nns1:DarkCaller ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DarkCreeper ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DarkDancer ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DarkEmpath ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DarkIceGrig ns1:hasAlignment ns1:neutralGood .\n\nns1:DarkMatterEntropicOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:DarkScionDwarf ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DarkSlayer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DarkStalker ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DarkYoungofShubNiggurath ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Darkling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Darkmantle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Darnoc ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DaughterofShubNiggurath ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DaughteroftheDead ns1:hasAlignment ns1:neutralEvil .\n\nns1:DeadfallScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:DeadlyMantis ns1:hasAlignment ns1:trueNeutral .\n\nns1:DeathButterflySwarm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeathCoach ns1:hasAlignment ns1:neutralEvil .\n\nns1:DeathDog ns1:hasAlignment ns1:neutralEvil .\n\nns1:DeathWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Deathhand ns1:hasAlignment ns1:neutralEvil .\n\nns1:DeathleechHornedDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DeathlessSorcerer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeathsHeadJellyfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:Deathsnatcher ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeathtrapOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Deathweb ns1:hasAlignment ns1:trueNeutral .\n\nns1:DebasedAsrai ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DebasedNixie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Decapus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeepBadger ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeepHunterSeaSerpent ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:DeepMerfolk ns1:hasAlignment ns1:trueNeutral .\n\nns1:DeepNaga ns1:hasAlignment ns1:neutralEvil .\n\nns1:DeepOne ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeepOneHybrid ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeepOneScion ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeepSeaSerpent ns1:hasAlignment ns1:trueNeutral .\n\nns1:DeepSingerWhale ns1:hasAlignment ns1:trueNeutral .\n\nns1:DeepWalker ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DeepsightGogglesSymbiont ns1:hasAlignment ns1:trueNeutral .\n\nns1:Deer ns1:hasAlignment ns1:trueNeutral .\n\nns1:DefenderGlobe ns1:hasAlignment ns1:trueNeutral .\n\nns1:DegenerateOgre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DegenerateSerpentfolk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Deinochos ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Deinonychus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Deinosuchus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Deinotherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:Delgeth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Delver ns1:hasAlignment ns1:trueNeutral .\n\nns1:Demammoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:DemiLich ns1:hasAlignment ns1:neutralEvil .\n\nns1:Demilich ns1:hasAlignment ns1:neutralEvil .\n\nns1:Demiurge ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DemonStone ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DemonicDeadfallScorpion ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DemonicKnight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DemonicMohrg ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DemorielTwiceExiledSeductress ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DenizenofLeng ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DerakniLocustDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Derghodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Derhii ns1:hasAlignment ns1:trueNeutral .\n\nns1:Derro ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DerroFetalSavant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DerroMagister ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DesertBlight ns1:hasAlignment ns1:neutralEvil .\n\nns1:DesertDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:DesertGiant ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:DespicableSnowman ns1:hasAlignment ns1:neutralEvil .\n\nns1:Destrachan ns1:hasAlignment ns1:neutralEvil .\n\nns1:DevastatorMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DevilDog ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DevilMonkey ns1:hasAlignment ns1:trueNeutral .\n\nns1:DevilSteed ns1:hasAlignment ns1:neutralEvil .\n\nns1:Devilfish ns1:hasAlignment ns1:neutralEvil .\n\nns1:Devourer ns1:hasAlignment ns1:neutralEvil .\n\nns1:DevouringMist ns1:hasAlignment ns1:neutralEvil .\n\nns1:Dhampir ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Dhole ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DholeHatchling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DiamondSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Diatryma ns1:hasAlignment ns1:trueNeutral .\n\nns1:Digester ns1:hasAlignment ns1:trueNeutral .\n\nns1:Digmaul ns1:hasAlignment ns1:trueNeutral .\n\nns1:DimensionWalker ns1:hasAlignment ns1:neutralEvil .\n\nns1:DimensionalShambler ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Dimetrodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dimorphodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Diplodocus ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireApeGigantopithecus ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireBadger ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireBarracuda ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireBat ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireBison ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireCorby ns1:hasAlignment ns1:neutralEvil .\n\nns1:DireCorgi ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireElectricEel ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireFlytrap ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireGhoulWolf ns1:hasAlignment ns1:neutralEvil .\n\nns1:DireGoat ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireGrasshopperMouse ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireHippopotamusBehemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireHyena ns1:hasAlignment ns1:trueNeutral .\n\nns1:DirePolarBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:DirePorcupine ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireRacoon ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireRam ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireRatCompanionLevel ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireShadowRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireSharkMegalodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireSloth ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireSmilodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireWeasel ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireWolf ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireWolfwere ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DireWolverine ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireorCaveBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:DiseasedRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Disenchanter ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dispater ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DivineGuardianHydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:Djinni ns1:hasAlignment ns1:chaoticGood .\n\nns1:Dlurgraven ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dodo ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dog ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dogmole ns1:hasAlignment ns1:trueNeutral .\n\nns1:DogmoleJuggernaut ns1:hasAlignment ns1:trueNeutral .\n\nns1:DollDevilArusities ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Dolphin ns1:hasAlignment ns1:trueNeutral .\n\nns1:DomesticatedorWildWolliped ns1:hasAlignment ns1:trueNeutral .\n\nns1:DominationDevilGladiatrix ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Domovoi ns1:hasAlignment ns1:chaoticGood .\n\nns1:DonkeyRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Donratty ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Doombat ns1:hasAlignment ns1:neutralEvil .\n\nns1:Doorwarden ns1:hasAlignment ns1:trueNeutral .\n\nns1:Doppeldrek ns1:hasAlignment ns1:trueNeutral .\n\nns1:Doppelrat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Doru ns1:hasAlignment ns1:neutralEvil .\n\nns1:Dorvae ns1:hasAlignment ns1:neutralEvil .\n\nns1:DosojinKami ns1:hasAlignment ns1:neutralGood .\n\nns1:Dossenus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Draaki ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dracolisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Draconal ns1:hasAlignment ns1:neutralGood .\n\nns1:Draconid ns1:hasAlignment ns1:trueNeutral .\n\nns1:DraftHeavyHorse ns1:hasAlignment ns1:trueNeutral .\n\nns1:Draghul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DragonHorse ns1:hasAlignment ns1:neutralGood .\n\nns1:DragonTurtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dragonfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:DragonflyGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:DragonflyGiantNymph ns1:hasAlignment ns1:trueNeutral .\n\nns1:DragonhideGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dragonkin ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:DragonleafTreepp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dragonne ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dragonnel ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dragonship ns1:hasAlignment ns1:trueNeutral .\n\nns1:DrakainiaMR ns1:hasAlignment ns1:neutralEvil .\n\nns1:Drakauthix ns1:hasAlignment ns1:trueNeutral .\n\nns1:Draug ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Draugr ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DreadCorby ns1:hasAlignment ns1:neutralEvil .\n\nns1:DreadWraith ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DreadZombieAasimarWarrior ns1:hasAlignment ns1:trueNeutral .\n\nns1:DreamEater ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DreamImpCompanion ns1:hasAlignment ns1:neutralGood .\n\nns1:DreamImpCousin ns1:hasAlignment ns1:neutralGood .\n\nns1:DreamImpHero ns1:hasAlignment ns1:neutralGood .\n\nns1:DreamSpectre ns1:hasAlignment ns1:neutralEvil .\n\nns1:DreamSpectreNightmareCreature ns1:hasAlignment ns1:neutralEvil .\n\nns1:DreamSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:DreamVestigeMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DreamthiefHag ns1:hasAlignment ns1:neutralEvil .\n\nns1:Drekavac ns1:hasAlignment ns1:neutralEvil .\n\nns1:Dretch ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DrochaSwarm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DrowNoble ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DrownedMaiden ns1:hasAlignment ns1:neutralEvil .\n\nns1:DrowningDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Dryad ns1:hasAlignment ns1:chaoticGood .\n\nns1:Duergar ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DuergarTyrant ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Dullahan ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DunPudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:Duneshaker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dunkleosteus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Duppy ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DuskKamadan ns1:hasAlignment ns1:neutralEvil .\n\nns1:Duskwalker ns1:hasAlignment ns1:trueNeutral .\n\nns1:DustDigger ns1:hasAlignment ns1:trueNeutral .\n\nns1:DustGhoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DustMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dvorovoi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DwarfCaiman ns1:hasAlignment ns1:trueNeutral .\n\nns1:DweomerCap ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dweomercat ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DweomercatCub ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Dwiergeth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Dybbuk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Dyme ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Dziriak ns1:hasAlignment ns1:trueNeutral .\n\nns1:D\u00f8delig ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Eagle ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthElementalBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthElementalChampion ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthElementalConstruct ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthElementalSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthVeela ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthWysp ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthYaiOni ns1:hasAlignment ns1:neutralEvil .\n\nns1:EarthenSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Earthfiend ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EarthkingKaiju ns1:hasAlignment ns1:neutralGood .\n\nns1:Eblis ns1:hasAlignment ns1:neutralEvil .\n\nns1:EbonOoze ns1:hasAlignment ns1:neutralEvil .\n\nns1:EbonyGelatinousCube ns1:hasAlignment ns1:trueNeutral .\n\nns1:Echeneis ns1:hasAlignment ns1:trueNeutral .\n\nns1:EclipseGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ecorche ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EcstasyFeeder ns1:hasAlignment ns1:neutralEvil .\n\nns1:EctoplasmghostOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:EctoplasmicHuman ns1:hasAlignment ns1:trueNeutral .\n\nns1:Edimmu ns1:hasAlignment ns1:trueNeutral .\n\nns1:EelHound ns1:hasAlignment ns1:trueNeutral .\n\nns1:Efreeti ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EfreetiJanissary ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Egophage ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Egregore ns1:hasAlignment ns1:trueNeutral .\n\nns1:Einherji ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:EirisaiAncestor ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:EirisaiGreater ns1:hasAlignment ns1:trueNeutral .\n\nns1:EirisaiLesser ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:EirisaiMaster ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:EirisaiMedial ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Elasmosarus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Elasmotherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElasmotheriumGiantWoolyRhinoCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Elawah ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ElderAcidQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderAetherElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderAirElemental ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ElderColdironElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderDeepOne ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ElderEarthElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderFireElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderIceElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderLightningElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderMagmaElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderMudElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderNegativeEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderNirento ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderObsidianQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderPositiveEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderPsionicElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderThing ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ElderWaterElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderWitchlight ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderWorg ns1:hasAlignment ns1:neutralEvil .\n\nns1:ElderWyrm ns1:hasAlignment ns1:trueNeutral .\n\nns1:EldritchSteamMephit ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ElectricCube ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElectricEel ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElectricFroghemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElementalAirDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElementalDrake ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ElementalEarthDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElementalFireDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElementalWaterDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Elephant ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElephantSeal ns1:hasAlignment ns1:trueNeutral .\n\nns1:EliteShadowMastiff ns1:hasAlignment ns1:neutralEvil .\n\nns1:Elk ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElohimMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElusaHound ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElysianTitan ns1:hasAlignment ns1:chaoticGood .\n\nns1:EmbalmingGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:EmberWeaver ns1:hasAlignment ns1:trueNeutral .\n\nns1:Embolotherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:EmeraldOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Emkrah ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EmotionOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:EmperorBird ns1:hasAlignment ns1:trueNeutral .\n\nns1:EmperorCobra ns1:hasAlignment ns1:trueNeutral .\n\nns1:EmperorKirin ns1:hasAlignment ns1:lawfulGood .\n\nns1:EmperorStag ns1:hasAlignment ns1:trueNeutral .\n\nns1:EmperorWalrus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Emperorofscales ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EmpressBoreWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Empusa ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Empyreal ns1:hasAlignment ns1:lawfulGood .\n\nns1:Empyrean ns1:hasAlignment ns1:neutralGood .\n\nns1:Emu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Encantado ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:EncephalonGorger ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EncephalonGorgerPsychic ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EnchanterHeron ns1:hasAlignment ns1:trueNeutral .\n\nns1:EnergizedIceGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:EnergyProtectionSymbiont ns1:hasAlignment ns1:trueNeutral .\n\nns1:Enisysian ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EnlightenedConstructClockworkSoldier ns1:hasAlignment ns1:neutralEvil .\n\nns1:EnlightenedContemplative ns1:hasAlignment ns1:trueNeutral .\n\nns1:EnormousReefclaw ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:EnslavedSpawn ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EntropicOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:EnvironmentalSuitSymbiont ns1:hasAlignment ns1:trueNeutral .\n\nns1:Enzyme ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ercinee ns1:hasAlignment ns1:trueNeutral .\n\nns1:EremiteKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EremiteSymbiont ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EremiteWizard ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ErinatGremlin ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Erlking ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Erodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Escorite ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Esipil ns1:hasAlignment ns1:neutralEvil .\n\nns1:Esobok ns1:hasAlignment ns1:trueNeutral .\n\nns1:EtherDrake ns1:hasAlignment ns1:trueNeutral .\n\nns1:EtherealFilcher ns1:hasAlignment ns1:trueNeutral .\n\nns1:EtherealGraveyardTool ns1:hasAlignment ns1:trueNeutral .\n\nns1:EtherealMarauder ns1:hasAlignment ns1:trueNeutral .\n\nns1:EtherealRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:EthericJelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:Etheroot ns1:hasAlignment ns1:trueNeutral .\n\nns1:Etiainen ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Etioling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Ettercap ns1:hasAlignment ns1:neutralEvil .\n\nns1:Euryale ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EvilEye ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ExecutionerDevilMunagola ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ExecutionersHood ns1:hasAlignment ns1:trueNeutral .\n\nns1:ExiledShade ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ExoskeletonGiantCockroach ns1:hasAlignment ns1:neutralEvil .\n\nns1:ExoskeletonGiantStagBeetle ns1:hasAlignment ns1:neutralEvil .\n\nns1:ExoskeletonTitanCentipede ns1:hasAlignment ns1:neutralEvil .\n\nns1:ExsanguinatorDaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Exscinder ns1:hasAlignment ns1:lawfulGood .\n\nns1:EyeEater ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EyeKiller ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EyeSentinel ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EyeoftheDeep ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EyeoftheWatcher ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FacelessDemonGallu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FacelessDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FacelessFleshGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:FacelessHulkUgoroth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FacelessStalkerUgothol ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FacelessWhale ns1:hasAlignment ns1:trueNeutral .\n\nns1:Fachen ns1:hasAlignment ns1:neutralEvil .\n\nns1:FadingFox ns1:hasAlignment ns1:trueNeutral .\n\nns1:FaerieDragonDracoFraudatioMinimus ns1:hasAlignment ns1:chaoticGood .\n\nns1:FaerieMount ns1:hasAlignment ns1:trueNeutral .\n\nns1:FaerieSeer ns1:hasAlignment ns1:trueNeutral .\n\nns1:Faeriedragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:FailedApotheosisMimic ns1:hasAlignment ns1:neutralEvil .\n\nns1:Fallen ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FalseSpiderPedipalp ns1:hasAlignment ns1:trueNeutral .\n\nns1:FalseSpiderSolifugid ns1:hasAlignment ns1:trueNeutral .\n\nns1:FamiliarAutomaton ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FangedSeaSerpent ns1:hasAlignment ns1:trueNeutral .\n\nns1:FastZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Fastachee ns1:hasAlignment ns1:neutralGood .\n\nns1:Faun ns1:hasAlignment ns1:chaoticGood .\n\nns1:FearEater ns1:hasAlignment ns1:neutralEvil .\n\nns1:FearGuard ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Feargaunt ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FeliusDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Fellforged ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FellnightSpriggan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Fellsig ns1:hasAlignment ns1:neutralEvil .\n\nns1:FenMauler ns1:hasAlignment ns1:neutralEvil .\n\nns1:FenWitch ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FeralHogTroop ns1:hasAlignment ns1:trueNeutral .\n\nns1:FeralTitanLord ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:FerrousGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:FesteringSpirit ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Festrog ns1:hasAlignment ns1:neutralEvil .\n\nns1:Fetch ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FetchlingKayal ns1:hasAlignment ns1:trueNeutral .\n\nns1:FetidSporeMound ns1:hasAlignment ns1:trueNeutral .\n\nns1:FetidStray ns1:hasAlignment ns1:neutralEvil .\n\nns1:Fext ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FeyGiantToad ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:FeyWolverine ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Feyling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:FeywardTree ns1:hasAlignment ns1:trueNeutral .\n\nns1:FiendInfusedStoneGolem ns1:hasAlignment ns1:neutralEvil .\n\nns1:FiendishHeavyWarHorse ns1:hasAlignment ns1:neutralEvil .\n\nns1:FieryCorpseOrgy ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Firbolg ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireBirdCompanion ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireCrabGreater ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireCrabLesser ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireDrake ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireElementalConstruct ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireFish ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireGiant ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FireInfusedTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FireLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireNymph ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:FirePhantom ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FireSalamander ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireVampire ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FireVeela ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireWhale ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireWysp ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireYai ns1:hasAlignment ns1:neutralEvil .\n\nns1:Firebird ns1:hasAlignment ns1:neutralGood .\n\nns1:Firefiend ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FirefootFennec ns1:hasAlignment ns1:trueNeutral .\n\nns1:FjordLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FlagstoneGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlailSnail ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlailSnailFrogGodGames ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlameDrake ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FlameSpawnedTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FlamebrotherSalamander ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FlamingSkull ns1:hasAlignment ns1:neutralEvil .\n\nns1:FlappingHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:FlashBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlayerDevilMarzach ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FleaGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:FleshColossusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:FleshGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:FleshGolemHound ns1:hasAlignment ns1:trueNeutral .\n\nns1:FleshdollRogue ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Fleshdreg ns1:hasAlignment ns1:neutralEvil .\n\nns1:FleshdregSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:FlightPack ns1:hasAlignment ns1:trueNeutral .\n\nns1:FloatingEye ns1:hasAlignment ns1:trueNeutral .\n\nns1:FloodTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FloodslainArsinoitherium ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FloodslainOrc ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FlotsamTerror ns1:hasAlignment ns1:neutralEvil .\n\nns1:FloweringLattice ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlueHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Flumph ns1:hasAlignment ns1:lawfulGood .\n\nns1:Fluxwraith ns1:hasAlignment ns1:neutralEvil .\n\nns1:FlyGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlyingFox ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlyingPolyp ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FlyingSquirrel ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlytrapLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:Fogwarden ns1:hasAlignment ns1:neutralEvil .\n\nns1:FomorianTitanMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FooDog ns1:hasAlignment ns1:neutralGood .\n\nns1:ForestBlight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ForestDrake ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ForestGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ForestersBane ns1:hasAlignment ns1:trueNeutral .\n\nns1:ForgeSpurned ns1:hasAlignment ns1:neutralEvil .\n\nns1:ForgefiendScanderig ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ForgottenOne ns1:hasAlignment ns1:trueNeutral .\n\nns1:ForkedCat ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ForkedTailWyvern ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Forlarren ns1:hasAlignment ns1:neutralEvil .\n\nns1:FormianHiveQueen ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormianMyrmarch ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormianQueen ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormianRoyalGuard ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormianTaskmaster ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormianWarrior ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormianWorker ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormlessSpawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FortunesellerGoblin ns1:hasAlignment ns1:trueNeutral .\n\nns1:Fossegrim ns1:hasAlignment ns1:neutralEvil .\n\nns1:FossilGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:FourArmedGargoyle ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FourArmedMudraSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:FourArmedSahuaginMutant ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Fox ns1:hasAlignment ns1:trueNeutral .\n\nns1:Foxwere ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FrazUrbluuDemonPrinceofDeception ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FreezingFlow ns1:hasAlignment ns1:trueNeutral .\n\nns1:FreshwaterMerrow ns1:hasAlignment ns1:neutralEvil .\n\nns1:FrogDemonGreruor ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FrogFather ns1:hasAlignment ns1:trueNeutral .\n\nns1:FrogGiantDire ns1:hasAlignment ns1:trueNeutral .\n\nns1:FrogPoisonous ns1:hasAlignment ns1:trueNeutral .\n\nns1:Froghemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:FrostCube ns1:hasAlignment ns1:trueNeutral .\n\nns1:FrostDrake ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FrostGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FrostMan ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FrostMiteSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:FrostWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:FrostdeathDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:FrostfallenMammoth ns1:hasAlignment ns1:neutralEvil .\n\nns1:FrostyChiseler ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FrumiousBandersnatch ns1:hasAlignment ns1:trueNeutral .\n\nns1:FukujinKami ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Fuldrex ns1:hasAlignment ns1:neutralEvil .\n\nns1:Fulgati ns1:hasAlignment ns1:trueNeutral .\n\nns1:Funayurei ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FungalCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:FungalLizardfolk ns1:hasAlignment ns1:trueNeutral .\n\nns1:FungalNymph ns1:hasAlignment ns1:chaoticGood .\n\nns1:Fungiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:Funglet ns1:hasAlignment ns1:neutralGood .\n\nns1:Fungoid ns1:hasAlignment ns1:neutralEvil .\n\nns1:FungusGargoyle ns1:hasAlignment ns1:trueNeutral .\n\nns1:FungusLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:FungusMan ns1:hasAlignment ns1:trueNeutral .\n\nns1:FungusManKing ns1:hasAlignment ns1:trueNeutral .\n\nns1:FungusQueen ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FungusWeird ns1:hasAlignment ns1:trueNeutral .\n\nns1:Furcifer ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:FurnaceGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:FutureYithian ns1:hasAlignment ns1:neutralGood .\n\nns1:Fye ns1:hasAlignment ns1:trueNeutral .\n\nns1:Fyr ns1:hasAlignment ns1:trueNeutral .\n\nns1:GIANTWATERBEETLE ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Gaki ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gallerok ns1:hasAlignment ns1:trueNeutral .\n\nns1:GalluWarmongerDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Galvo ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gambado ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Gancanagh ns1:hasAlignment ns1:chaoticGood .\n\nns1:Ganzi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Gar ns1:hasAlignment ns1:trueNeutral .\n\nns1:GardenOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:GareLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GargantuanAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:GargantuanMonstrousSeaWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gargiya ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gargoyle ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GargoyleBrute ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GargoyleGuardian ns1:hasAlignment ns1:trueNeutral .\n\nns1:Garipan ns1:hasAlignment ns1:neutralEvil .\n\nns1:Garmunchi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Garuda ns1:hasAlignment ns1:chaoticGood .\n\nns1:Gashadokurou ns1:hasAlignment ns1:neutralEvil .\n\nns1:GateArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:Gathlain ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GatorGhoul ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gearghost ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Gearsman ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gegenees ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Geier ns1:hasAlignment ns1:trueNeutral .\n\nns1:Geist ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GelatinousCube ns1:hasAlignment ns1:trueNeutral .\n\nns1:GelatinousGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:GelatinousOrb ns1:hasAlignment ns1:trueNeutral .\n\nns1:GemCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:GemstoneGargoyle ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GeneralofVengeance ns1:hasAlignment ns1:lawfulGood .\n\nns1:Genghryl ns1:hasAlignment ns1:trueNeutral .\n\nns1:Genthodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Geon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GeruzouSlimeDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Geryon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GetofIblis ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GhaddarDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ghalzarokh ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ghast ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ghawwas ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gholdako ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ghole ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ghonhatine ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ghoran ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ghorazagh ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ghost ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ghoublin ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ghoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GhoulAvernal ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GhoulDireWolf ns1:hasAlignment ns1:neutralEvil .\n\nns1:GhoulHoundCompanion ns1:hasAlignment ns1:neutralEvil .\n\nns1:GhoulHoundHero ns1:hasAlignment ns1:neutralEvil .\n\nns1:GhoulStirge ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GhoulWolf ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ghul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GiantAbyssalDireFrog ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GiantAdultAntLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAdvancedDireBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAmoeba ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAnaconda ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAntDrone ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAntLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAntQueen ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAntSoldier ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAntSporeZombie ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GiantAntWorker ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAssassinBug ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAssassinSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBarracuda ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBee ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBeheaded ns1:hasAlignment ns1:neutralEvil .\n\nns1:GiantBelostomatid ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBlackWidowSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBlisterBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBlowfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBogTurtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBombardierBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBoringBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBotfly ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBumblebee ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBumblebeeQueen ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBumblebeeWorker ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantCaribe ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantCentipede ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantChameleon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantCicada ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantCockroachExoskeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:GiantConstrictorSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantCrabSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantDeathwatchBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantDemonGnoll ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantDireFrog ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantDragonflyXPNMediumverminInitSensesdarkvisionftPerceptionDEFENSEACtouchflatfootedDexnaturalhpdFortRefWillImmunevermintraitsOFFENSESpeedftflyftperfectMeleebitedTACTICSGiantdragonfliesareveryaggressiveandhuntwarmbloodedcreaturesfearlesslyattackinguntileithertheyortheirpreyaredeadSTATISTICSStrDexConIntWisChaBaseAtkCMBCMDvstripSkillsFly ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantEagle ns1:hasAlignment ns1:neutralGood .\n\nns1:GiantElectricCatfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantEmperorScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantFalcon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantFlea ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantFly ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantFlytrap ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantFrilledLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantFrog ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantGar ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantGecko ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantGroundCricket ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantGroundWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantHamster ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantHellgrammite ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantHissingCockroach ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantHornet ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantHorsefly ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantIsopod ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantKhopeshScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantLakeOctopus ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantLeech ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantLegwaterSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantLocust ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMaggot ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMantisCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMantisShrimp ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMarmoset ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMiningBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMonstrousCrayfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMorayEel ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMosquito ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMotleyCuttlefish ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMuckdweller ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantOctopus ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantOwl ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:GiantPhantomArmor ns1:hasAlignment ns1:neutralEvil .\n\nns1:GiantPike ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantPorcupine ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantQueenBee ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantRaven ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantRhinocerosBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantRotGrub ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSawtoothedBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantScarab ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSeaAnemone ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSeaSlug ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSeaSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSeahorse ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSkateSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSkunk ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSlicerBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSlug ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSnappingTurtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSolifugid ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantStagBeetleExoskeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:GiantStarfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantStargazer ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantStirge ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSundew ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTarantulaSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTardigrade ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTermite ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTick ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTigerBarb ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantToad ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTortoise ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTubeWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantVulture ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantWalkingStick ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantWaterStrider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantWeasel ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantYellowjacket ns1:hasAlignment ns1:trueNeutral .\n\nns1:Giantwingedchupacabra ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GibberingAbomination ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GibberingMouther ns1:hasAlignment ns1:trueNeutral .\n\nns1:GibberingOrb ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GibrilethDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Giganotosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:GigasClam ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GildedDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GildedSeaSerpent ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gillman ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ginever ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Giraffe ns1:hasAlignment ns1:trueNeutral .\n\nns1:Girallon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Girtablilu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gitwerc ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Glabrezu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GlacialOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:GlacierToad ns1:hasAlignment ns1:trueNeutral .\n\nns1:Glaciergeist ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GladiatorRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:GlaistigMR ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GlassGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:GlassUrchin ns1:hasAlignment ns1:trueNeutral .\n\nns1:GlassWyrm ns1:hasAlignment ns1:trueNeutral .\n\nns1:GlidingTurtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Glimmerhollow ns1:hasAlignment ns1:trueNeutral .\n\nns1:Globster ns1:hasAlignment ns1:trueNeutral .\n\nns1:GlomerayDaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:GloomCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gloomwing ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gluttongrass ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gnarlwood ns1:hasAlignment ns1:neutralEvil .\n\nns1:GnasherLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gnoll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GnollWhelp ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GnophKeh ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Gnophkeh ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gnorri ns1:hasAlignment ns1:trueNeutral .\n\nns1:Goat ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoatDemonMehrim ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Goblin ns1:hasAlignment ns1:neutralEvil .\n\nns1:GoblinDog ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoblinNaga ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GoblinSnake ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GoblinTroop ns1:hasAlignment ns1:neutralEvil .\n\nns1:Goemul ns1:hasAlignment ns1:neutralGood .\n\nns1:Goezspall ns1:hasAlignment ns1:trueNeutral .\n\nns1:GohlHydraCloud ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GoldDragonJuvenile ns1:hasAlignment ns1:lawfulGood .\n\nns1:GoldDragonMatureAdult ns1:hasAlignment ns1:lawfulGood .\n\nns1:GoldDragonOld ns1:hasAlignment ns1:lawfulGood .\n\nns1:GoldDragonVeryOld ns1:hasAlignment ns1:lawfulGood .\n\nns1:GoldDragonWyrm ns1:hasAlignment ns1:lawfulGood .\n\nns1:GoldDragonYoungAdult ns1:hasAlignment ns1:lawfulGood .\n\nns1:GoldGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoldenCat ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoldenCatDescendant ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoldenColossusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoldenScarabSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoldenSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:GolemCarrionweaponized ns1:hasAlignment ns1:trueNeutral .\n\nns1:GolemTreasure ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoliathFrog ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoliathSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoliathStagBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gongorinan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GongorinanQlippoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Gorbel ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gorgimera ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gorgon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gorgoni ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gorgoros ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GorillaBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:GorsonTheBloodDuke ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Gorynych ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GourdLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gowrow ns1:hasAlignment ns1:trueNeutral .\n\nns1:GrabbingGiantBeheaded ns1:hasAlignment ns1:neutralEvil .\n\nns1:GrabbingMedusaHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:GrabbingSeveredHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:GrachukkClanMaster ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GraeaeMR ns1:hasAlignment ns1:neutralEvil .\n\nns1:GrandfatherofFlowers ns1:hasAlignment ns1:neutralEvil .\n\nns1:Grangeri ns1:hasAlignment ns1:trueNeutral .\n\nns1:GrapplingClaw ns1:hasAlignment ns1:trueNeutral .\n\nns1:Grassling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Grauladon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GraveLynx ns1:hasAlignment ns1:neutralEvil .\n\nns1:GraveRisen ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GraveSage ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Gravebound ns1:hasAlignment ns1:neutralEvil .\n\nns1:GravenGuardian ns1:hasAlignment ns1:trueNeutral .\n\nns1:Graveshell ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gravesludge ns1:hasAlignment ns1:neutralEvil .\n\nns1:GravestoneDryad ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gray ns1:hasAlignment ns1:neutralEvil .\n\nns1:GrayApeDecurion ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:GrayApeLegionnaire ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:GrayApePirateKing ns1:hasAlignment ns1:trueNeutral .\n\nns1:GrayGoo ns1:hasAlignment ns1:trueNeutral .\n\nns1:GrayNisp ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GrayOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:GrayRender ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatAssassinBug ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatCaretaker ns1:hasAlignment ns1:neutralGood .\n\nns1:GreatCyclops ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreatDiademUrchin ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatGatorGhoul ns1:hasAlignment ns1:neutralEvil .\n\nns1:GreatGhul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreatHornedOwl ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatSeaAnemone ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatWhiteShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatWhiteWhale ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatWyrmBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreatWyrmBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GreatWyrmDungeonDragonAKAGargaxtheMightyMasteroftheDungeonDragons ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatWyrmForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreatWyrmGoldDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:GreatWyrmGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GreatWyrmRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreatWyrmRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GreatWyrmSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:GreatWyrmSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatWyrmWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreaterAcidQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterAetherElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterAirElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterBarghest ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GreaterBasilisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterBoneneedle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterCeustodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:GreaterColdIronElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterEarthElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterFireElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterGelidBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterGravityElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterIceElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterLightningElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterMagmaElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterMedusa ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GreaterMudElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterNegativeEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterNelbarzoth ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GreaterObsidianQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterOozeDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreaterPositiveEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterPsionicElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterPubo ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterShadowCR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreaterShedu ns1:hasAlignment ns1:lawfulGood .\n\nns1:GreaterShieldWarden ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:GreaterVerdurousOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterWaterElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterYamabushiTengu ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:GreatwyrmUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Greatwyrmclouddragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreenGuardianCR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreenHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreenMan ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreenstingScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gregole ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Gremlin ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GremlinBatspawnCR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GremlinLightningspawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GremlinNuglub ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GremlinPugwampi ns1:hasAlignment ns1:neutralEvil .\n\nns1:GremlinSpiderspawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GremlinVexgit ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GrenadierTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GrendelMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Greymalkin ns1:hasAlignment ns1:neutralEvil .\n\nns1:Grick ns1:hasAlignment ns1:trueNeutral .\n\nns1:Griefgall ns1:hasAlignment ns1:neutralEvil .\n\nns1:Griffon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Grig ns1:hasAlignment ns1:neutralGood .\n\nns1:GrigSwarm ns1:hasAlignment ns1:neutralGood .\n\nns1:Grigori ns1:hasAlignment ns1:trueNeutral .\n\nns1:Grikkitog ns1:hasAlignment ns1:neutralEvil .\n\nns1:GrimReaper ns1:hasAlignment ns1:neutralEvil .\n\nns1:Grimlock ns1:hasAlignment ns1:neutralEvil .\n\nns1:Grimm ns1:hasAlignment ns1:neutralEvil .\n\nns1:Grimple ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Grimslake ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Grimstalker ns1:hasAlignment ns1:neutralEvil .\n\nns1:Grindylow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Grioth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Grippli ns1:hasAlignment ns1:trueNeutral .\n\nns1:GristlyDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GrizzlyBearRug ns1:hasAlignment ns1:trueNeutral .\n\nns1:GroaningSpirit ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Grodair ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GrogrisantMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Grokosh ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gronk ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Grootslang ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Grothlut ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GroundWaspSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:GroveGuardian ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GruffLanternGoat ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Gryph ns1:hasAlignment ns1:neutralEvil .\n\nns1:GuardianDaemon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GuardianDoll ns1:hasAlignment ns1:neutralEvil .\n\nns1:GuardianDragonMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:GuardianPhantomArmor ns1:hasAlignment ns1:neutralEvil .\n\nns1:GuardianScroll ns1:hasAlignment ns1:trueNeutral .\n\nns1:GuardianSpirit ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GuardianoftheTower ns1:hasAlignment ns1:trueNeutral .\n\nns1:Guecubu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Gug ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GugSavant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GulperEel ns1:hasAlignment ns1:trueNeutral .\n\nns1:GunpowderOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:GurgistMortic ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gutslug ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gutted ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GyeongsaWarpStorm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Gylptodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gynosphinx ns1:hasAlignment ns1:trueNeutral .\n\nns1:G\u00f8gelid ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:HYDRODAEMON ns1:hasAlignment ns1:neutralEvil .\n\nns1:Hadhayosh ns1:hasAlignment ns1:trueNeutral .\n\nns1:HagEyeOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:HalaDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HalfCelestialUnicorn ns1:hasAlignment ns1:trueNeutral .\n\nns1:HalfFiendDryad ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HalfFiendMinotaur ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HalfOgre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Halsora ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hamadryad ns1:hasAlignment ns1:chaoticGood .\n\nns1:HammerheadShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:HandOfTheInheritor ns1:hasAlignment ns1:lawfulGood .\n\nns1:HandmaidenDevilGylou ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HangmanTree ns1:hasAlignment ns1:neutralEvil .\n\nns1:Haniver ns1:hasAlignment ns1:trueNeutral .\n\nns1:HarbingerArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:HarbingerDaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:HarbingerofBrokenDealsFinePrintandUnfairBargains ns1:hasAlignment ns1:neutralEvil .\n\nns1:Harionago ns1:hasAlignment ns1:neutralEvil .\n\nns1:Harpy ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Harridan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HarvestHaunt ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Hastur ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HatethrallDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Haunt ns1:hasAlignment ns1:trueNeutral .\n\nns1:HauntedChain ns1:hasAlignment ns1:trueNeutral .\n\nns1:HauntedConstructScarecrow ns1:hasAlignment ns1:neutralEvil .\n\nns1:Havero ns1:hasAlignment ns1:neutralEvil .\n\nns1:HaveroTentacle ns1:hasAlignment ns1:neutralEvil .\n\nns1:HawanarGenie ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Hawk ns1:hasAlignment ns1:trueNeutral .\n\nns1:HeadedCryohydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:HeadedHydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:HeadedPryohydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:HeadedPyrohydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:HeadmansScythe ns1:hasAlignment ns1:trueNeutral .\n\nns1:HeartrotTree ns1:hasAlignment ns1:neutralEvil .\n\nns1:Hedgehog ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hegessik ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Heikegani ns1:hasAlignment ns1:neutralEvil .\n\nns1:HekatonkheiresTitan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HelBehir ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hela ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HelicoprionShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Helixmothlarva ns1:hasAlignment ns1:trueNeutral .\n\nns1:HellEngineAdamantineGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:HellHound ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HellMoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hellcat ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Hellcrown ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HellfireIgnis ns1:hasAlignment ns1:neutralEvil .\n\nns1:HellionRevenant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HellstokerDevilMarnasoth ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HellwaspSwarm ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HeraldofArmageddon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:HeraldofDreams ns1:hasAlignment ns1:chaoticGood .\n\nns1:HeraldofFreedom ns1:hasAlignment ns1:chaoticGood .\n\nns1:HeraldofFreedomandJustice ns1:hasAlignment ns1:chaoticGood .\n\nns1:HeraldofHell ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HeraldofRunes ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HeraldoftheDemonQueen ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HeraldofthePirateQueen ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:HereciteofAsmodeus ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HerensugueDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HeresyDevilAyngavhaul ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Hetkoshu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hezrou ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hidebehind ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hieracosphinx ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HighGirallon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HighPriestofShubNiggurath ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HighVeinar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:HillGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hippocampus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hippogriff ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hippopotamus ns1:hasAlignment ns1:trueNeutral .\n\nns1:HiveBrute ns1:hasAlignment ns1:neutralEvil .\n\nns1:HiveLarvaSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:HiveMindBeetleSwarm ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:HiveQueen ns1:hasAlignment ns1:neutralEvil .\n\nns1:HiveWarrior ns1:hasAlignment ns1:neutralEvil .\n\nns1:HivemindRatSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:HoarSpirit ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HobbeHound ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hobgoblin ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HobgoblinPhalanxTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HobgoblinTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Hobkins ns1:hasAlignment ns1:neutralEvil .\n\nns1:Hodag ns1:hasAlignment ns1:trueNeutral .\n\nns1:HollowHelm ns1:hasAlignment ns1:neutralEvil .\n\nns1:HollowSerpent ns1:hasAlignment ns1:neutralEvil .\n\nns1:HomotheriumSmilodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Homunculus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hondra ns1:hasAlignment ns1:trueNeutral .\n\nns1:HookfangWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:HordeRiot ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Horla ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HornCaterpillar ns1:hasAlignment ns1:trueNeutral .\n\nns1:HornedDemonKalavakus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HornedDevilCornugon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HornedLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Horse ns1:hasAlignment ns1:trueNeutral .\n\nns1:HostDevilMagaav ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HoundArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:HoundofTindalos ns1:hasAlignment ns1:neutralEvil .\n\nns1:HouseCentipede ns1:hasAlignment ns1:trueNeutral .\n\nns1:Howler ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hoyrall ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Huecuva ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HugeAcidQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeAetherElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeAirElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeColdironElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeEarthElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeFireElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeGravityElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeIceElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeLightningElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeMagmaElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeMonstrousSeaWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeMudElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeNegativeEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeObsidianQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugePositiveEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugePsionicElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeWaterElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Huggermugger ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Huldra ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:HumanJujuzombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:HumanMeatPuppetCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:HumanScholarBrainCylinder ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Humbaba ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Hundun ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hungerer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HungryFlesh ns1:hasAlignment ns1:trueNeutral .\n\nns1:HungryFog ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hunted ns1:hasAlignment ns1:neutralEvil .\n\nns1:HunterUrchin ns1:hasAlignment ns1:trueNeutral .\n\nns1:HuntingHorror ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hupia ns1:hasAlignment ns1:neutralEvil .\n\nns1:Hutijin ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Hyaenodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hyakume ns1:hasAlignment ns1:neutralEvil .\n\nns1:Hyaleth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hydraggon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hydrodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Hydrus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hyena ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hykariut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Hypnalis ns1:hasAlignment ns1:trueNeutral .\n\nns1:Iathavos ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IbShade ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ibshaunet ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:IceDevilGelugon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IceDrake ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IceGnomeBarbegaziCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:IceGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:IceKratah ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IceLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IceMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:IceTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IceYai ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Icegaunt ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ichkoh ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ichthyocentaur ns1:hasAlignment ns1:trueNeutral .\n\nns1:IdOozeCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Idun ns1:hasAlignment ns1:neutralGood .\n\nns1:Ifrit ns1:hasAlignment ns1:trueNeutral .\n\nns1:Iguanodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ijiraq ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:IkuTurso ns1:hasAlignment ns1:neutralEvil .\n\nns1:Illureshi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ImenteshProtean ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Imjarvi ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ImmatureNorn ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ImmenseMandragora ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ImmenseTortoise ns1:hasAlignment ns1:trueNeutral .\n\nns1:ImmolationDevilPuragaus ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ImmortalIchor ns1:hasAlignment ns1:neutralEvil .\n\nns1:Imp ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Impariut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ImperialGhoul ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ImplacableStalker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Impundulu ns1:hasAlignment ns1:neutralEvil .\n\nns1:Incubus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Incutilis ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IncutilisLord ns1:hasAlignment ns1:neutralEvil .\n\nns1:InevitableAevarutMR ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Infantis ns1:hasAlignment ns1:neutralEvil .\n\nns1:Infernor ns1:hasAlignment ns1:chaoticEvil .\n\nns1:InkDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IntellectDevourer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:InterlocutorKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IntermediateNelbarzoth ns1:hasAlignment ns1:lawfulGood .\n\nns1:InubrixGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:InvertedGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:InvisibleStalker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Iophanite ns1:hasAlignment ns1:lawfulGood .\n\nns1:IounGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:IounWyrd ns1:hasAlignment ns1:trueNeutral .\n\nns1:IrefulHellion ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Irii ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Irlgaunt ns1:hasAlignment ns1:neutralEvil .\n\nns1:IrminsulMR ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Irnakurse ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IronCobra ns1:hasAlignment ns1:trueNeutral .\n\nns1:IronColossusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:IronGhoul ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IronGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:IronGolemArcher ns1:hasAlignment ns1:trueNeutral .\n\nns1:IronMagehunterTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IronMaidenGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:IronRiderTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IronSiegeAlchemistTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IronWight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Isitoq ns1:hasAlignment ns1:neutralEvil .\n\nns1:Isonade ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IsphAunVuln ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ivoyro ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Izfiitar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:JaNoiOni ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Jabberwock ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JackOLantern ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jackal ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jackalwere ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JackinIronsGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JackoLantern ns1:hasAlignment ns1:neutralEvil .\n\nns1:Jaculi ns1:hasAlignment ns1:trueNeutral .\n\nns1:JadeColossuspp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jadeling ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jaguar ns1:hasAlignment ns1:trueNeutral .\n\nns1:Janni ns1:hasAlignment ns1:trueNeutral .\n\nns1:JanniCaptain ns1:hasAlignment ns1:lawfulEvil .\n\nns1:JellyfishGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:JellyfishSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jerboa ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jesulan ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Jherikite ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JigsawShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jinmenju ns1:hasAlignment ns1:trueNeutral .\n\nns1:JinnWizard ns1:hasAlignment ns1:neutralEvil .\n\nns1:Jinushigami ns1:hasAlignment ns1:trueNeutral .\n\nns1:JinxCatCompanion ns1:hasAlignment ns1:trueNeutral .\n\nns1:JitterboneMortic ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Jorogumo ns1:hasAlignment ns1:neutralEvil .\n\nns1:JotunbloodHillGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JotundTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Jotunnboar ns1:hasAlignment ns1:trueNeutral .\n\nns1:JoyfulThing ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Jubear ns1:hasAlignment ns1:trueNeutral .\n\nns1:JubilexTheFacelessLord ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JubilexTouchedMarshJelly ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JubjubBird ns1:hasAlignment ns1:trueNeutral .\n\nns1:JudgementDevilAshmede ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Juggerloathe ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Juggernaut ns1:hasAlignment ns1:trueNeutral .\n\nns1:JulunggaliMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:JungleDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:JungleGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:JungleGrick ns1:hasAlignment ns1:trueNeutral .\n\nns1:JunkGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:JupiterBloodsucker ns1:hasAlignment ns1:trueNeutral .\n\nns1:JuvenileBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JuvenileBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:JuvenileForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JuvenileGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:JuvenileRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JuvenileRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:JuvenileSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:JuvenileSeps ns1:hasAlignment ns1:trueNeutral .\n\nns1:JuvenileSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:JuvenileSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:JuvenileUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:JuvenileWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Kabandha ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Kaenju ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kaicharek ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kakapo ns1:hasAlignment ns1:trueNeutral .\n\nns1:KakuenTaka ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Kamaitachi ns1:hasAlignment ns1:chaoticEvil .\n\nns1:KamiShikigami ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:KaminariKami ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kampfult ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kangaroo ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kapoacinth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Kappa ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kapre ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kaprosuchus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Karek ns1:hasAlignment ns1:trueNeutral .\n\nns1:Karkadann ns1:hasAlignment ns1:trueNeutral .\n\nns1:Karkinoi ns1:hasAlignment ns1:chaoticEvil .\n\nns1:KarkinoiBroodSwarm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Karumzek ns1:hasAlignment ns1:neutralEvil .\n\nns1:KarzSlug ns1:hasAlignment ns1:trueNeutral .\n\nns1:KarzSlugQueen ns1:hasAlignment ns1:trueNeutral .\n\nns1:KasaObake ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kasatha ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Kastamut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Kathlin ns1:hasAlignment ns1:neutralGood .\n\nns1:KawaAkago ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kech ns1:hasAlignment ns1:neutralEvil .\n\nns1:KeeperoftheYellowSign ns1:hasAlignment ns1:chaoticEvil .\n\nns1:KelpDevil ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kelpie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kentrosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:KerePsychopomp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ketesthius ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Keulia ns1:hasAlignment ns1:trueNeutral .\n\nns1:Khaei ns1:hasAlignment ns1:trueNeutral .\n\nns1:Khala ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Khardajeen ns1:hasAlignment ns1:neutralEvil .\n\nns1:Khargra ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kigyo ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Kijimuna ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kikimora ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kikituk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kilblain ns1:hasAlignment ns1:neutralEvil .\n\nns1:KillerFrog ns1:hasAlignment ns1:trueNeutral .\n\nns1:KillerSeahorse ns1:hasAlignment ns1:trueNeutral .\n\nns1:Killmoulis ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kimenhul ns1:hasAlignment ns1:neutralEvil .\n\nns1:KingCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:KingRagworm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kirin ns1:hasAlignment ns1:lawfulGood .\n\nns1:KithangianBeastDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Kitsune ns1:hasAlignment ns1:trueNeutral .\n\nns1:KnightAnt ns1:hasAlignment ns1:trueNeutral .\n\nns1:KnightoftheGateUniqueAdvancedDevourer ns1:hasAlignment ns1:neutralEvil .\n\nns1:Koala ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kobold ns1:hasAlignment ns1:lawfulEvil .\n\nns1:KoboldZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kodama ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kolyarut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Kongamato ns1:hasAlignment ns1:trueNeutral .\n\nns1:KorirKokembe ns1:hasAlignment ns1:trueNeutral .\n\nns1:Korkcitura ns1:hasAlignment ns1:neutralEvil .\n\nns1:Korred ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:KostchtchieDemonPrinceofWrath ns1:hasAlignment ns1:chaoticEvil .\n\nns1:KotoFurunishi ns1:hasAlignment ns1:neutralGood .\n\nns1:Kraidyl ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kraken ns1:hasAlignment ns1:neutralEvil .\n\nns1:Krampus ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kratah ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Krenshar ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kronosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:KuahLij ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Kuchrima ns1:hasAlignment ns1:chaoticEvil .\n\nns1:KudzuTheEverblight ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kurobozu ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Kuru ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Kuwa ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Kyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:KytonDemagogue ns1:hasAlignment ns1:lawfulEvil .\n\nns1:LabyrinthMinotaur ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LacedonAquaticGhoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lacridaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:LakeTroll ns1:hasAlignment ns1:neutralEvil .\n\nns1:Lamhigyn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lamia ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LamiaMatriarch ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lammasu ns1:hasAlignment ns1:lawfulGood .\n\nns1:Lampad ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Lampadarius ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Lamprey ns1:hasAlignment ns1:trueNeutral .\n\nns1:LandLamprey ns1:hasAlignment ns1:trueNeutral .\n\nns1:LandwalkerShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:LanternArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:LanternGoat ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Larabay ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:LargeAcidQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeAetherElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeAirElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeColdIronElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeEarthElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeFireElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeGravityElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeIceElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeLightningElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeLightningQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeMagmaElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeMonstrousSeaWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeMudElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeNegativeEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeObsidianQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargePositiveEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargePsionicElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeStingray ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeWaterElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Larva ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LarvalChuul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LarvalSlimeCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:LarvalStarspawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lashunta ns1:hasAlignment ns1:neutralGood .\n\nns1:Laurapathis ns1:hasAlignment ns1:lawfulEvil .\n\nns1:LavaChild ns1:hasAlignment ns1:trueNeutral .\n\nns1:LavaDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:LavaWeird ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lawgiver ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:LeadCladWyvern ns1:hasAlignment ns1:trueNeutral .\n\nns1:LeadGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:LeadSkeleton ns1:hasAlignment ns1:trueNeutral .\n\nns1:LeafLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:LeafRay ns1:hasAlignment ns1:trueNeutral .\n\nns1:LeananSidheMR ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:LeechSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Leechroot ns1:hasAlignment ns1:neutralEvil .\n\nns1:LegendaryChimera ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LegionArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:Lejnth ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Lemkin ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Lemming ns1:hasAlignment ns1:trueNeutral .\n\nns1:Lemure ns1:hasAlignment ns1:lawfulEvil .\n\nns1:LengGhoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LengHound ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LengSpider ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Leonal ns1:hasAlignment ns1:neutralGood .\n\nns1:Leopard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Leprechaun ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:LesserBandersnatch ns1:hasAlignment ns1:trueNeutral .\n\nns1:LesserBoneneedle ns1:hasAlignment ns1:trueNeutral .\n\nns1:LesserCeustodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:LesserDeath ns1:hasAlignment ns1:neutralEvil .\n\nns1:LesserGelidBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:LesserGibberingOrb ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LesserHostDevilGaav ns1:hasAlignment ns1:lawfulEvil .\n\nns1:LesserJabberwock ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LesserNecrophidius ns1:hasAlignment ns1:trueNeutral .\n\nns1:LesserOozeDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LesserPubo ns1:hasAlignment ns1:trueNeutral .\n\nns1:LesserShadow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LesserShieldWarden ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Leucrotta ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Leukodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Leviathan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Lhaksharut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:LibitinariiKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:LibreumGolem ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:LichNewt ns1:hasAlignment ns1:trueNeutral .\n\nns1:LichPsychic ns1:hasAlignment ns1:lawfulEvil .\n\nns1:LichShade ns1:hasAlignment ns1:neutralEvil .\n\nns1:LichenLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:LifeleecherMortic ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lifesuit ns1:hasAlignment ns1:trueNeutral .\n\nns1:LightRidingHorse ns1:hasAlignment ns1:trueNeutral .\n\nns1:LightningCatChampion ns1:hasAlignment ns1:trueNeutral .\n\nns1:LightningCatCompanion ns1:hasAlignment ns1:trueNeutral .\n\nns1:LightningCatHero ns1:hasAlignment ns1:trueNeutral .\n\nns1:LightningMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:LightningTreantppCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:LightningWeird ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lilin ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Lilith ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Lilitu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LiminalSprite ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:LinnormCrag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lion ns1:hasAlignment ns1:trueNeutral .\n\nns1:LionAlebrije ns1:hasAlignment ns1:trueNeutral .\n\nns1:LionBeastofChaos ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Lionwere ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lipika ns1:hasAlignment ns1:trueNeutral .\n\nns1:Litanu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Livestone ns1:hasAlignment ns1:trueNeutral .\n\nns1:LivingArmor ns1:hasAlignment ns1:trueNeutral .\n\nns1:LivingDoldrums ns1:hasAlignment ns1:neutralEvil .\n\nns1:LivingLake ns1:hasAlignment ns1:trueNeutral .\n\nns1:LivingMirage ns1:hasAlignment ns1:trueNeutral .\n\nns1:LivingRune ns1:hasAlignment ns1:neutralEvil .\n\nns1:LivingTopiary ns1:hasAlignment ns1:trueNeutral .\n\nns1:LivingWall ns1:hasAlignment ns1:trueNeutral .\n\nns1:Lizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:LizardKing ns1:hasAlignment ns1:trueNeutral .\n\nns1:Lizardfolk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Llama ns1:hasAlignment ns1:trueNeutral .\n\nns1:Llorona ns1:hasAlignment ns1:neutralEvil .\n\nns1:Locathah ns1:hasAlignment ns1:trueNeutral .\n\nns1:LocustPlagueSwarmMR ns1:hasAlignment ns1:neutralEvil .\n\nns1:LocustSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:LordSunWarrior ns1:hasAlignment ns1:lawfulGood .\n\nns1:Lorelei ns1:hasAlignment ns1:neutralEvil .\n\nns1:LotusLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:LotusTree ns1:hasAlignment ns1:trueNeutral .\n\nns1:Lovelorn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lukwata ns1:hasAlignment ns1:trueNeutral .\n\nns1:Luma ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Lunarma ns1:hasAlignment ns1:trueNeutral .\n\nns1:LurkerAbove ns1:hasAlignment ns1:trueNeutral .\n\nns1:LurkerInTheCrypt ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LurkerinLight ns1:hasAlignment ns1:neutralEvil .\n\nns1:Lusca ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lustspawn ns1:hasAlignment ns1:neutralEvil .\n\nns1:Lynx ns1:hasAlignment ns1:trueNeutral .\n\nns1:Lythic ns1:hasAlignment ns1:trueNeutral .\n\nns1:MOUSELORDMOUSEFORM ns1:hasAlignment ns1:trueNeutral .\n\nns1:MachineSoldier ns1:hasAlignment ns1:trueNeutral .\n\nns1:MadnessSlug ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MadnessSlugAlternateForm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Maenad ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MaenadDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Maftet ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagebaneGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagicbaneBandersnatch ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagmaDragonGreatWyrm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonJuvenile ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonMatureAdult ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonOld ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonVeryOld ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonVeryYoung ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonWyrm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonWyrmling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonYoungAdult ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaElementalRamCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagmaMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagmaOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagmaRoc ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Magmin ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Magmoid ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagnesiumGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagnesiumSpirit ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Maharaja ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MaharishiManu ns1:hasAlignment ns1:lawfulGood .\n\nns1:MakaraVahana ns1:hasAlignment ns1:trueNeutral .\n\nns1:Malboro ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Malenti ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Mammon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Mammoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:MammothFlea ns1:hasAlignment ns1:trueNeutral .\n\nns1:ManEatingRam ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Manananggal ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mandragora ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MandragoraSwarm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mandrill ns1:hasAlignment ns1:trueNeutral .\n\nns1:ManimalTriceratops ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Manitou ns1:hasAlignment ns1:neutralGood .\n\nns1:MannequinRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mannstirge ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MantaRay ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mantari ns1:hasAlignment ns1:neutralEvil .\n\nns1:Mantidrake ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Manu ns1:hasAlignment ns1:lawfulGood .\n\nns1:MaphistalSecondofOrcus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mapinguari ns1:hasAlignment ns1:trueNeutral .\n\nns1:Marai ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Marathoner ns1:hasAlignment ns1:trueNeutral .\n\nns1:MarbleSentinel ns1:hasAlignment ns1:trueNeutral .\n\nns1:MarbleSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:Margay ns1:hasAlignment ns1:trueNeutral .\n\nns1:Margoyle ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MaridGenie ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Marilith ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MarineCrocodile ns1:hasAlignment ns1:trueNeutral .\n\nns1:MarrowstoneGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MarshGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MarshJelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:Marut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:MaskGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MaskedOkkator ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MasterAutomaton ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Mastodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:MatureAdultBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MatureAdultBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MatureAdultForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MatureAdultGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MatureAdultRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MatureAdultRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MatureAdultSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:MatureAdultSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:MatureAdultSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:MatureAdultWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MatureAdultclouddragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:MatureDarkYoung ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MatureSlimeCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:MatureadultUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Mawler ns1:hasAlignment ns1:neutralEvil .\n\nns1:MechanicalViper ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumAcidQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumAetherElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumAirElemental ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MediumAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumBarracuda ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumEarthElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumFireCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumFireElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumGravityElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumIceElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumLightningElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumLightningQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumMagmaElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumMonstrousSeaWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumMudElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumNegativeEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumObsidianQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumPositiveEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumPsionicElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:MediumSlimeMold ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumStingray ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumWaterElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mediumcoldironelemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Medusa ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MedusaAnimusShade ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MedusaHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:Meerkat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Megalania ns1:hasAlignment ns1:trueNeutral .\n\nns1:Megaloceros ns1:hasAlignment ns1:trueNeutral .\n\nns1:MegaponAnt ns1:hasAlignment ns1:trueNeutral .\n\nns1:Megaprimatus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Megaraptor ns1:hasAlignment ns1:trueNeutral .\n\nns1:Megatherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:Melacage ns1:hasAlignment ns1:neutralEvil .\n\nns1:Meladaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:MelancholicOozeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:MemitimPsychopomp ns1:hasAlignment ns1:trueNeutral .\n\nns1:MemoryChild ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mephistopheles ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Mercane ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:MercuryOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Merfolk ns1:hasAlignment ns1:trueNeutral .\n\nns1:MerfolkCavalier ns1:hasAlignment ns1:trueNeutral .\n\nns1:MerfolkCavalierAlurian ns1:hasAlignment ns1:trueNeutral .\n\nns1:MetalSlime ns1:hasAlignment ns1:trueNeutral .\n\nns1:MetallicGorgimera ns1:hasAlignment ns1:trueNeutral .\n\nns1:MetallicOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mezlan ns1:hasAlignment ns1:trueNeutral .\n\nns1:MiGo ns1:hasAlignment ns1:neutralEvil .\n\nns1:MidnightPeddler ns1:hasAlignment ns1:trueNeutral .\n\nns1:MightyCyclops ns1:hasAlignment ns1:neutralEvil .\n\nns1:Mihstu ns1:hasAlignment ns1:neutralEvil .\n\nns1:Mimi ns1:hasAlignment ns1:trueNeutral .\n\nns1:MimicOoze ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MindslaverMold ns1:hasAlignment ns1:neutralEvil .\n\nns1:MindstabFungus ns1:hasAlignment ns1:trueNeutral .\n\nns1:MinorReaper ns1:hasAlignment ns1:neutralEvil .\n\nns1:MinotaurElder ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MireBrute ns1:hasAlignment ns1:neutralEvil .\n\nns1:MireNettle ns1:hasAlignment ns1:trueNeutral .\n\nns1:MirrorSerpent ns1:hasAlignment ns1:trueNeutral .\n\nns1:MissingLynx ns1:hasAlignment ns1:trueNeutral .\n\nns1:MistDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:Mite ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MithralGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MixCouatl ns1:hasAlignment ns1:chaoticGood .\n\nns1:Mnemor ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Mngwa ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Moa ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mobat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mobogo ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mockingfey ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Mogaru ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Mohrg ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MokeleMbembe ns1:hasAlignment ns1:trueNeutral .\n\nns1:Moldwretch ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mole ns1:hasAlignment ns1:trueNeutral .\n\nns1:Moloch ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MomeRath ns1:hasAlignment ns1:trueNeutral .\n\nns1:Monaciello ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MonadicDeva ns1:hasAlignment ns1:neutralGood .\n\nns1:MongrelCaveGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mongrelman ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:MonitorLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Monkey ns1:hasAlignment ns1:trueNeutral .\n\nns1:MonkeyGoblin ns1:hasAlignment ns1:neutralEvil .\n\nns1:MonkeySwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:MonstrousCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:MonstrousJellyfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:MonstrousLobster ns1:hasAlignment ns1:trueNeutral .\n\nns1:Montaphant ns1:hasAlignment ns1:trueNeutral .\n\nns1:MoonBeast ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MoonDog ns1:hasAlignment ns1:neutralGood .\n\nns1:MoonGiant ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:MoonHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Moonbeast ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Moonflower ns1:hasAlignment ns1:trueNeutral .\n\nns1:Moonpriest ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Moose ns1:hasAlignment ns1:trueNeutral .\n\nns1:Morbai ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mordnaissant ns1:hasAlignment ns1:neutralEvil .\n\nns1:Morgodea ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Morlock ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MorlockSwarmerTroop ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Morrigna ns1:hasAlignment ns1:trueNeutral .\n\nns1:MortuaryCyclone ns1:hasAlignment ns1:trueNeutral .\n\nns1:MosaicTileGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MosquitoSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:MossMonster ns1:hasAlignment ns1:neutralEvil .\n\nns1:MossTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mosslord ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MotherofOblivion ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MothersMaw ns1:hasAlignment ns1:neutralEvil .\n\nns1:Mothman ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MountainAurochs ns1:hasAlignment ns1:trueNeutral .\n\nns1:MountainBlight ns1:hasAlignment ns1:neutralEvil .\n\nns1:MountainGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MountainLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:MovanicDeva ns1:hasAlignment ns1:neutralGood .\n\nns1:MuSpore ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Muckdweller ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mudbog ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mudlord ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mudman ns1:hasAlignment ns1:trueNeutral .\n\nns1:Muhuru ns1:hasAlignment ns1:trueNeutral .\n\nns1:Muldnal ns1:hasAlignment ns1:neutralGood .\n\nns1:MultiplyingTRexSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:MummifiedBaboon ns1:hasAlignment ns1:neutralEvil .\n\nns1:MummifiedCrocodile ns1:hasAlignment ns1:trueNeutral .\n\nns1:MummifiedElephant ns1:hasAlignment ns1:trueNeutral .\n\nns1:MummifiedGynosphinx ns1:hasAlignment ns1:neutralEvil .\n\nns1:MummifiedHippopotamus ns1:hasAlignment ns1:neutralEvil .\n\nns1:Mummy ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MummyLord ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MummyOfTheDeep ns1:hasAlignment ns1:neutralEvil .\n\nns1:Munavri ns1:hasAlignment ns1:chaoticGood .\n\nns1:Murajau ns1:hasAlignment ns1:neutralGood .\n\nns1:MurderBorn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MurderCrow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MurderofCrows ns1:hasAlignment ns1:trueNeutral .\n\nns1:Muse ns1:hasAlignment ns1:chaoticGood .\n\nns1:MushroomGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MustardJelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mutah ns1:hasAlignment ns1:trueNeutral .\n\nns1:MutantOrc ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MutantOtyughtentacledMutant ns1:hasAlignment ns1:trueNeutral .\n\nns1:MutatedTurtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:MuteHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mutilated ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Myceloid ns1:hasAlignment ns1:neutralEvil .\n\nns1:MyrmecoleonMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Myrmidon ns1:hasAlignment ns1:trueNeutral .\n\nns1:MythicNelbarzothMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MythicalLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:MythosGhast ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MythosGhoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MythosSatyr ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nabasu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:NabasuDemonling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:NabasuMature ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nachzehrer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nagaji ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Naiad ns1:hasAlignment ns1:neutralGood .\n\nns1:Najikai ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Nalfeshnee ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Narwhal ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nazalor ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:NecroPede ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Necrocraft ns1:hasAlignment ns1:neutralEvil .\n\nns1:NecromancerofLeng ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Necrophidius ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nekomata ns1:hasAlignment ns1:neutralEvil .\n\nns1:NemesisDevilAdvodaza ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Nemhain ns1:hasAlignment ns1:neutralEvil .\n\nns1:Neothelid ns1:hasAlignment ns1:chaoticEvil .\n\nns1:NeothelidOverlord ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Neozecktole ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nependis ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nephilim ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nereid ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:NerizoDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:NessianWarhoundCR ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Netherspark ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ngoga ns1:hasAlignment ns1:trueNeutral .\n\nns1:NightAdderInphidian ns1:hasAlignment ns1:neutralEvil .\n\nns1:NightHag ns1:hasAlignment ns1:neutralEvil .\n\nns1:NightWyvern ns1:hasAlignment ns1:trueNeutral .\n\nns1:NightbringerApe ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nightcaller ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nightcrawler ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nightgaunt ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Nightmare ns1:hasAlignment ns1:neutralEvil .\n\nns1:NightmareArtist ns1:hasAlignment ns1:neutralEvil .\n\nns1:NightmareEttercap ns1:hasAlignment ns1:neutralEvil .\n\nns1:NightmareMount ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nightskitter ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nightwalker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nightwave ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nightwing ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nikaramsa ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Nilith ns1:hasAlignment ns1:neutralEvil .\n\nns1:Niln ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ningen ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ningyo ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nirento ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nisid ns1:hasAlignment ns1:chaoticGood .\n\nns1:Nixie ns1:hasAlignment ns1:trueNeutral .\n\nns1:NobleDjinniVizier ns1:hasAlignment ns1:chaoticGood .\n\nns1:NobleEfreet ns1:hasAlignment ns1:lawfulEvil .\n\nns1:NobleSalamander ns1:hasAlignment ns1:chaoticEvil .\n\nns1:NobleTimeElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nochlean ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nocticula ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nogitsune ns1:hasAlignment ns1:neutralEvil .\n\nns1:NoqualGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Norn ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Nosferatu ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nosoi ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nothosaur ns1:hasAlignment ns1:trueNeutral .\n\nns1:Novenarut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Nuckalavee ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nuckelavee ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nucol ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nue ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nulmind ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nuno ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nupperibo ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Nycar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Nymph ns1:hasAlignment ns1:chaoticGood .\n\nns1:NymphWaterStrider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nyogoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:NysrockDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Oakman ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:OaurOoung ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Obcisidaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Oblivion ns1:hasAlignment ns1:neutralEvil .\n\nns1:ObsidianGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:ObsidianMinotaur ns1:hasAlignment ns1:trueNeutral .\n\nns1:OceanGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OceanLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:Oceanid ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:OchreEurypterid ns1:hasAlignment ns1:trueNeutral .\n\nns1:OchreJelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:OctopodMechanicDrone ns1:hasAlignment ns1:trueNeutral .\n\nns1:Octopus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ofalth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ogre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreBoss ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreBrute ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreDestroyer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreGlutton ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreHunter ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreKing ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreMage ns1:hasAlignment ns1:lawfulEvil .\n\nns1:OgreMancatcher ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgrePriest ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:OgreStalker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgrekinHalfOgre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ogren ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ogrillon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ohancanu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OilShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:OitosKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:OkkatorAssassin ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OldBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OldBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:OldGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:OldRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OldRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:OldSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:OldSilverDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:OldSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:OldSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:OldWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Olethrodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Olethros ns1:hasAlignment ns1:trueNeutral .\n\nns1:Oliphantpp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Olkhia ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ollph\u00e9ist ns1:hasAlignment ns1:trueNeutral .\n\nns1:Oma ns1:hasAlignment ns1:trueNeutral .\n\nns1:Omnipath ns1:hasAlignment ns1:lawfulEvil .\n\nns1:OmoxDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OnwuAzu ns1:hasAlignment ns1:trueNeutral .\n\nns1:OnyxDeer ns1:hasAlignment ns1:trueNeutral .\n\nns1:OnyxScourge ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Oolioddroo ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OozeGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:OozeMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:OozingOtyugh ns1:hasAlignment ns1:trueNeutral .\n\nns1:OphiduanAnguineumCaste ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OphiduanHominisCaste ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OphiduanSemiferumCaste ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OphiotaurusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Orangutan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Orca ns1:hasAlignment ns1:trueNeutral .\n\nns1:OrcishWarclops ns1:hasAlignment ns1:trueNeutral .\n\nns1:OrcusDemonPrinceoftheUndead ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Oread ns1:hasAlignment ns1:trueNeutral .\n\nns1:Orog ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Oronci ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Orsatka ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Orsheval ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Orzar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Oshageros ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Osteon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ostiarius ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ostovite ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ostrich ns1:hasAlignment ns1:trueNeutral .\n\nns1:Othaos ns1:hasAlignment ns1:trueNeutral .\n\nns1:Otyugh ns1:hasAlignment ns1:trueNeutral .\n\nns1:OtyughMeatPuppet ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ourdivar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Ouroboros ns1:hasAlignment ns1:trueNeutral .\n\nns1:OuterAbominationTheSecondStage ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OuterMutantPriest ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:OutlawTroop ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Ovinnik ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Owb ns1:hasAlignment ns1:neutralEvil .\n\nns1:Owl ns1:hasAlignment ns1:trueNeutral .\n\nns1:Owlbear ns1:hasAlignment ns1:trueNeutral .\n\nns1:OwlbearSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:Owlephant ns1:hasAlignment ns1:trueNeutral .\n\nns1:Owlwere ns1:hasAlignment ns1:chaoticEvil .\n\nns1:PISCODAEMON ns1:hasAlignment ns1:neutralEvil .\n\nns1:Pachycephalosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Paguroida ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:PaigoelDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Painajai ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Pairaka ns1:hasAlignment ns1:neutralEvil .\n\nns1:Pakalchi ns1:hasAlignment ns1:neutralEvil .\n\nns1:PaleStranger ns1:hasAlignment ns1:neutralEvil .\n\nns1:PaleoskeletonTriceratops ns1:hasAlignment ns1:trueNeutral .\n\nns1:PallidAngel ns1:hasAlignment ns1:neutralEvil .\n\nns1:Panda ns1:hasAlignment ns1:trueNeutral .\n\nns1:Panotti ns1:hasAlignment ns1:neutralGood .\n\nns1:Papinijuwari ns1:hasAlignment ns1:neutralEvil .\n\nns1:Papinu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Paracletus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Parasaurolophus ns1:hasAlignment ns1:trueNeutral .\n\nns1:ParasiteMystic ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Pard ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Parrot ns1:hasAlignment ns1:trueNeutral .\n\nns1:PashaNobleShaitan ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:PastYithian ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Pavbagha ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Pazuzu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:PazuzuDemonPrinceofAir ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Peafowl ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pech ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pegasus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pelagastr ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:PelagastrProtean ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:PelagosSeaSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Peluda ns1:hasAlignment ns1:neutralEvil .\n\nns1:Pendula ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Pengizu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Penguin ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pepfralcon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Peri ns1:hasAlignment ns1:neutralGood .\n\nns1:PersonificationOfFury ns1:hasAlignment ns1:trueNeutral .\n\nns1:Peryton ns1:hasAlignment ns1:chaoticEvil .\n\nns1:PestDrakeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pestie ns1:hasAlignment ns1:trueNeutral .\n\nns1:PestilenziDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:PetitionerHumanCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Petrifern ns1:hasAlignment ns1:trueNeutral .\n\nns1:PetrifiedMaiden ns1:hasAlignment ns1:neutralEvil .\n\nns1:Petrous ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Peuchen ns1:hasAlignment ns1:neutralEvil .\n\nns1:Phantasm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:PhantomFungus ns1:hasAlignment ns1:trueNeutral .\n\nns1:PhantomLancer ns1:hasAlignment ns1:neutralEvil .\n\nns1:PhantomStalker ns1:hasAlignment ns1:trueNeutral .\n\nns1:PharaonicGuardian ns1:hasAlignment ns1:lawfulEvil .\n\nns1:PhaseFlea ns1:hasAlignment ns1:trueNeutral .\n\nns1:PhaseSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Phasm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Phasma ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Phasmadaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:PhlegmaticOozeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Phlogiston ns1:hasAlignment ns1:trueNeutral .\n\nns1:Phoenix ns1:hasAlignment ns1:neutralGood .\n\nns1:Phooka ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Phoso ns1:hasAlignment ns1:trueNeutral .\n\nns1:PhrenicScourge ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Phycomid ns1:hasAlignment ns1:trueNeutral .\n\nns1:PickledPunk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Pipefox ns1:hasAlignment ns1:trueNeutral .\n\nns1:PiranhaMature ns1:hasAlignment ns1:trueNeutral .\n\nns1:PiranhaSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Piscodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:PitBoar ns1:hasAlignment ns1:trueNeutral .\n\nns1:PitFiend ns1:hasAlignment ns1:lawfulEvil .\n\nns1:PitHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Pixie ns1:hasAlignment ns1:neutralGood .\n\nns1:PixieCircle ns1:hasAlignment ns1:trueNeutral .\n\nns1:PlagueGiant ns1:hasAlignment ns1:neutralEvil .\n\nns1:PlagueLocustSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:PlagueZombie ns1:hasAlignment ns1:trueNeutral .\n\nns1:PlaguebearerOtyugh ns1:hasAlignment ns1:trueNeutral .\n\nns1:PlaguedHorse ns1:hasAlignment ns1:neutralEvil .\n\nns1:Planetar ns1:hasAlignment ns1:neutralGood .\n\nns1:Plankta ns1:hasAlignment ns1:neutralEvil .\n\nns1:PlantImbuedApe ns1:hasAlignment ns1:neutralGood .\n\nns1:Plantoid ns1:hasAlignment ns1:trueNeutral .\n\nns1:PlantoidServitor ns1:hasAlignment ns1:trueNeutral .\n\nns1:PlasmaOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Platypus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pleroma ns1:hasAlignment ns1:trueNeutral .\n\nns1:Plesiosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Plizeazoth ns1:hasAlignment ns1:neutralEvil .\n\nns1:PodCannon ns1:hasAlignment ns1:trueNeutral .\n\nns1:PoisonFrog ns1:hasAlignment ns1:trueNeutral .\n\nns1:PoisonGauntlet ns1:hasAlignment ns1:trueNeutral .\n\nns1:PoisonousFrog ns1:hasAlignment ns1:trueNeutral .\n\nns1:PoisonousFrogSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:PoisonousManticore ns1:hasAlignment ns1:lawfulEvil .\n\nns1:PolarBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:PolarKamadan ns1:hasAlignment ns1:neutralEvil .\n\nns1:PolarWhaler ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:PolarWhalerSimulacrum ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Polevik ns1:hasAlignment ns1:neutralEvil .\n\nns1:Polong ns1:hasAlignment ns1:neutralEvil .\n\nns1:Poltergeist ns1:hasAlignment ns1:lawfulEvil .\n\nns1:PondDrinker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pony ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pooka ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Popobala ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Popoto ns1:hasAlignment ns1:trueNeutral .\n\nns1:PoppyLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:Poracha ns1:hasAlignment ns1:trueNeutral .\n\nns1:Porcupine ns1:hasAlignment ns1:trueNeutral .\n\nns1:PortunusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Possessor ns1:hasAlignment ns1:lawfulEvil .\n\nns1:PranaGhost ns1:hasAlignment ns1:neutralGood .\n\nns1:PreceptorArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:PretenderDevilDissimulare ns1:hasAlignment ns1:lawfulEvil .\n\nns1:PrideLordAgathion ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:PrismDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ProcyalAgathion ns1:hasAlignment ns1:neutralGood .\n\nns1:Proscriber ns1:hasAlignment ns1:trueNeutral .\n\nns1:ProteanKeketar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ProteanNaunet ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ProteanVoidworm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Protector ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ProtoShoggoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Prydanu ns1:hasAlignment ns1:chaoticGood .\n\nns1:Pseudodragon ns1:hasAlignment ns1:neutralGood .\n\nns1:Pseudosphinx ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pseudowyvern ns1:hasAlignment ns1:trueNeutral .\n\nns1:PsionicAlMiraj ns1:hasAlignment ns1:trueNeutral .\n\nns1:Psiwyrm ns1:hasAlignment ns1:neutralEvil .\n\nns1:Psoglav ns1:hasAlignment ns1:chaoticEvil .\n\nns1:PsycheSerpent ns1:hasAlignment ns1:trueNeutral .\n\nns1:Psychemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Psychepore ns1:hasAlignment ns1:trueNeutral .\n\nns1:PsychicStalker ns1:hasAlignment ns1:neutralEvil .\n\nns1:PsychicWard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Psychlown ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Psychofant ns1:hasAlignment ns1:trueNeutral .\n\nns1:PsychoplasmicBehir ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ptarmigan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pteranodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pufferfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:Puffin ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pukwudgie ns1:hasAlignment ns1:neutralEvil .\n\nns1:PumpkinGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:PurpleWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Purrodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:PutridOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:PygmyGnoll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Pyrausta ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Pyrogeist ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Pyrolisk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Qallupilluk ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Qolok ns1:hasAlignment ns1:neutralEvil .\n\nns1:QuantiumGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Quantum ns1:hasAlignment ns1:trueNeutral .\n\nns1:Quasit ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Quatoid ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:QueenThermite ns1:hasAlignment ns1:trueNeutral .\n\nns1:Quelaunt ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Quetzalcoatlus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Quickling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Quickwood ns1:hasAlignment ns1:trueNeutral .\n\nns1:QuintessenceGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Quipper ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rabbit ns1:hasAlignment ns1:trueNeutral .\n\nns1:Raccoon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Racoon ns1:hasAlignment ns1:trueNeutral .\n\nns1:RadiantEssence ns1:hasAlignment ns1:neutralGood .\n\nns1:Raelis ns1:hasAlignment ns1:chaoticGood .\n\nns1:RageDemonAeshma ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RagebornGnoll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ragewight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Raggoth ns1:hasAlignment ns1:neutralEvil .\n\nns1:RagingRubble ns1:hasAlignment ns1:trueNeutral .\n\nns1:Raiju ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:RajputAmbari ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RakasaBatu ns1:hasAlignment ns1:trueNeutral .\n\nns1:RakklethornToad ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rakshasa ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Raktavarna ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ram ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ramidreju ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rast ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rat ns1:hasAlignment ns1:trueNeutral .\n\nns1:RatKing ns1:hasAlignment ns1:trueNeutral .\n\nns1:RatOgre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RatPlagueSwarmMR ns1:hasAlignment ns1:lawfulEvil .\n\nns1:RatSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ratfolk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ratling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RattlerInphidian ns1:hasAlignment ns1:neutralEvil .\n\nns1:RavagerSpawnCrawlerForm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Raven ns1:hasAlignment ns1:trueNeutral .\n\nns1:RavenSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:RavenousGnoll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RavenousTumbleweed ns1:hasAlignment ns1:trueNeutral .\n\nns1:RavenousUrchinSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:RavenousWendigo ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Rawbones ns1:hasAlignment ns1:neutralEvil .\n\nns1:Rawhead ns1:hasAlignment ns1:neutralEvil .\n\nns1:RazorAngler ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:RazorBoar ns1:hasAlignment ns1:trueNeutral .\n\nns1:RazorFern ns1:hasAlignment ns1:trueNeutral .\n\nns1:Razormouth ns1:hasAlignment ns1:trueNeutral .\n\nns1:RecycledGearsman ns1:hasAlignment ns1:trueNeutral .\n\nns1:RedJester ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:RedPanda ns1:hasAlignment ns1:trueNeutral .\n\nns1:RedReaver ns1:hasAlignment ns1:trueNeutral .\n\nns1:RedWraith ns1:hasAlignment ns1:neutralEvil .\n\nns1:RedWyrmRavener ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Redcap ns1:hasAlignment ns1:neutralEvil .\n\nns1:Redkind ns1:hasAlignment ns1:neutralEvil .\n\nns1:Reefclaw ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Reigon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Reindeer ns1:hasAlignment ns1:trueNeutral .\n\nns1:ReliquaryGuardian ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Remacera ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Renzer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RepairRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:Reptial ns1:hasAlignment ns1:neutralGood .\n\nns1:Reptoid ns1:hasAlignment ns1:lawfulEvil .\n\nns1:RequiemBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:RetchHound ns1:hasAlignment ns1:neutralEvil .\n\nns1:Retriever ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Rhamphorhynchus ns1:hasAlignment ns1:trueNeutral .\n\nns1:RhanTegoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Rhinoceros ns1:hasAlignment ns1:trueNeutral .\n\nns1:RhinocerosWoolly ns1:hasAlignment ns1:trueNeutral .\n\nns1:RhuChalik ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RidingDog ns1:hasAlignment ns1:trueNeutral .\n\nns1:RiftFlumph ns1:hasAlignment ns1:chaoticGood .\n\nns1:Riftcreeper ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RimefireEidolon ns1:hasAlignment ns1:chaoticGood .\n\nns1:Ringhorn ns1:hasAlignment ns1:trueNeutral .\n\nns1:Riotblood ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RipperDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RiptideHorror ns1:hasAlignment ns1:lawfulEvil .\n\nns1:RisenWitch ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RishiManu ns1:hasAlignment ns1:lawfulGood .\n\nns1:RiverDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:RiverElk ns1:hasAlignment ns1:trueNeutral .\n\nns1:RiverGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RiverTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RiverswellSpirit ns1:hasAlignment ns1:neutralEvil .\n\nns1:RobotGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Roc ns1:hasAlignment ns1:trueNeutral .\n\nns1:RockCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:RockReptile ns1:hasAlignment ns1:trueNeutral .\n\nns1:RockTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RockTuatara ns1:hasAlignment ns1:trueNeutral .\n\nns1:RoilingOil ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rokurokubi ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Rokyamut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Ronus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Roofgarden ns1:hasAlignment ns1:trueNeutral .\n\nns1:RopeDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:RopeGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Roper ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Rorkoun ns1:hasAlignment ns1:neutralEvil .\n\nns1:Roseling ns1:hasAlignment ns1:neutralGood .\n\nns1:RotGrubSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rougarou ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:RoyalTimeElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rufidier ns1:hasAlignment ns1:neutralEvil .\n\nns1:Rukh ns1:hasAlignment ns1:trueNeutral .\n\nns1:RuneGiant ns1:hasAlignment ns1:lawfulEvil .\n\nns1:RuneGuardian ns1:hasAlignment ns1:trueNeutral .\n\nns1:RunewarpedGoblin ns1:hasAlignment ns1:neutralEvil .\n\nns1:Rusalka ns1:hasAlignment ns1:neutralEvil .\n\nns1:RussetMold ns1:hasAlignment ns1:trueNeutral .\n\nns1:RustLord ns1:hasAlignment ns1:trueNeutral .\n\nns1:RustMiteSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:RustMonster ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ryven ns1:hasAlignment ns1:trueNeutral .\n\nns1:SANDGIANT ns1:hasAlignment ns1:neutralEvil .\n\nns1:SabbatPrancer ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Sabosan ns1:hasAlignment ns1:neutralEvil .\n\nns1:Sacristan ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Sagari ns1:hasAlignment ns1:neutralEvil .\n\nns1:Saguaroi ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sahuagin ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Salamander ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SaltDrake ns1:hasAlignment ns1:trueNeutral .\n\nns1:SaltMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:SaltWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:SaltwaterCrocodile ns1:hasAlignment ns1:trueNeutral .\n\nns1:SaltwaterMerrow ns1:hasAlignment ns1:neutralEvil .\n\nns1:Samsaran ns1:hasAlignment ns1:trueNeutral .\n\nns1:SandGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:SandHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SandKraken ns1:hasAlignment ns1:trueNeutral .\n\nns1:SandScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:SandStalker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sandling ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sandman ns1:hasAlignment ns1:neutralEvil .\n\nns1:Sangoi ns1:hasAlignment ns1:neutralEvil .\n\nns1:Sangudaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:SanguineOozeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:SapphireJellyfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:SapphireOoze ns1:hasAlignment ns1:chaoticGood .\n\nns1:Sarcovalt ns1:hasAlignment ns1:neutralEvil .\n\nns1:Sard ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SargassumFiend ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sasquatch ns1:hasAlignment ns1:trueNeutral .\n\nns1:Satyr ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SaumenKar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Saurian ns1:hasAlignment ns1:trueNeutral .\n\nns1:SavageGreenHorde ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SawdustSlough ns1:hasAlignment ns1:trueNeutral .\n\nns1:SawlegLocust ns1:hasAlignment ns1:trueNeutral .\n\nns1:Saxra ns1:hasAlignment ns1:neutralEvil .\n\nns1:Sayona ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ScaldingMinotaur ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ScarabBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScarabSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Scarecrow ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScarletSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScarletSpiderSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScarletWalker ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ScavengerWormCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sceaduinar ns1:hasAlignment ns1:neutralEvil .\n\nns1:Sceazir ns1:hasAlignment ns1:neutralEvil .\n\nns1:Schir ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Scitalis ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScorpionDemonGharros ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ScorpionSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Scorpionfolk ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ScragAquaticTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Scraghound ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScrapyardRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScreamingDevilkin ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ScreamingGiantBeheadedCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:ScreamingMedusaHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:ScreamingSeveredHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:ScreamingSeveredSkull ns1:hasAlignment ns1:neutralEvil .\n\nns1:ScreamingSkull ns1:hasAlignment ns1:trueNeutral .\n\nns1:Scylla ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ScytheHorn ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScytheTree ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SeaCat ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:SeaGiant ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SeaHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SeaLinnorm ns1:hasAlignment ns1:neutralEvil .\n\nns1:SeaLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaScourge ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaSerpent ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaSphereBlubble ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaSpider ns1:hasAlignment ns1:neutralEvil .\n\nns1:Seal ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaweedLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaweedSiren ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SecurityMannequin ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Seilenos ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Selkie ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SentientWaxGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:SentinelHut ns1:hasAlignment ns1:trueNeutral .\n\nns1:SepiaSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sepid ns1:hasAlignment ns1:neutralEvil .\n\nns1:Seps ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sepsidaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Seraptis ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SerpentAlchemist ns1:hasAlignment ns1:neutralEvil .\n\nns1:SerpentDemonMallor ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Serpentfolk ns1:hasAlignment ns1:neutralEvil .\n\nns1:SerpentfolkReclaimer ns1:hasAlignment ns1:neutralEvil .\n\nns1:Serpopard ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ServitoroftheOuterGods ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Seugathi ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SeugathiSavant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SewerBlight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SewerOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:SewerTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Sha ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Shabti ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ShachathDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Shadow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShadowAngel ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ShadowAnimalLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShadowCollector ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ShadowDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShadowDrake ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShadowFern ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShadowGiant ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ShadowHunter ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShadowHunterHatchling ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShadowMastiff ns1:hasAlignment ns1:neutralEvil .\n\nns1:ShadowRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShadowRatSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:ShadowRoper ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShadowWolf ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Shae ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShaggyDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShahzadaNobleMarid ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Shalkeshka ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShamblingMound ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shampe ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Shantak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShardSlag ns1:hasAlignment ns1:trueNeutral .\n\nns1:SharkEatingCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:SharpshooterAutomaton ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Shasalqu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shedu ns1:hasAlignment ns1:lawfulGood .\n\nns1:Sheep ns1:hasAlignment ns1:trueNeutral .\n\nns1:SheetFungus ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShemhazianDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShenMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shenzuzhou ns1:hasAlignment ns1:neutralEvil .\n\nns1:Shikigami ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShimmerwingDragonfly ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shinigami ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ShiningSentinel ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShipSentinel ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShipbreakerSeaSerpent ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ShipinaBottle ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShipwreckerCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shira ns1:hasAlignment ns1:neutralEvil .\n\nns1:Shobhad ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShockerLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shoggoth ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Shoggti ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShokiPsychopomp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shotalashu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shredskin ns1:hasAlignment ns1:neutralEvil .\n\nns1:Shrieker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shriezyx ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShrineBlessedBurningSkeletons ns1:hasAlignment ns1:neutralEvil .\n\nns1:Shrroth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Shulsaga ns1:hasAlignment ns1:trueNeutral .\n\nns1:Siabrae ns1:hasAlignment ns1:neutralEvil .\n\nns1:SiegeOwlbear ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sigbin ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Silid ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Silvanshee ns1:hasAlignment ns1:neutralGood .\n\nns1:SilverBells ns1:hasAlignment ns1:trueNeutral .\n\nns1:SilverDragonGreatWyrm ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonJuvenile ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonMatureAdult ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonVeryOld ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonVeryYoung ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonWyrm ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonWyrmling ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonYoungAdult ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverbloodWerewolfHumanForm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Simurgh ns1:hasAlignment ns1:neutralGood .\n\nns1:SinSeeker ns1:hasAlignment ns1:trueNeutral .\n\nns1:SinbornDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SingingShrieker ns1:hasAlignment ns1:trueNeutral .\n\nns1:SinspawnEnvy ns1:hasAlignment ns1:neutralEvil .\n\nns1:SinspawnGluttony ns1:hasAlignment ns1:neutralEvil .\n\nns1:SinspawnGreedspawn ns1:hasAlignment ns1:neutralEvil .\n\nns1:SinspawnPride ns1:hasAlignment ns1:neutralEvil .\n\nns1:SinspawnSloth ns1:hasAlignment ns1:neutralEvil .\n\nns1:SinspawnWrath ns1:hasAlignment ns1:neutralEvil .\n\nns1:SireDevilPatraavex ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Siren ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SirensBedAnemone ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sirrush ns1:hasAlignment ns1:neutralGood .\n\nns1:Sishkanset ns1:hasAlignment ns1:neutralEvil .\n\nns1:Siyokoy ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkateSpiderSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Skaveling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SkeletalArcher ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkeletalChampion ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkeletalChampionArcherCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkeletalMage ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkeletalMount ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkeletonHostCorpse ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkeletonReindeer ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkildpadderGiantTortoiseBullette ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkinStealer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SkinStitcher ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Skincrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkincrawlerDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Skinstitch ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkirmishersTroop ns1:hasAlignment ns1:chaoticGood .\n\nns1:SkitterRat ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Skitterdark ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Skittergoat ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkrikNettle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Skrimsl ns1:hasAlignment ns1:trueNeutral .\n\nns1:Skua ns1:hasAlignment ns1:trueNeutral .\n\nns1:Skulk ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SkullRipper ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SkullSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkullSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:Skullcruncher ns1:hasAlignment ns1:neutralEvil .\n\nns1:Skulleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkumUlatKini ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Skunk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Skvader ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkyDreamer ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlaadLordOfEntropy ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SlaadLordOfTheInsane ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SlagGiant ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:SlagWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Slaughterford ns1:hasAlignment ns1:neutralEvil .\n\nns1:SleepingWillow ns1:hasAlignment ns1:neutralEvil .\n\nns1:SleeykOwlbear ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sleipnir ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlicerBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlimeDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SlimeInfectedBasilisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlimeMold ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlimyDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SlimyHagfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:Slinker ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SlitheringPit ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlitheringTracker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Slorath ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Sloth ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlothSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlothViper ns1:hasAlignment ns1:trueNeutral .\n\nns1:Slugspawn ns1:hasAlignment ns1:trueNeutral .\n\nns1:Slurk ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallAcidQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallAetherElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallAirElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallBarracuda ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallColdironelemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallEarthElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallFireCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallFireElemental ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SmallGravityElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallIceElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallLightningElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallLightningQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallMagmaElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallMonstrousSeaWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallMudElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallNegativeenergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallObsidianQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallPositiveEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallPsionicElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallStingray ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallUnfetteredEidolon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SmallWaterElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmilodonSaberToothedCat ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmokeDragonDracoFumoSuffaco ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmokeGiant ns1:hasAlignment ns1:neutralEvil .\n\nns1:SmokeMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmokeSentinel ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Smokeshade ns1:hasAlignment ns1:neutralEvil .\n\nns1:SnailFlail ns1:hasAlignment ns1:trueNeutral .\n\nns1:SnakeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Snallygaster ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SnapdragonLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:SnapjawHomunculus ns1:hasAlignment ns1:neutralEvil .\n\nns1:SnappingTurtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Snark ns1:hasAlignment ns1:trueNeutral .\n\nns1:SnowGiant ns1:hasAlignment ns1:neutralEvil .\n\nns1:SnowLeopard ns1:hasAlignment ns1:trueNeutral .\n\nns1:SnowRoc ns1:hasAlignment ns1:trueNeutral .\n\nns1:Snowcloak ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Snowking ns1:hasAlignment ns1:neutralEvil .\n\nns1:SoddenDraugerTroop ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SoddenDraugrTroop ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Solar ns1:hasAlignment ns1:neutralGood .\n\nns1:SolarPitriAgnishvattaMR ns1:hasAlignment ns1:lawfulGood .\n\nns1:SoldierThermite ns1:hasAlignment ns1:trueNeutral .\n\nns1:Somalcygot ns1:hasAlignment ns1:neutralEvil .\n\nns1:Somlum ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SonechardGeneralofOrcus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SonicKratah ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Soucouyant ns1:hasAlignment ns1:neutralEvil .\n\nns1:SoulEater ns1:hasAlignment ns1:neutralEvil .\n\nns1:SoulNibbler ns1:hasAlignment ns1:trueNeutral .\n\nns1:SoulReaper ns1:hasAlignment ns1:neutralEvil .\n\nns1:SoulboundAnnihilatorRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:SoulboundDoll ns1:hasAlignment ns1:trueNeutral .\n\nns1:SoulboundMannequin ns1:hasAlignment ns1:trueNeutral .\n\nns1:SoulboundShell ns1:hasAlignment ns1:trueNeutral .\n\nns1:SoullessDestroyer ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Soulsliver ns1:hasAlignment ns1:neutralEvil .\n\nns1:Spartolos ns1:hasAlignment ns1:neutralEvil .\n\nns1:SpawningCanker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SpawnofYogSothoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SpearUrchin ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpectralRockTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Spectre ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SpellgorgedZombie ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpellscarredFext ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SphinxColossusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpiderCollective ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpiderEater ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpiderSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpikestoneGuardian ns1:hasAlignment ns1:trueNeutral .\n\nns1:Spindler ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SpineDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Spinosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpinyEurypterid ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpinyStarfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpireDrake ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SpiritOni ns1:hasAlignment ns1:neutralEvil .\n\nns1:SpiritofAbandon ns1:hasAlignment ns1:neutralGood .\n\nns1:SpiteSpitter ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SpittingCobra ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpittingEurypterid ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpittingSeaSerpent ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SplinterDrake ns1:hasAlignment ns1:trueNeutral .\n\nns1:SporeRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Spriggan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SpringHeeledJack ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Sprite ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SpyglassArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:SquamousDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Squealer ns1:hasAlignment ns1:trueNeutral .\n\nns1:Squid ns1:hasAlignment ns1:trueNeutral .\n\nns1:SquidGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:Squirrel ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stag ns1:hasAlignment ns1:trueNeutral .\n\nns1:StagArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:StalkBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:StalkerAutomaton ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:StandardShieldWarden ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:StarDrake ns1:hasAlignment ns1:trueNeutral .\n\nns1:StarMonarch ns1:hasAlignment ns1:chaoticGood .\n\nns1:StarSpawnofCthulhu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:StarVampire ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Starspawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SteamBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:SteamMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:SteamPoweredClockworkDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stegaloviper ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stegocentipede ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stegosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:StenchKow ns1:hasAlignment ns1:trueNeutral .\n\nns1:StewardOfTheSkein ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sthenno ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Stingray ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stirge ns1:hasAlignment ns1:trueNeutral .\n\nns1:StirgeDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:StirgeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneColossusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneGuardianGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneMaiden ns1:hasAlignment ns1:trueNeutral .\n\nns1:StonePudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneRoper ns1:hasAlignment ns1:chaoticEvil .\n\nns1:StoneSalveshapedFiendishEnhancedBlackPudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneTreant ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneTroglodyte ns1:hasAlignment ns1:chaoticEvil .\n\nns1:StormGiant ns1:hasAlignment ns1:chaoticGood .\n\nns1:StormGiantZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:StormHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Stormghost ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Stormwarden ns1:hasAlignment ns1:neutralEvil .\n\nns1:StrangleWeed ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stranglereed ns1:hasAlignment ns1:trueNeutral .\n\nns1:StringyDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Strix ns1:hasAlignment ns1:trueNeutral .\n\nns1:StrokeLad ns1:hasAlignment ns1:neutralEvil .\n\nns1:StumbleFish ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stunjelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:StygianLeviathan ns1:hasAlignment ns1:neutralEvil .\n\nns1:StygianTurtleShark ns1:hasAlignment ns1:neutralEvil .\n\nns1:Stygira ns1:hasAlignment ns1:lawfulEvil .\n\nns1:StymphalianBird ns1:hasAlignment ns1:trueNeutral .\n\nns1:StymphalidesSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stymphalidies ns1:hasAlignment ns1:trueNeutral .\n\nns1:Styracosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Su ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Succubus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Sudoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Suffragan ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SuijinKami ns1:hasAlignment ns1:trueNeutral .\n\nns1:Suli ns1:hasAlignment ns1:trueNeutral .\n\nns1:SummonedAurochs ns1:hasAlignment ns1:trueNeutral .\n\nns1:SummonedGorilla ns1:hasAlignment ns1:trueNeutral .\n\nns1:SummonedWolf ns1:hasAlignment ns1:trueNeutral .\n\nns1:SumpSteward ns1:hasAlignment ns1:trueNeutral .\n\nns1:SunGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SunflowerLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sunlord ns1:hasAlignment ns1:neutralGood .\n\nns1:Suspiridaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:SutureVine ns1:hasAlignment ns1:trueNeutral .\n\nns1:Suzalisk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Svartalfar ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Svirfneblin ns1:hasAlignment ns1:trueNeutral .\n\nns1:SvirfneblinRidingSlug ns1:hasAlignment ns1:neutralGood .\n\nns1:Swaithe ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SwampBarracuda ns1:hasAlignment ns1:trueNeutral .\n\nns1:SwampBlight ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SwampMummy ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SwampTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SwanMaiden ns1:hasAlignment ns1:chaoticGood .\n\nns1:SwarmDemonDaraka ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SwitchbackJackal ns1:hasAlignment ns1:trueNeutral .\n\nns1:Swordfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sylph ns1:hasAlignment ns1:trueNeutral .\n\nns1:Synesis ns1:hasAlignment ns1:trueNeutral .\n\nns1:Synevite ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Syricta ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Syrinx ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Szaboan ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Szuriel ns1:hasAlignment ns1:neutralEvil .\n\nns1:TShann ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tabaxi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Tadhemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Taer ns1:hasAlignment ns1:trueNeutral .\n\nns1:TaigaGiant ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TaigaLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TailessCragLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TallowGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tangtal ns1:hasAlignment ns1:neutralEvil .\n\nns1:Taniniver ns1:hasAlignment ns1:neutralEvil .\n\nns1:Taniwha ns1:hasAlignment ns1:chaoticGood .\n\nns1:Tanuki ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TarJelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:TarantulaTree ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Targotha ns1:hasAlignment ns1:trueNeutral .\n\nns1:TarnLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TarrasqueB ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TarryDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TarryDemodandCR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tarsier ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tataka ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Tatzlwyrm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tauhoti ns1:hasAlignment ns1:trueNeutral .\n\nns1:TaviMongooseFolk ns1:hasAlignment ns1:trueNeutral .\n\nns1:TawilAtumr ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TaxidermicGrizzlyBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tazelwurm ns1:hasAlignment ns1:trueNeutral .\n\nns1:TchoTcho ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tearjerker ns1:hasAlignment ns1:trueNeutral .\n\nns1:TearofBurningFlame ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Telgrodradt ns1:hasAlignment ns1:neutralEvil .\n\nns1:Temerdaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:TempestBehemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:TemporalCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tendriculos ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tendrul ns1:hasAlignment ns1:trueNeutral .\n\nns1:TenebrousBlight ns1:hasAlignment ns1:trueNeutral .\n\nns1:TenebrousPurpleWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:TenebrousWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tengu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tenome ns1:hasAlignment ns1:neutralEvil .\n\nns1:TentacledHorror ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tentamort ns1:hasAlignment ns1:trueNeutral .\n\nns1:TermagantKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:TermiteSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:TerracottaArcher ns1:hasAlignment ns1:trueNeutral .\n\nns1:TerracottaHorseman ns1:hasAlignment ns1:trueNeutral .\n\nns1:TerracottaSoldier ns1:hasAlignment ns1:trueNeutral .\n\nns1:Terraformer ns1:hasAlignment ns1:trueNeutral .\n\nns1:TerrorBird ns1:hasAlignment ns1:trueNeutral .\n\nns1:TerrorWolf ns1:hasAlignment ns1:neutralEvil .\n\nns1:Terrorized ns1:hasAlignment ns1:neutralEvil .\n\nns1:TestudoTroops ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Tether ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Tetrolimulus ns1:hasAlignment ns1:neutralEvil .\n\nns1:ThalassicBehemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thanadaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:ThanatosFey ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ThanatoticTitan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Thancrus ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Thawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheBlackRider ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:TheDesire ns1:hasAlignment ns1:neutralEvil .\n\nns1:TheEndSinger ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheFatherofAllLinnorms ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheFirebleeder ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheFirstBlade ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TheFuriesErinyes ns1:hasAlignment ns1:lawfulEvil .\n\nns1:TheGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:TheGrandDefender ns1:hasAlignment ns1:lawfulGood .\n\nns1:TheGrimWhiteStag ns1:hasAlignment ns1:lawfulGood .\n\nns1:TheHeraldofPassion ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TheHobblingHookClawedApparatus ns1:hasAlignment ns1:trueNeutral .\n\nns1:TheHornedLord ns1:hasAlignment ns1:chaoticGood .\n\nns1:TheInfernalDuke ns1:hasAlignment ns1:lawfulEvil .\n\nns1:TheMantisGod ns1:hasAlignment ns1:lawfulEvil .\n\nns1:TheOinodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:TheOldMan ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ThePrinceinChains ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ThePrinceofHell ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheRavagerCrawlerForm ns1:hasAlignment ns1:trueNeutral .\n\nns1:TheRedRider ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:TheScarecrow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheSpiritOfAdoration ns1:hasAlignment ns1:neutralGood .\n\nns1:TheStabbingBeast ns1:hasAlignment ns1:neutralEvil .\n\nns1:TheSunlord ns1:hasAlignment ns1:neutralGood .\n\nns1:TheThirdStageOuterSpawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheWaterLizard ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TheWhiteRider ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Theletos ns1:hasAlignment ns1:trueNeutral .\n\nns1:Therizinosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thessalgorgon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thessalhydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thessalisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThinMan ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Thognorok ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Thoqqua ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThornDog ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thorny ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThornyAdvancedTyrannosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThoughtEater ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThrallofYogSothoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Thrasfyr ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ThriaeConstructor ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThriaeDancer ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ThriaeQueen ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ThriaeSeer ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ThriaeSoldier ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Thrush ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thulgant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ThunderBeast ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThunderBehemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thunderbird ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thundershrike ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thuskchoon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Thylacine ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thyrlien ns1:hasAlignment ns1:chaoticGood .\n\nns1:Tiberolith ns1:hasAlignment ns1:trueNeutral .\n\nns1:TickSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:TidepoolDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Tidewretch ns1:hasAlignment ns1:neutralEvil .\n\nns1:Tiger ns1:hasAlignment ns1:trueNeutral .\n\nns1:TigerFish ns1:hasAlignment ns1:trueNeutral .\n\nns1:TigerShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tigrilla ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tikbalang ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tilket ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TimberWight ns1:hasAlignment ns1:lawfulEvil .\n\nns1:TimeFlayer ns1:hasAlignment ns1:neutralEvil .\n\nns1:Tintargurill ns1:hasAlignment ns1:trueNeutral .\n\nns1:TinyAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:TinyMonstrousSeaWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:TitanCentipedeExoskeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:Titanboar ns1:hasAlignment ns1:trueNeutral .\n\nns1:TitanicAdultBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TitanicWhipSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Titanoboa ns1:hasAlignment ns1:trueNeutral .\n\nns1:Titivilus ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Tixitog ns1:hasAlignment ns1:neutralEvil .\n\nns1:Tiyanak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tizheruk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tlalusk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Toad ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tobongo ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tojanida ns1:hasAlignment ns1:trueNeutral .\n\nns1:TombGiant ns1:hasAlignment ns1:neutralEvil .\n\nns1:TombstoneFairy ns1:hasAlignment ns1:neutralEvil .\n\nns1:TomeofHorrors ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tonberry ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ToothFairy ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ToothFairyMonarch ns1:hasAlignment ns1:neutralEvil .\n\nns1:Tophet ns1:hasAlignment ns1:trueNeutral .\n\nns1:TorLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TormentorofSoulsTormentorDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:TorturerRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:Toshigami ns1:hasAlignment ns1:neutralGood .\n\nns1:TotemGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Totenmaske ns1:hasAlignment ns1:neutralEvil .\n\nns1:Trailgaunt ns1:hasAlignment ns1:neutralEvil .\n\nns1:Transposer ns1:hasAlignment ns1:trueNeutral .\n\nns1:Trapper ns1:hasAlignment ns1:trueNeutral .\n\nns1:Treant ns1:hasAlignment ns1:neutralGood .\n\nns1:Trelmarixian ns1:hasAlignment ns1:neutralEvil .\n\nns1:TrenchMist ns1:hasAlignment ns1:neutralEvil .\n\nns1:TriFlowerFrond ns1:hasAlignment ns1:trueNeutral .\n\nns1:TriTongueHorror ns1:hasAlignment ns1:trueNeutral .\n\nns1:Triaxian ns1:hasAlignment ns1:trueNeutral .\n\nns1:TribalProtector ns1:hasAlignment ns1:neutralGood .\n\nns1:Triceratops ns1:hasAlignment ns1:trueNeutral .\n\nns1:Trilobite ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tripurasura ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Triton ns1:hasAlignment ns1:neutralGood .\n\nns1:Troblin ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Troggle ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TroggleRaider ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Troglodyte ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Troll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollAcolyte ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollBerserker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollBrute ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollElderMatron ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollFury ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollMonarch ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollMountain ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TrollRender ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollRipper ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:TrollWarden ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Trollhound ns1:hasAlignment ns1:trueNeutral .\n\nns1:Trollkin ns1:hasAlignment ns1:trueNeutral .\n\nns1:Troodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Trox ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TrumpetArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:TrumpeterSwan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tsaalgrend ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tsathar ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TsatharScourge ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TsathoggaTheFrogGod ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tuatara ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tullimonstrum ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tumblespark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tunche ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TunnelBrute ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TunnelWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tupilaq ns1:hasAlignment ns1:trueNeutral .\n\nns1:Turtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Turul ns1:hasAlignment ns1:trueNeutral .\n\nns1:Twigjack ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TwilightPitriBarhisad ns1:hasAlignment ns1:lawfulGood .\n\nns1:TwoHeadedTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TwoheadedWinterWorg ns1:hasAlignment ns1:neutralEvil .\n\nns1:Tychilarius ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tylosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tyngderkraften ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Tyrannosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:TyrantJellyMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tzitzimitl ns1:hasAlignment ns1:neutralEvil .\n\nns1:UbashkiSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ubue ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:UdaeusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:UgashIram ns1:hasAlignment ns1:neutralEvil .\n\nns1:Uintatherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:Uinuja ns1:hasAlignment ns1:chaoticGood .\n\nns1:Ujaheim ns1:hasAlignment ns1:trueNeutral .\n\nns1:Uldraaghu ns1:hasAlignment ns1:lawfulEvil .\n\nns1:UltharChampion ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:UltimaWeapon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:UmbralDragonGreatWyrm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonJuvenile ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonMatureAdult ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonOld ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonVeryOld ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonVeryYoung ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonWyrm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonWyrmling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonYoungAdult ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralEyeKiller ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralShepherd ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Umbralobe ns1:hasAlignment ns1:neutralEvil .\n\nns1:UnchosenGnoll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UndeadEmu ns1:hasAlignment ns1:neutralEvil .\n\nns1:UndeadNingyo ns1:hasAlignment ns1:neutralEvil .\n\nns1:UndeadOoze ns1:hasAlignment ns1:neutralEvil .\n\nns1:UndeadWarlord ns1:hasAlignment ns1:trueNeutral .\n\nns1:UnderworldBatSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Undigested ns1:hasAlignment ns1:neutralEvil .\n\nns1:UndigestedSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:Undine ns1:hasAlignment ns1:trueNeutral .\n\nns1:UnfetteredEidolon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:UnfetteredPhantom ns1:hasAlignment ns1:trueNeutral .\n\nns1:UnhallowedGreaterShadow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UnhallowedMohrg ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UnhallowedMummy ns1:hasAlignment ns1:lawfulEvil .\n\nns1:UnhallowedZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Unicorn ns1:hasAlignment ns1:chaoticGood .\n\nns1:Uniila ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Unrisen ns1:hasAlignment ns1:neutralEvil .\n\nns1:UnseelieShadowMastiff ns1:hasAlignment ns1:neutralEvil .\n\nns1:Upasunda ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Uraeus ns1:hasAlignment ns1:lawfulGood .\n\nns1:Urannag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Urdefhan ns1:hasAlignment ns1:neutralEvil .\n\nns1:Urhag ns1:hasAlignment ns1:neutralEvil .\n\nns1:Urrk ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ursikka ns1:hasAlignment ns1:trueNeutral .\n\nns1:Urskan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ushabti ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Utukku ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Valharut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Valkyrie ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Vamore ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Vampire ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VampireRose ns1:hasAlignment ns1:trueNeutral .\n\nns1:VampireSpawn ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VampireSquid ns1:hasAlignment ns1:trueNeutral .\n\nns1:VampiricMist ns1:hasAlignment ns1:neutralEvil .\n\nns1:VampiricOoze ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vanara ns1:hasAlignment ns1:lawfulGood .\n\nns1:Vanth ns1:hasAlignment ns1:trueNeutral .\n\nns1:VaporDireRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:VaporWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vargouille ns1:hasAlignment ns1:neutralEvil .\n\nns1:VariantAllip ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VariantAtticWhisperer ns1:hasAlignment ns1:trueNeutral .\n\nns1:Varklops ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VaultBuilderMR ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:VaultGiant ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VaultKeeper ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Vavakia ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vayuphak ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ved ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vegepygmy ns1:hasAlignment ns1:trueNeutral .\n\nns1:VegepygmyBodyguard ns1:hasAlignment ns1:trueNeutral .\n\nns1:VegepygmyChief ns1:hasAlignment ns1:trueNeutral .\n\nns1:VegepygmyCommoner ns1:hasAlignment ns1:trueNeutral .\n\nns1:VegepygmyGuard ns1:hasAlignment ns1:trueNeutral .\n\nns1:VegepygmySubchief ns1:hasAlignment ns1:trueNeutral .\n\nns1:VegepygmyWorker ns1:hasAlignment ns1:trueNeutral .\n\nns1:VeiledMaster ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Veinar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Veldenar ns1:hasAlignment ns1:trueNeutral .\n\nns1:Velociraptor ns1:hasAlignment ns1:trueNeutral .\n\nns1:VelvetAntSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vemerak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vendenopterix ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Venedaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:VenomDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VenomousSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:VenomousSnakeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Venomroach ns1:hasAlignment ns1:trueNeutral .\n\nns1:VeparDukeofDagon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Veranallia ns1:hasAlignment ns1:chaoticGood .\n\nns1:VeranalliaAzata ns1:hasAlignment ns1:chaoticGood .\n\nns1:VerdurousOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:VerminLord ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vermlek ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryOldBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryOldBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VeryOldCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:VeryOldGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VeryOldRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryOldRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:VeryOldSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:VeryOldSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:VeryOldWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryYoungBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryYoungBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VeryYoungForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryYoungGoldDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:VeryYoungGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VeryYoungRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryYoungRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:VeryYoungSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:VeryYoungSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:VeryYoungSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:VeryYoungUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VeryYoungWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryoldForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryoldSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:VescavorQueen ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vespergaunt ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vestraadi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Vidre ns1:hasAlignment ns1:trueNeutral .\n\nns1:ViduusPsychopomp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vilderavn ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vilkacis ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vilsteth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vilstrak ns1:hasAlignment ns1:neutralEvil .\n\nns1:VioletFungus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Viper ns1:hasAlignment ns1:trueNeutral .\n\nns1:ViperVine ns1:hasAlignment ns1:trueNeutral .\n\nns1:ViridiumGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vishap ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vishkanya ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vodyanoi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:VoidYai ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VoidZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:VoidstickZombie ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VolcanoGiant ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Volt ns1:hasAlignment ns1:trueNeutral .\n\nns1:VoltGhost ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Voltleech ns1:hasAlignment ns1:neutralEvil .\n\nns1:Voonith ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Vorgozen ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Vorin ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vorvorak ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vouivre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vrock ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vrolikai ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vrykolakas ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vukodlak ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vulchling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vulnudaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vulpinal ns1:hasAlignment ns1:neutralGood .\n\nns1:Vulture ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vvor ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vydrarch ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Wakandagi ns1:hasAlignment ns1:neutralGood .\n\nns1:Wallaby ns1:hasAlignment ns1:trueNeutral .\n\nns1:Walrus ns1:hasAlignment ns1:trueNeutral .\n\nns1:WandWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:WangLiang ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WarBringerGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WarBull ns1:hasAlignment ns1:trueNeutral .\n\nns1:WarPony ns1:hasAlignment ns1:trueNeutral .\n\nns1:Warcat ns1:hasAlignment ns1:trueNeutral .\n\nns1:WardenJackSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:WarmazeDisciplesTroop ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Warmonger ns1:hasAlignment ns1:trueNeutral .\n\nns1:WarmongerDevilLevaloch ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WarmongerWasp ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WarpedOne ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WarpglassOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Warsworn ns1:hasAlignment ns1:neutralEvil .\n\nns1:WaspDemonMezzalorn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WaspSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Waspite ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Watcher ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:WaterElementalConstruct ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaterLeaper ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WaterMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaterOrm ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaterStriderSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaterVeela ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaterWeird ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WaterWraith ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WaterWysp ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaterYai ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Waterfiend ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WaxGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaxworkHuman ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wayang ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Weasel ns1:hasAlignment ns1:trueNeutral .\n\nns1:Weedwhip ns1:hasAlignment ns1:trueNeutral .\n\nns1:WellLurker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wendigo ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WerebatHumanForm ns1:hasAlignment ns1:neutralEvil .\n\nns1:WereboarHumanForm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WerecrocodileHumanForm ns1:hasAlignment ns1:neutralEvil .\n\nns1:WeremantisHumanForm ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WereraptorHumanForm ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:WereraptorHybridForm ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:WereratHumanForm ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WeresharkHumanForm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WerespiderHumanForm ns1:hasAlignment ns1:neutralEvil .\n\nns1:WeretigerHumanForm ns1:hasAlignment ns1:neutralEvil .\n\nns1:WerewaspElfForm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WerewolfHumanFormCR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Whale ns1:hasAlignment ns1:trueNeutral .\n\nns1:WhalerJellyfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:WhipJelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:WhiptailDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Whirlmaw ns1:hasAlignment ns1:trueNeutral .\n\nns1:WhisperVulture ns1:hasAlignment ns1:trueNeutral .\n\nns1:Whisperer ns1:hasAlignment ns1:neutralEvil .\n\nns1:WhisperscaleHunter ns1:hasAlignment ns1:neutralEvil .\n\nns1:WhitePudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:Whyrlish ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wickerman ns1:hasAlignment ns1:trueNeutral .\n\nns1:WidowCreeper ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wight ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WightAdultRedDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WightMinotaur ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WightMonk ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Wihsaak ns1:hasAlignment ns1:neutralEvil .\n\nns1:Wikkawak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WildDreamImpCompanion ns1:hasAlignment ns1:neutralGood .\n\nns1:WildDreamImpHero ns1:hasAlignment ns1:neutralGood .\n\nns1:WildHuntArcher ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WildHuntHorse ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WildHuntHound ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WildHuntMonarch ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WildHuntScout ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WilloWisp ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WillowDusk ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WindWalker ns1:hasAlignment ns1:trueNeutral .\n\nns1:WindWalkerWendigo ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WindYai ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Winterwight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Wisagatcak ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WitchDollGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:WitchTree ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Witchcrow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Witchfire ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Witherstench ns1:hasAlignment ns1:trueNeutral .\n\nns1:Witherweed ns1:hasAlignment ns1:trueNeutral .\n\nns1:WizardsShackle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Woghemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wolf ns1:hasAlignment ns1:trueNeutral .\n\nns1:WolfInSheepsClothing ns1:hasAlignment ns1:trueNeutral .\n\nns1:WolfSpider ns1:hasAlignment ns1:neutralEvil .\n\nns1:WolfinSheepsClothing ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wolliped ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wolpertinger ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wolverine ns1:hasAlignment ns1:trueNeutral .\n\nns1:WoodColossusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:WoodGiant ns1:hasAlignment ns1:chaoticGood .\n\nns1:WoodGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Woodwose ns1:hasAlignment ns1:neutralEvil .\n\nns1:WoollyRhinoceros ns1:hasAlignment ns1:trueNeutral .\n\nns1:Worg ns1:hasAlignment ns1:neutralEvil .\n\nns1:WorkWraith ns1:hasAlignment ns1:neutralEvil .\n\nns1:WorkerThermite ns1:hasAlignment ns1:trueNeutral .\n\nns1:WorldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WormThatWalksHuman ns1:hasAlignment ns1:neutralEvil .\n\nns1:WormthatWalksLocustVariant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Woundwyrm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Wrackworm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Wraith ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WrathBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:WrathDragonDracoSanctusBenevolentia ns1:hasAlignment ns1:neutralGood .\n\nns1:WrathplatedClockworkMage ns1:hasAlignment ns1:trueNeutral .\n\nns1:WyrmBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WyrmForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WyrmRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WyrmSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:WyrmSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:WyrmWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmlingBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmlingBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WyrmlingForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmlingGoldDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:WyrmlingGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WyrmlingRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmlingRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WyrmlingSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:WyrmlingSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:WyrmlingSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:WyrmlingUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WyrmlingWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Wyrmwraith ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Wyrwood ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wyvaran ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Wyvern ns1:hasAlignment ns1:trueNeutral .\n\nns1:Xacarba ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Xanthos ns1:hasAlignment ns1:trueNeutral .\n\nns1:Xaphan ns1:hasAlignment ns1:lawfulEvil .\n\nns1:XenarthIchorShark ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Xenopterid ns1:hasAlignment ns1:trueNeutral .\n\nns1:Xiao ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Xill ns1:hasAlignment ns1:lawfulEvil .\n\nns1:XillMatriarch ns1:hasAlignment ns1:lawfulEvil .\n\nns1:XillixLesserNelbarzoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ximtal ns1:hasAlignment ns1:neutralEvil .\n\nns1:XiuhCouatl ns1:hasAlignment ns1:neutralGood .\n\nns1:Xocothian ns1:hasAlignment ns1:trueNeutral .\n\nns1:Xocouatl ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Xorn ns1:hasAlignment ns1:trueNeutral .\n\nns1:Xtabay ns1:hasAlignment ns1:trueNeutral .\n\nns1:Xulgath ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Yaddithian ns1:hasAlignment ns1:trueNeutral .\n\nns1:Yaenit ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YamabushiTengu ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Yamah ns1:hasAlignment ns1:chaoticGood .\n\nns1:Yamaraj ns1:hasAlignment ns1:trueNeutral .\n\nns1:Yangethe ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Yaoguai ns1:hasAlignment ns1:trueNeutral .\n\nns1:Yarthoon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:YellowMuskCreeper ns1:hasAlignment ns1:trueNeutral .\n\nns1:YellowMuskZombie ns1:hasAlignment ns1:trueNeutral .\n\nns1:YethHound ns1:hasAlignment ns1:neutralEvil .\n\nns1:Yeti ns1:hasAlignment ns1:trueNeutral .\n\nns1:Yhohm ns1:hasAlignment ns1:neutralGood .\n\nns1:Yig ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Yithian ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:YithianElder ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Ymir ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Yothga ns1:hasAlignment ns1:neutralEvil .\n\nns1:YoungAdultBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungAdultBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:YoungAdultGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:YoungAdultRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungAdultRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:YoungAdultSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:YoungAdultSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:YoungAdultSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungAdultWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungApocalypseDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:YoungAstralDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungBlissDragon ns1:hasAlignment ns1:neutralGood .\n\nns1:YoungBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:YoungBrassDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:YoungCaveDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:YoungCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungCopperDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:YoungCrystalDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:YoungDreamDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungEdictDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:YoungEthericDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungGoldDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:YoungGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:YoungLunarDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:YoungMagmaDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:YoungMistDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungNightmareDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:YoungOccultDragon ns1:hasAlignment ns1:neutralGood .\n\nns1:YoungRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:YoungSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:YoungSilverDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:YoungSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:YoungSolarDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:YoungSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungTimeDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungUmbralDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:YoungVoidDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:YoungVortexDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:YoungWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungadultForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ypotryll ns1:hasAlignment ns1:trueNeutral .\n\nns1:Yrthak ns1:hasAlignment ns1:trueNeutral .\n\nns1:Yukionna ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Yurei ns1:hasAlignment ns1:neutralEvil .\n\nns1:Zalyakavat ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Zaramuun ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Zarxorin ns1:hasAlignment ns1:trueNeutral .\n\nns1:ZealotWraith ns1:hasAlignment ns1:neutralEvil .\n\nns1:Zelekhut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Zentragt ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Zeuglodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ZhenWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Zhyen ns1:hasAlignment ns1:trueNeutral .\n\nns1:Zohanil ns1:hasAlignment ns1:neutralEvil .\n\nns1:Zolavoi ns1:hasAlignment ns1:trueNeutral .\n\nns1:Zombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:ZombieHandservant ns1:hasAlignment ns1:neutralEvil .\n\nns1:ZombieHillGiant ns1:hasAlignment ns1:neutralEvil .\n\nns1:ZombieHorde ns1:hasAlignment ns1:neutralEvil .\n\nns1:ZombieWolf ns1:hasAlignment ns1:neutralEvil .\n\nns1:Zomok ns1:hasAlignment ns1:trueNeutral .\n\nns1:Zoog ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Zuishin ns1:hasAlignment ns1:lawfulGood .\n\nns1:Zuvembie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Zvucni ns1:hasAlignment ns1:neutralGood .\n\nns1:Zwerc ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:aasimar ns1:hasAlignment ns1:neutralGood .\n\nns1:caypup ns1:hasAlignment ns1:chaoticGood .\n\nns1:earthElementalHero ns1:hasAlignment ns1:trueNeutral .\n\nns1:greatwyrmSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:hangedman ns1:hasAlignment ns1:chaoticEvil .\n\nns1:headedPyrohydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:helixmothmature ns1:hasAlignment ns1:trueNeutral .\n\nns1:heraldoftsathogga ns1:hasAlignment ns1:chaoticEvil .\n\nns1:hoarfox ns1:hasAlignment ns1:trueNeutral .\n\nns1:juvenileCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:oldForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:oldUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:oldclouddragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:theFirebleeder ns1:hasAlignment ns1:chaoticEvil .\n\nns1:theMonarchWorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:veryYoungCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:veryoldUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:witchwyrd ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:wyrmSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:wyrmUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:wyrmclouddragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:wyrmlingCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:youngAdultCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:youngadultUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "subgraph",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:05.829114",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:43:08.721075",
        "Please generate a SPARQL query for the given RDF graph and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what is the most common alignment type\n\ngraph:\n```turtle\nl...```"
      ],
      [
        "response",
        "2024-05-13T13:43:10.817647",
        "```sparql\nSELECT ?alignmentType (COUNT(?alignmentType) as ?count)\nWHERE {\n  ?activity ns1:hasAlignment ?alignment .\n  ?alignment ns1:alignmentType ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1\n```"
      ],
      [
        "prompt",
        "2024-05-13T13:43:11.021829",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T13:43:12.709420",
        "```sparql\nSELECT ?alignmentType (COUNT(?alignmentType) as ?count)\nWHERE {\n  ?activity ns1:hasAlignment ?alignment .\n  ?alignment ns1:alignmentType ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(COUNT(?alignmentType))\nLIMIT 1\n```"
      ],
      [
        "prompt",
        "2024-05-13T13:43:12.913650",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T13:43:14.550180",
        "```sparql\nSELECT ?alignmentType (COUNT(?alignmentType) as ?count)\nWHERE {\n  ?s ns1:hasAlignment ?o .\n  ?o ns1:alignmentType ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:43:26.250115",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubgraph",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 703,
      "actualSize": 604
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,4 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ns1:cold\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:aasimar"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,4 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ns1:cold\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:aasimar"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary019",
      "question": "what creatures do have cold resist",
      "refSparql": "SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }",
      "refResultSet": [
        "ns1:aasimar"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:aasimar ns1:hasResists ns1:cold .\n\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "subgraph",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:01.506465",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:43:26.250124",
        "Please generate a SPARQL query for the given RDF graph and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what creatures do have cold resist\n\ngraph:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:aasimar ns1:hasResists ns1:cold .\n\n```"
      ],
      [
        "response",
        "2024-05-13T13:43:27.756580",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:43:39.162614",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubgraph",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 799,
      "actualSize": 636
    },
    "scores": {},
    "info": {},
    "taskData": {
      "uid": "beastiary001",
      "question": "which creatures not speaking draconic language do have chaotic good alignment",
      "refSparql": "SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }",
      "refResultSet": [
        "ns1:Anhana",
        "ns1:Ataxian",
        "ns1:Azruverda",
        "ns1:BattleImp",
        "ns1:Biofreezer",
        "ns1:BlackButterfly",
        "ns1:Cayhound",
        "ns1:Caypup",
        "ns1:Celedeen",
        "ns1:Cynosoma",
        "ns1:Djinni",
        "ns1:Domovoi",
        "ns1:Dryad",
        "ns1:ElysianTitan",
        "ns1:Faun",
        "ns1:FungalNymph",
        "ns1:Gancanagh",
        "ns1:Garuda",
        "ns1:Hamadryad",
        "ns1:HeraldofDreams",
        "ns1:Munavri",
        "ns1:Muse",
        "ns1:Nisid",
        "ns1:NobleDjinniVizier",
        "ns1:Nymph",
        "ns1:RiftFlumph",
        "ns1:RimefireEidolon",
        "ns1:SapphireOoze",
        "ns1:SkirmishersTroop",
        "ns1:StarMonarch",
        "ns1:SwanMaiden",
        "ns1:Taniwha",
        "ns1:Unicorn",
        "ns1:WoodGiant",
        "ns1:caypup"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:AdultBrassDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AdultCopperDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AdultCrystalDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AdultSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AncientBrassDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AncientCopperDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AncientCrystalDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AncientSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Androsphinx ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Anhana ns1:hasAlignment ns1:chaoticGood .\n\nns1:Ataxian ns1:hasAlignment ns1:chaoticGood .\n\nns1:AuwazCouatl ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Azruverda ns1:hasAlignment ns1:chaoticGood .\n\nns1:BattleImp ns1:hasAlignment ns1:chaoticGood .\n\nns1:Biofreezer ns1:hasAlignment ns1:chaoticGood .\n\nns1:BlackButterfly ns1:hasAlignment ns1:chaoticGood .\n\nns1:Bralani ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonGreatWyrm ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonJuvenile ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonMatureAdult ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonOld ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonVeryOld ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonVeryYoung ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonWyrm ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonWyrmling ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonYoungAdult ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Brijidine ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Cayhound ns1:hasAlignment ns1:chaoticGood .\n\nns1:Caypup ns1:hasAlignment ns1:chaoticGood .\n\nns1:Celedeen ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonGreatWyrm ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonJuvenile ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonMatureAdult ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonOld ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonVeryOld ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonVeryYoung ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonWyrm ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonWyrmling ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonYoungAdult ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonGreatWyrm ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonJuvenile ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonMatureAdult ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonOld ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonVeryOld ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonVeryYoung ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonWyrm ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonWyrmling ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonYoungAdult ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Cynosoma ns1:hasAlignment ns1:chaoticGood .\n\nns1:Djinni ns1:hasAlignment ns1:chaoticGood .\n\nns1:Domovoi ns1:hasAlignment ns1:chaoticGood .\n\nns1:Dryad ns1:hasAlignment ns1:chaoticGood .\n\nns1:ElysianTitan ns1:hasAlignment ns1:chaoticGood .\n\nns1:FaerieDragonDracoFraudatioMinimus ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Faeriedragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Faun ns1:hasAlignment ns1:chaoticGood .\n\nns1:FungalNymph ns1:hasAlignment ns1:chaoticGood .\n\nns1:Gancanagh ns1:hasAlignment ns1:chaoticGood .\n\nns1:Garuda ns1:hasAlignment ns1:chaoticGood .\n\nns1:Hamadryad ns1:hasAlignment ns1:chaoticGood .\n\nns1:HeraldofDreams ns1:hasAlignment ns1:chaoticGood .\n\nns1:HeraldofFreedom ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:HeraldofFreedomandJustice ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:JuvenileSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:MatureAdultSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:MixCouatl ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Munavri ns1:hasAlignment ns1:chaoticGood .\n\nns1:Muse ns1:hasAlignment ns1:chaoticGood .\n\nns1:Nisid ns1:hasAlignment ns1:chaoticGood .\n\nns1:NobleDjinniVizier ns1:hasAlignment ns1:chaoticGood .\n\nns1:Nymph ns1:hasAlignment ns1:chaoticGood .\n\nns1:OldSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Prydanu ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Raelis ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:RiftFlumph ns1:hasAlignment ns1:chaoticGood .\n\nns1:RimefireEidolon ns1:hasAlignment ns1:chaoticGood .\n\nns1:SapphireOoze ns1:hasAlignment ns1:chaoticGood .\n\nns1:SkirmishersTroop ns1:hasAlignment ns1:chaoticGood .\n\nns1:StarMonarch ns1:hasAlignment ns1:chaoticGood .\n\nns1:StormGiant ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:SwanMaiden ns1:hasAlignment ns1:chaoticGood .\n\nns1:Taniwha ns1:hasAlignment ns1:chaoticGood .\n\nns1:TheHornedLord ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Thyrlien ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Uinuja ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Unicorn ns1:hasAlignment ns1:chaoticGood .\n\nns1:Veranallia ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:VeranalliaAzata ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:VeryYoungSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:VeryoldSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:WoodGiant ns1:hasAlignment ns1:chaoticGood .\n\nns1:WyrmlingSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Yamah ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:YoungAdultSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:YoungBrassDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:YoungCopperDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:YoungCrystalDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:YoungSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:caypup ns1:hasAlignment ns1:chaoticGood .\n\nns1:greatwyrmSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:wyrmSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "subgraph",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:02.130995",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:43:39.162629",
        "Please generate a SPARQL query for the given RDF graph and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:which creatures not speaking draconic language do have chaotic good alignment\n\ngraph:\n```turtle\nn...```"
      ],
      [
        "response",
        "2024-05-13T13:43:41.293609",
        "```sparql\nPREFIX : <http://example.org/>\nSELECT ?creature\nWHERE {\n  ?creature a :Creature ;\n           :alignment :ChaoticGood .\n  MINUS { ?creature :language \"Draconic\" . }\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:43:52.085089",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubgraph",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 1470,
      "actualSize": 978
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) as ?count)\nWHERE {\n    ?creature ns1:hasLanguages ns1:TreantL ;\n             ns1:hasAlignment ?alignment .\n    FILTER(?alignment != ns1:trueNeutral)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) as ?count)\n+WHERE {\n+    ?creature ns1:hasLanguages ns1:TreantL ;\n+             ns1:hasAlignment ?alignment .\n+    FILTER(?alignment != ns1:trueNeutral)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 0.6666666666666666,
        "sparqlIrisF1measure": 0.8,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 0.6666666666666666,
        "sparqlIrisSuffixF1measure": 0.8,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "4"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) as ?count)\nWHERE {\n    ?creature ns1:hasLanguages ns1:TreantL ;\n             ns1:hasAlignment ?alignment .\n    FILTER(?alignment != ns1:trueNeutral)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) as ?count)\n+WHERE {\n+    ?creature ns1:hasLanguages ns1:TreantL ;\n+             ns1:hasAlignment ?alignment .\n+    FILTER(?alignment != ns1:trueNeutral)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 0.6666666666666666,
        "sparqlIrisF1measure": 0.8,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 0.6666666666666666,
        "sparqlIrisSuffixF1measure": 0.8,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "4"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary005",
      "question": "how many creatures with non-neutral alignment do speak treant language",
      "refSparql": "SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }",
      "refResultSet": [
        "4"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:ArcticDruid ns1:hasLanguages ns1:TreantL .\n\nns1:Goemul ns1:hasLanguages ns1:TreantL .\n\nns1:ScytheTree ns1:hasLanguages ns1:TreantL .\n\nns1:Tobongo ns1:hasAlignment ns1:trueNeutral ;\n    ns1:hasLanguages ns1:TreantL .\n\nns1:Treant ns1:hasLanguages ns1:TreantL .\n\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "subgraph",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:01.973727",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:43:52.085097",
        "Please generate a SPARQL query for the given RDF graph and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:how many creatures with non-neutral alignment do speak treant language\n\ngraph:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:ArcticDruid ns1:hasLanguages ns1:TreantL .\n\nns1:Goemul ns1:hasLanguages ns1:TreantL .\n\nns1:ScytheTree ns1:hasLanguages ns1:TreantL .\n\nns1:Tobongo ns1:hasAlignment ns1:trueNeutral ;\n    ns1:hasLanguages ns1:TreantL .\n\nns1:Treant ns1:hasLanguages ns1:TreantL .\n\n```"
      ],
      [
        "response",
        "2024-05-13T13:43:54.058816",
        "```sparql\nSELECT (COUNT(?creature) as ?count)\nWHERE {\n    ?creature ns1:hasLanguages ns1:TreantL ;\n             ns1:hasAlignment ?alignment .\n    FILTER(?alignment != ns1:trueNeutral)\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:44:06.322877",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubgraph",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 1116,
      "actualSize": 904
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ns1:aasimar ns1:canSpell ?spell .\n  ns1:caypup ns1:canSpell ?spell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ns1:aasimar ns1:canSpell ?spell .\n+  ns1:caypup ns1:canSpell ?spell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:stabilize"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ns1:aasimar ns1:canSpell ?spell .\n  ns1:caypup ns1:canSpell ?spell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ns1:aasimar ns1:canSpell ?spell .\n+  ns1:caypup ns1:canSpell ?spell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:stabilize"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary007",
      "question": "what spells Aasimar and Caypup do have in common",
      "refSparql": "SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }",
      "refResultSet": [
        "ns1:stabilize"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:aasimar ns1:canSpell ns1:bless,\n        ns1:command,\n        ns1:daylight,\n        ns1:detectMagic,\n        ns1:guidance,\n        ns1:protectionFromEvil,\n        ns1:stabilize .\n\nns1:caypup ns1:canSpell ns1:dimensionDoor,\n        ns1:knock,\n        ns1:openClose,\n        ns1:stabilize .\n\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "subgraph",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:02.034510",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:44:06.322884",
        "Please generate a SPARQL query for the given RDF graph and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what spells Aasimar and Caypup do have in common\n\ngraph:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:aasimar ns1:canSpell ns1:bless,\n        ns1:command,\n        ns1:daylight,\n        ns1:detectMagic,\n        ns1:guidance,\n        ns1:protectionFromEvil,\n        ns1:stabilize .\n\nns1:caypup ns1:canSpell ns1:dimensionDoor,\n        ns1:knock,\n        ns1:openClose,\n        ns1:stabilize .\n\n```"
      ],
      [
        "response",
        "2024-05-13T13:44:08.357387",
        "```sparql\nSELECT ?spell\nWHERE {\n  ns1:aasimar ns1:canSpell ?spell .\n  ns1:caypup ns1:canSpell ?spell .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:44:20.961515",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubgraph",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 579,
      "actualSize": 1150
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignmentType (COUNT(?alignmentType) AS ?count)\nWHERE {\n   ?x ns1:alignmentType ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignmentType (COUNT(?alignmentType) AS ?count)\n+WHERE {\n+   ?x ns1:alignmentType ?alignmentType .\n+}\n+GROUP BY ?alignmentType\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignmentType (COUNT(?alignmentType) AS ?count)\nWHERE {\n   ?x ns1:alignmentType ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignmentType (COUNT(?alignmentType) AS ?count)\n+WHERE {\n+   ?x ns1:alignmentType ?alignmentType .\n+}\n+GROUP BY ?alignmentType\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignmentType (COUNT(?alignmentType) AS ?count)\nWHERE {\n   ?x ns1:alignmentType ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignmentType (COUNT(?alignmentType) AS ?count)\n+WHERE {\n+   ?x ns1:alignmentType ?alignmentType .\n+}\n+GROUP BY ?alignmentType\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignmentType (COUNT(?alignmentType) AS ?count)\nWHERE {\n   ?x ns1:alignmentType ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignmentType (COUNT(?alignmentType) AS ?count)\n+WHERE {\n+   ?x ns1:alignmentType ?alignmentType .\n+}\n+GROUP BY ?alignmentType\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary011",
      "question": "what is the most common alignment type",
      "refSparql": "SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1",
      "refResultSet": [
        "ns1:trueNeutral"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1: ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aasimar ns1:hasAlignment ns1:neutralGood .\n\nns1:Aatheriexa ns1:hasAlignment ns1:neutralEvil .\n\nns1:Abaia ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aballonian ns1:hasAlignment ns1:trueNeutral .\n\nns1:AbandonedArmory ns1:hasAlignment ns1:neutralEvil .\n\nns1:AbasheenGenie ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aberrant ns1:hasAlignment ns1:neutralEvil .\n\nns1:Abhominal ns1:hasAlignment ns1:neutralEvil .\n\nns1:Aboleth ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Abrikandilu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AbyssGigas ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AbyssalBasilisk ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AbyssalCustodian ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AbyssalHarvester ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AbyssalLarva ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AbyssalWolf ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AccompliceDevilHesperian ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AccuserDevilZebub ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Achaierai ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AcidNaga ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AdamantineCobra ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdamantineGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdamantineWaspSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdaptiveOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Adaro ns1:hasAlignment ns1:neutralEvil .\n\nns1:Addanc ns1:hasAlignment ns1:neutralEvil .\n\nns1:AddictionDevilAtropocustra ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Addu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Adherer ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Adhukait ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Adlet ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AdolescentDarkYoung ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdultApocalypseDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdultAstralDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdultBlissDragon ns1:hasAlignment ns1:neutralGood .\n\nns1:AdultBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AdultBrassDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AdultBronzeDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:AdultCaveDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdultCloudDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AdultCopperDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AdultCrystalDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AdultDarkYoung ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdultDreamDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultEdictDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AdultEthericDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdultGoldDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:AdultGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AdultLunarDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AdultMagmaDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AdultMistDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultMithralDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultNightmareDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdultOccultDragon ns1:hasAlignment ns1:neutralGood .\n\nns1:AdultRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdultRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AdultSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AdultSilverDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:AdultSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:AdultSolarDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AdultSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultTimeDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultUmbralDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdultUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AdultVoidDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdultVortexDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AdultWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedAnimateDream ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedBulette ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedDraugr ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedEttercap ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedFrostWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedGiantFlytrap ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedGiantScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedHangmanTree ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedHorse ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedInvisibleStalker ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedLengSpider ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedLeukodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedLightningTreantppCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedMegaraptorSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedMummy ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedNightmare ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedNightwing ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedOgre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedTroglodyte ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedUnhallowedBodak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedUnhallowedTotenmaske ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedWoodGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aequoreal ns1:hasAlignment ns1:neutralGood .\n\nns1:AerialServant ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aerialservant ns1:hasAlignment ns1:trueNeutral .\n\nns1:AetherWysp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Afanc ns1:hasAlignment ns1:neutralEvil .\n\nns1:Aghash ns1:hasAlignment ns1:neutralEvil .\n\nns1:Aghasura ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Agnoia ns1:hasAlignment ns1:trueNeutral .\n\nns1:Agogwe ns1:hasAlignment ns1:trueNeutral .\n\nns1:Agorth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Agrawgh ns1:hasAlignment ns1:trueNeutral .\n\nns1:Agyra ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Ahkhat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ahlinni ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Ahmuuth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ahool ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ahooling ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ahuizotl ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ailuro ns1:hasAlignment ns1:trueNeutral .\n\nns1:AirElementalConstruct ns1:hasAlignment ns1:trueNeutral .\n\nns1:AirMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:AirShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:AirVeela ns1:hasAlignment ns1:trueNeutral .\n\nns1:AirWysp ns1:hasAlignment ns1:trueNeutral .\n\nns1:AirsuitSymbiontCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:AizskartzAsteroid ns1:hasAlignment ns1:neutralEvil .\n\nns1:Akaname ns1:hasAlignment ns1:trueNeutral .\n\nns1:Akaruzug ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Akata ns1:hasAlignment ns1:trueNeutral .\n\nns1:Akhana ns1:hasAlignment ns1:trueNeutral .\n\nns1:Akhlut ns1:hasAlignment ns1:trueNeutral .\n\nns1:Akizendri ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Akvan ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ala ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Alastor ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AlbinoCaveSolifugid ns1:hasAlignment ns1:trueNeutral .\n\nns1:AlbinoCaveSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:AlchemicAmoeba ns1:hasAlignment ns1:trueNeutral .\n\nns1:AlchemicalGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Algea ns1:hasAlignment ns1:trueNeutral .\n\nns1:Algoid ns1:hasAlignment ns1:trueNeutral .\n\nns1:Alligator ns1:hasAlignment ns1:trueNeutral .\n\nns1:Allip ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Allosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Almiraj ns1:hasAlignment ns1:trueNeutral .\n\nns1:Alp ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Alpluachra ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Alraune ns1:hasAlignment ns1:neutralEvil .\n\nns1:Alseid ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AluDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Aluum ns1:hasAlignment ns1:trueNeutral .\n\nns1:AmaimonDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Amalgamation ns1:hasAlignment ns1:trueNeutral .\n\nns1:Amanusya ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Amargasaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Amarok ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AmberOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ambergrim ns1:hasAlignment ns1:trueNeutral .\n\nns1:AmoebaSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Amon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Amphiptere ns1:hasAlignment ns1:trueNeutral .\n\nns1:Amphisbaena ns1:hasAlignment ns1:trueNeutral .\n\nns1:AmphisbaenaBasilisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:AmphisbaenaEncephalonGorger ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AncestralDragonTurtle ns1:hasAlignment ns1:neutralGood .\n\nns1:AncestralGorgon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientApocalypseDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AncientAstralDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AncientBlissDragon ns1:hasAlignment ns1:neutralGood .\n\nns1:AncientBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AncientBlueDragonRavener ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AncientBrassDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AncientCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientCopperDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AncientCrystalDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AncientDreamDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientEdictDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AncientEthericDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AncientGoldDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:AncientGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AncientGreenDragonRavener ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AncientLunarDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AncientMagmaDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AncientMistDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientMithralDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientNightmareDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AncientOccultDragon ns1:hasAlignment ns1:neutralGood .\n\nns1:AncientRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AncientRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AncientSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AncientSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:AncientSolarDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AncientSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientTimeDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientUmbralDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AncientUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AncientVoidDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AncientVortexDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AncientWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Andrenjinyi ns1:hasAlignment ns1:trueNeutral .\n\nns1:Android ns1:hasAlignment ns1:trueNeutral .\n\nns1:Androsphinx ns1:hasAlignment ns1:chaoticGood .\n\nns1:Anemos ns1:hasAlignment ns1:trueNeutral .\n\nns1:AngelicGuardian ns1:hasAlignment ns1:trueNeutral .\n\nns1:Anghenfil ns1:hasAlignment ns1:trueNeutral .\n\nns1:AngheuvoreMortic ns1:hasAlignment ns1:neutralEvil .\n\nns1:AngustidenShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Anhana ns1:hasAlignment ns1:chaoticGood .\n\nns1:AnimateAria ns1:hasAlignment ns1:trueNeutral .\n\nns1:AnimateDream ns1:hasAlignment ns1:neutralEvil .\n\nns1:AnimateHair ns1:hasAlignment ns1:neutralEvil .\n\nns1:AnimatedJackOLantern ns1:hasAlignment ns1:trueNeutral .\n\nns1:AnimatedManacles ns1:hasAlignment ns1:trueNeutral .\n\nns1:AnimatedShrineStone ns1:hasAlignment ns1:trueNeutral .\n\nns1:AnimatedStraitjacket ns1:hasAlignment ns1:trueNeutral .\n\nns1:Anisydaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ankheg ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ankhrav ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ankou ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ankylosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Annihilator ns1:hasAlignment ns1:trueNeutral .\n\nns1:AnnisHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AnnisHagAlterEgo ns1:hasAlignment ns1:trueNeutral .\n\nns1:AntLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:Antelope ns1:hasAlignment ns1:trueNeutral .\n\nns1:AnunnakiMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aoandon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Apallie ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aphorite ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ApkalluMR ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ApocalypseHorse ns1:hasAlignment ns1:neutralEvil .\n\nns1:ApocalypseLocustMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ApocalypseZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Apollyon ns1:hasAlignment ns1:neutralEvil .\n\nns1:ApostasyWraith ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ApostateDevilDeimavigga ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ApostleKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Apparition ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Aptom ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AquaticWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Arach ns1:hasAlignment ns1:neutralEvil .\n\nns1:ArachnidRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aranea ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aravax ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Arbiter ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Arcadex ns1:hasAlignment ns1:neutralEvil .\n\nns1:Arcanoplasm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Arcanotheign ns1:hasAlignment ns1:trueNeutral .\n\nns1:Archaeopteryx ns1:hasAlignment ns1:trueNeutral .\n\nns1:Archelon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArcherBush ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArcherfishGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArchonShield ns1:hasAlignment ns1:lawfulGood .\n\nns1:ArchonStar ns1:hasAlignment ns1:lawfulGood .\n\nns1:ArcticDruid ns1:hasAlignment ns1:neutralEvil .\n\nns1:ArcticHare ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArcticTern ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArgentWarden ns1:hasAlignment ns1:lawfulGood .\n\nns1:Argorth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ArgorthCinderscourge ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ArgusMR ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Armadillo ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArmoredClayGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArmoredOgreSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:ArmyAntSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Arrowhawk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Arsinoitherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:Asakku ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ascomoid ns1:hasAlignment ns1:trueNeutral .\n\nns1:AshGiant ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AshHag ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Asp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Asrai ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AssassinRingSymbiont ns1:hasAlignment ns1:trueNeutral .\n\nns1:AssassinVine ns1:hasAlignment ns1:trueNeutral .\n\nns1:Asswere ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Astradaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AstralDeva ns1:hasAlignment ns1:neutralGood .\n\nns1:AstralLeviathan ns1:hasAlignment ns1:trueNeutral .\n\nns1:AstralShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Asurendra ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AtamahutaOni ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ataxian ns1:hasAlignment ns1:chaoticGood .\n\nns1:Athach ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Atomie ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AtticWhisperer ns1:hasAlignment ns1:neutralEvil .\n\nns1:Atuikakura ns1:hasAlignment ns1:trueNeutral .\n\nns1:Augnagar ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AugurKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Aurochs ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aurosrath ns1:hasAlignment ns1:neutralEvil .\n\nns1:Aurspeily ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Aurumvorax ns1:hasAlignment ns1:trueNeutral .\n\nns1:AutomataDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AutumnDeath ns1:hasAlignment ns1:neutralEvil .\n\nns1:AuwazCouatl ns1:hasAlignment ns1:chaoticGood .\n\nns1:Avatarana ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AvatarofAlkumuoto ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Avoral ns1:hasAlignment ns1:neutralGood .\n\nns1:AwakenedDemilich ns1:hasAlignment ns1:neutralEvil .\n\nns1:AxeBeak ns1:hasAlignment ns1:trueNeutral .\n\nns1:AxialMonitor ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Axiomite ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AxiomiteGraveknight ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Azer ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AzizouPainDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Azruverda ns1:hasAlignment ns1:chaoticGood .\n\nns1:Azuretzi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BLOODHAWK ns1:hasAlignment ns1:trueNeutral .\n\nns1:Baal ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Baalzebul ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BaaphelDukeofHell ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Babau ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Babbler ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Baboon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bacallia ns1:hasAlignment ns1:trueNeutral .\n\nns1:Baccae ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BadWolfMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Badger ns1:hasAlignment ns1:trueNeutral .\n\nns1:Baetriov ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Bagiennik ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Bakekujira ns1:hasAlignment ns1:neutralEvil .\n\nns1:Baku ns1:hasAlignment ns1:trueNeutral .\n\nns1:BakuDreamweaver ns1:hasAlignment ns1:trueNeutral .\n\nns1:Balisse ns1:hasAlignment ns1:neutralGood .\n\nns1:BalisseAngel ns1:hasAlignment ns1:neutralGood .\n\nns1:Balor ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BalorLord ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Baluchitherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:Banderlog ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bandersnatch ns1:hasAlignment ns1:trueNeutral .\n\nns1:Banelight ns1:hasAlignment ns1:neutralEvil .\n\nns1:Banshee ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BaobhanSith ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Baphomet ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BaphometDemonLordofBeasts ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Barbatos ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BarbedDevilHamatula ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BarbedRam ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarbtonguedWyvern ns1:hasAlignment ns1:neutralEvil .\n\nns1:Baregara ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Barghest ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Baric ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarizouAssassinDemonCR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Barometz ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarracudaLarge ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarracudaMedium ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarracudaSmall ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarrierBreakerTroop ns1:hasAlignment ns1:neutralEvil .\n\nns1:BarrowRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarrowWight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Basidirond ns1:hasAlignment ns1:trueNeutral .\n\nns1:Basilisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Basilosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:BastionArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:BatMobat ns1:hasAlignment ns1:trueNeutral .\n\nns1:BatPlagueSwarmMR ns1:hasAlignment ns1:neutralEvil .\n\nns1:BatSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:BattleEmu ns1:hasAlignment ns1:trueNeutral .\n\nns1:BattleImp ns1:hasAlignment ns1:chaoticGood .\n\nns1:Baykok ns1:hasAlignment ns1:neutralEvil .\n\nns1:BeardedDevilBarbazu ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BeastDemonChaaor ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BeastDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:BeastmasterTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Bebilith ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Bedlam ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BeeMan ns1:hasAlignment ns1:neutralEvil .\n\nns1:BeetleGiantStag ns1:hasAlignment ns1:trueNeutral .\n\nns1:BegedhiParasite ns1:hasAlignment ns1:neutralEvil .\n\nns1:Beheaded ns1:hasAlignment ns1:neutralEvil .\n\nns1:BehemothGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:BehemothHippopotamus ns1:hasAlignment ns1:trueNeutral .\n\nns1:BehemothPudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:Behimiron ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Behir ns1:hasAlignment ns1:trueNeutral .\n\nns1:BeingofIb ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Belabra ns1:hasAlignment ns1:trueNeutral .\n\nns1:BelchingGiantBeheadedCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:BelchingMedusaHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:BelchingSeveredHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:Belial ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BelierDevilBdellavritra ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Belker ns1:hasAlignment ns1:neutralEvil .\n\nns1:BellyborerBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Belostomatid ns1:hasAlignment ns1:trueNeutral .\n\nns1:BeluiriTheTemptress ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Berbalang ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Bezravnis ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Bhole ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BholeHatchling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Bhuta ns1:hasAlignment ns1:neutralEvil .\n\nns1:Bibliodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Biclops ns1:hasAlignment ns1:trueNeutral .\n\nns1:Biddlytree ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Biddlywink ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BiddlywinkChrysalis ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Biggin ns1:hasAlignment ns1:trueNeutral .\n\nns1:Biloko ns1:hasAlignment ns1:neutralEvil .\n\nns1:Biofreezer ns1:hasAlignment ns1:chaoticGood .\n\nns1:BishaGaTsuku ns1:hasAlignment ns1:neutralEvil .\n\nns1:BishopAgathion ns1:hasAlignment ns1:neutralGood .\n\nns1:BisonCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:BlackBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:BlackButterfly ns1:hasAlignment ns1:chaoticGood .\n\nns1:BlackGoat ns1:hasAlignment ns1:neutralEvil .\n\nns1:BlackJinni ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BlackMagga ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BlackPudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:BlackScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:BlackShuck ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BlackSpotUrchin ns1:hasAlignment ns1:neutralEvil .\n\nns1:BlackWorm ns1:hasAlignment ns1:neutralEvil .\n\nns1:BlackwispEgret ns1:hasAlignment ns1:trueNeutral .\n\nns1:BlastShadow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BleedingHorrorMinotaur ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BlightedFeySatyr ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Blightrat ns1:hasAlignment ns1:neutralEvil .\n\nns1:Blightspawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Blindheim ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BlinkDog ns1:hasAlignment ns1:lawfulGood .\n\nns1:Blodeuwedd ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Blodeuweddqueen ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BloodAlgaeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodBramble ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodBush ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodCaterpillar ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodHag ns1:hasAlignment ns1:neutralEvil .\n\nns1:BloodKaktos ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BloodLily ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodMaize ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodOrc ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BloodOrchid ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BloodPudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodQueen ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BloodReaverDevilGaruginCR ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BloodWeird ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BloodWight ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bloodbrush ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodhazeMosquitoSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodplateBurster ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bloodsuckle ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodyBones ns1:hasAlignment ns1:neutralEvil .\n\nns1:BloodySkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:BlueRingedOctopus ns1:hasAlignment ns1:trueNeutral .\n\nns1:BlueWhale ns1:hasAlignment ns1:trueNeutral .\n\nns1:BluetipEurypterid ns1:hasAlignment ns1:trueNeutral .\n\nns1:Boalisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Boar ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoarDireDaeodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bodak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Bodythief ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BogBeast ns1:hasAlignment ns1:trueNeutral .\n\nns1:BogCreeper ns1:hasAlignment ns1:trueNeutral .\n\nns1:BogMummy ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BogNixie ns1:hasAlignment ns1:neutralEvil .\n\nns1:BogScum ns1:hasAlignment ns1:trueNeutral .\n\nns1:BogStrider ns1:hasAlignment ns1:trueNeutral .\n\nns1:BogStriderSeerQueen ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bogeyman ns1:hasAlignment ns1:neutralEvil .\n\nns1:Boggard ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Boggart ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Boggle ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Bogwid ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Bogwiggle ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Boilborn ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoneCobbler ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BoneCollective ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BoneCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoneCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoneDevilOsyluth ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BoneGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoneReaperReflection ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoneShip ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BonepowderGhoul ns1:hasAlignment ns1:neutralEvil .\n\nns1:Bonesnapper ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bonestorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Bonesucker ns1:hasAlignment ns1:neutralEvil .\n\nns1:Bonethorn ns1:hasAlignment ns1:trueNeutral .\n\nns1:BonewroughtWillow ns1:hasAlignment ns1:trueNeutral .\n\nns1:BookGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoreWormMonarch ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoreWormSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:BorealAnnisHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BorealManticore ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BorealWolf ns1:hasAlignment ns1:trueNeutral .\n\nns1:Boroboroton ns1:hasAlignment ns1:neutralEvil .\n\nns1:Boruta ns1:hasAlignment ns1:trueNeutral .\n\nns1:BotflySwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:BottledArmada ns1:hasAlignment ns1:trueNeutral .\n\nns1:Brachiosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrainMole ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrainMoleMonarch ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrainOoze ns1:hasAlignment ns1:neutralEvil .\n\nns1:BrainRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bralani ns1:hasAlignment ns1:chaoticGood .\n\nns1:Bramblelash ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrassDragonGreatWyrm ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonJuvenile ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonMatureAdult ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonOld ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonVeryOld ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonVeryYoung ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonWyrm ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonWyrmling ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonYoungAdult ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrassJuggernaut ns1:hasAlignment ns1:trueNeutral .\n\nns1:Brethedan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Brijidine ns1:hasAlignment ns1:chaoticGood .\n\nns1:Brimorak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BrimstoneOoze ns1:hasAlignment ns1:neutralEvil .\n\nns1:BrineDragonAncient ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonGreatWyrm ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonJuvenile ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonMatureAdult ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonOld ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonVeryOld ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonVeryYoung ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonWyrm ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonWyrmling ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonYoungAdult ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineSeaSerpent ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BrineZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Brinedragonadult ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BringDragonYoung ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BristleBoar ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrokenChild ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BrokenSoulLillend ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Brontotherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:BronzeDragonGreatWyrm ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonJuvenile ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonMatureAdult ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonOld ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonVeryOld ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonVeryYoung ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonWyrm ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonWyrmling ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonYoungAdult ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:BronzeSentinel ns1:hasAlignment ns1:trueNeutral .\n\nns1:Broodiken ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrownBearorGrizzlyKodiakRussianBrown ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrownPudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:Brownie ns1:hasAlignment ns1:trueNeutral .\n\nns1:Brume ns1:hasAlignment ns1:neutralEvil .\n\nns1:BrushThylacine ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrutalisDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BruteDemonBalban ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BruteWight ns1:hasAlignment ns1:trueNeutral .\n\nns1:Brykolakas ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Buckawn ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bugbear ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BugbearEchohusk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Buggane ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Bukavac ns1:hasAlignment ns1:neutralEvil .\n\nns1:Bulabar ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Bulette ns1:hasAlignment ns1:trueNeutral .\n\nns1:BullShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bunyip ns1:hasAlignment ns1:trueNeutral .\n\nns1:Buraq ns1:hasAlignment ns1:neutralGood .\n\nns1:Burleev ns1:hasAlignment ns1:trueNeutral .\n\nns1:BurningChild ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BurningDervish ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BurningGiantBeheaded ns1:hasAlignment ns1:neutralEvil .\n\nns1:BurningMedusaHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:BurningSeveredHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:Burrowling ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Burstigeit ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bushyasta ns1:hasAlignment ns1:neutralEvil .\n\nns1:Byakhee ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Bythos ns1:hasAlignment ns1:trueNeutral .\n\nns1:CAVEGIANT ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CHALKYDRI ns1:hasAlignment ns1:neutralGood .\n\nns1:CLOCKWORKSCOUT ns1:hasAlignment ns1:trueNeutral .\n\nns1:CRABMAN ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaasimolarFormerPresidentofHell ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Cacodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:CactusLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cadaver ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CadaverLord ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CairnLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CaizelDeposedQueenofSuccubi ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Calathgar ns1:hasAlignment ns1:trueNeutral .\n\nns1:Calikang ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:CallerinDarkness ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CalligraphyWyrm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Calpina ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Cambion ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Camel ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cameroceras ns1:hasAlignment ns1:trueNeutral .\n\nns1:CandleCorpse ns1:hasAlignment ns1:trueNeutral .\n\nns1:CandlestoneCourtier ns1:hasAlignment ns1:neutralEvil .\n\nns1:CannibalChild ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CannonGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:CanopyCreeper ns1:hasAlignment ns1:trueNeutral .\n\nns1:CanopyTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Cantor ns1:hasAlignment ns1:lawfulEvil .\n\nns1:CapacitorOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Capramace ns1:hasAlignment ns1:trueNeutral .\n\nns1:Carbuncle ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarbuncleChampion ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarbuncleCompanion ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarbuncleHero ns1:hasAlignment ns1:trueNeutral .\n\nns1:CardinalMartyr ns1:hasAlignment ns1:lawfulGood .\n\nns1:CarnivorousBlob ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarnivorousCrystal ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarrionBeast ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CarrionBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarrionClaw ns1:hasAlignment ns1:neutralEvil .\n\nns1:CarrionCreeper ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarrionGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarrionGolemMount ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarrionGolemstandin ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarrionMoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Carrionstorm ns1:hasAlignment ns1:neutralEvil .\n\nns1:CaryatidColumn ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaryatidGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cassisian ns1:hasAlignment ns1:neutralGood .\n\nns1:Castellan ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Cat ns1:hasAlignment ns1:trueNeutral .\n\nns1:CatLordPantherForm ns1:hasAlignment ns1:trueNeutral .\n\nns1:CatSith ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Cataboligne ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Caterprism ns1:hasAlignment ns1:trueNeutral .\n\nns1:Caterwaul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Catfolk ns1:hasAlignment ns1:neutralGood .\n\nns1:Catoblepas ns1:hasAlignment ns1:trueNeutral .\n\nns1:Catrina ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cauchemar ns1:hasAlignment ns1:trueNeutral .\n\nns1:Caulborn ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaulbornThoughtkeeper ns1:hasAlignment ns1:trueNeutral .\n\nns1:CauldronBloom ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveBlight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CaveCricket ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveFisher ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CaveLeech ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveMoray ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CavelightMoss ns1:hasAlignment ns1:trueNeutral .\n\nns1:CavernLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cayhound ns1:hasAlignment ns1:chaoticGood .\n\nns1:Caypup ns1:hasAlignment ns1:chaoticGood .\n\nns1:Cecaelia ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Celedeen ns1:hasAlignment ns1:chaoticGood .\n\nns1:Celedon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Centaur ns1:hasAlignment ns1:trueNeutral .\n\nns1:CentipedeGiantWhiptail ns1:hasAlignment ns1:trueNeutral .\n\nns1:CentipedeGreatForest ns1:hasAlignment ns1:trueNeutral .\n\nns1:CentipedeHissing ns1:hasAlignment ns1:trueNeutral .\n\nns1:CentipedeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:CentipedeTitan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cephalophore ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ceratioidi ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ceratosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cerberi ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Cerberus ns1:hasAlignment ns1:neutralEvil .\n\nns1:CerberusWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:CerebralStalker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CerebricCyst ns1:hasAlignment ns1:neutralEvil .\n\nns1:CerebricFungus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ceru ns1:hasAlignment ns1:neutralGood .\n\nns1:Cervapral ns1:hasAlignment ns1:neutralGood .\n\nns1:Cervinal ns1:hasAlignment ns1:neutralGood .\n\nns1:CervineProtector ns1:hasAlignment ns1:lawfulGood .\n\nns1:Cerynitis ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cetaceal ns1:hasAlignment ns1:neutralGood .\n\nns1:Cetus ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Ceustodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:ChagBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:ChainWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chalicotherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chalkost ns1:hasAlignment ns1:lawfulGood .\n\nns1:ChampionAutomaton ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ChampionofPeace ns1:hasAlignment ns1:neutralGood .\n\nns1:ChanequeMR ns1:hasAlignment ns1:neutralEvil .\n\nns1:Changeling ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ChaosBeast ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ChaosDemonChoronzon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CharauKa ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Charda ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ChariotBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:CharnelColossus ns1:hasAlignment ns1:neutralEvil .\n\nns1:CharnelGod ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CharnelWhisperer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Charon ns1:hasAlignment ns1:neutralEvil .\n\nns1:CharonBoatmanofthelowerplanesCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:Charonodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Charybdis ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Chavazvug ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Cheetah ns1:hasAlignment ns1:trueNeutral .\n\nns1:CheitanDjinni ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CheitanJanni ns1:hasAlignment ns1:neutralEvil .\n\nns1:Chelarac ns1:hasAlignment ns1:neutralEvil .\n\nns1:ChelaracBroodling ns1:hasAlignment ns1:neutralEvil .\n\nns1:Chelicerae ns1:hasAlignment ns1:neutralEvil .\n\nns1:Chelonidal ns1:hasAlignment ns1:neutralGood .\n\nns1:Chemosit ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chernobue ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Cherufe ns1:hasAlignment ns1:neutralEvil .\n\nns1:Cherum ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chickcharney ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chicken ns1:hasAlignment ns1:trueNeutral .\n\nns1:ChickenCoop ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chikfari ns1:hasAlignment ns1:trueNeutral .\n\nns1:ChildoftheBriar ns1:hasAlignment ns1:neutralEvil .\n\nns1:Chimera ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Chimpanzee ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chiropteal ns1:hasAlignment ns1:neutralGood .\n\nns1:Chitikin ns1:hasAlignment ns1:trueNeutral .\n\nns1:Choker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ChokerBrute ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CholericOozeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:ChonChon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ChonChonSwarm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Choral ns1:hasAlignment ns1:neutralGood .\n\nns1:ChortDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Choxani ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ChrestomathCaulborn ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chronogeist ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Chrystone ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chupacabra ns1:hasAlignment ns1:trueNeutral .\n\nns1:ChurchGrim ns1:hasAlignment ns1:lawfulGood .\n\nns1:Churr ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chuspiki ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Chuul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ChuulLesser ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Chyzaedu ns1:hasAlignment ns1:lawfulEvil .\n\nns1:CicadaSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cikavak ns1:hasAlignment ns1:trueNeutral .\n\nns1:CinderGhoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CinderWolf ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cinderghost ns1:hasAlignment ns1:neutralEvil .\n\nns1:Cipactli ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ClackingSkullSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:ClamGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:Clamor ns1:hasAlignment ns1:trueNeutral .\n\nns1:Clawbat ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClawedKadian ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ClayGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:CliffGiant ns1:hasAlignment ns1:neutralGood .\n\nns1:Cloaker ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ClockworkAdvancedBronzeGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkAngel ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkAssassin ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkBrainGear ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkDrone ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkExcavator ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkFamiliar ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkFiend ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkGoblin ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkGoliath ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkGuardian ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkGunslinger ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkHound ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkHuntsman ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkLeviathan ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkMage ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkMyrmidon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkNautiloid ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkOverseer ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkParasite ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkPriest ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkReliquary ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ClockworkServant ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkSoldier ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkSongbird ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkSpy ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkSteed ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkTitan ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkWarrior ns1:hasAlignment ns1:trueNeutral .\n\nns1:CloudDragonAncient ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonGreatWyrm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonJuvenile ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonMatureAdult ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonOld ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonVeryOld ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonVeryYoung ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonWyrm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonWyrmling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonYoung ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonYoungAdult ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudGiantSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:ClowderofCats ns1:hasAlignment ns1:trueNeutral .\n\nns1:CobraBackInphidian ns1:hasAlignment ns1:neutralEvil .\n\nns1:CobraFlower ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cockatrice ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cockroach ns1:hasAlignment ns1:trueNeutral .\n\nns1:CockroachGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:CockroachSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:CodexArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:CofferCorpse ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CoffinAnemone ns1:hasAlignment ns1:trueNeutral .\n\nns1:ColdMutatedOgreSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:ColdRider ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ColdsnapBasilisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Colliatur ns1:hasAlignment ns1:neutralGood .\n\nns1:ColossalAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:ColourOutofSpace ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Coloxus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CombatTrainedWolliped ns1:hasAlignment ns1:trueNeutral .\n\nns1:Combusted ns1:hasAlignment ns1:neutralEvil .\n\nns1:CommandoConstruct ns1:hasAlignment ns1:trueNeutral .\n\nns1:CommonBat ns1:hasAlignment ns1:trueNeutral .\n\nns1:CommonDrow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CommonEurypterid ns1:hasAlignment ns1:trueNeutral .\n\nns1:CommonInphidian ns1:hasAlignment ns1:neutralEvil .\n\nns1:CommonMite ns1:hasAlignment ns1:lawfulEvil .\n\nns1:CommonTimeElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ComozantWyrd ns1:hasAlignment ns1:trueNeutral .\n\nns1:Compsognathus ns1:hasAlignment ns1:trueNeutral .\n\nns1:ConfoundingBandersnatch ns1:hasAlignment ns1:trueNeutral .\n\nns1:ConquerorWorm ns1:hasAlignment ns1:neutralEvil .\n\nns1:ConstrictorSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:Contemplative ns1:hasAlignment ns1:trueNeutral .\n\nns1:ContractDevilPhistophilus ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Cooshee ns1:hasAlignment ns1:trueNeutral .\n\nns1:CopperDragonGreatWyrm ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonJuvenile ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonMatureAdult ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonOld ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonVeryOld ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonVeryYoung ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonWyrm ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonWyrmling ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonYoungAdult ns1:hasAlignment ns1:chaoticGood .\n\nns1:Copsewight ns1:hasAlignment ns1:neutralEvil .\n\nns1:CoralCapuchin ns1:hasAlignment ns1:trueNeutral .\n\nns1:CoralDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:CoralGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:CorpseCandle ns1:hasAlignment ns1:neutralEvil .\n\nns1:CorpseLotus ns1:hasAlignment ns1:trueNeutral .\n\nns1:CorpseOrgy ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CorpseRook ns1:hasAlignment ns1:trueNeutral .\n\nns1:CorpsefeasterOtyugh ns1:hasAlignment ns1:trueNeutral .\n\nns1:Corpsespinner ns1:hasAlignment ns1:trueNeutral .\n\nns1:CorpsewaterBogMummy ns1:hasAlignment ns1:lawfulEvil .\n\nns1:CorpulentGhoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Couatl ns1:hasAlignment ns1:lawfulGood .\n\nns1:CovenOctopus ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:CovenOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrabCoconut ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrabGreatReef ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrabHermitGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:CracklingSkullSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:CragMan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CrawlingHand ns1:hasAlignment ns1:neutralEvil .\n\nns1:CrawlingHandGiant ns1:hasAlignment ns1:neutralEvil .\n\nns1:CreamfootFennec ns1:hasAlignment ns1:trueNeutral .\n\nns1:CreeperIvy ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrimsonBasilisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrimsonDeath ns1:hasAlignment ns1:neutralEvil .\n\nns1:CrimsonJellyfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrimsonWhale ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrimsonWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Criosphinx ns1:hasAlignment ns1:trueNeutral .\n\nns1:Crocodile ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrocodileDire ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrocodileZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:CroneQueen ns1:hasAlignment ns1:neutralEvil .\n\nns1:Crucidaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:CrucifixionSpirit ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Cryohydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:CryptFlower ns1:hasAlignment ns1:trueNeutral .\n\nns1:CryptThing ns1:hasAlignment ns1:neutralEvil .\n\nns1:Cryptguard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Crysmal ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrystalDragonGreatWyrm ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonJuvenile ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonMatureAdult ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonOld ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonVeryOld ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonVeryYoung ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonWyrm ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonWyrmling ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonYoungAdult ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrystalOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrystallineHorror ns1:hasAlignment ns1:neutralEvil .\n\nns1:Crystallis ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cuero ns1:hasAlignment ns1:trueNeutral .\n\nns1:CultistTroop ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CursedBeast ns1:hasAlignment ns1:neutralEvil .\n\nns1:CursedKing ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CutlassSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cyclops ns1:hasAlignment ns1:neutralEvil .\n\nns1:Cynosoma ns1:hasAlignment ns1:chaoticGood .\n\nns1:Cyphergull ns1:hasAlignment ns1:trueNeutral .\n\nns1:CystTrinityHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Cythnigot ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Cytillipede ns1:hasAlignment ns1:trueNeutral .\n\nns1:Daggocrustler ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dagon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DagonDemonPrinceoftheSea ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Dahzagan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Daitengu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dakon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Dallo ns1:hasAlignment ns1:trueNeutral .\n\nns1:DamnationBook ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Damned ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DanavaMR ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:DancerInphidian ns1:hasAlignment ns1:neutralEvil .\n\nns1:Dandasuka ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DanseMacabre ns1:hasAlignment ns1:neutralEvil .\n\nns1:Danthienne ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Dapsara ns1:hasAlignment ns1:neutralGood .\n\nns1:DarakhulOgre ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DarkAngel ns1:hasAlignment ns1:neutralEvil .\n\nns1:DarkCaller ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DarkCreeper ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DarkDancer ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DarkEmpath ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DarkIceGrig ns1:hasAlignment ns1:neutralGood .\n\nns1:DarkMatterEntropicOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:DarkScionDwarf ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DarkSlayer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DarkStalker ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DarkYoungofShubNiggurath ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Darkling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Darkmantle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Darnoc ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DaughterofShubNiggurath ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DaughteroftheDead ns1:hasAlignment ns1:neutralEvil .\n\nns1:DeadfallScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:DeadlyMantis ns1:hasAlignment ns1:trueNeutral .\n\nns1:DeathButterflySwarm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeathCoach ns1:hasAlignment ns1:neutralEvil .\n\nns1:DeathDog ns1:hasAlignment ns1:neutralEvil .\n\nns1:DeathWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Deathhand ns1:hasAlignment ns1:neutralEvil .\n\nns1:DeathleechHornedDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DeathlessSorcerer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeathsHeadJellyfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:Deathsnatcher ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeathtrapOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Deathweb ns1:hasAlignment ns1:trueNeutral .\n\nns1:DebasedAsrai ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DebasedNixie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Decapus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeepBadger ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeepHunterSeaSerpent ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:DeepMerfolk ns1:hasAlignment ns1:trueNeutral .\n\nns1:DeepNaga ns1:hasAlignment ns1:neutralEvil .\n\nns1:DeepOne ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeepOneHybrid ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeepOneScion ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeepSeaSerpent ns1:hasAlignment ns1:trueNeutral .\n\nns1:DeepSingerWhale ns1:hasAlignment ns1:trueNeutral .\n\nns1:DeepWalker ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DeepsightGogglesSymbiont ns1:hasAlignment ns1:trueNeutral .\n\nns1:Deer ns1:hasAlignment ns1:trueNeutral .\n\nns1:DefenderGlobe ns1:hasAlignment ns1:trueNeutral .\n\nns1:DegenerateOgre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DegenerateSerpentfolk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Deinochos ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Deinonychus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Deinosuchus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Deinotherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:Delgeth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Delver ns1:hasAlignment ns1:trueNeutral .\n\nns1:Demammoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:DemiLich ns1:hasAlignment ns1:neutralEvil .\n\nns1:Demilich ns1:hasAlignment ns1:neutralEvil .\n\nns1:Demiurge ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DemonStone ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DemonicDeadfallScorpion ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DemonicKnight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DemonicMohrg ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DemorielTwiceExiledSeductress ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DenizenofLeng ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DerakniLocustDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Derghodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Derhii ns1:hasAlignment ns1:trueNeutral .\n\nns1:Derro ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DerroFetalSavant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DerroMagister ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DesertBlight ns1:hasAlignment ns1:neutralEvil .\n\nns1:DesertDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:DesertGiant ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:DespicableSnowman ns1:hasAlignment ns1:neutralEvil .\n\nns1:Destrachan ns1:hasAlignment ns1:neutralEvil .\n\nns1:DevastatorMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DevilDog ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DevilMonkey ns1:hasAlignment ns1:trueNeutral .\n\nns1:DevilSteed ns1:hasAlignment ns1:neutralEvil .\n\nns1:Devilfish ns1:hasAlignment ns1:neutralEvil .\n\nns1:Devourer ns1:hasAlignment ns1:neutralEvil .\n\nns1:DevouringMist ns1:hasAlignment ns1:neutralEvil .\n\nns1:Dhampir ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Dhole ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DholeHatchling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DiamondSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Diatryma ns1:hasAlignment ns1:trueNeutral .\n\nns1:Digester ns1:hasAlignment ns1:trueNeutral .\n\nns1:Digmaul ns1:hasAlignment ns1:trueNeutral .\n\nns1:DimensionWalker ns1:hasAlignment ns1:neutralEvil .\n\nns1:DimensionalShambler ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Dimetrodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dimorphodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Diplodocus ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireApeGigantopithecus ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireBadger ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireBarracuda ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireBat ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireBison ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireCorby ns1:hasAlignment ns1:neutralEvil .\n\nns1:DireCorgi ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireElectricEel ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireFlytrap ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireGhoulWolf ns1:hasAlignment ns1:neutralEvil .\n\nns1:DireGoat ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireGrasshopperMouse ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireHippopotamusBehemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireHyena ns1:hasAlignment ns1:trueNeutral .\n\nns1:DirePolarBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:DirePorcupine ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireRacoon ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireRam ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireRatCompanionLevel ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireShadowRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireSharkMegalodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireSloth ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireSmilodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireWeasel ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireWolf ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireWolfwere ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DireWolverine ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireorCaveBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:DiseasedRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Disenchanter ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dispater ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DivineGuardianHydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:Djinni ns1:hasAlignment ns1:chaoticGood .\n\nns1:Dlurgraven ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dodo ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dog ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dogmole ns1:hasAlignment ns1:trueNeutral .\n\nns1:DogmoleJuggernaut ns1:hasAlignment ns1:trueNeutral .\n\nns1:DollDevilArusities ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Dolphin ns1:hasAlignment ns1:trueNeutral .\n\nns1:DomesticatedorWildWolliped ns1:hasAlignment ns1:trueNeutral .\n\nns1:DominationDevilGladiatrix ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Domovoi ns1:hasAlignment ns1:chaoticGood .\n\nns1:DonkeyRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Donratty ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Doombat ns1:hasAlignment ns1:neutralEvil .\n\nns1:Doorwarden ns1:hasAlignment ns1:trueNeutral .\n\nns1:Doppeldrek ns1:hasAlignment ns1:trueNeutral .\n\nns1:Doppelrat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Doru ns1:hasAlignment ns1:neutralEvil .\n\nns1:Dorvae ns1:hasAlignment ns1:neutralEvil .\n\nns1:DosojinKami ns1:hasAlignment ns1:neutralGood .\n\nns1:Dossenus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Draaki ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dracolisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Draconal ns1:hasAlignment ns1:neutralGood .\n\nns1:Draconid ns1:hasAlignment ns1:trueNeutral .\n\nns1:DraftHeavyHorse ns1:hasAlignment ns1:trueNeutral .\n\nns1:Draghul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DragonHorse ns1:hasAlignment ns1:neutralGood .\n\nns1:DragonTurtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dragonfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:DragonflyGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:DragonflyGiantNymph ns1:hasAlignment ns1:trueNeutral .\n\nns1:DragonhideGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dragonkin ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:DragonleafTreepp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dragonne ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dragonnel ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dragonship ns1:hasAlignment ns1:trueNeutral .\n\nns1:DrakainiaMR ns1:hasAlignment ns1:neutralEvil .\n\nns1:Drakauthix ns1:hasAlignment ns1:trueNeutral .\n\nns1:Draug ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Draugr ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DreadCorby ns1:hasAlignment ns1:neutralEvil .\n\nns1:DreadWraith ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DreadZombieAasimarWarrior ns1:hasAlignment ns1:trueNeutral .\n\nns1:DreamEater ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DreamImpCompanion ns1:hasAlignment ns1:neutralGood .\n\nns1:DreamImpCousin ns1:hasAlignment ns1:neutralGood .\n\nns1:DreamImpHero ns1:hasAlignment ns1:neutralGood .\n\nns1:DreamSpectre ns1:hasAlignment ns1:neutralEvil .\n\nns1:DreamSpectreNightmareCreature ns1:hasAlignment ns1:neutralEvil .\n\nns1:DreamSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:DreamVestigeMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DreamthiefHag ns1:hasAlignment ns1:neutralEvil .\n\nns1:Drekavac ns1:hasAlignment ns1:neutralEvil .\n\nns1:Dretch ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DrochaSwarm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DrowNoble ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DrownedMaiden ns1:hasAlignment ns1:neutralEvil .\n\nns1:DrowningDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Dryad ns1:hasAlignment ns1:chaoticGood .\n\nns1:Duergar ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DuergarTyrant ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Dullahan ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DunPudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:Duneshaker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dunkleosteus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Duppy ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DuskKamadan ns1:hasAlignment ns1:neutralEvil .\n\nns1:Duskwalker ns1:hasAlignment ns1:trueNeutral .\n\nns1:DustDigger ns1:hasAlignment ns1:trueNeutral .\n\nns1:DustGhoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DustMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dvorovoi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DwarfCaiman ns1:hasAlignment ns1:trueNeutral .\n\nns1:DweomerCap ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dweomercat ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DweomercatCub ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Dwiergeth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Dybbuk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Dyme ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Dziriak ns1:hasAlignment ns1:trueNeutral .\n\nns1:D\u00f8delig ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Eagle ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthElementalBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthElementalChampion ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthElementalConstruct ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthElementalSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthVeela ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthWysp ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthYaiOni ns1:hasAlignment ns1:neutralEvil .\n\nns1:EarthenSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Earthfiend ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EarthkingKaiju ns1:hasAlignment ns1:neutralGood .\n\nns1:Eblis ns1:hasAlignment ns1:neutralEvil .\n\nns1:EbonOoze ns1:hasAlignment ns1:neutralEvil .\n\nns1:EbonyGelatinousCube ns1:hasAlignment ns1:trueNeutral .\n\nns1:Echeneis ns1:hasAlignment ns1:trueNeutral .\n\nns1:EclipseGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ecorche ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EcstasyFeeder ns1:hasAlignment ns1:neutralEvil .\n\nns1:EctoplasmghostOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:EctoplasmicHuman ns1:hasAlignment ns1:trueNeutral .\n\nns1:Edimmu ns1:hasAlignment ns1:trueNeutral .\n\nns1:EelHound ns1:hasAlignment ns1:trueNeutral .\n\nns1:Efreeti ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EfreetiJanissary ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Egophage ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Egregore ns1:hasAlignment ns1:trueNeutral .\n\nns1:Einherji ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:EirisaiAncestor ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:EirisaiGreater ns1:hasAlignment ns1:trueNeutral .\n\nns1:EirisaiLesser ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:EirisaiMaster ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:EirisaiMedial ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Elasmosarus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Elasmotherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElasmotheriumGiantWoolyRhinoCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Elawah ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ElderAcidQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderAetherElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderAirElemental ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ElderColdironElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderDeepOne ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ElderEarthElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderFireElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderIceElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderLightningElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderMagmaElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderMudElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderNegativeEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderNirento ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderObsidianQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderPositiveEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderPsionicElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderThing ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ElderWaterElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderWitchlight ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderWorg ns1:hasAlignment ns1:neutralEvil .\n\nns1:ElderWyrm ns1:hasAlignment ns1:trueNeutral .\n\nns1:EldritchSteamMephit ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ElectricCube ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElectricEel ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElectricFroghemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElementalAirDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElementalDrake ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ElementalEarthDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElementalFireDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElementalWaterDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Elephant ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElephantSeal ns1:hasAlignment ns1:trueNeutral .\n\nns1:EliteShadowMastiff ns1:hasAlignment ns1:neutralEvil .\n\nns1:Elk ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElohimMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElusaHound ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElysianTitan ns1:hasAlignment ns1:chaoticGood .\n\nns1:EmbalmingGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:EmberWeaver ns1:hasAlignment ns1:trueNeutral .\n\nns1:Embolotherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:EmeraldOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Emkrah ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EmotionOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:EmperorBird ns1:hasAlignment ns1:trueNeutral .\n\nns1:EmperorCobra ns1:hasAlignment ns1:trueNeutral .\n\nns1:EmperorKirin ns1:hasAlignment ns1:lawfulGood .\n\nns1:EmperorStag ns1:hasAlignment ns1:trueNeutral .\n\nns1:EmperorWalrus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Emperorofscales ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EmpressBoreWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Empusa ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Empyreal ns1:hasAlignment ns1:lawfulGood .\n\nns1:Empyrean ns1:hasAlignment ns1:neutralGood .\n\nns1:Emu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Encantado ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:EncephalonGorger ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EncephalonGorgerPsychic ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EnchanterHeron ns1:hasAlignment ns1:trueNeutral .\n\nns1:EnergizedIceGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:EnergyProtectionSymbiont ns1:hasAlignment ns1:trueNeutral .\n\nns1:Enisysian ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EnlightenedConstructClockworkSoldier ns1:hasAlignment ns1:neutralEvil .\n\nns1:EnlightenedContemplative ns1:hasAlignment ns1:trueNeutral .\n\nns1:EnormousReefclaw ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:EnslavedSpawn ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EntropicOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:EnvironmentalSuitSymbiont ns1:hasAlignment ns1:trueNeutral .\n\nns1:Enzyme ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ercinee ns1:hasAlignment ns1:trueNeutral .\n\nns1:EremiteKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EremiteSymbiont ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EremiteWizard ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ErinatGremlin ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Erlking ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Erodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Escorite ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Esipil ns1:hasAlignment ns1:neutralEvil .\n\nns1:Esobok ns1:hasAlignment ns1:trueNeutral .\n\nns1:EtherDrake ns1:hasAlignment ns1:trueNeutral .\n\nns1:EtherealFilcher ns1:hasAlignment ns1:trueNeutral .\n\nns1:EtherealGraveyardTool ns1:hasAlignment ns1:trueNeutral .\n\nns1:EtherealMarauder ns1:hasAlignment ns1:trueNeutral .\n\nns1:EtherealRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:EthericJelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:Etheroot ns1:hasAlignment ns1:trueNeutral .\n\nns1:Etiainen ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Etioling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Ettercap ns1:hasAlignment ns1:neutralEvil .\n\nns1:Euryale ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EvilEye ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ExecutionerDevilMunagola ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ExecutionersHood ns1:hasAlignment ns1:trueNeutral .\n\nns1:ExiledShade ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ExoskeletonGiantCockroach ns1:hasAlignment ns1:neutralEvil .\n\nns1:ExoskeletonGiantStagBeetle ns1:hasAlignment ns1:neutralEvil .\n\nns1:ExoskeletonTitanCentipede ns1:hasAlignment ns1:neutralEvil .\n\nns1:ExsanguinatorDaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Exscinder ns1:hasAlignment ns1:lawfulGood .\n\nns1:EyeEater ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EyeKiller ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EyeSentinel ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EyeoftheDeep ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EyeoftheWatcher ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FacelessDemonGallu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FacelessDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FacelessFleshGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:FacelessHulkUgoroth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FacelessStalkerUgothol ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FacelessWhale ns1:hasAlignment ns1:trueNeutral .\n\nns1:Fachen ns1:hasAlignment ns1:neutralEvil .\n\nns1:FadingFox ns1:hasAlignment ns1:trueNeutral .\n\nns1:FaerieDragonDracoFraudatioMinimus ns1:hasAlignment ns1:chaoticGood .\n\nns1:FaerieMount ns1:hasAlignment ns1:trueNeutral .\n\nns1:FaerieSeer ns1:hasAlignment ns1:trueNeutral .\n\nns1:Faeriedragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:FailedApotheosisMimic ns1:hasAlignment ns1:neutralEvil .\n\nns1:Fallen ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FalseSpiderPedipalp ns1:hasAlignment ns1:trueNeutral .\n\nns1:FalseSpiderSolifugid ns1:hasAlignment ns1:trueNeutral .\n\nns1:FamiliarAutomaton ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FangedSeaSerpent ns1:hasAlignment ns1:trueNeutral .\n\nns1:FastZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Fastachee ns1:hasAlignment ns1:neutralGood .\n\nns1:Faun ns1:hasAlignment ns1:chaoticGood .\n\nns1:FearEater ns1:hasAlignment ns1:neutralEvil .\n\nns1:FearGuard ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Feargaunt ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FeliusDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Fellforged ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FellnightSpriggan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Fellsig ns1:hasAlignment ns1:neutralEvil .\n\nns1:FenMauler ns1:hasAlignment ns1:neutralEvil .\n\nns1:FenWitch ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FeralHogTroop ns1:hasAlignment ns1:trueNeutral .\n\nns1:FeralTitanLord ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:FerrousGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:FesteringSpirit ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Festrog ns1:hasAlignment ns1:neutralEvil .\n\nns1:Fetch ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FetchlingKayal ns1:hasAlignment ns1:trueNeutral .\n\nns1:FetidSporeMound ns1:hasAlignment ns1:trueNeutral .\n\nns1:FetidStray ns1:hasAlignment ns1:neutralEvil .\n\nns1:Fext ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FeyGiantToad ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:FeyWolverine ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Feyling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:FeywardTree ns1:hasAlignment ns1:trueNeutral .\n\nns1:FiendInfusedStoneGolem ns1:hasAlignment ns1:neutralEvil .\n\nns1:FiendishHeavyWarHorse ns1:hasAlignment ns1:neutralEvil .\n\nns1:FieryCorpseOrgy ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Firbolg ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireBirdCompanion ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireCrabGreater ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireCrabLesser ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireDrake ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireElementalConstruct ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireFish ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireGiant ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FireInfusedTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FireLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireNymph ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:FirePhantom ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FireSalamander ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireVampire ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FireVeela ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireWhale ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireWysp ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireYai ns1:hasAlignment ns1:neutralEvil .\n\nns1:Firebird ns1:hasAlignment ns1:neutralGood .\n\nns1:Firefiend ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FirefootFennec ns1:hasAlignment ns1:trueNeutral .\n\nns1:FjordLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FlagstoneGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlailSnail ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlailSnailFrogGodGames ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlameDrake ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FlameSpawnedTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FlamebrotherSalamander ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FlamingSkull ns1:hasAlignment ns1:neutralEvil .\n\nns1:FlappingHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:FlashBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlayerDevilMarzach ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FleaGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:FleshColossusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:FleshGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:FleshGolemHound ns1:hasAlignment ns1:trueNeutral .\n\nns1:FleshdollRogue ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Fleshdreg ns1:hasAlignment ns1:neutralEvil .\n\nns1:FleshdregSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:FlightPack ns1:hasAlignment ns1:trueNeutral .\n\nns1:FloatingEye ns1:hasAlignment ns1:trueNeutral .\n\nns1:FloodTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FloodslainArsinoitherium ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FloodslainOrc ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FlotsamTerror ns1:hasAlignment ns1:neutralEvil .\n\nns1:FloweringLattice ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlueHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Flumph ns1:hasAlignment ns1:lawfulGood .\n\nns1:Fluxwraith ns1:hasAlignment ns1:neutralEvil .\n\nns1:FlyGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlyingFox ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlyingPolyp ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FlyingSquirrel ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlytrapLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:Fogwarden ns1:hasAlignment ns1:neutralEvil .\n\nns1:FomorianTitanMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FooDog ns1:hasAlignment ns1:neutralGood .\n\nns1:ForestBlight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ForestDrake ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ForestGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ForestersBane ns1:hasAlignment ns1:trueNeutral .\n\nns1:ForgeSpurned ns1:hasAlignment ns1:neutralEvil .\n\nns1:ForgefiendScanderig ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ForgottenOne ns1:hasAlignment ns1:trueNeutral .\n\nns1:ForkedCat ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ForkedTailWyvern ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Forlarren ns1:hasAlignment ns1:neutralEvil .\n\nns1:FormianHiveQueen ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormianMyrmarch ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormianQueen ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormianRoyalGuard ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormianTaskmaster ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormianWarrior ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormianWorker ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormlessSpawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FortunesellerGoblin ns1:hasAlignment ns1:trueNeutral .\n\nns1:Fossegrim ns1:hasAlignment ns1:neutralEvil .\n\nns1:FossilGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:FourArmedGargoyle ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FourArmedMudraSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:FourArmedSahuaginMutant ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Fox ns1:hasAlignment ns1:trueNeutral .\n\nns1:Foxwere ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FrazUrbluuDemonPrinceofDeception ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FreezingFlow ns1:hasAlignment ns1:trueNeutral .\n\nns1:FreshwaterMerrow ns1:hasAlignment ns1:neutralEvil .\n\nns1:FrogDemonGreruor ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FrogFather ns1:hasAlignment ns1:trueNeutral .\n\nns1:FrogGiantDire ns1:hasAlignment ns1:trueNeutral .\n\nns1:FrogPoisonous ns1:hasAlignment ns1:trueNeutral .\n\nns1:Froghemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:FrostCube ns1:hasAlignment ns1:trueNeutral .\n\nns1:FrostDrake ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FrostGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FrostMan ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FrostMiteSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:FrostWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:FrostdeathDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:FrostfallenMammoth ns1:hasAlignment ns1:neutralEvil .\n\nns1:FrostyChiseler ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FrumiousBandersnatch ns1:hasAlignment ns1:trueNeutral .\n\nns1:FukujinKami ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Fuldrex ns1:hasAlignment ns1:neutralEvil .\n\nns1:Fulgati ns1:hasAlignment ns1:trueNeutral .\n\nns1:Funayurei ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FungalCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:FungalLizardfolk ns1:hasAlignment ns1:trueNeutral .\n\nns1:FungalNymph ns1:hasAlignment ns1:chaoticGood .\n\nns1:Fungiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:Funglet ns1:hasAlignment ns1:neutralGood .\n\nns1:Fungoid ns1:hasAlignment ns1:neutralEvil .\n\nns1:FungusGargoyle ns1:hasAlignment ns1:trueNeutral .\n\nns1:FungusLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:FungusMan ns1:hasAlignment ns1:trueNeutral .\n\nns1:FungusManKing ns1:hasAlignment ns1:trueNeutral .\n\nns1:FungusQueen ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FungusWeird ns1:hasAlignment ns1:trueNeutral .\n\nns1:Furcifer ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:FurnaceGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:FutureYithian ns1:hasAlignment ns1:neutralGood .\n\nns1:Fye ns1:hasAlignment ns1:trueNeutral .\n\nns1:Fyr ns1:hasAlignment ns1:trueNeutral .\n\nns1:GIANTWATERBEETLE ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Gaki ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gallerok ns1:hasAlignment ns1:trueNeutral .\n\nns1:GalluWarmongerDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Galvo ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gambado ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Gancanagh ns1:hasAlignment ns1:chaoticGood .\n\nns1:Ganzi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Gar ns1:hasAlignment ns1:trueNeutral .\n\nns1:GardenOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:GareLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GargantuanAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:GargantuanMonstrousSeaWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gargiya ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gargoyle ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GargoyleBrute ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GargoyleGuardian ns1:hasAlignment ns1:trueNeutral .\n\nns1:Garipan ns1:hasAlignment ns1:neutralEvil .\n\nns1:Garmunchi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Garuda ns1:hasAlignment ns1:chaoticGood .\n\nns1:Gashadokurou ns1:hasAlignment ns1:neutralEvil .\n\nns1:GateArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:Gathlain ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GatorGhoul ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gearghost ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Gearsman ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gegenees ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Geier ns1:hasAlignment ns1:trueNeutral .\n\nns1:Geist ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GelatinousCube ns1:hasAlignment ns1:trueNeutral .\n\nns1:GelatinousGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:GelatinousOrb ns1:hasAlignment ns1:trueNeutral .\n\nns1:GemCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:GemstoneGargoyle ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GeneralofVengeance ns1:hasAlignment ns1:lawfulGood .\n\nns1:Genghryl ns1:hasAlignment ns1:trueNeutral .\n\nns1:Genthodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Geon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GeruzouSlimeDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Geryon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GetofIblis ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GhaddarDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ghalzarokh ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ghast ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ghawwas ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gholdako ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ghole ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ghonhatine ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ghoran ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ghorazagh ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ghost ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ghoublin ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ghoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GhoulAvernal ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GhoulDireWolf ns1:hasAlignment ns1:neutralEvil .\n\nns1:GhoulHoundCompanion ns1:hasAlignment ns1:neutralEvil .\n\nns1:GhoulHoundHero ns1:hasAlignment ns1:neutralEvil .\n\nns1:GhoulStirge ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GhoulWolf ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ghul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GiantAbyssalDireFrog ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GiantAdultAntLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAdvancedDireBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAmoeba ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAnaconda ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAntDrone ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAntLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAntQueen ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAntSoldier ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAntSporeZombie ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GiantAntWorker ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAssassinBug ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAssassinSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBarracuda ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBee ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBeheaded ns1:hasAlignment ns1:neutralEvil .\n\nns1:GiantBelostomatid ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBlackWidowSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBlisterBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBlowfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBogTurtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBombardierBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBoringBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBotfly ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBumblebee ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBumblebeeQueen ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBumblebeeWorker ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantCaribe ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantCentipede ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantChameleon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantCicada ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantCockroachExoskeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:GiantConstrictorSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantCrabSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantDeathwatchBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantDemonGnoll ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantDireFrog ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantDragonflyXPNMediumverminInitSensesdarkvisionftPerceptionDEFENSEACtouchflatfootedDexnaturalhpdFortRefWillImmunevermintraitsOFFENSESpeedftflyftperfectMeleebitedTACTICSGiantdragonfliesareveryaggressiveandhuntwarmbloodedcreaturesfearlesslyattackinguntileithertheyortheirpreyaredeadSTATISTICSStrDexConIntWisChaBaseAtkCMBCMDvstripSkillsFly ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantEagle ns1:hasAlignment ns1:neutralGood .\n\nns1:GiantElectricCatfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantEmperorScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantFalcon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantFlea ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantFly ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantFlytrap ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantFrilledLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantFrog ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantGar ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantGecko ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantGroundCricket ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantGroundWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantHamster ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantHellgrammite ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantHissingCockroach ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantHornet ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantHorsefly ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantIsopod ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantKhopeshScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantLakeOctopus ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantLeech ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantLegwaterSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantLocust ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMaggot ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMantisCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMantisShrimp ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMarmoset ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMiningBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMonstrousCrayfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMorayEel ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMosquito ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMotleyCuttlefish ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMuckdweller ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantOctopus ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantOwl ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:GiantPhantomArmor ns1:hasAlignment ns1:neutralEvil .\n\nns1:GiantPike ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantPorcupine ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantQueenBee ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantRaven ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantRhinocerosBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantRotGrub ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSawtoothedBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantScarab ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSeaAnemone ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSeaSlug ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSeaSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSeahorse ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSkateSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSkunk ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSlicerBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSlug ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSnappingTurtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSolifugid ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantStagBeetleExoskeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:GiantStarfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantStargazer ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantStirge ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSundew ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTarantulaSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTardigrade ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTermite ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTick ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTigerBarb ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantToad ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTortoise ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTubeWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantVulture ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantWalkingStick ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantWaterStrider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantWeasel ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantYellowjacket ns1:hasAlignment ns1:trueNeutral .\n\nns1:Giantwingedchupacabra ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GibberingAbomination ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GibberingMouther ns1:hasAlignment ns1:trueNeutral .\n\nns1:GibberingOrb ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GibrilethDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Giganotosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:GigasClam ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GildedDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GildedSeaSerpent ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gillman ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ginever ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Giraffe ns1:hasAlignment ns1:trueNeutral .\n\nns1:Girallon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Girtablilu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gitwerc ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Glabrezu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GlacialOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:GlacierToad ns1:hasAlignment ns1:trueNeutral .\n\nns1:Glaciergeist ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GladiatorRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:GlaistigMR ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GlassGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:GlassUrchin ns1:hasAlignment ns1:trueNeutral .\n\nns1:GlassWyrm ns1:hasAlignment ns1:trueNeutral .\n\nns1:GlidingTurtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Glimmerhollow ns1:hasAlignment ns1:trueNeutral .\n\nns1:Globster ns1:hasAlignment ns1:trueNeutral .\n\nns1:GlomerayDaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:GloomCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gloomwing ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gluttongrass ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gnarlwood ns1:hasAlignment ns1:neutralEvil .\n\nns1:GnasherLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gnoll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GnollWhelp ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GnophKeh ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Gnophkeh ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gnorri ns1:hasAlignment ns1:trueNeutral .\n\nns1:Goat ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoatDemonMehrim ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Goblin ns1:hasAlignment ns1:neutralEvil .\n\nns1:GoblinDog ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoblinNaga ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GoblinSnake ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GoblinTroop ns1:hasAlignment ns1:neutralEvil .\n\nns1:Goemul ns1:hasAlignment ns1:neutralGood .\n\nns1:Goezspall ns1:hasAlignment ns1:trueNeutral .\n\nns1:GohlHydraCloud ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GoldDragonJuvenile ns1:hasAlignment ns1:lawfulGood .\n\nns1:GoldDragonMatureAdult ns1:hasAlignment ns1:lawfulGood .\n\nns1:GoldDragonOld ns1:hasAlignment ns1:lawfulGood .\n\nns1:GoldDragonVeryOld ns1:hasAlignment ns1:lawfulGood .\n\nns1:GoldDragonWyrm ns1:hasAlignment ns1:lawfulGood .\n\nns1:GoldDragonYoungAdult ns1:hasAlignment ns1:lawfulGood .\n\nns1:GoldGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoldenCat ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoldenCatDescendant ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoldenColossusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoldenScarabSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoldenSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:GolemCarrionweaponized ns1:hasAlignment ns1:trueNeutral .\n\nns1:GolemTreasure ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoliathFrog ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoliathSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoliathStagBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gongorinan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GongorinanQlippoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Gorbel ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gorgimera ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gorgon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gorgoni ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gorgoros ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GorillaBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:GorsonTheBloodDuke ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Gorynych ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GourdLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gowrow ns1:hasAlignment ns1:trueNeutral .\n\nns1:GrabbingGiantBeheaded ns1:hasAlignment ns1:neutralEvil .\n\nns1:GrabbingMedusaHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:GrabbingSeveredHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:GrachukkClanMaster ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GraeaeMR ns1:hasAlignment ns1:neutralEvil .\n\nns1:GrandfatherofFlowers ns1:hasAlignment ns1:neutralEvil .\n\nns1:Grangeri ns1:hasAlignment ns1:trueNeutral .\n\nns1:GrapplingClaw ns1:hasAlignment ns1:trueNeutral .\n\nns1:Grassling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Grauladon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GraveLynx ns1:hasAlignment ns1:neutralEvil .\n\nns1:GraveRisen ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GraveSage ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Gravebound ns1:hasAlignment ns1:neutralEvil .\n\nns1:GravenGuardian ns1:hasAlignment ns1:trueNeutral .\n\nns1:Graveshell ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gravesludge ns1:hasAlignment ns1:neutralEvil .\n\nns1:GravestoneDryad ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gray ns1:hasAlignment ns1:neutralEvil .\n\nns1:GrayApeDecurion ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:GrayApeLegionnaire ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:GrayApePirateKing ns1:hasAlignment ns1:trueNeutral .\n\nns1:GrayGoo ns1:hasAlignment ns1:trueNeutral .\n\nns1:GrayNisp ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GrayOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:GrayRender ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatAssassinBug ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatCaretaker ns1:hasAlignment ns1:neutralGood .\n\nns1:GreatCyclops ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreatDiademUrchin ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatGatorGhoul ns1:hasAlignment ns1:neutralEvil .\n\nns1:GreatGhul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreatHornedOwl ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatSeaAnemone ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatWhiteShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatWhiteWhale ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatWyrmBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreatWyrmBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GreatWyrmDungeonDragonAKAGargaxtheMightyMasteroftheDungeonDragons ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatWyrmForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreatWyrmGoldDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:GreatWyrmGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GreatWyrmRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreatWyrmRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GreatWyrmSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:GreatWyrmSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatWyrmWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreaterAcidQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterAetherElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterAirElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterBarghest ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GreaterBasilisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterBoneneedle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterCeustodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:GreaterColdIronElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterEarthElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterFireElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterGelidBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterGravityElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterIceElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterLightningElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterMagmaElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterMedusa ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GreaterMudElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterNegativeEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterNelbarzoth ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GreaterObsidianQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterOozeDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreaterPositiveEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterPsionicElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterPubo ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterShadowCR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreaterShedu ns1:hasAlignment ns1:lawfulGood .\n\nns1:GreaterShieldWarden ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:GreaterVerdurousOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterWaterElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterYamabushiTengu ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:GreatwyrmUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Greatwyrmclouddragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreenGuardianCR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreenHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreenMan ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreenstingScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gregole ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Gremlin ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GremlinBatspawnCR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GremlinLightningspawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GremlinNuglub ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GremlinPugwampi ns1:hasAlignment ns1:neutralEvil .\n\nns1:GremlinSpiderspawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GremlinVexgit ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GrenadierTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GrendelMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Greymalkin ns1:hasAlignment ns1:neutralEvil .\n\nns1:Grick ns1:hasAlignment ns1:trueNeutral .\n\nns1:Griefgall ns1:hasAlignment ns1:neutralEvil .\n\nns1:Griffon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Grig ns1:hasAlignment ns1:neutralGood .\n\nns1:GrigSwarm ns1:hasAlignment ns1:neutralGood .\n\nns1:Grigori ns1:hasAlignment ns1:trueNeutral .\n\nns1:Grikkitog ns1:hasAlignment ns1:neutralEvil .\n\nns1:GrimReaper ns1:hasAlignment ns1:neutralEvil .\n\nns1:Grimlock ns1:hasAlignment ns1:neutralEvil .\n\nns1:Grimm ns1:hasAlignment ns1:neutralEvil .\n\nns1:Grimple ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Grimslake ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Grimstalker ns1:hasAlignment ns1:neutralEvil .\n\nns1:Grindylow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Grioth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Grippli ns1:hasAlignment ns1:trueNeutral .\n\nns1:GristlyDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GrizzlyBearRug ns1:hasAlignment ns1:trueNeutral .\n\nns1:GroaningSpirit ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Grodair ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GrogrisantMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Grokosh ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gronk ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Grootslang ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Grothlut ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GroundWaspSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:GroveGuardian ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GruffLanternGoat ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Gryph ns1:hasAlignment ns1:neutralEvil .\n\nns1:GuardianDaemon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GuardianDoll ns1:hasAlignment ns1:neutralEvil .\n\nns1:GuardianDragonMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:GuardianPhantomArmor ns1:hasAlignment ns1:neutralEvil .\n\nns1:GuardianScroll ns1:hasAlignment ns1:trueNeutral .\n\nns1:GuardianSpirit ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GuardianoftheTower ns1:hasAlignment ns1:trueNeutral .\n\nns1:Guecubu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Gug ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GugSavant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GulperEel ns1:hasAlignment ns1:trueNeutral .\n\nns1:GunpowderOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:GurgistMortic ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gutslug ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gutted ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GyeongsaWarpStorm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Gylptodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gynosphinx ns1:hasAlignment ns1:trueNeutral .\n\nns1:G\u00f8gelid ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:HYDRODAEMON ns1:hasAlignment ns1:neutralEvil .\n\nns1:Hadhayosh ns1:hasAlignment ns1:trueNeutral .\n\nns1:HagEyeOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:HalaDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HalfCelestialUnicorn ns1:hasAlignment ns1:trueNeutral .\n\nns1:HalfFiendDryad ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HalfFiendMinotaur ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HalfOgre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Halsora ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hamadryad ns1:hasAlignment ns1:chaoticGood .\n\nns1:HammerheadShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:HandOfTheInheritor ns1:hasAlignment ns1:lawfulGood .\n\nns1:HandmaidenDevilGylou ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HangmanTree ns1:hasAlignment ns1:neutralEvil .\n\nns1:Haniver ns1:hasAlignment ns1:trueNeutral .\n\nns1:HarbingerArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:HarbingerDaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:HarbingerofBrokenDealsFinePrintandUnfairBargains ns1:hasAlignment ns1:neutralEvil .\n\nns1:Harionago ns1:hasAlignment ns1:neutralEvil .\n\nns1:Harpy ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Harridan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HarvestHaunt ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Hastur ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HatethrallDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Haunt ns1:hasAlignment ns1:trueNeutral .\n\nns1:HauntedChain ns1:hasAlignment ns1:trueNeutral .\n\nns1:HauntedConstructScarecrow ns1:hasAlignment ns1:neutralEvil .\n\nns1:Havero ns1:hasAlignment ns1:neutralEvil .\n\nns1:HaveroTentacle ns1:hasAlignment ns1:neutralEvil .\n\nns1:HawanarGenie ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Hawk ns1:hasAlignment ns1:trueNeutral .\n\nns1:HeadedCryohydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:HeadedHydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:HeadedPryohydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:HeadedPyrohydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:HeadmansScythe ns1:hasAlignment ns1:trueNeutral .\n\nns1:HeartrotTree ns1:hasAlignment ns1:neutralEvil .\n\nns1:Hedgehog ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hegessik ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Heikegani ns1:hasAlignment ns1:neutralEvil .\n\nns1:HekatonkheiresTitan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HelBehir ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hela ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HelicoprionShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Helixmothlarva ns1:hasAlignment ns1:trueNeutral .\n\nns1:HellEngineAdamantineGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:HellHound ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HellMoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hellcat ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Hellcrown ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HellfireIgnis ns1:hasAlignment ns1:neutralEvil .\n\nns1:HellionRevenant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HellstokerDevilMarnasoth ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HellwaspSwarm ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HeraldofArmageddon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:HeraldofDreams ns1:hasAlignment ns1:chaoticGood .\n\nns1:HeraldofFreedom ns1:hasAlignment ns1:chaoticGood .\n\nns1:HeraldofFreedomandJustice ns1:hasAlignment ns1:chaoticGood .\n\nns1:HeraldofHell ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HeraldofRunes ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HeraldoftheDemonQueen ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HeraldofthePirateQueen ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:HereciteofAsmodeus ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HerensugueDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HeresyDevilAyngavhaul ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Hetkoshu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hezrou ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hidebehind ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hieracosphinx ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HighGirallon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HighPriestofShubNiggurath ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HighVeinar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:HillGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hippocampus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hippogriff ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hippopotamus ns1:hasAlignment ns1:trueNeutral .\n\nns1:HiveBrute ns1:hasAlignment ns1:neutralEvil .\n\nns1:HiveLarvaSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:HiveMindBeetleSwarm ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:HiveQueen ns1:hasAlignment ns1:neutralEvil .\n\nns1:HiveWarrior ns1:hasAlignment ns1:neutralEvil .\n\nns1:HivemindRatSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:HoarSpirit ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HobbeHound ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hobgoblin ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HobgoblinPhalanxTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HobgoblinTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Hobkins ns1:hasAlignment ns1:neutralEvil .\n\nns1:Hodag ns1:hasAlignment ns1:trueNeutral .\n\nns1:HollowHelm ns1:hasAlignment ns1:neutralEvil .\n\nns1:HollowSerpent ns1:hasAlignment ns1:neutralEvil .\n\nns1:HomotheriumSmilodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Homunculus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hondra ns1:hasAlignment ns1:trueNeutral .\n\nns1:HookfangWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:HordeRiot ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Horla ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HornCaterpillar ns1:hasAlignment ns1:trueNeutral .\n\nns1:HornedDemonKalavakus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HornedDevilCornugon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HornedLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Horse ns1:hasAlignment ns1:trueNeutral .\n\nns1:HostDevilMagaav ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HoundArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:HoundofTindalos ns1:hasAlignment ns1:neutralEvil .\n\nns1:HouseCentipede ns1:hasAlignment ns1:trueNeutral .\n\nns1:Howler ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hoyrall ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Huecuva ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HugeAcidQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeAetherElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeAirElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeColdironElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeEarthElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeFireElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeGravityElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeIceElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeLightningElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeMagmaElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeMonstrousSeaWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeMudElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeNegativeEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeObsidianQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugePositiveEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugePsionicElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeWaterElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Huggermugger ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Huldra ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:HumanJujuzombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:HumanMeatPuppetCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:HumanScholarBrainCylinder ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Humbaba ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Hundun ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hungerer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HungryFlesh ns1:hasAlignment ns1:trueNeutral .\n\nns1:HungryFog ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hunted ns1:hasAlignment ns1:neutralEvil .\n\nns1:HunterUrchin ns1:hasAlignment ns1:trueNeutral .\n\nns1:HuntingHorror ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hupia ns1:hasAlignment ns1:neutralEvil .\n\nns1:Hutijin ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Hyaenodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hyakume ns1:hasAlignment ns1:neutralEvil .\n\nns1:Hyaleth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hydraggon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hydrodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Hydrus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hyena ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hykariut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Hypnalis ns1:hasAlignment ns1:trueNeutral .\n\nns1:Iathavos ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IbShade ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ibshaunet ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:IceDevilGelugon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IceDrake ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IceGnomeBarbegaziCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:IceGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:IceKratah ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IceLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IceMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:IceTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IceYai ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Icegaunt ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ichkoh ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ichthyocentaur ns1:hasAlignment ns1:trueNeutral .\n\nns1:IdOozeCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Idun ns1:hasAlignment ns1:neutralGood .\n\nns1:Ifrit ns1:hasAlignment ns1:trueNeutral .\n\nns1:Iguanodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ijiraq ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:IkuTurso ns1:hasAlignment ns1:neutralEvil .\n\nns1:Illureshi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ImenteshProtean ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Imjarvi ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ImmatureNorn ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ImmenseMandragora ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ImmenseTortoise ns1:hasAlignment ns1:trueNeutral .\n\nns1:ImmolationDevilPuragaus ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ImmortalIchor ns1:hasAlignment ns1:neutralEvil .\n\nns1:Imp ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Impariut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ImperialGhoul ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ImplacableStalker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Impundulu ns1:hasAlignment ns1:neutralEvil .\n\nns1:Incubus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Incutilis ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IncutilisLord ns1:hasAlignment ns1:neutralEvil .\n\nns1:InevitableAevarutMR ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Infantis ns1:hasAlignment ns1:neutralEvil .\n\nns1:Infernor ns1:hasAlignment ns1:chaoticEvil .\n\nns1:InkDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IntellectDevourer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:InterlocutorKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IntermediateNelbarzoth ns1:hasAlignment ns1:lawfulGood .\n\nns1:InubrixGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:InvertedGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:InvisibleStalker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Iophanite ns1:hasAlignment ns1:lawfulGood .\n\nns1:IounGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:IounWyrd ns1:hasAlignment ns1:trueNeutral .\n\nns1:IrefulHellion ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Irii ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Irlgaunt ns1:hasAlignment ns1:neutralEvil .\n\nns1:IrminsulMR ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Irnakurse ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IronCobra ns1:hasAlignment ns1:trueNeutral .\n\nns1:IronColossusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:IronGhoul ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IronGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:IronGolemArcher ns1:hasAlignment ns1:trueNeutral .\n\nns1:IronMagehunterTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IronMaidenGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:IronRiderTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IronSiegeAlchemistTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IronWight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Isitoq ns1:hasAlignment ns1:neutralEvil .\n\nns1:Isonade ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IsphAunVuln ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ivoyro ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Izfiitar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:JaNoiOni ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Jabberwock ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JackOLantern ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jackal ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jackalwere ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JackinIronsGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JackoLantern ns1:hasAlignment ns1:neutralEvil .\n\nns1:Jaculi ns1:hasAlignment ns1:trueNeutral .\n\nns1:JadeColossuspp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jadeling ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jaguar ns1:hasAlignment ns1:trueNeutral .\n\nns1:Janni ns1:hasAlignment ns1:trueNeutral .\n\nns1:JanniCaptain ns1:hasAlignment ns1:lawfulEvil .\n\nns1:JellyfishGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:JellyfishSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jerboa ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jesulan ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Jherikite ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JigsawShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jinmenju ns1:hasAlignment ns1:trueNeutral .\n\nns1:JinnWizard ns1:hasAlignment ns1:neutralEvil .\n\nns1:Jinushigami ns1:hasAlignment ns1:trueNeutral .\n\nns1:JinxCatCompanion ns1:hasAlignment ns1:trueNeutral .\n\nns1:JitterboneMortic ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Jorogumo ns1:hasAlignment ns1:neutralEvil .\n\nns1:JotunbloodHillGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JotundTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Jotunnboar ns1:hasAlignment ns1:trueNeutral .\n\nns1:JoyfulThing ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Jubear ns1:hasAlignment ns1:trueNeutral .\n\nns1:JubilexTheFacelessLord ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JubilexTouchedMarshJelly ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JubjubBird ns1:hasAlignment ns1:trueNeutral .\n\nns1:JudgementDevilAshmede ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Juggerloathe ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Juggernaut ns1:hasAlignment ns1:trueNeutral .\n\nns1:JulunggaliMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:JungleDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:JungleGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:JungleGrick ns1:hasAlignment ns1:trueNeutral .\n\nns1:JunkGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:JupiterBloodsucker ns1:hasAlignment ns1:trueNeutral .\n\nns1:JuvenileBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JuvenileBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:JuvenileForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JuvenileGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:JuvenileRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JuvenileRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:JuvenileSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:JuvenileSeps ns1:hasAlignment ns1:trueNeutral .\n\nns1:JuvenileSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:JuvenileSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:JuvenileUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:JuvenileWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Kabandha ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Kaenju ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kaicharek ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kakapo ns1:hasAlignment ns1:trueNeutral .\n\nns1:KakuenTaka ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Kamaitachi ns1:hasAlignment ns1:chaoticEvil .\n\nns1:KamiShikigami ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:KaminariKami ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kampfult ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kangaroo ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kapoacinth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Kappa ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kapre ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kaprosuchus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Karek ns1:hasAlignment ns1:trueNeutral .\n\nns1:Karkadann ns1:hasAlignment ns1:trueNeutral .\n\nns1:Karkinoi ns1:hasAlignment ns1:chaoticEvil .\n\nns1:KarkinoiBroodSwarm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Karumzek ns1:hasAlignment ns1:neutralEvil .\n\nns1:KarzSlug ns1:hasAlignment ns1:trueNeutral .\n\nns1:KarzSlugQueen ns1:hasAlignment ns1:trueNeutral .\n\nns1:KasaObake ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kasatha ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Kastamut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Kathlin ns1:hasAlignment ns1:neutralGood .\n\nns1:KawaAkago ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kech ns1:hasAlignment ns1:neutralEvil .\n\nns1:KeeperoftheYellowSign ns1:hasAlignment ns1:chaoticEvil .\n\nns1:KelpDevil ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kelpie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kentrosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:KerePsychopomp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ketesthius ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Keulia ns1:hasAlignment ns1:trueNeutral .\n\nns1:Khaei ns1:hasAlignment ns1:trueNeutral .\n\nns1:Khala ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Khardajeen ns1:hasAlignment ns1:neutralEvil .\n\nns1:Khargra ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kigyo ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Kijimuna ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kikimora ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kikituk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kilblain ns1:hasAlignment ns1:neutralEvil .\n\nns1:KillerFrog ns1:hasAlignment ns1:trueNeutral .\n\nns1:KillerSeahorse ns1:hasAlignment ns1:trueNeutral .\n\nns1:Killmoulis ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kimenhul ns1:hasAlignment ns1:neutralEvil .\n\nns1:KingCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:KingRagworm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kirin ns1:hasAlignment ns1:lawfulGood .\n\nns1:KithangianBeastDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Kitsune ns1:hasAlignment ns1:trueNeutral .\n\nns1:KnightAnt ns1:hasAlignment ns1:trueNeutral .\n\nns1:KnightoftheGateUniqueAdvancedDevourer ns1:hasAlignment ns1:neutralEvil .\n\nns1:Koala ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kobold ns1:hasAlignment ns1:lawfulEvil .\n\nns1:KoboldZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kodama ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kolyarut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Kongamato ns1:hasAlignment ns1:trueNeutral .\n\nns1:KorirKokembe ns1:hasAlignment ns1:trueNeutral .\n\nns1:Korkcitura ns1:hasAlignment ns1:neutralEvil .\n\nns1:Korred ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:KostchtchieDemonPrinceofWrath ns1:hasAlignment ns1:chaoticEvil .\n\nns1:KotoFurunishi ns1:hasAlignment ns1:neutralGood .\n\nns1:Kraidyl ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kraken ns1:hasAlignment ns1:neutralEvil .\n\nns1:Krampus ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kratah ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Krenshar ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kronosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:KuahLij ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Kuchrima ns1:hasAlignment ns1:chaoticEvil .\n\nns1:KudzuTheEverblight ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kurobozu ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Kuru ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Kuwa ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Kyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:KytonDemagogue ns1:hasAlignment ns1:lawfulEvil .\n\nns1:LabyrinthMinotaur ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LacedonAquaticGhoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lacridaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:LakeTroll ns1:hasAlignment ns1:neutralEvil .\n\nns1:Lamhigyn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lamia ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LamiaMatriarch ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lammasu ns1:hasAlignment ns1:lawfulGood .\n\nns1:Lampad ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Lampadarius ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Lamprey ns1:hasAlignment ns1:trueNeutral .\n\nns1:LandLamprey ns1:hasAlignment ns1:trueNeutral .\n\nns1:LandwalkerShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:LanternArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:LanternGoat ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Larabay ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:LargeAcidQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeAetherElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeAirElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeColdIronElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeEarthElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeFireElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeGravityElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeIceElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeLightningElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeLightningQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeMagmaElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeMonstrousSeaWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeMudElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeNegativeEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeObsidianQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargePositiveEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargePsionicElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeStingray ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeWaterElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Larva ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LarvalChuul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LarvalSlimeCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:LarvalStarspawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lashunta ns1:hasAlignment ns1:neutralGood .\n\nns1:Laurapathis ns1:hasAlignment ns1:lawfulEvil .\n\nns1:LavaChild ns1:hasAlignment ns1:trueNeutral .\n\nns1:LavaDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:LavaWeird ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lawgiver ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:LeadCladWyvern ns1:hasAlignment ns1:trueNeutral .\n\nns1:LeadGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:LeadSkeleton ns1:hasAlignment ns1:trueNeutral .\n\nns1:LeafLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:LeafRay ns1:hasAlignment ns1:trueNeutral .\n\nns1:LeananSidheMR ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:LeechSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Leechroot ns1:hasAlignment ns1:neutralEvil .\n\nns1:LegendaryChimera ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LegionArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:Lejnth ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Lemkin ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Lemming ns1:hasAlignment ns1:trueNeutral .\n\nns1:Lemure ns1:hasAlignment ns1:lawfulEvil .\n\nns1:LengGhoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LengHound ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LengSpider ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Leonal ns1:hasAlignment ns1:neutralGood .\n\nns1:Leopard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Leprechaun ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:LesserBandersnatch ns1:hasAlignment ns1:trueNeutral .\n\nns1:LesserBoneneedle ns1:hasAlignment ns1:trueNeutral .\n\nns1:LesserCeustodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:LesserDeath ns1:hasAlignment ns1:neutralEvil .\n\nns1:LesserGelidBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:LesserGibberingOrb ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LesserHostDevilGaav ns1:hasAlignment ns1:lawfulEvil .\n\nns1:LesserJabberwock ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LesserNecrophidius ns1:hasAlignment ns1:trueNeutral .\n\nns1:LesserOozeDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LesserPubo ns1:hasAlignment ns1:trueNeutral .\n\nns1:LesserShadow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LesserShieldWarden ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Leucrotta ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Leukodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Leviathan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Lhaksharut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:LibitinariiKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:LibreumGolem ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:LichNewt ns1:hasAlignment ns1:trueNeutral .\n\nns1:LichPsychic ns1:hasAlignment ns1:lawfulEvil .\n\nns1:LichShade ns1:hasAlignment ns1:neutralEvil .\n\nns1:LichenLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:LifeleecherMortic ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lifesuit ns1:hasAlignment ns1:trueNeutral .\n\nns1:LightRidingHorse ns1:hasAlignment ns1:trueNeutral .\n\nns1:LightningCatChampion ns1:hasAlignment ns1:trueNeutral .\n\nns1:LightningCatCompanion ns1:hasAlignment ns1:trueNeutral .\n\nns1:LightningCatHero ns1:hasAlignment ns1:trueNeutral .\n\nns1:LightningMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:LightningTreantppCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:LightningWeird ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lilin ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Lilith ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Lilitu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LiminalSprite ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:LinnormCrag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lion ns1:hasAlignment ns1:trueNeutral .\n\nns1:LionAlebrije ns1:hasAlignment ns1:trueNeutral .\n\nns1:LionBeastofChaos ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Lionwere ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lipika ns1:hasAlignment ns1:trueNeutral .\n\nns1:Litanu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Livestone ns1:hasAlignment ns1:trueNeutral .\n\nns1:LivingArmor ns1:hasAlignment ns1:trueNeutral .\n\nns1:LivingDoldrums ns1:hasAlignment ns1:neutralEvil .\n\nns1:LivingLake ns1:hasAlignment ns1:trueNeutral .\n\nns1:LivingMirage ns1:hasAlignment ns1:trueNeutral .\n\nns1:LivingRune ns1:hasAlignment ns1:neutralEvil .\n\nns1:LivingTopiary ns1:hasAlignment ns1:trueNeutral .\n\nns1:LivingWall ns1:hasAlignment ns1:trueNeutral .\n\nns1:Lizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:LizardKing ns1:hasAlignment ns1:trueNeutral .\n\nns1:Lizardfolk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Llama ns1:hasAlignment ns1:trueNeutral .\n\nns1:Llorona ns1:hasAlignment ns1:neutralEvil .\n\nns1:Locathah ns1:hasAlignment ns1:trueNeutral .\n\nns1:LocustPlagueSwarmMR ns1:hasAlignment ns1:neutralEvil .\n\nns1:LocustSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:LordSunWarrior ns1:hasAlignment ns1:lawfulGood .\n\nns1:Lorelei ns1:hasAlignment ns1:neutralEvil .\n\nns1:LotusLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:LotusTree ns1:hasAlignment ns1:trueNeutral .\n\nns1:Lovelorn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lukwata ns1:hasAlignment ns1:trueNeutral .\n\nns1:Luma ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Lunarma ns1:hasAlignment ns1:trueNeutral .\n\nns1:LurkerAbove ns1:hasAlignment ns1:trueNeutral .\n\nns1:LurkerInTheCrypt ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LurkerinLight ns1:hasAlignment ns1:neutralEvil .\n\nns1:Lusca ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lustspawn ns1:hasAlignment ns1:neutralEvil .\n\nns1:Lynx ns1:hasAlignment ns1:trueNeutral .\n\nns1:Lythic ns1:hasAlignment ns1:trueNeutral .\n\nns1:MOUSELORDMOUSEFORM ns1:hasAlignment ns1:trueNeutral .\n\nns1:MachineSoldier ns1:hasAlignment ns1:trueNeutral .\n\nns1:MadnessSlug ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MadnessSlugAlternateForm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Maenad ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MaenadDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Maftet ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagebaneGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagicbaneBandersnatch ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagmaDragonGreatWyrm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonJuvenile ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonMatureAdult ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonOld ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonVeryOld ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonVeryYoung ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonWyrm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonWyrmling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonYoungAdult ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaElementalRamCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagmaMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagmaOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagmaRoc ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Magmin ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Magmoid ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagnesiumGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagnesiumSpirit ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Maharaja ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MaharishiManu ns1:hasAlignment ns1:lawfulGood .\n\nns1:MakaraVahana ns1:hasAlignment ns1:trueNeutral .\n\nns1:Malboro ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Malenti ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Mammon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Mammoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:MammothFlea ns1:hasAlignment ns1:trueNeutral .\n\nns1:ManEatingRam ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Manananggal ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mandragora ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MandragoraSwarm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mandrill ns1:hasAlignment ns1:trueNeutral .\n\nns1:ManimalTriceratops ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Manitou ns1:hasAlignment ns1:neutralGood .\n\nns1:MannequinRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mannstirge ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MantaRay ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mantari ns1:hasAlignment ns1:neutralEvil .\n\nns1:Mantidrake ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Manu ns1:hasAlignment ns1:lawfulGood .\n\nns1:MaphistalSecondofOrcus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mapinguari ns1:hasAlignment ns1:trueNeutral .\n\nns1:Marai ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Marathoner ns1:hasAlignment ns1:trueNeutral .\n\nns1:MarbleSentinel ns1:hasAlignment ns1:trueNeutral .\n\nns1:MarbleSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:Margay ns1:hasAlignment ns1:trueNeutral .\n\nns1:Margoyle ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MaridGenie ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Marilith ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MarineCrocodile ns1:hasAlignment ns1:trueNeutral .\n\nns1:MarrowstoneGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MarshGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MarshJelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:Marut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:MaskGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MaskedOkkator ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MasterAutomaton ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Mastodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:MatureAdultBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MatureAdultBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MatureAdultForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MatureAdultGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MatureAdultRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MatureAdultRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MatureAdultSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:MatureAdultSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:MatureAdultSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:MatureAdultWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MatureAdultclouddragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:MatureDarkYoung ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MatureSlimeCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:MatureadultUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Mawler ns1:hasAlignment ns1:neutralEvil .\n\nns1:MechanicalViper ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumAcidQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumAetherElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumAirElemental ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MediumAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumBarracuda ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumEarthElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumFireCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumFireElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumGravityElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumIceElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumLightningElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumLightningQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumMagmaElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumMonstrousSeaWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumMudElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumNegativeEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumObsidianQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumPositiveEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumPsionicElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:MediumSlimeMold ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumStingray ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumWaterElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mediumcoldironelemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Medusa ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MedusaAnimusShade ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MedusaHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:Meerkat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Megalania ns1:hasAlignment ns1:trueNeutral .\n\nns1:Megaloceros ns1:hasAlignment ns1:trueNeutral .\n\nns1:MegaponAnt ns1:hasAlignment ns1:trueNeutral .\n\nns1:Megaprimatus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Megaraptor ns1:hasAlignment ns1:trueNeutral .\n\nns1:Megatherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:Melacage ns1:hasAlignment ns1:neutralEvil .\n\nns1:Meladaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:MelancholicOozeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:MemitimPsychopomp ns1:hasAlignment ns1:trueNeutral .\n\nns1:MemoryChild ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mephistopheles ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Mercane ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:MercuryOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Merfolk ns1:hasAlignment ns1:trueNeutral .\n\nns1:MerfolkCavalier ns1:hasAlignment ns1:trueNeutral .\n\nns1:MerfolkCavalierAlurian ns1:hasAlignment ns1:trueNeutral .\n\nns1:MetalSlime ns1:hasAlignment ns1:trueNeutral .\n\nns1:MetallicGorgimera ns1:hasAlignment ns1:trueNeutral .\n\nns1:MetallicOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mezlan ns1:hasAlignment ns1:trueNeutral .\n\nns1:MiGo ns1:hasAlignment ns1:neutralEvil .\n\nns1:MidnightPeddler ns1:hasAlignment ns1:trueNeutral .\n\nns1:MightyCyclops ns1:hasAlignment ns1:neutralEvil .\n\nns1:Mihstu ns1:hasAlignment ns1:neutralEvil .\n\nns1:Mimi ns1:hasAlignment ns1:trueNeutral .\n\nns1:MimicOoze ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MindslaverMold ns1:hasAlignment ns1:neutralEvil .\n\nns1:MindstabFungus ns1:hasAlignment ns1:trueNeutral .\n\nns1:MinorReaper ns1:hasAlignment ns1:neutralEvil .\n\nns1:MinotaurElder ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MireBrute ns1:hasAlignment ns1:neutralEvil .\n\nns1:MireNettle ns1:hasAlignment ns1:trueNeutral .\n\nns1:MirrorSerpent ns1:hasAlignment ns1:trueNeutral .\n\nns1:MissingLynx ns1:hasAlignment ns1:trueNeutral .\n\nns1:MistDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:Mite ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MithralGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MixCouatl ns1:hasAlignment ns1:chaoticGood .\n\nns1:Mnemor ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Mngwa ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Moa ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mobat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mobogo ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mockingfey ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Mogaru ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Mohrg ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MokeleMbembe ns1:hasAlignment ns1:trueNeutral .\n\nns1:Moldwretch ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mole ns1:hasAlignment ns1:trueNeutral .\n\nns1:Moloch ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MomeRath ns1:hasAlignment ns1:trueNeutral .\n\nns1:Monaciello ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MonadicDeva ns1:hasAlignment ns1:neutralGood .\n\nns1:MongrelCaveGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mongrelman ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:MonitorLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Monkey ns1:hasAlignment ns1:trueNeutral .\n\nns1:MonkeyGoblin ns1:hasAlignment ns1:neutralEvil .\n\nns1:MonkeySwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:MonstrousCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:MonstrousJellyfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:MonstrousLobster ns1:hasAlignment ns1:trueNeutral .\n\nns1:Montaphant ns1:hasAlignment ns1:trueNeutral .\n\nns1:MoonBeast ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MoonDog ns1:hasAlignment ns1:neutralGood .\n\nns1:MoonGiant ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:MoonHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Moonbeast ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Moonflower ns1:hasAlignment ns1:trueNeutral .\n\nns1:Moonpriest ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Moose ns1:hasAlignment ns1:trueNeutral .\n\nns1:Morbai ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mordnaissant ns1:hasAlignment ns1:neutralEvil .\n\nns1:Morgodea ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Morlock ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MorlockSwarmerTroop ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Morrigna ns1:hasAlignment ns1:trueNeutral .\n\nns1:MortuaryCyclone ns1:hasAlignment ns1:trueNeutral .\n\nns1:MosaicTileGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MosquitoSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:MossMonster ns1:hasAlignment ns1:neutralEvil .\n\nns1:MossTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mosslord ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MotherofOblivion ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MothersMaw ns1:hasAlignment ns1:neutralEvil .\n\nns1:Mothman ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MountainAurochs ns1:hasAlignment ns1:trueNeutral .\n\nns1:MountainBlight ns1:hasAlignment ns1:neutralEvil .\n\nns1:MountainGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MountainLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:MovanicDeva ns1:hasAlignment ns1:neutralGood .\n\nns1:MuSpore ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Muckdweller ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mudbog ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mudlord ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mudman ns1:hasAlignment ns1:trueNeutral .\n\nns1:Muhuru ns1:hasAlignment ns1:trueNeutral .\n\nns1:Muldnal ns1:hasAlignment ns1:neutralGood .\n\nns1:MultiplyingTRexSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:MummifiedBaboon ns1:hasAlignment ns1:neutralEvil .\n\nns1:MummifiedCrocodile ns1:hasAlignment ns1:trueNeutral .\n\nns1:MummifiedElephant ns1:hasAlignment ns1:trueNeutral .\n\nns1:MummifiedGynosphinx ns1:hasAlignment ns1:neutralEvil .\n\nns1:MummifiedHippopotamus ns1:hasAlignment ns1:neutralEvil .\n\nns1:Mummy ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MummyLord ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MummyOfTheDeep ns1:hasAlignment ns1:neutralEvil .\n\nns1:Munavri ns1:hasAlignment ns1:chaoticGood .\n\nns1:Murajau ns1:hasAlignment ns1:neutralGood .\n\nns1:MurderBorn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MurderCrow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MurderofCrows ns1:hasAlignment ns1:trueNeutral .\n\nns1:Muse ns1:hasAlignment ns1:chaoticGood .\n\nns1:MushroomGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MustardJelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mutah ns1:hasAlignment ns1:trueNeutral .\n\nns1:MutantOrc ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MutantOtyughtentacledMutant ns1:hasAlignment ns1:trueNeutral .\n\nns1:MutatedTurtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:MuteHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mutilated ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Myceloid ns1:hasAlignment ns1:neutralEvil .\n\nns1:MyrmecoleonMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Myrmidon ns1:hasAlignment ns1:trueNeutral .\n\nns1:MythicNelbarzothMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MythicalLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:MythosGhast ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MythosGhoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MythosSatyr ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nabasu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:NabasuDemonling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:NabasuMature ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nachzehrer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nagaji ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Naiad ns1:hasAlignment ns1:neutralGood .\n\nns1:Najikai ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Nalfeshnee ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Narwhal ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nazalor ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:NecroPede ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Necrocraft ns1:hasAlignment ns1:neutralEvil .\n\nns1:NecromancerofLeng ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Necrophidius ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nekomata ns1:hasAlignment ns1:neutralEvil .\n\nns1:NemesisDevilAdvodaza ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Nemhain ns1:hasAlignment ns1:neutralEvil .\n\nns1:Neothelid ns1:hasAlignment ns1:chaoticEvil .\n\nns1:NeothelidOverlord ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Neozecktole ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nependis ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nephilim ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nereid ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:NerizoDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:NessianWarhoundCR ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Netherspark ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ngoga ns1:hasAlignment ns1:trueNeutral .\n\nns1:NightAdderInphidian ns1:hasAlignment ns1:neutralEvil .\n\nns1:NightHag ns1:hasAlignment ns1:neutralEvil .\n\nns1:NightWyvern ns1:hasAlignment ns1:trueNeutral .\n\nns1:NightbringerApe ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nightcaller ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nightcrawler ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nightgaunt ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Nightmare ns1:hasAlignment ns1:neutralEvil .\n\nns1:NightmareArtist ns1:hasAlignment ns1:neutralEvil .\n\nns1:NightmareEttercap ns1:hasAlignment ns1:neutralEvil .\n\nns1:NightmareMount ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nightskitter ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nightwalker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nightwave ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nightwing ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nikaramsa ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Nilith ns1:hasAlignment ns1:neutralEvil .\n\nns1:Niln ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ningen ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ningyo ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nirento ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nisid ns1:hasAlignment ns1:chaoticGood .\n\nns1:Nixie ns1:hasAlignment ns1:trueNeutral .\n\nns1:NobleDjinniVizier ns1:hasAlignment ns1:chaoticGood .\n\nns1:NobleEfreet ns1:hasAlignment ns1:lawfulEvil .\n\nns1:NobleSalamander ns1:hasAlignment ns1:chaoticEvil .\n\nns1:NobleTimeElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nochlean ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nocticula ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nogitsune ns1:hasAlignment ns1:neutralEvil .\n\nns1:NoqualGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Norn ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Nosferatu ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nosoi ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nothosaur ns1:hasAlignment ns1:trueNeutral .\n\nns1:Novenarut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Nuckalavee ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nuckelavee ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nucol ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nue ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nulmind ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nuno ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nupperibo ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Nycar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Nymph ns1:hasAlignment ns1:chaoticGood .\n\nns1:NymphWaterStrider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nyogoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:NysrockDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Oakman ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:OaurOoung ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Obcisidaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Oblivion ns1:hasAlignment ns1:neutralEvil .\n\nns1:ObsidianGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:ObsidianMinotaur ns1:hasAlignment ns1:trueNeutral .\n\nns1:OceanGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OceanLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:Oceanid ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:OchreEurypterid ns1:hasAlignment ns1:trueNeutral .\n\nns1:OchreJelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:OctopodMechanicDrone ns1:hasAlignment ns1:trueNeutral .\n\nns1:Octopus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ofalth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ogre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreBoss ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreBrute ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreDestroyer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreGlutton ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreHunter ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreKing ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreMage ns1:hasAlignment ns1:lawfulEvil .\n\nns1:OgreMancatcher ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgrePriest ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:OgreStalker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgrekinHalfOgre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ogren ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ogrillon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ohancanu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OilShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:OitosKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:OkkatorAssassin ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OldBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OldBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:OldGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:OldRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OldRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:OldSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:OldSilverDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:OldSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:OldSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:OldWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Olethrodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Olethros ns1:hasAlignment ns1:trueNeutral .\n\nns1:Oliphantpp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Olkhia ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ollph\u00e9ist ns1:hasAlignment ns1:trueNeutral .\n\nns1:Oma ns1:hasAlignment ns1:trueNeutral .\n\nns1:Omnipath ns1:hasAlignment ns1:lawfulEvil .\n\nns1:OmoxDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OnwuAzu ns1:hasAlignment ns1:trueNeutral .\n\nns1:OnyxDeer ns1:hasAlignment ns1:trueNeutral .\n\nns1:OnyxScourge ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Oolioddroo ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OozeGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:OozeMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:OozingOtyugh ns1:hasAlignment ns1:trueNeutral .\n\nns1:OphiduanAnguineumCaste ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OphiduanHominisCaste ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OphiduanSemiferumCaste ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OphiotaurusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Orangutan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Orca ns1:hasAlignment ns1:trueNeutral .\n\nns1:OrcishWarclops ns1:hasAlignment ns1:trueNeutral .\n\nns1:OrcusDemonPrinceoftheUndead ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Oread ns1:hasAlignment ns1:trueNeutral .\n\nns1:Orog ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Oronci ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Orsatka ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Orsheval ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Orzar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Oshageros ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Osteon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ostiarius ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ostovite ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ostrich ns1:hasAlignment ns1:trueNeutral .\n\nns1:Othaos ns1:hasAlignment ns1:trueNeutral .\n\nns1:Otyugh ns1:hasAlignment ns1:trueNeutral .\n\nns1:OtyughMeatPuppet ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ourdivar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Ouroboros ns1:hasAlignment ns1:trueNeutral .\n\nns1:OuterAbominationTheSecondStage ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OuterMutantPriest ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:OutlawTroop ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Ovinnik ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Owb ns1:hasAlignment ns1:neutralEvil .\n\nns1:Owl ns1:hasAlignment ns1:trueNeutral .\n\nns1:Owlbear ns1:hasAlignment ns1:trueNeutral .\n\nns1:OwlbearSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:Owlephant ns1:hasAlignment ns1:trueNeutral .\n\nns1:Owlwere ns1:hasAlignment ns1:chaoticEvil .\n\nns1:PISCODAEMON ns1:hasAlignment ns1:neutralEvil .\n\nns1:Pachycephalosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Paguroida ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:PaigoelDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Painajai ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Pairaka ns1:hasAlignment ns1:neutralEvil .\n\nns1:Pakalchi ns1:hasAlignment ns1:neutralEvil .\n\nns1:PaleStranger ns1:hasAlignment ns1:neutralEvil .\n\nns1:PaleoskeletonTriceratops ns1:hasAlignment ns1:trueNeutral .\n\nns1:PallidAngel ns1:hasAlignment ns1:neutralEvil .\n\nns1:Panda ns1:hasAlignment ns1:trueNeutral .\n\nns1:Panotti ns1:hasAlignment ns1:neutralGood .\n\nns1:Papinijuwari ns1:hasAlignment ns1:neutralEvil .\n\nns1:Papinu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Paracletus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Parasaurolophus ns1:hasAlignment ns1:trueNeutral .\n\nns1:ParasiteMystic ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Pard ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Parrot ns1:hasAlignment ns1:trueNeutral .\n\nns1:PashaNobleShaitan ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:PastYithian ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Pavbagha ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Pazuzu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:PazuzuDemonPrinceofAir ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Peafowl ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pech ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pegasus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pelagastr ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:PelagastrProtean ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:PelagosSeaSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Peluda ns1:hasAlignment ns1:neutralEvil .\n\nns1:Pendula ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Pengizu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Penguin ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pepfralcon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Peri ns1:hasAlignment ns1:neutralGood .\n\nns1:PersonificationOfFury ns1:hasAlignment ns1:trueNeutral .\n\nns1:Peryton ns1:hasAlignment ns1:chaoticEvil .\n\nns1:PestDrakeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pestie ns1:hasAlignment ns1:trueNeutral .\n\nns1:PestilenziDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:PetitionerHumanCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Petrifern ns1:hasAlignment ns1:trueNeutral .\n\nns1:PetrifiedMaiden ns1:hasAlignment ns1:neutralEvil .\n\nns1:Petrous ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Peuchen ns1:hasAlignment ns1:neutralEvil .\n\nns1:Phantasm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:PhantomFungus ns1:hasAlignment ns1:trueNeutral .\n\nns1:PhantomLancer ns1:hasAlignment ns1:neutralEvil .\n\nns1:PhantomStalker ns1:hasAlignment ns1:trueNeutral .\n\nns1:PharaonicGuardian ns1:hasAlignment ns1:lawfulEvil .\n\nns1:PhaseFlea ns1:hasAlignment ns1:trueNeutral .\n\nns1:PhaseSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Phasm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Phasma ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Phasmadaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:PhlegmaticOozeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Phlogiston ns1:hasAlignment ns1:trueNeutral .\n\nns1:Phoenix ns1:hasAlignment ns1:neutralGood .\n\nns1:Phooka ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Phoso ns1:hasAlignment ns1:trueNeutral .\n\nns1:PhrenicScourge ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Phycomid ns1:hasAlignment ns1:trueNeutral .\n\nns1:PickledPunk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Pipefox ns1:hasAlignment ns1:trueNeutral .\n\nns1:PiranhaMature ns1:hasAlignment ns1:trueNeutral .\n\nns1:PiranhaSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Piscodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:PitBoar ns1:hasAlignment ns1:trueNeutral .\n\nns1:PitFiend ns1:hasAlignment ns1:lawfulEvil .\n\nns1:PitHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Pixie ns1:hasAlignment ns1:neutralGood .\n\nns1:PixieCircle ns1:hasAlignment ns1:trueNeutral .\n\nns1:PlagueGiant ns1:hasAlignment ns1:neutralEvil .\n\nns1:PlagueLocustSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:PlagueZombie ns1:hasAlignment ns1:trueNeutral .\n\nns1:PlaguebearerOtyugh ns1:hasAlignment ns1:trueNeutral .\n\nns1:PlaguedHorse ns1:hasAlignment ns1:neutralEvil .\n\nns1:Planetar ns1:hasAlignment ns1:neutralGood .\n\nns1:Plankta ns1:hasAlignment ns1:neutralEvil .\n\nns1:PlantImbuedApe ns1:hasAlignment ns1:neutralGood .\n\nns1:Plantoid ns1:hasAlignment ns1:trueNeutral .\n\nns1:PlantoidServitor ns1:hasAlignment ns1:trueNeutral .\n\nns1:PlasmaOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Platypus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pleroma ns1:hasAlignment ns1:trueNeutral .\n\nns1:Plesiosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Plizeazoth ns1:hasAlignment ns1:neutralEvil .\n\nns1:PodCannon ns1:hasAlignment ns1:trueNeutral .\n\nns1:PoisonFrog ns1:hasAlignment ns1:trueNeutral .\n\nns1:PoisonGauntlet ns1:hasAlignment ns1:trueNeutral .\n\nns1:PoisonousFrog ns1:hasAlignment ns1:trueNeutral .\n\nns1:PoisonousFrogSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:PoisonousManticore ns1:hasAlignment ns1:lawfulEvil .\n\nns1:PolarBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:PolarKamadan ns1:hasAlignment ns1:neutralEvil .\n\nns1:PolarWhaler ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:PolarWhalerSimulacrum ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Polevik ns1:hasAlignment ns1:neutralEvil .\n\nns1:Polong ns1:hasAlignment ns1:neutralEvil .\n\nns1:Poltergeist ns1:hasAlignment ns1:lawfulEvil .\n\nns1:PondDrinker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pony ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pooka ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Popobala ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Popoto ns1:hasAlignment ns1:trueNeutral .\n\nns1:PoppyLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:Poracha ns1:hasAlignment ns1:trueNeutral .\n\nns1:Porcupine ns1:hasAlignment ns1:trueNeutral .\n\nns1:PortunusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Possessor ns1:hasAlignment ns1:lawfulEvil .\n\nns1:PranaGhost ns1:hasAlignment ns1:neutralGood .\n\nns1:PreceptorArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:PretenderDevilDissimulare ns1:hasAlignment ns1:lawfulEvil .\n\nns1:PrideLordAgathion ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:PrismDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ProcyalAgathion ns1:hasAlignment ns1:neutralGood .\n\nns1:Proscriber ns1:hasAlignment ns1:trueNeutral .\n\nns1:ProteanKeketar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ProteanNaunet ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ProteanVoidworm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Protector ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ProtoShoggoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Prydanu ns1:hasAlignment ns1:chaoticGood .\n\nns1:Pseudodragon ns1:hasAlignment ns1:neutralGood .\n\nns1:Pseudosphinx ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pseudowyvern ns1:hasAlignment ns1:trueNeutral .\n\nns1:PsionicAlMiraj ns1:hasAlignment ns1:trueNeutral .\n\nns1:Psiwyrm ns1:hasAlignment ns1:neutralEvil .\n\nns1:Psoglav ns1:hasAlignment ns1:chaoticEvil .\n\nns1:PsycheSerpent ns1:hasAlignment ns1:trueNeutral .\n\nns1:Psychemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Psychepore ns1:hasAlignment ns1:trueNeutral .\n\nns1:PsychicStalker ns1:hasAlignment ns1:neutralEvil .\n\nns1:PsychicWard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Psychlown ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Psychofant ns1:hasAlignment ns1:trueNeutral .\n\nns1:PsychoplasmicBehir ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ptarmigan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pteranodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pufferfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:Puffin ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pukwudgie ns1:hasAlignment ns1:neutralEvil .\n\nns1:PumpkinGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:PurpleWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Purrodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:PutridOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:PygmyGnoll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Pyrausta ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Pyrogeist ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Pyrolisk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Qallupilluk ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Qolok ns1:hasAlignment ns1:neutralEvil .\n\nns1:QuantiumGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Quantum ns1:hasAlignment ns1:trueNeutral .\n\nns1:Quasit ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Quatoid ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:QueenThermite ns1:hasAlignment ns1:trueNeutral .\n\nns1:Quelaunt ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Quetzalcoatlus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Quickling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Quickwood ns1:hasAlignment ns1:trueNeutral .\n\nns1:QuintessenceGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Quipper ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rabbit ns1:hasAlignment ns1:trueNeutral .\n\nns1:Raccoon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Racoon ns1:hasAlignment ns1:trueNeutral .\n\nns1:RadiantEssence ns1:hasAlignment ns1:neutralGood .\n\nns1:Raelis ns1:hasAlignment ns1:chaoticGood .\n\nns1:RageDemonAeshma ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RagebornGnoll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ragewight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Raggoth ns1:hasAlignment ns1:neutralEvil .\n\nns1:RagingRubble ns1:hasAlignment ns1:trueNeutral .\n\nns1:Raiju ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:RajputAmbari ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RakasaBatu ns1:hasAlignment ns1:trueNeutral .\n\nns1:RakklethornToad ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rakshasa ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Raktavarna ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ram ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ramidreju ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rast ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rat ns1:hasAlignment ns1:trueNeutral .\n\nns1:RatKing ns1:hasAlignment ns1:trueNeutral .\n\nns1:RatOgre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RatPlagueSwarmMR ns1:hasAlignment ns1:lawfulEvil .\n\nns1:RatSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ratfolk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ratling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RattlerInphidian ns1:hasAlignment ns1:neutralEvil .\n\nns1:RavagerSpawnCrawlerForm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Raven ns1:hasAlignment ns1:trueNeutral .\n\nns1:RavenSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:RavenousGnoll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RavenousTumbleweed ns1:hasAlignment ns1:trueNeutral .\n\nns1:RavenousUrchinSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:RavenousWendigo ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Rawbones ns1:hasAlignment ns1:neutralEvil .\n\nns1:Rawhead ns1:hasAlignment ns1:neutralEvil .\n\nns1:RazorAngler ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:RazorBoar ns1:hasAlignment ns1:trueNeutral .\n\nns1:RazorFern ns1:hasAlignment ns1:trueNeutral .\n\nns1:Razormouth ns1:hasAlignment ns1:trueNeutral .\n\nns1:RecycledGearsman ns1:hasAlignment ns1:trueNeutral .\n\nns1:RedJester ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:RedPanda ns1:hasAlignment ns1:trueNeutral .\n\nns1:RedReaver ns1:hasAlignment ns1:trueNeutral .\n\nns1:RedWraith ns1:hasAlignment ns1:neutralEvil .\n\nns1:RedWyrmRavener ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Redcap ns1:hasAlignment ns1:neutralEvil .\n\nns1:Redkind ns1:hasAlignment ns1:neutralEvil .\n\nns1:Reefclaw ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Reigon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Reindeer ns1:hasAlignment ns1:trueNeutral .\n\nns1:ReliquaryGuardian ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Remacera ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Renzer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RepairRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:Reptial ns1:hasAlignment ns1:neutralGood .\n\nns1:Reptoid ns1:hasAlignment ns1:lawfulEvil .\n\nns1:RequiemBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:RetchHound ns1:hasAlignment ns1:neutralEvil .\n\nns1:Retriever ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Rhamphorhynchus ns1:hasAlignment ns1:trueNeutral .\n\nns1:RhanTegoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Rhinoceros ns1:hasAlignment ns1:trueNeutral .\n\nns1:RhinocerosWoolly ns1:hasAlignment ns1:trueNeutral .\n\nns1:RhuChalik ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RidingDog ns1:hasAlignment ns1:trueNeutral .\n\nns1:RiftFlumph ns1:hasAlignment ns1:chaoticGood .\n\nns1:Riftcreeper ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RimefireEidolon ns1:hasAlignment ns1:chaoticGood .\n\nns1:Ringhorn ns1:hasAlignment ns1:trueNeutral .\n\nns1:Riotblood ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RipperDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RiptideHorror ns1:hasAlignment ns1:lawfulEvil .\n\nns1:RisenWitch ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RishiManu ns1:hasAlignment ns1:lawfulGood .\n\nns1:RiverDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:RiverElk ns1:hasAlignment ns1:trueNeutral .\n\nns1:RiverGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RiverTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RiverswellSpirit ns1:hasAlignment ns1:neutralEvil .\n\nns1:RobotGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Roc ns1:hasAlignment ns1:trueNeutral .\n\nns1:RockCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:RockReptile ns1:hasAlignment ns1:trueNeutral .\n\nns1:RockTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RockTuatara ns1:hasAlignment ns1:trueNeutral .\n\nns1:RoilingOil ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rokurokubi ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Rokyamut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Ronus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Roofgarden ns1:hasAlignment ns1:trueNeutral .\n\nns1:RopeDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:RopeGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Roper ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Rorkoun ns1:hasAlignment ns1:neutralEvil .\n\nns1:Roseling ns1:hasAlignment ns1:neutralGood .\n\nns1:RotGrubSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rougarou ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:RoyalTimeElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rufidier ns1:hasAlignment ns1:neutralEvil .\n\nns1:Rukh ns1:hasAlignment ns1:trueNeutral .\n\nns1:RuneGiant ns1:hasAlignment ns1:lawfulEvil .\n\nns1:RuneGuardian ns1:hasAlignment ns1:trueNeutral .\n\nns1:RunewarpedGoblin ns1:hasAlignment ns1:neutralEvil .\n\nns1:Rusalka ns1:hasAlignment ns1:neutralEvil .\n\nns1:RussetMold ns1:hasAlignment ns1:trueNeutral .\n\nns1:RustLord ns1:hasAlignment ns1:trueNeutral .\n\nns1:RustMiteSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:RustMonster ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ryven ns1:hasAlignment ns1:trueNeutral .\n\nns1:SANDGIANT ns1:hasAlignment ns1:neutralEvil .\n\nns1:SabbatPrancer ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Sabosan ns1:hasAlignment ns1:neutralEvil .\n\nns1:Sacristan ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Sagari ns1:hasAlignment ns1:neutralEvil .\n\nns1:Saguaroi ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sahuagin ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Salamander ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SaltDrake ns1:hasAlignment ns1:trueNeutral .\n\nns1:SaltMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:SaltWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:SaltwaterCrocodile ns1:hasAlignment ns1:trueNeutral .\n\nns1:SaltwaterMerrow ns1:hasAlignment ns1:neutralEvil .\n\nns1:Samsaran ns1:hasAlignment ns1:trueNeutral .\n\nns1:SandGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:SandHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SandKraken ns1:hasAlignment ns1:trueNeutral .\n\nns1:SandScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:SandStalker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sandling ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sandman ns1:hasAlignment ns1:neutralEvil .\n\nns1:Sangoi ns1:hasAlignment ns1:neutralEvil .\n\nns1:Sangudaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:SanguineOozeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:SapphireJellyfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:SapphireOoze ns1:hasAlignment ns1:chaoticGood .\n\nns1:Sarcovalt ns1:hasAlignment ns1:neutralEvil .\n\nns1:Sard ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SargassumFiend ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sasquatch ns1:hasAlignment ns1:trueNeutral .\n\nns1:Satyr ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SaumenKar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Saurian ns1:hasAlignment ns1:trueNeutral .\n\nns1:SavageGreenHorde ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SawdustSlough ns1:hasAlignment ns1:trueNeutral .\n\nns1:SawlegLocust ns1:hasAlignment ns1:trueNeutral .\n\nns1:Saxra ns1:hasAlignment ns1:neutralEvil .\n\nns1:Sayona ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ScaldingMinotaur ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ScarabBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScarabSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Scarecrow ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScarletSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScarletSpiderSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScarletWalker ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ScavengerWormCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sceaduinar ns1:hasAlignment ns1:neutralEvil .\n\nns1:Sceazir ns1:hasAlignment ns1:neutralEvil .\n\nns1:Schir ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Scitalis ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScorpionDemonGharros ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ScorpionSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Scorpionfolk ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ScragAquaticTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Scraghound ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScrapyardRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScreamingDevilkin ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ScreamingGiantBeheadedCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:ScreamingMedusaHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:ScreamingSeveredHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:ScreamingSeveredSkull ns1:hasAlignment ns1:neutralEvil .\n\nns1:ScreamingSkull ns1:hasAlignment ns1:trueNeutral .\n\nns1:Scylla ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ScytheHorn ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScytheTree ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SeaCat ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:SeaGiant ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SeaHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SeaLinnorm ns1:hasAlignment ns1:neutralEvil .\n\nns1:SeaLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaScourge ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaSerpent ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaSphereBlubble ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaSpider ns1:hasAlignment ns1:neutralEvil .\n\nns1:Seal ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaweedLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaweedSiren ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SecurityMannequin ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Seilenos ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Selkie ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SentientWaxGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:SentinelHut ns1:hasAlignment ns1:trueNeutral .\n\nns1:SepiaSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sepid ns1:hasAlignment ns1:neutralEvil .\n\nns1:Seps ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sepsidaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Seraptis ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SerpentAlchemist ns1:hasAlignment ns1:neutralEvil .\n\nns1:SerpentDemonMallor ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Serpentfolk ns1:hasAlignment ns1:neutralEvil .\n\nns1:SerpentfolkReclaimer ns1:hasAlignment ns1:neutralEvil .\n\nns1:Serpopard ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ServitoroftheOuterGods ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Seugathi ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SeugathiSavant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SewerBlight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SewerOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:SewerTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Sha ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Shabti ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ShachathDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Shadow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShadowAngel ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ShadowAnimalLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShadowCollector ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ShadowDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShadowDrake ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShadowFern ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShadowGiant ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ShadowHunter ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShadowHunterHatchling ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShadowMastiff ns1:hasAlignment ns1:neutralEvil .\n\nns1:ShadowRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShadowRatSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:ShadowRoper ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShadowWolf ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Shae ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShaggyDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShahzadaNobleMarid ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Shalkeshka ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShamblingMound ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shampe ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Shantak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShardSlag ns1:hasAlignment ns1:trueNeutral .\n\nns1:SharkEatingCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:SharpshooterAutomaton ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Shasalqu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shedu ns1:hasAlignment ns1:lawfulGood .\n\nns1:Sheep ns1:hasAlignment ns1:trueNeutral .\n\nns1:SheetFungus ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShemhazianDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShenMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shenzuzhou ns1:hasAlignment ns1:neutralEvil .\n\nns1:Shikigami ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShimmerwingDragonfly ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shinigami ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ShiningSentinel ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShipSentinel ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShipbreakerSeaSerpent ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ShipinaBottle ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShipwreckerCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shira ns1:hasAlignment ns1:neutralEvil .\n\nns1:Shobhad ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShockerLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shoggoth ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Shoggti ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShokiPsychopomp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shotalashu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shredskin ns1:hasAlignment ns1:neutralEvil .\n\nns1:Shrieker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shriezyx ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShrineBlessedBurningSkeletons ns1:hasAlignment ns1:neutralEvil .\n\nns1:Shrroth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Shulsaga ns1:hasAlignment ns1:trueNeutral .\n\nns1:Siabrae ns1:hasAlignment ns1:neutralEvil .\n\nns1:SiegeOwlbear ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sigbin ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Silid ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Silvanshee ns1:hasAlignment ns1:neutralGood .\n\nns1:SilverBells ns1:hasAlignment ns1:trueNeutral .\n\nns1:SilverDragonGreatWyrm ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonJuvenile ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonMatureAdult ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonVeryOld ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonVeryYoung ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonWyrm ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonWyrmling ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonYoungAdult ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverbloodWerewolfHumanForm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Simurgh ns1:hasAlignment ns1:neutralGood .\n\nns1:SinSeeker ns1:hasAlignment ns1:trueNeutral .\n\nns1:SinbornDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SingingShrieker ns1:hasAlignment ns1:trueNeutral .\n\nns1:SinspawnEnvy ns1:hasAlignment ns1:neutralEvil .\n\nns1:SinspawnGluttony ns1:hasAlignment ns1:neutralEvil .\n\nns1:SinspawnGreedspawn ns1:hasAlignment ns1:neutralEvil .\n\nns1:SinspawnPride ns1:hasAlignment ns1:neutralEvil .\n\nns1:SinspawnSloth ns1:hasAlignment ns1:neutralEvil .\n\nns1:SinspawnWrath ns1:hasAlignment ns1:neutralEvil .\n\nns1:SireDevilPatraavex ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Siren ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SirensBedAnemone ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sirrush ns1:hasAlignment ns1:neutralGood .\n\nns1:Sishkanset ns1:hasAlignment ns1:neutralEvil .\n\nns1:Siyokoy ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkateSpiderSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Skaveling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SkeletalArcher ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkeletalChampion ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkeletalChampionArcherCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkeletalMage ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkeletalMount ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkeletonHostCorpse ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkeletonReindeer ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkildpadderGiantTortoiseBullette ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkinStealer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SkinStitcher ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Skincrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkincrawlerDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Skinstitch ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkirmishersTroop ns1:hasAlignment ns1:chaoticGood .\n\nns1:SkitterRat ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Skitterdark ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Skittergoat ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkrikNettle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Skrimsl ns1:hasAlignment ns1:trueNeutral .\n\nns1:Skua ns1:hasAlignment ns1:trueNeutral .\n\nns1:Skulk ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SkullRipper ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SkullSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkullSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:Skullcruncher ns1:hasAlignment ns1:neutralEvil .\n\nns1:Skulleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkumUlatKini ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Skunk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Skvader ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkyDreamer ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlaadLordOfEntropy ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SlaadLordOfTheInsane ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SlagGiant ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:SlagWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Slaughterford ns1:hasAlignment ns1:neutralEvil .\n\nns1:SleepingWillow ns1:hasAlignment ns1:neutralEvil .\n\nns1:SleeykOwlbear ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sleipnir ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlicerBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlimeDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SlimeInfectedBasilisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlimeMold ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlimyDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SlimyHagfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:Slinker ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SlitheringPit ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlitheringTracker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Slorath ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Sloth ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlothSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlothViper ns1:hasAlignment ns1:trueNeutral .\n\nns1:Slugspawn ns1:hasAlignment ns1:trueNeutral .\n\nns1:Slurk ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallAcidQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallAetherElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallAirElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallBarracuda ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallColdironelemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallEarthElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallFireCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallFireElemental ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SmallGravityElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallIceElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallLightningElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallLightningQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallMagmaElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallMonstrousSeaWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallMudElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallNegativeenergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallObsidianQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallPositiveEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallPsionicElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallStingray ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallUnfetteredEidolon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SmallWaterElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmilodonSaberToothedCat ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmokeDragonDracoFumoSuffaco ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmokeGiant ns1:hasAlignment ns1:neutralEvil .\n\nns1:SmokeMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmokeSentinel ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Smokeshade ns1:hasAlignment ns1:neutralEvil .\n\nns1:SnailFlail ns1:hasAlignment ns1:trueNeutral .\n\nns1:SnakeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Snallygaster ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SnapdragonLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:SnapjawHomunculus ns1:hasAlignment ns1:neutralEvil .\n\nns1:SnappingTurtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Snark ns1:hasAlignment ns1:trueNeutral .\n\nns1:SnowGiant ns1:hasAlignment ns1:neutralEvil .\n\nns1:SnowLeopard ns1:hasAlignment ns1:trueNeutral .\n\nns1:SnowRoc ns1:hasAlignment ns1:trueNeutral .\n\nns1:Snowcloak ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Snowking ns1:hasAlignment ns1:neutralEvil .\n\nns1:SoddenDraugerTroop ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SoddenDraugrTroop ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Solar ns1:hasAlignment ns1:neutralGood .\n\nns1:SolarPitriAgnishvattaMR ns1:hasAlignment ns1:lawfulGood .\n\nns1:SoldierThermite ns1:hasAlignment ns1:trueNeutral .\n\nns1:Somalcygot ns1:hasAlignment ns1:neutralEvil .\n\nns1:Somlum ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SonechardGeneralofOrcus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SonicKratah ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Soucouyant ns1:hasAlignment ns1:neutralEvil .\n\nns1:SoulEater ns1:hasAlignment ns1:neutralEvil .\n\nns1:SoulNibbler ns1:hasAlignment ns1:trueNeutral .\n\nns1:SoulReaper ns1:hasAlignment ns1:neutralEvil .\n\nns1:SoulboundAnnihilatorRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:SoulboundDoll ns1:hasAlignment ns1:trueNeutral .\n\nns1:SoulboundMannequin ns1:hasAlignment ns1:trueNeutral .\n\nns1:SoulboundShell ns1:hasAlignment ns1:trueNeutral .\n\nns1:SoullessDestroyer ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Soulsliver ns1:hasAlignment ns1:neutralEvil .\n\nns1:Spartolos ns1:hasAlignment ns1:neutralEvil .\n\nns1:SpawningCanker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SpawnofYogSothoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SpearUrchin ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpectralRockTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Spectre ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SpellgorgedZombie ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpellscarredFext ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SphinxColossusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpiderCollective ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpiderEater ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpiderSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpikestoneGuardian ns1:hasAlignment ns1:trueNeutral .\n\nns1:Spindler ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SpineDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Spinosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpinyEurypterid ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpinyStarfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpireDrake ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SpiritOni ns1:hasAlignment ns1:neutralEvil .\n\nns1:SpiritofAbandon ns1:hasAlignment ns1:neutralGood .\n\nns1:SpiteSpitter ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SpittingCobra ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpittingEurypterid ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpittingSeaSerpent ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SplinterDrake ns1:hasAlignment ns1:trueNeutral .\n\nns1:SporeRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Spriggan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SpringHeeledJack ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Sprite ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SpyglassArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:SquamousDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Squealer ns1:hasAlignment ns1:trueNeutral .\n\nns1:Squid ns1:hasAlignment ns1:trueNeutral .\n\nns1:SquidGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:Squirrel ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stag ns1:hasAlignment ns1:trueNeutral .\n\nns1:StagArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:StalkBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:StalkerAutomaton ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:StandardShieldWarden ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:StarDrake ns1:hasAlignment ns1:trueNeutral .\n\nns1:StarMonarch ns1:hasAlignment ns1:chaoticGood .\n\nns1:StarSpawnofCthulhu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:StarVampire ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Starspawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SteamBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:SteamMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:SteamPoweredClockworkDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stegaloviper ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stegocentipede ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stegosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:StenchKow ns1:hasAlignment ns1:trueNeutral .\n\nns1:StewardOfTheSkein ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sthenno ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Stingray ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stirge ns1:hasAlignment ns1:trueNeutral .\n\nns1:StirgeDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:StirgeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneColossusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneGuardianGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneMaiden ns1:hasAlignment ns1:trueNeutral .\n\nns1:StonePudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneRoper ns1:hasAlignment ns1:chaoticEvil .\n\nns1:StoneSalveshapedFiendishEnhancedBlackPudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneTreant ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneTroglodyte ns1:hasAlignment ns1:chaoticEvil .\n\nns1:StormGiant ns1:hasAlignment ns1:chaoticGood .\n\nns1:StormGiantZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:StormHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Stormghost ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Stormwarden ns1:hasAlignment ns1:neutralEvil .\n\nns1:StrangleWeed ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stranglereed ns1:hasAlignment ns1:trueNeutral .\n\nns1:StringyDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Strix ns1:hasAlignment ns1:trueNeutral .\n\nns1:StrokeLad ns1:hasAlignment ns1:neutralEvil .\n\nns1:StumbleFish ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stunjelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:StygianLeviathan ns1:hasAlignment ns1:neutralEvil .\n\nns1:StygianTurtleShark ns1:hasAlignment ns1:neutralEvil .\n\nns1:Stygira ns1:hasAlignment ns1:lawfulEvil .\n\nns1:StymphalianBird ns1:hasAlignment ns1:trueNeutral .\n\nns1:StymphalidesSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stymphalidies ns1:hasAlignment ns1:trueNeutral .\n\nns1:Styracosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Su ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Succubus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Sudoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Suffragan ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SuijinKami ns1:hasAlignment ns1:trueNeutral .\n\nns1:Suli ns1:hasAlignment ns1:trueNeutral .\n\nns1:SummonedAurochs ns1:hasAlignment ns1:trueNeutral .\n\nns1:SummonedGorilla ns1:hasAlignment ns1:trueNeutral .\n\nns1:SummonedWolf ns1:hasAlignment ns1:trueNeutral .\n\nns1:SumpSteward ns1:hasAlignment ns1:trueNeutral .\n\nns1:SunGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SunflowerLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sunlord ns1:hasAlignment ns1:neutralGood .\n\nns1:Suspiridaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:SutureVine ns1:hasAlignment ns1:trueNeutral .\n\nns1:Suzalisk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Svartalfar ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Svirfneblin ns1:hasAlignment ns1:trueNeutral .\n\nns1:SvirfneblinRidingSlug ns1:hasAlignment ns1:neutralGood .\n\nns1:Swaithe ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SwampBarracuda ns1:hasAlignment ns1:trueNeutral .\n\nns1:SwampBlight ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SwampMummy ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SwampTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SwanMaiden ns1:hasAlignment ns1:chaoticGood .\n\nns1:SwarmDemonDaraka ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SwitchbackJackal ns1:hasAlignment ns1:trueNeutral .\n\nns1:Swordfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sylph ns1:hasAlignment ns1:trueNeutral .\n\nns1:Synesis ns1:hasAlignment ns1:trueNeutral .\n\nns1:Synevite ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Syricta ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Syrinx ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Szaboan ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Szuriel ns1:hasAlignment ns1:neutralEvil .\n\nns1:TShann ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tabaxi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Tadhemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Taer ns1:hasAlignment ns1:trueNeutral .\n\nns1:TaigaGiant ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TaigaLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TailessCragLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TallowGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tangtal ns1:hasAlignment ns1:neutralEvil .\n\nns1:Taniniver ns1:hasAlignment ns1:neutralEvil .\n\nns1:Taniwha ns1:hasAlignment ns1:chaoticGood .\n\nns1:Tanuki ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TarJelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:TarantulaTree ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Targotha ns1:hasAlignment ns1:trueNeutral .\n\nns1:TarnLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TarrasqueB ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TarryDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TarryDemodandCR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tarsier ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tataka ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Tatzlwyrm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tauhoti ns1:hasAlignment ns1:trueNeutral .\n\nns1:TaviMongooseFolk ns1:hasAlignment ns1:trueNeutral .\n\nns1:TawilAtumr ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TaxidermicGrizzlyBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tazelwurm ns1:hasAlignment ns1:trueNeutral .\n\nns1:TchoTcho ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tearjerker ns1:hasAlignment ns1:trueNeutral .\n\nns1:TearofBurningFlame ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Telgrodradt ns1:hasAlignment ns1:neutralEvil .\n\nns1:Temerdaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:TempestBehemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:TemporalCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tendriculos ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tendrul ns1:hasAlignment ns1:trueNeutral .\n\nns1:TenebrousBlight ns1:hasAlignment ns1:trueNeutral .\n\nns1:TenebrousPurpleWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:TenebrousWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tengu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tenome ns1:hasAlignment ns1:neutralEvil .\n\nns1:TentacledHorror ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tentamort ns1:hasAlignment ns1:trueNeutral .\n\nns1:TermagantKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:TermiteSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:TerracottaArcher ns1:hasAlignment ns1:trueNeutral .\n\nns1:TerracottaHorseman ns1:hasAlignment ns1:trueNeutral .\n\nns1:TerracottaSoldier ns1:hasAlignment ns1:trueNeutral .\n\nns1:Terraformer ns1:hasAlignment ns1:trueNeutral .\n\nns1:TerrorBird ns1:hasAlignment ns1:trueNeutral .\n\nns1:TerrorWolf ns1:hasAlignment ns1:neutralEvil .\n\nns1:Terrorized ns1:hasAlignment ns1:neutralEvil .\n\nns1:TestudoTroops ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Tether ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Tetrolimulus ns1:hasAlignment ns1:neutralEvil .\n\nns1:ThalassicBehemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thanadaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:ThanatosFey ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ThanatoticTitan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Thancrus ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Thawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheBlackRider ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:TheDesire ns1:hasAlignment ns1:neutralEvil .\n\nns1:TheEndSinger ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheFatherofAllLinnorms ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheFirebleeder ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheFirstBlade ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TheFuriesErinyes ns1:hasAlignment ns1:lawfulEvil .\n\nns1:TheGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:TheGrandDefender ns1:hasAlignment ns1:lawfulGood .\n\nns1:TheGrimWhiteStag ns1:hasAlignment ns1:lawfulGood .\n\nns1:TheHeraldofPassion ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TheHobblingHookClawedApparatus ns1:hasAlignment ns1:trueNeutral .\n\nns1:TheHornedLord ns1:hasAlignment ns1:chaoticGood .\n\nns1:TheInfernalDuke ns1:hasAlignment ns1:lawfulEvil .\n\nns1:TheMantisGod ns1:hasAlignment ns1:lawfulEvil .\n\nns1:TheOinodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:TheOldMan ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ThePrinceinChains ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ThePrinceofHell ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheRavagerCrawlerForm ns1:hasAlignment ns1:trueNeutral .\n\nns1:TheRedRider ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:TheScarecrow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheSpiritOfAdoration ns1:hasAlignment ns1:neutralGood .\n\nns1:TheStabbingBeast ns1:hasAlignment ns1:neutralEvil .\n\nns1:TheSunlord ns1:hasAlignment ns1:neutralGood .\n\nns1:TheThirdStageOuterSpawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheWaterLizard ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TheWhiteRider ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Theletos ns1:hasAlignment ns1:trueNeutral .\n\nns1:Therizinosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thessalgorgon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thessalhydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thessalisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThinMan ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Thognorok ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Thoqqua ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThornDog ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thorny ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThornyAdvancedTyrannosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThoughtEater ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThrallofYogSothoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Thrasfyr ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ThriaeConstructor ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThriaeDancer ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ThriaeQueen ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ThriaeSeer ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ThriaeSoldier ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Thrush ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thulgant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ThunderBeast ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThunderBehemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thunderbird ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thundershrike ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thuskchoon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Thylacine ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thyrlien ns1:hasAlignment ns1:chaoticGood .\n\nns1:Tiberolith ns1:hasAlignment ns1:trueNeutral .\n\nns1:TickSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:TidepoolDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Tidewretch ns1:hasAlignment ns1:neutralEvil .\n\nns1:Tiger ns1:hasAlignment ns1:trueNeutral .\n\nns1:TigerFish ns1:hasAlignment ns1:trueNeutral .\n\nns1:TigerShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tigrilla ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tikbalang ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tilket ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TimberWight ns1:hasAlignment ns1:lawfulEvil .\n\nns1:TimeFlayer ns1:hasAlignment ns1:neutralEvil .\n\nns1:Tintargurill ns1:hasAlignment ns1:trueNeutral .\n\nns1:TinyAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:TinyMonstrousSeaWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:TitanCentipedeExoskeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:Titanboar ns1:hasAlignment ns1:trueNeutral .\n\nns1:TitanicAdultBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TitanicWhipSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Titanoboa ns1:hasAlignment ns1:trueNeutral .\n\nns1:Titivilus ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Tixitog ns1:hasAlignment ns1:neutralEvil .\n\nns1:Tiyanak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tizheruk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tlalusk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Toad ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tobongo ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tojanida ns1:hasAlignment ns1:trueNeutral .\n\nns1:TombGiant ns1:hasAlignment ns1:neutralEvil .\n\nns1:TombstoneFairy ns1:hasAlignment ns1:neutralEvil .\n\nns1:TomeofHorrors ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tonberry ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ToothFairy ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ToothFairyMonarch ns1:hasAlignment ns1:neutralEvil .\n\nns1:Tophet ns1:hasAlignment ns1:trueNeutral .\n\nns1:TorLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TormentorofSoulsTormentorDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:TorturerRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:Toshigami ns1:hasAlignment ns1:neutralGood .\n\nns1:TotemGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Totenmaske ns1:hasAlignment ns1:neutralEvil .\n\nns1:Trailgaunt ns1:hasAlignment ns1:neutralEvil .\n\nns1:Transposer ns1:hasAlignment ns1:trueNeutral .\n\nns1:Trapper ns1:hasAlignment ns1:trueNeutral .\n\nns1:Treant ns1:hasAlignment ns1:neutralGood .\n\nns1:Trelmarixian ns1:hasAlignment ns1:neutralEvil .\n\nns1:TrenchMist ns1:hasAlignment ns1:neutralEvil .\n\nns1:TriFlowerFrond ns1:hasAlignment ns1:trueNeutral .\n\nns1:TriTongueHorror ns1:hasAlignment ns1:trueNeutral .\n\nns1:Triaxian ns1:hasAlignment ns1:trueNeutral .\n\nns1:TribalProtector ns1:hasAlignment ns1:neutralGood .\n\nns1:Triceratops ns1:hasAlignment ns1:trueNeutral .\n\nns1:Trilobite ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tripurasura ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Triton ns1:hasAlignment ns1:neutralGood .\n\nns1:Troblin ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Troggle ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TroggleRaider ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Troglodyte ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Troll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollAcolyte ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollBerserker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollBrute ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollElderMatron ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollFury ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollMonarch ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollMountain ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TrollRender ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollRipper ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:TrollWarden ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Trollhound ns1:hasAlignment ns1:trueNeutral .\n\nns1:Trollkin ns1:hasAlignment ns1:trueNeutral .\n\nns1:Troodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Trox ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TrumpetArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:TrumpeterSwan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tsaalgrend ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tsathar ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TsatharScourge ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TsathoggaTheFrogGod ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tuatara ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tullimonstrum ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tumblespark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tunche ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TunnelBrute ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TunnelWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tupilaq ns1:hasAlignment ns1:trueNeutral .\n\nns1:Turtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Turul ns1:hasAlignment ns1:trueNeutral .\n\nns1:Twigjack ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TwilightPitriBarhisad ns1:hasAlignment ns1:lawfulGood .\n\nns1:TwoHeadedTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TwoheadedWinterWorg ns1:hasAlignment ns1:neutralEvil .\n\nns1:Tychilarius ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tylosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tyngderkraften ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Tyrannosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:TyrantJellyMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tzitzimitl ns1:hasAlignment ns1:neutralEvil .\n\nns1:UbashkiSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ubue ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:UdaeusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:UgashIram ns1:hasAlignment ns1:neutralEvil .\n\nns1:Uintatherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:Uinuja ns1:hasAlignment ns1:chaoticGood .\n\nns1:Ujaheim ns1:hasAlignment ns1:trueNeutral .\n\nns1:Uldraaghu ns1:hasAlignment ns1:lawfulEvil .\n\nns1:UltharChampion ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:UltimaWeapon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:UmbralDragonGreatWyrm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonJuvenile ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonMatureAdult ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonOld ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonVeryOld ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonVeryYoung ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonWyrm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonWyrmling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonYoungAdult ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralEyeKiller ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralShepherd ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Umbralobe ns1:hasAlignment ns1:neutralEvil .\n\nns1:UnchosenGnoll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UndeadEmu ns1:hasAlignment ns1:neutralEvil .\n\nns1:UndeadNingyo ns1:hasAlignment ns1:neutralEvil .\n\nns1:UndeadOoze ns1:hasAlignment ns1:neutralEvil .\n\nns1:UndeadWarlord ns1:hasAlignment ns1:trueNeutral .\n\nns1:UnderworldBatSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Undigested ns1:hasAlignment ns1:neutralEvil .\n\nns1:UndigestedSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:Undine ns1:hasAlignment ns1:trueNeutral .\n\nns1:UnfetteredEidolon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:UnfetteredPhantom ns1:hasAlignment ns1:trueNeutral .\n\nns1:UnhallowedGreaterShadow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UnhallowedMohrg ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UnhallowedMummy ns1:hasAlignment ns1:lawfulEvil .\n\nns1:UnhallowedZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Unicorn ns1:hasAlignment ns1:chaoticGood .\n\nns1:Uniila ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Unrisen ns1:hasAlignment ns1:neutralEvil .\n\nns1:UnseelieShadowMastiff ns1:hasAlignment ns1:neutralEvil .\n\nns1:Upasunda ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Uraeus ns1:hasAlignment ns1:lawfulGood .\n\nns1:Urannag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Urdefhan ns1:hasAlignment ns1:neutralEvil .\n\nns1:Urhag ns1:hasAlignment ns1:neutralEvil .\n\nns1:Urrk ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ursikka ns1:hasAlignment ns1:trueNeutral .\n\nns1:Urskan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ushabti ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Utukku ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Valharut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Valkyrie ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Vamore ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Vampire ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VampireRose ns1:hasAlignment ns1:trueNeutral .\n\nns1:VampireSpawn ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VampireSquid ns1:hasAlignment ns1:trueNeutral .\n\nns1:VampiricMist ns1:hasAlignment ns1:neutralEvil .\n\nns1:VampiricOoze ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vanara ns1:hasAlignment ns1:lawfulGood .\n\nns1:Vanth ns1:hasAlignment ns1:trueNeutral .\n\nns1:VaporDireRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:VaporWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vargouille ns1:hasAlignment ns1:neutralEvil .\n\nns1:VariantAllip ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VariantAtticWhisperer ns1:hasAlignment ns1:trueNeutral .\n\nns1:Varklops ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VaultBuilderMR ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:VaultGiant ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VaultKeeper ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Vavakia ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vayuphak ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ved ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vegepygmy ns1:hasAlignment ns1:trueNeutral .\n\nns1:VegepygmyBodyguard ns1:hasAlignment ns1:trueNeutral .\n\nns1:VegepygmyChief ns1:hasAlignment ns1:trueNeutral .\n\nns1:VegepygmyCommoner ns1:hasAlignment ns1:trueNeutral .\n\nns1:VegepygmyGuard ns1:hasAlignment ns1:trueNeutral .\n\nns1:VegepygmySubchief ns1:hasAlignment ns1:trueNeutral .\n\nns1:VegepygmyWorker ns1:hasAlignment ns1:trueNeutral .\n\nns1:VeiledMaster ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Veinar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Veldenar ns1:hasAlignment ns1:trueNeutral .\n\nns1:Velociraptor ns1:hasAlignment ns1:trueNeutral .\n\nns1:VelvetAntSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vemerak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vendenopterix ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Venedaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:VenomDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VenomousSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:VenomousSnakeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Venomroach ns1:hasAlignment ns1:trueNeutral .\n\nns1:VeparDukeofDagon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Veranallia ns1:hasAlignment ns1:chaoticGood .\n\nns1:VeranalliaAzata ns1:hasAlignment ns1:chaoticGood .\n\nns1:VerdurousOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:VerminLord ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vermlek ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryOldBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryOldBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VeryOldCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:VeryOldGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VeryOldRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryOldRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:VeryOldSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:VeryOldSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:VeryOldWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryYoungBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryYoungBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VeryYoungForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryYoungGoldDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:VeryYoungGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VeryYoungRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryYoungRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:VeryYoungSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:VeryYoungSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:VeryYoungSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:VeryYoungUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VeryYoungWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryoldForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryoldSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:VescavorQueen ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vespergaunt ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vestraadi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Vidre ns1:hasAlignment ns1:trueNeutral .\n\nns1:ViduusPsychopomp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vilderavn ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vilkacis ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vilsteth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vilstrak ns1:hasAlignment ns1:neutralEvil .\n\nns1:VioletFungus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Viper ns1:hasAlignment ns1:trueNeutral .\n\nns1:ViperVine ns1:hasAlignment ns1:trueNeutral .\n\nns1:ViridiumGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vishap ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vishkanya ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vodyanoi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:VoidYai ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VoidZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:VoidstickZombie ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VolcanoGiant ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Volt ns1:hasAlignment ns1:trueNeutral .\n\nns1:VoltGhost ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Voltleech ns1:hasAlignment ns1:neutralEvil .\n\nns1:Voonith ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Vorgozen ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Vorin ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vorvorak ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vouivre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vrock ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vrolikai ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vrykolakas ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vukodlak ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vulchling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vulnudaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vulpinal ns1:hasAlignment ns1:neutralGood .\n\nns1:Vulture ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vvor ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vydrarch ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Wakandagi ns1:hasAlignment ns1:neutralGood .\n\nns1:Wallaby ns1:hasAlignment ns1:trueNeutral .\n\nns1:Walrus ns1:hasAlignment ns1:trueNeutral .\n\nns1:WandWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:WangLiang ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WarBringerGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WarBull ns1:hasAlignment ns1:trueNeutral .\n\nns1:WarPony ns1:hasAlignment ns1:trueNeutral .\n\nns1:Warcat ns1:hasAlignment ns1:trueNeutral .\n\nns1:WardenJackSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:WarmazeDisciplesTroop ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Warmonger ns1:hasAlignment ns1:trueNeutral .\n\nns1:WarmongerDevilLevaloch ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WarmongerWasp ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WarpedOne ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WarpglassOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Warsworn ns1:hasAlignment ns1:neutralEvil .\n\nns1:WaspDemonMezzalorn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WaspSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Waspite ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Watcher ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:WaterElementalConstruct ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaterLeaper ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WaterMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaterOrm ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaterStriderSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaterVeela ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaterWeird ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WaterWraith ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WaterWysp ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaterYai ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Waterfiend ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WaxGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaxworkHuman ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wayang ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Weasel ns1:hasAlignment ns1:trueNeutral .\n\nns1:Weedwhip ns1:hasAlignment ns1:trueNeutral .\n\nns1:WellLurker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wendigo ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WerebatHumanForm ns1:hasAlignment ns1:neutralEvil .\n\nns1:WereboarHumanForm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WerecrocodileHumanForm ns1:hasAlignment ns1:neutralEvil .\n\nns1:WeremantisHumanForm ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WereraptorHumanForm ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:WereraptorHybridForm ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:WereratHumanForm ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WeresharkHumanForm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WerespiderHumanForm ns1:hasAlignment ns1:neutralEvil .\n\nns1:WeretigerHumanForm ns1:hasAlignment ns1:neutralEvil .\n\nns1:WerewaspElfForm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WerewolfHumanFormCR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Whale ns1:hasAlignment ns1:trueNeutral .\n\nns1:WhalerJellyfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:WhipJelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:WhiptailDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Whirlmaw ns1:hasAlignment ns1:trueNeutral .\n\nns1:WhisperVulture ns1:hasAlignment ns1:trueNeutral .\n\nns1:Whisperer ns1:hasAlignment ns1:neutralEvil .\n\nns1:WhisperscaleHunter ns1:hasAlignment ns1:neutralEvil .\n\nns1:WhitePudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:Whyrlish ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wickerman ns1:hasAlignment ns1:trueNeutral .\n\nns1:WidowCreeper ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wight ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WightAdultRedDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WightMinotaur ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WightMonk ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Wihsaak ns1:hasAlignment ns1:neutralEvil .\n\nns1:Wikkawak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WildDreamImpCompanion ns1:hasAlignment ns1:neutralGood .\n\nns1:WildDreamImpHero ns1:hasAlignment ns1:neutralGood .\n\nns1:WildHuntArcher ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WildHuntHorse ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WildHuntHound ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WildHuntMonarch ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WildHuntScout ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WilloWisp ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WillowDusk ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WindWalker ns1:hasAlignment ns1:trueNeutral .\n\nns1:WindWalkerWendigo ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WindYai ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Winterwight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Wisagatcak ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WitchDollGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:WitchTree ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Witchcrow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Witchfire ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Witherstench ns1:hasAlignment ns1:trueNeutral .\n\nns1:Witherweed ns1:hasAlignment ns1:trueNeutral .\n\nns1:WizardsShackle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Woghemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wolf ns1:hasAlignment ns1:trueNeutral .\n\nns1:WolfInSheepsClothing ns1:hasAlignment ns1:trueNeutral .\n\nns1:WolfSpider ns1:hasAlignment ns1:neutralEvil .\n\nns1:WolfinSheepsClothing ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wolliped ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wolpertinger ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wolverine ns1:hasAlignment ns1:trueNeutral .\n\nns1:WoodColossusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:WoodGiant ns1:hasAlignment ns1:chaoticGood .\n\nns1:WoodGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Woodwose ns1:hasAlignment ns1:neutralEvil .\n\nns1:WoollyRhinoceros ns1:hasAlignment ns1:trueNeutral .\n\nns1:Worg ns1:hasAlignment ns1:neutralEvil .\n\nns1:WorkWraith ns1:hasAlignment ns1:neutralEvil .\n\nns1:WorkerThermite ns1:hasAlignment ns1:trueNeutral .\n\nns1:WorldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WormThatWalksHuman ns1:hasAlignment ns1:neutralEvil .\n\nns1:WormthatWalksLocustVariant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Woundwyrm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Wrackworm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Wraith ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WrathBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:WrathDragonDracoSanctusBenevolentia ns1:hasAlignment ns1:neutralGood .\n\nns1:WrathplatedClockworkMage ns1:hasAlignment ns1:trueNeutral .\n\nns1:WyrmBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WyrmForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WyrmRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WyrmSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:WyrmSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:WyrmWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmlingBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmlingBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WyrmlingForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmlingGoldDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:WyrmlingGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WyrmlingRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmlingRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WyrmlingSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:WyrmlingSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:WyrmlingSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:WyrmlingUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WyrmlingWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Wyrmwraith ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Wyrwood ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wyvaran ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Wyvern ns1:hasAlignment ns1:trueNeutral .\n\nns1:Xacarba ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Xanthos ns1:hasAlignment ns1:trueNeutral .\n\nns1:Xaphan ns1:hasAlignment ns1:lawfulEvil .\n\nns1:XenarthIchorShark ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Xenopterid ns1:hasAlignment ns1:trueNeutral .\n\nns1:Xiao ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Xill ns1:hasAlignment ns1:lawfulEvil .\n\nns1:XillMatriarch ns1:hasAlignment ns1:lawfulEvil .\n\nns1:XillixLesserNelbarzoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ximtal ns1:hasAlignment ns1:neutralEvil .\n\nns1:XiuhCouatl ns1:hasAlignment ns1:neutralGood .\n\nns1:Xocothian ns1:hasAlignment ns1:trueNeutral .\n\nns1:Xocouatl ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Xorn ns1:hasAlignment ns1:trueNeutral .\n\nns1:Xtabay ns1:hasAlignment ns1:trueNeutral .\n\nns1:Xulgath ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Yaddithian ns1:hasAlignment ns1:trueNeutral .\n\nns1:Yaenit ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YamabushiTengu ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Yamah ns1:hasAlignment ns1:chaoticGood .\n\nns1:Yamaraj ns1:hasAlignment ns1:trueNeutral .\n\nns1:Yangethe ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Yaoguai ns1:hasAlignment ns1:trueNeutral .\n\nns1:Yarthoon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:YellowMuskCreeper ns1:hasAlignment ns1:trueNeutral .\n\nns1:YellowMuskZombie ns1:hasAlignment ns1:trueNeutral .\n\nns1:YethHound ns1:hasAlignment ns1:neutralEvil .\n\nns1:Yeti ns1:hasAlignment ns1:trueNeutral .\n\nns1:Yhohm ns1:hasAlignment ns1:neutralGood .\n\nns1:Yig ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Yithian ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:YithianElder ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Ymir ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Yothga ns1:hasAlignment ns1:neutralEvil .\n\nns1:YoungAdultBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungAdultBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:YoungAdultGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:YoungAdultRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungAdultRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:YoungAdultSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:YoungAdultSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:YoungAdultSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungAdultWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungApocalypseDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:YoungAstralDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungBlissDragon ns1:hasAlignment ns1:neutralGood .\n\nns1:YoungBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:YoungBrassDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:YoungCaveDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:YoungCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungCopperDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:YoungCrystalDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:YoungDreamDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungEdictDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:YoungEthericDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungGoldDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:YoungGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:YoungLunarDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:YoungMagmaDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:YoungMistDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungNightmareDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:YoungOccultDragon ns1:hasAlignment ns1:neutralGood .\n\nns1:YoungRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:YoungSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:YoungSilverDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:YoungSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:YoungSolarDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:YoungSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungTimeDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungUmbralDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:YoungVoidDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:YoungVortexDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:YoungWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungadultForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ypotryll ns1:hasAlignment ns1:trueNeutral .\n\nns1:Yrthak ns1:hasAlignment ns1:trueNeutral .\n\nns1:Yukionna ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Yurei ns1:hasAlignment ns1:neutralEvil .\n\nns1:Zalyakavat ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Zaramuun ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Zarxorin ns1:hasAlignment ns1:trueNeutral .\n\nns1:ZealotWraith ns1:hasAlignment ns1:neutralEvil .\n\nns1:Zelekhut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Zentragt ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Zeuglodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ZhenWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Zhyen ns1:hasAlignment ns1:trueNeutral .\n\nns1:Zohanil ns1:hasAlignment ns1:neutralEvil .\n\nns1:Zolavoi ns1:hasAlignment ns1:trueNeutral .\n\nns1:Zombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:ZombieHandservant ns1:hasAlignment ns1:neutralEvil .\n\nns1:ZombieHillGiant ns1:hasAlignment ns1:neutralEvil .\n\nns1:ZombieHorde ns1:hasAlignment ns1:neutralEvil .\n\nns1:ZombieWolf ns1:hasAlignment ns1:neutralEvil .\n\nns1:Zomok ns1:hasAlignment ns1:trueNeutral .\n\nns1:Zoog ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Zuishin ns1:hasAlignment ns1:lawfulGood .\n\nns1:Zuvembie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Zvucni ns1:hasAlignment ns1:neutralGood .\n\nns1:Zwerc ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:aasimar ns1:hasAlignment ns1:neutralGood .\n\nns1:caypup ns1:hasAlignment ns1:chaoticGood .\n\nns1:earthElementalHero ns1:hasAlignment ns1:trueNeutral .\n\nns1:greatwyrmSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:hangedman ns1:hasAlignment ns1:chaoticEvil .\n\nns1:headedPyrohydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:helixmothmature ns1:hasAlignment ns1:trueNeutral .\n\nns1:heraldoftsathogga ns1:hasAlignment ns1:chaoticEvil .\n\nns1:hoarfox ns1:hasAlignment ns1:trueNeutral .\n\nns1:juvenileCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:oldForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:oldUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:oldclouddragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:theFirebleeder ns1:hasAlignment ns1:chaoticEvil .\n\nns1:theMonarchWorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:veryYoungCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:veryoldUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:witchwyrd ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:wyrmSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:wyrmUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:wyrmclouddragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:wyrmlingCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:youngAdultCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:youngadultUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "subgraph",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:05.203409",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:44:20.961529",
        "Please generate a SPARQL query for the given RDF graph and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what is the most common alignment type\n\ngraph:\n```turtle\nl...```"
      ],
      [
        "response",
        "2024-05-13T13:44:22.781771",
        "```sparql\nSELECT ?alignmentType (COUNT(?alignmentType) AS ?count)\nWHERE {\n   ?x ns1:alignmentType ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1\n```"
      ],
      [
        "prompt",
        "2024-05-13T13:44:22.857239",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T13:44:24.751613",
        "```sparql\nSELECT ?alignmentType (COUNT(?alignmentType) AS ?count)\nWHERE {\n   ?x ns1:alignmentType ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1\n```"
      ],
      [
        "prompt",
        "2024-05-13T13:44:24.814969",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T13:44:26.164924",
        "```sparql\nSELECT ?alignmentType (COUNT(?alignmentType) AS ?count)\nWHERE {\n   ?x ns1:alignmentType ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:44:36.857003",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubgraph",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 703,
      "actualSize": 606
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,4 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ns1:cold .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:aasimar"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,4 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ns1:cold .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:aasimar"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary019",
      "question": "what creatures do have cold resist",
      "refSparql": "SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }",
      "refResultSet": [
        "ns1:aasimar"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:aasimar ns1:hasResists ns1:cold .\n\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "subgraph",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:01.892725",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:44:36.857010",
        "Please generate a SPARQL query for the given RDF graph and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what creatures do have cold resist\n\ngraph:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:aasimar ns1:hasResists ns1:cold .\n\n```"
      ],
      [
        "response",
        "2024-05-13T13:44:38.749728",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:44:49.866334",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubgraph",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 799,
      "actualSize": 1166
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:alignment \"chaotic good\" .\n  FILTER NOT EXISTS {\n    ?creature ns1:speaksLanguage \"draconic\" .\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:alignment \"chaotic good\" .\n+  FILTER NOT EXISTS {\n+    ?creature ns1:speaksLanguage \"draconic\" .\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:alignment \"chaotic good\" .\n  OPTIONAL {\n    ?creature ns1:speaksLanguage ?language .\n  }\n  FILTER (!BOUND(?language) || ?language != \"draconic\")\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:alignment \"chaotic good\" .\n+  OPTIONAL {\n+    ?creature ns1:speaksLanguage ?language .\n+  }\n+  FILTER (!BOUND(?language) || ?language != \"draconic\")\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:alignment \"chaotic good\" .\n  MINUS {\n    ?creature ns1:speaksLanguage \"draconic\" .\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:alignment \"chaotic good\" .\n+  MINUS {\n+    ?creature ns1:speaksLanguage \"draconic\" .\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:alignment \"chaotic good\" .\n  MINUS {\n    ?creature ns1:speaksLanguage \"draconic\" .\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:alignment \"chaotic good\" .\n+  MINUS {\n+    ?creature ns1:speaksLanguage \"draconic\" .\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary001",
      "question": "which creatures not speaking draconic language do have chaotic good alignment",
      "refSparql": "SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }",
      "refResultSet": [
        "ns1:Anhana",
        "ns1:Ataxian",
        "ns1:Azruverda",
        "ns1:BattleImp",
        "ns1:Biofreezer",
        "ns1:BlackButterfly",
        "ns1:Cayhound",
        "ns1:Caypup",
        "ns1:Celedeen",
        "ns1:Cynosoma",
        "ns1:Djinni",
        "ns1:Domovoi",
        "ns1:Dryad",
        "ns1:ElysianTitan",
        "ns1:Faun",
        "ns1:FungalNymph",
        "ns1:Gancanagh",
        "ns1:Garuda",
        "ns1:Hamadryad",
        "ns1:HeraldofDreams",
        "ns1:Munavri",
        "ns1:Muse",
        "ns1:Nisid",
        "ns1:NobleDjinniVizier",
        "ns1:Nymph",
        "ns1:RiftFlumph",
        "ns1:RimefireEidolon",
        "ns1:SapphireOoze",
        "ns1:SkirmishersTroop",
        "ns1:StarMonarch",
        "ns1:SwanMaiden",
        "ns1:Taniwha",
        "ns1:Unicorn",
        "ns1:WoodGiant",
        "ns1:caypup"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:AdultBrassDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AdultCopperDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AdultCrystalDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AdultSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AncientBrassDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AncientCopperDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AncientCrystalDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AncientSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Androsphinx ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Anhana ns1:hasAlignment ns1:chaoticGood .\n\nns1:Ataxian ns1:hasAlignment ns1:chaoticGood .\n\nns1:AuwazCouatl ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Azruverda ns1:hasAlignment ns1:chaoticGood .\n\nns1:BattleImp ns1:hasAlignment ns1:chaoticGood .\n\nns1:Biofreezer ns1:hasAlignment ns1:chaoticGood .\n\nns1:BlackButterfly ns1:hasAlignment ns1:chaoticGood .\n\nns1:Bralani ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonGreatWyrm ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonJuvenile ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonMatureAdult ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonOld ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonVeryOld ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonVeryYoung ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonWyrm ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonWyrmling ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonYoungAdult ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Brijidine ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Cayhound ns1:hasAlignment ns1:chaoticGood .\n\nns1:Caypup ns1:hasAlignment ns1:chaoticGood .\n\nns1:Celedeen ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonGreatWyrm ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonJuvenile ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonMatureAdult ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonOld ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonVeryOld ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonVeryYoung ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonWyrm ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonWyrmling ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonYoungAdult ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonGreatWyrm ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonJuvenile ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonMatureAdult ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonOld ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonVeryOld ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonVeryYoung ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonWyrm ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonWyrmling ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonYoungAdult ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Cynosoma ns1:hasAlignment ns1:chaoticGood .\n\nns1:Djinni ns1:hasAlignment ns1:chaoticGood .\n\nns1:Domovoi ns1:hasAlignment ns1:chaoticGood .\n\nns1:Dryad ns1:hasAlignment ns1:chaoticGood .\n\nns1:ElysianTitan ns1:hasAlignment ns1:chaoticGood .\n\nns1:FaerieDragonDracoFraudatioMinimus ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Faeriedragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Faun ns1:hasAlignment ns1:chaoticGood .\n\nns1:FungalNymph ns1:hasAlignment ns1:chaoticGood .\n\nns1:Gancanagh ns1:hasAlignment ns1:chaoticGood .\n\nns1:Garuda ns1:hasAlignment ns1:chaoticGood .\n\nns1:Hamadryad ns1:hasAlignment ns1:chaoticGood .\n\nns1:HeraldofDreams ns1:hasAlignment ns1:chaoticGood .\n\nns1:HeraldofFreedom ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:HeraldofFreedomandJustice ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:JuvenileSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:MatureAdultSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:MixCouatl ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Munavri ns1:hasAlignment ns1:chaoticGood .\n\nns1:Muse ns1:hasAlignment ns1:chaoticGood .\n\nns1:Nisid ns1:hasAlignment ns1:chaoticGood .\n\nns1:NobleDjinniVizier ns1:hasAlignment ns1:chaoticGood .\n\nns1:Nymph ns1:hasAlignment ns1:chaoticGood .\n\nns1:OldSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Prydanu ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Raelis ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:RiftFlumph ns1:hasAlignment ns1:chaoticGood .\n\nns1:RimefireEidolon ns1:hasAlignment ns1:chaoticGood .\n\nns1:SapphireOoze ns1:hasAlignment ns1:chaoticGood .\n\nns1:SkirmishersTroop ns1:hasAlignment ns1:chaoticGood .\n\nns1:StarMonarch ns1:hasAlignment ns1:chaoticGood .\n\nns1:StormGiant ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:SwanMaiden ns1:hasAlignment ns1:chaoticGood .\n\nns1:Taniwha ns1:hasAlignment ns1:chaoticGood .\n\nns1:TheHornedLord ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Thyrlien ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Uinuja ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Unicorn ns1:hasAlignment ns1:chaoticGood .\n\nns1:Veranallia ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:VeranalliaAzata ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:VeryYoungSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:VeryoldSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:WoodGiant ns1:hasAlignment ns1:chaoticGood .\n\nns1:WyrmlingSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Yamah ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:YoungAdultSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:YoungBrassDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:YoungCopperDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:YoungCrystalDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:YoungSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:caypup ns1:hasAlignment ns1:chaoticGood .\n\nns1:greatwyrmSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:wyrmSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "subgraph",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:09.805464",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:44:49.866343",
        "Please generate a SPARQL query for the given RDF graph and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:which creatures not speaking draconic language do have chaotic good alignment\n\ngraph:\n```turtle\nn...```"
      ],
      [
        "response",
        "2024-05-13T13:44:53.010647",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:alignment \"chaotic good\" .\n  FILTER NOT EXISTS {\n    ?creature ns1:speaksLanguage \"draconic\" .\n  }\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T13:44:53.034701",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T13:44:57.079227",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:alignment \"chaotic good\" .\n  OPTIONAL {\n    ?creature ns1:speaksLanguage ?language .\n  }\n  FILTER (!BOUND(?language) || ?language != \"draconic\")\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T13:44:57.146566",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T13:44:59.671798",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:alignment \"chaotic good\" .\n  MINUS {\n    ?creature ns1:speaksLanguage \"draconic\" .\n  }\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:45:11.149467",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubgraph",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 1470,
      "actualSize": 1016
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) AS ?creatureCount)\nWHERE {\n  ?creature ns1:hasLanguages ns1:TreantL .\n  OPTIONAL { ?creature ns1:hasAlignment ?alignment . }\n  FILTER(?alignment != ns1:trueNeutral || !BOUND(?alignment))\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) AS ?creatureCount)\n+WHERE {\n+  ?creature ns1:hasLanguages ns1:TreantL .\n+  OPTIONAL { ?creature ns1:hasAlignment ?alignment . }\n+  FILTER(?alignment != ns1:trueNeutral || !BOUND(?alignment))\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 0.6666666666666666,
        "sparqlIrisF1measure": 0.8,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 0.6666666666666666,
        "sparqlIrisSuffixF1measure": 0.8,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "4"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) AS ?creatureCount)\nWHERE {\n  ?creature ns1:hasLanguages ns1:TreantL .\n  OPTIONAL { ?creature ns1:hasAlignment ?alignment . }\n  FILTER(?alignment != ns1:trueNeutral || !BOUND(?alignment))\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) AS ?creatureCount)\n+WHERE {\n+  ?creature ns1:hasLanguages ns1:TreantL .\n+  OPTIONAL { ?creature ns1:hasAlignment ?alignment . }\n+  FILTER(?alignment != ns1:trueNeutral || !BOUND(?alignment))\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 0.6666666666666666,
        "sparqlIrisF1measure": 0.8,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 0.6666666666666666,
        "sparqlIrisSuffixF1measure": 0.8,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "4"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary005",
      "question": "how many creatures with non-neutral alignment do speak treant language",
      "refSparql": "SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }",
      "refResultSet": [
        "4"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:ArcticDruid ns1:hasLanguages ns1:TreantL .\n\nns1:Goemul ns1:hasLanguages ns1:TreantL .\n\nns1:ScytheTree ns1:hasLanguages ns1:TreantL .\n\nns1:Tobongo ns1:hasAlignment ns1:trueNeutral ;\n    ns1:hasLanguages ns1:TreantL .\n\nns1:Treant ns1:hasLanguages ns1:TreantL .\n\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "subgraph",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:03.907526",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:45:11.149474",
        "Please generate a SPARQL query for the given RDF graph and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:how many creatures with non-neutral alignment do speak treant language\n\ngraph:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:ArcticDruid ns1:hasLanguages ns1:TreantL .\n\nns1:Goemul ns1:hasLanguages ns1:TreantL .\n\nns1:ScytheTree ns1:hasLanguages ns1:TreantL .\n\nns1:Tobongo ns1:hasAlignment ns1:trueNeutral ;\n    ns1:hasLanguages ns1:TreantL .\n\nns1:Treant ns1:hasLanguages ns1:TreantL .\n\n```"
      ],
      [
        "response",
        "2024-05-13T13:45:15.056993",
        "```sparql\nSELECT (COUNT(?creature) AS ?creatureCount)\nWHERE {\n  ?creature ns1:hasLanguages ns1:TreantL .\n  OPTIONAL { ?creature ns1:hasAlignment ?alignment . }\n  FILTER(?alignment != ns1:trueNeutral || !BOUND(?alignment))\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:45:26.509652",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubgraph",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 1116,
      "actualSize": 920
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?commonSpell\nWHERE {\n  ns1:aasimar ns1:canSpell ?commonSpell.\n  ns1:caypup ns1:canSpell ?commonSpell.\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?commonSpell\n+WHERE {\n+  ns1:aasimar ns1:canSpell ?commonSpell.\n+  ns1:caypup ns1:canSpell ?commonSpell.\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:stabilize"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?commonSpell\nWHERE {\n  ns1:aasimar ns1:canSpell ?commonSpell.\n  ns1:caypup ns1:canSpell ?commonSpell.\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?commonSpell\n+WHERE {\n+  ns1:aasimar ns1:canSpell ?commonSpell.\n+  ns1:caypup ns1:canSpell ?commonSpell.\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:stabilize"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary007",
      "question": "what spells Aasimar and Caypup do have in common",
      "refSparql": "SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }",
      "refResultSet": [
        "ns1:stabilize"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:aasimar ns1:canSpell ns1:bless,\n        ns1:command,\n        ns1:daylight,\n        ns1:detectMagic,\n        ns1:guidance,\n        ns1:protectionFromEvil,\n        ns1:stabilize .\n\nns1:caypup ns1:canSpell ns1:dimensionDoor,\n        ns1:knock,\n        ns1:openClose,\n        ns1:stabilize .\n\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "subgraph",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:03.242991",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:45:26.509660",
        "Please generate a SPARQL query for the given RDF graph and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what spells Aasimar and Caypup do have in common\n\ngraph:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:aasimar ns1:canSpell ns1:bless,\n        ns1:command,\n        ns1:daylight,\n        ns1:detectMagic,\n        ns1:guidance,\n        ns1:protectionFromEvil,\n        ns1:stabilize .\n\nns1:caypup ns1:canSpell ns1:dimensionDoor,\n        ns1:knock,\n        ns1:openClose,\n        ns1:stabilize .\n\n```"
      ],
      [
        "response",
        "2024-05-13T13:45:29.752643",
        "```sparql\nSELECT ?commonSpell\nWHERE {\n  ns1:aasimar ns1:canSpell ?commonSpell.\n  ns1:caypup ns1:canSpell ?commonSpell.\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:45:41.636267",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubgraph",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 579,
      "actualSize": 1237
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignment (COUNT(?alignment) AS ?count)\nWHERE {\n  ?character ns1:alignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignment (COUNT(?alignment) AS ?count)\n+WHERE {\n+  ?character ns1:alignment ?alignment .\n+}\n+GROUP BY ?alignment\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignment (COUNT(?character) AS ?numberOfCharacters)\nWHERE {\n  ?character ns1:alignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?numberOfCharacters)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignment (COUNT(?character) AS ?numberOfCharacters)\n+WHERE {\n+  ?character ns1:alignment ?alignment .\n+}\n+GROUP BY ?alignment\n+ORDER BY DESC(?numberOfCharacters)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignmentType (COUNT(?character) as ?count)\nWHERE {\n  ?character <http://example.org/alignment> ?alignment .\n  ?alignment <http://www.w3.org/2000/01/rdf-schema#label> ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignmentType (COUNT(?character) as ?count)\n+WHERE {\n+  ?character <http://example.org/alignment> ?alignment .\n+  ?alignment <http://www.w3.org/2000/01/rdf-schema#label> ?alignmentType .\n+}\n+GROUP BY ?alignmentType\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignmentType (COUNT(?character) as ?count)\nWHERE {\n  ?character <http://example.org/alignment> ?alignment .\n  ?alignment <http://www.w3.org/2000/01/rdf-schema#label> ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignmentType (COUNT(?character) as ?count)\n+WHERE {\n+  ?character <http://example.org/alignment> ?alignment .\n+  ?alignment <http://www.w3.org/2000/01/rdf-schema#label> ?alignmentType .\n+}\n+GROUP BY ?alignmentType\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary011",
      "question": "what is the most common alignment type",
      "refSparql": "SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1",
      "refResultSet": [
        "ns1:trueNeutral"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1: ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aasimar ns1:hasAlignment ns1:neutralGood .\n\nns1:Aatheriexa ns1:hasAlignment ns1:neutralEvil .\n\nns1:Abaia ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aballonian ns1:hasAlignment ns1:trueNeutral .\n\nns1:AbandonedArmory ns1:hasAlignment ns1:neutralEvil .\n\nns1:AbasheenGenie ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aberrant ns1:hasAlignment ns1:neutralEvil .\n\nns1:Abhominal ns1:hasAlignment ns1:neutralEvil .\n\nns1:Aboleth ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Abrikandilu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AbyssGigas ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AbyssalBasilisk ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AbyssalCustodian ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AbyssalHarvester ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AbyssalLarva ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AbyssalWolf ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AccompliceDevilHesperian ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AccuserDevilZebub ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Achaierai ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AcidNaga ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AdamantineCobra ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdamantineGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdamantineWaspSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdaptiveOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Adaro ns1:hasAlignment ns1:neutralEvil .\n\nns1:Addanc ns1:hasAlignment ns1:neutralEvil .\n\nns1:AddictionDevilAtropocustra ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Addu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Adherer ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Adhukait ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Adlet ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AdolescentDarkYoung ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdultApocalypseDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdultAstralDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdultBlissDragon ns1:hasAlignment ns1:neutralGood .\n\nns1:AdultBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AdultBrassDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AdultBronzeDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:AdultCaveDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdultCloudDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AdultCopperDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AdultCrystalDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AdultDarkYoung ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdultDreamDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultEdictDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AdultEthericDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdultGoldDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:AdultGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AdultLunarDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AdultMagmaDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AdultMistDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultMithralDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultNightmareDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdultOccultDragon ns1:hasAlignment ns1:neutralGood .\n\nns1:AdultRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdultRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AdultSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AdultSilverDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:AdultSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:AdultSolarDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AdultSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultTimeDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultUmbralDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdultUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AdultVoidDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdultVortexDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AdultWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedAnimateDream ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedBulette ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedDraugr ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedEttercap ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedFrostWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedGiantFlytrap ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedGiantScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedHangmanTree ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedHorse ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedInvisibleStalker ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedLengSpider ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedLeukodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedLightningTreantppCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedMegaraptorSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedMummy ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedNightmare ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedNightwing ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedOgre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedTroglodyte ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedUnhallowedBodak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedUnhallowedTotenmaske ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedWoodGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aequoreal ns1:hasAlignment ns1:neutralGood .\n\nns1:AerialServant ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aerialservant ns1:hasAlignment ns1:trueNeutral .\n\nns1:AetherWysp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Afanc ns1:hasAlignment ns1:neutralEvil .\n\nns1:Aghash ns1:hasAlignment ns1:neutralEvil .\n\nns1:Aghasura ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Agnoia ns1:hasAlignment ns1:trueNeutral .\n\nns1:Agogwe ns1:hasAlignment ns1:trueNeutral .\n\nns1:Agorth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Agrawgh ns1:hasAlignment ns1:trueNeutral .\n\nns1:Agyra ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Ahkhat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ahlinni ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Ahmuuth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ahool ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ahooling ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ahuizotl ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ailuro ns1:hasAlignment ns1:trueNeutral .\n\nns1:AirElementalConstruct ns1:hasAlignment ns1:trueNeutral .\n\nns1:AirMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:AirShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:AirVeela ns1:hasAlignment ns1:trueNeutral .\n\nns1:AirWysp ns1:hasAlignment ns1:trueNeutral .\n\nns1:AirsuitSymbiontCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:AizskartzAsteroid ns1:hasAlignment ns1:neutralEvil .\n\nns1:Akaname ns1:hasAlignment ns1:trueNeutral .\n\nns1:Akaruzug ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Akata ns1:hasAlignment ns1:trueNeutral .\n\nns1:Akhana ns1:hasAlignment ns1:trueNeutral .\n\nns1:Akhlut ns1:hasAlignment ns1:trueNeutral .\n\nns1:Akizendri ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Akvan ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ala ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Alastor ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AlbinoCaveSolifugid ns1:hasAlignment ns1:trueNeutral .\n\nns1:AlbinoCaveSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:AlchemicAmoeba ns1:hasAlignment ns1:trueNeutral .\n\nns1:AlchemicalGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Algea ns1:hasAlignment ns1:trueNeutral .\n\nns1:Algoid ns1:hasAlignment ns1:trueNeutral .\n\nns1:Alligator ns1:hasAlignment ns1:trueNeutral .\n\nns1:Allip ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Allosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Almiraj ns1:hasAlignment ns1:trueNeutral .\n\nns1:Alp ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Alpluachra ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Alraune ns1:hasAlignment ns1:neutralEvil .\n\nns1:Alseid ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AluDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Aluum ns1:hasAlignment ns1:trueNeutral .\n\nns1:AmaimonDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Amalgamation ns1:hasAlignment ns1:trueNeutral .\n\nns1:Amanusya ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Amargasaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Amarok ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AmberOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ambergrim ns1:hasAlignment ns1:trueNeutral .\n\nns1:AmoebaSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Amon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Amphiptere ns1:hasAlignment ns1:trueNeutral .\n\nns1:Amphisbaena ns1:hasAlignment ns1:trueNeutral .\n\nns1:AmphisbaenaBasilisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:AmphisbaenaEncephalonGorger ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AncestralDragonTurtle ns1:hasAlignment ns1:neutralGood .\n\nns1:AncestralGorgon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientApocalypseDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AncientAstralDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AncientBlissDragon ns1:hasAlignment ns1:neutralGood .\n\nns1:AncientBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AncientBlueDragonRavener ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AncientBrassDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AncientCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientCopperDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AncientCrystalDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AncientDreamDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientEdictDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AncientEthericDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AncientGoldDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:AncientGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AncientGreenDragonRavener ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AncientLunarDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AncientMagmaDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AncientMistDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientMithralDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientNightmareDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AncientOccultDragon ns1:hasAlignment ns1:neutralGood .\n\nns1:AncientRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AncientRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AncientSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AncientSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:AncientSolarDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AncientSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientTimeDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientUmbralDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AncientUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AncientVoidDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AncientVortexDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AncientWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Andrenjinyi ns1:hasAlignment ns1:trueNeutral .\n\nns1:Android ns1:hasAlignment ns1:trueNeutral .\n\nns1:Androsphinx ns1:hasAlignment ns1:chaoticGood .\n\nns1:Anemos ns1:hasAlignment ns1:trueNeutral .\n\nns1:AngelicGuardian ns1:hasAlignment ns1:trueNeutral .\n\nns1:Anghenfil ns1:hasAlignment ns1:trueNeutral .\n\nns1:AngheuvoreMortic ns1:hasAlignment ns1:neutralEvil .\n\nns1:AngustidenShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Anhana ns1:hasAlignment ns1:chaoticGood .\n\nns1:AnimateAria ns1:hasAlignment ns1:trueNeutral .\n\nns1:AnimateDream ns1:hasAlignment ns1:neutralEvil .\n\nns1:AnimateHair ns1:hasAlignment ns1:neutralEvil .\n\nns1:AnimatedJackOLantern ns1:hasAlignment ns1:trueNeutral .\n\nns1:AnimatedManacles ns1:hasAlignment ns1:trueNeutral .\n\nns1:AnimatedShrineStone ns1:hasAlignment ns1:trueNeutral .\n\nns1:AnimatedStraitjacket ns1:hasAlignment ns1:trueNeutral .\n\nns1:Anisydaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ankheg ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ankhrav ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ankou ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ankylosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Annihilator ns1:hasAlignment ns1:trueNeutral .\n\nns1:AnnisHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AnnisHagAlterEgo ns1:hasAlignment ns1:trueNeutral .\n\nns1:AntLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:Antelope ns1:hasAlignment ns1:trueNeutral .\n\nns1:AnunnakiMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aoandon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Apallie ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aphorite ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ApkalluMR ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ApocalypseHorse ns1:hasAlignment ns1:neutralEvil .\n\nns1:ApocalypseLocustMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ApocalypseZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Apollyon ns1:hasAlignment ns1:neutralEvil .\n\nns1:ApostasyWraith ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ApostateDevilDeimavigga ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ApostleKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Apparition ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Aptom ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AquaticWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Arach ns1:hasAlignment ns1:neutralEvil .\n\nns1:ArachnidRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aranea ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aravax ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Arbiter ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Arcadex ns1:hasAlignment ns1:neutralEvil .\n\nns1:Arcanoplasm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Arcanotheign ns1:hasAlignment ns1:trueNeutral .\n\nns1:Archaeopteryx ns1:hasAlignment ns1:trueNeutral .\n\nns1:Archelon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArcherBush ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArcherfishGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArchonShield ns1:hasAlignment ns1:lawfulGood .\n\nns1:ArchonStar ns1:hasAlignment ns1:lawfulGood .\n\nns1:ArcticDruid ns1:hasAlignment ns1:neutralEvil .\n\nns1:ArcticHare ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArcticTern ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArgentWarden ns1:hasAlignment ns1:lawfulGood .\n\nns1:Argorth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ArgorthCinderscourge ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ArgusMR ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Armadillo ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArmoredClayGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArmoredOgreSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:ArmyAntSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Arrowhawk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Arsinoitherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:Asakku ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ascomoid ns1:hasAlignment ns1:trueNeutral .\n\nns1:AshGiant ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AshHag ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Asp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Asrai ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AssassinRingSymbiont ns1:hasAlignment ns1:trueNeutral .\n\nns1:AssassinVine ns1:hasAlignment ns1:trueNeutral .\n\nns1:Asswere ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Astradaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AstralDeva ns1:hasAlignment ns1:neutralGood .\n\nns1:AstralLeviathan ns1:hasAlignment ns1:trueNeutral .\n\nns1:AstralShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Asurendra ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AtamahutaOni ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ataxian ns1:hasAlignment ns1:chaoticGood .\n\nns1:Athach ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Atomie ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AtticWhisperer ns1:hasAlignment ns1:neutralEvil .\n\nns1:Atuikakura ns1:hasAlignment ns1:trueNeutral .\n\nns1:Augnagar ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AugurKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Aurochs ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aurosrath ns1:hasAlignment ns1:neutralEvil .\n\nns1:Aurspeily ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Aurumvorax ns1:hasAlignment ns1:trueNeutral .\n\nns1:AutomataDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AutumnDeath ns1:hasAlignment ns1:neutralEvil .\n\nns1:AuwazCouatl ns1:hasAlignment ns1:chaoticGood .\n\nns1:Avatarana ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AvatarofAlkumuoto ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Avoral ns1:hasAlignment ns1:neutralGood .\n\nns1:AwakenedDemilich ns1:hasAlignment ns1:neutralEvil .\n\nns1:AxeBeak ns1:hasAlignment ns1:trueNeutral .\n\nns1:AxialMonitor ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Axiomite ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AxiomiteGraveknight ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Azer ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AzizouPainDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Azruverda ns1:hasAlignment ns1:chaoticGood .\n\nns1:Azuretzi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BLOODHAWK ns1:hasAlignment ns1:trueNeutral .\n\nns1:Baal ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Baalzebul ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BaaphelDukeofHell ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Babau ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Babbler ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Baboon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bacallia ns1:hasAlignment ns1:trueNeutral .\n\nns1:Baccae ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BadWolfMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Badger ns1:hasAlignment ns1:trueNeutral .\n\nns1:Baetriov ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Bagiennik ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Bakekujira ns1:hasAlignment ns1:neutralEvil .\n\nns1:Baku ns1:hasAlignment ns1:trueNeutral .\n\nns1:BakuDreamweaver ns1:hasAlignment ns1:trueNeutral .\n\nns1:Balisse ns1:hasAlignment ns1:neutralGood .\n\nns1:BalisseAngel ns1:hasAlignment ns1:neutralGood .\n\nns1:Balor ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BalorLord ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Baluchitherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:Banderlog ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bandersnatch ns1:hasAlignment ns1:trueNeutral .\n\nns1:Banelight ns1:hasAlignment ns1:neutralEvil .\n\nns1:Banshee ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BaobhanSith ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Baphomet ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BaphometDemonLordofBeasts ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Barbatos ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BarbedDevilHamatula ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BarbedRam ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarbtonguedWyvern ns1:hasAlignment ns1:neutralEvil .\n\nns1:Baregara ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Barghest ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Baric ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarizouAssassinDemonCR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Barometz ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarracudaLarge ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarracudaMedium ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarracudaSmall ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarrierBreakerTroop ns1:hasAlignment ns1:neutralEvil .\n\nns1:BarrowRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarrowWight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Basidirond ns1:hasAlignment ns1:trueNeutral .\n\nns1:Basilisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Basilosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:BastionArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:BatMobat ns1:hasAlignment ns1:trueNeutral .\n\nns1:BatPlagueSwarmMR ns1:hasAlignment ns1:neutralEvil .\n\nns1:BatSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:BattleEmu ns1:hasAlignment ns1:trueNeutral .\n\nns1:BattleImp ns1:hasAlignment ns1:chaoticGood .\n\nns1:Baykok ns1:hasAlignment ns1:neutralEvil .\n\nns1:BeardedDevilBarbazu ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BeastDemonChaaor ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BeastDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:BeastmasterTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Bebilith ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Bedlam ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BeeMan ns1:hasAlignment ns1:neutralEvil .\n\nns1:BeetleGiantStag ns1:hasAlignment ns1:trueNeutral .\n\nns1:BegedhiParasite ns1:hasAlignment ns1:neutralEvil .\n\nns1:Beheaded ns1:hasAlignment ns1:neutralEvil .\n\nns1:BehemothGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:BehemothHippopotamus ns1:hasAlignment ns1:trueNeutral .\n\nns1:BehemothPudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:Behimiron ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Behir ns1:hasAlignment ns1:trueNeutral .\n\nns1:BeingofIb ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Belabra ns1:hasAlignment ns1:trueNeutral .\n\nns1:BelchingGiantBeheadedCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:BelchingMedusaHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:BelchingSeveredHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:Belial ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BelierDevilBdellavritra ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Belker ns1:hasAlignment ns1:neutralEvil .\n\nns1:BellyborerBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Belostomatid ns1:hasAlignment ns1:trueNeutral .\n\nns1:BeluiriTheTemptress ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Berbalang ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Bezravnis ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Bhole ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BholeHatchling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Bhuta ns1:hasAlignment ns1:neutralEvil .\n\nns1:Bibliodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Biclops ns1:hasAlignment ns1:trueNeutral .\n\nns1:Biddlytree ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Biddlywink ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BiddlywinkChrysalis ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Biggin ns1:hasAlignment ns1:trueNeutral .\n\nns1:Biloko ns1:hasAlignment ns1:neutralEvil .\n\nns1:Biofreezer ns1:hasAlignment ns1:chaoticGood .\n\nns1:BishaGaTsuku ns1:hasAlignment ns1:neutralEvil .\n\nns1:BishopAgathion ns1:hasAlignment ns1:neutralGood .\n\nns1:BisonCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:BlackBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:BlackButterfly ns1:hasAlignment ns1:chaoticGood .\n\nns1:BlackGoat ns1:hasAlignment ns1:neutralEvil .\n\nns1:BlackJinni ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BlackMagga ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BlackPudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:BlackScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:BlackShuck ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BlackSpotUrchin ns1:hasAlignment ns1:neutralEvil .\n\nns1:BlackWorm ns1:hasAlignment ns1:neutralEvil .\n\nns1:BlackwispEgret ns1:hasAlignment ns1:trueNeutral .\n\nns1:BlastShadow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BleedingHorrorMinotaur ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BlightedFeySatyr ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Blightrat ns1:hasAlignment ns1:neutralEvil .\n\nns1:Blightspawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Blindheim ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BlinkDog ns1:hasAlignment ns1:lawfulGood .\n\nns1:Blodeuwedd ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Blodeuweddqueen ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BloodAlgaeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodBramble ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodBush ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodCaterpillar ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodHag ns1:hasAlignment ns1:neutralEvil .\n\nns1:BloodKaktos ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BloodLily ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodMaize ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodOrc ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BloodOrchid ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BloodPudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodQueen ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BloodReaverDevilGaruginCR ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BloodWeird ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BloodWight ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bloodbrush ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodhazeMosquitoSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodplateBurster ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bloodsuckle ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodyBones ns1:hasAlignment ns1:neutralEvil .\n\nns1:BloodySkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:BlueRingedOctopus ns1:hasAlignment ns1:trueNeutral .\n\nns1:BlueWhale ns1:hasAlignment ns1:trueNeutral .\n\nns1:BluetipEurypterid ns1:hasAlignment ns1:trueNeutral .\n\nns1:Boalisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Boar ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoarDireDaeodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bodak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Bodythief ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BogBeast ns1:hasAlignment ns1:trueNeutral .\n\nns1:BogCreeper ns1:hasAlignment ns1:trueNeutral .\n\nns1:BogMummy ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BogNixie ns1:hasAlignment ns1:neutralEvil .\n\nns1:BogScum ns1:hasAlignment ns1:trueNeutral .\n\nns1:BogStrider ns1:hasAlignment ns1:trueNeutral .\n\nns1:BogStriderSeerQueen ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bogeyman ns1:hasAlignment ns1:neutralEvil .\n\nns1:Boggard ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Boggart ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Boggle ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Bogwid ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Bogwiggle ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Boilborn ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoneCobbler ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BoneCollective ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BoneCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoneCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoneDevilOsyluth ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BoneGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoneReaperReflection ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoneShip ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BonepowderGhoul ns1:hasAlignment ns1:neutralEvil .\n\nns1:Bonesnapper ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bonestorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Bonesucker ns1:hasAlignment ns1:neutralEvil .\n\nns1:Bonethorn ns1:hasAlignment ns1:trueNeutral .\n\nns1:BonewroughtWillow ns1:hasAlignment ns1:trueNeutral .\n\nns1:BookGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoreWormMonarch ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoreWormSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:BorealAnnisHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BorealManticore ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BorealWolf ns1:hasAlignment ns1:trueNeutral .\n\nns1:Boroboroton ns1:hasAlignment ns1:neutralEvil .\n\nns1:Boruta ns1:hasAlignment ns1:trueNeutral .\n\nns1:BotflySwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:BottledArmada ns1:hasAlignment ns1:trueNeutral .\n\nns1:Brachiosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrainMole ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrainMoleMonarch ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrainOoze ns1:hasAlignment ns1:neutralEvil .\n\nns1:BrainRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bralani ns1:hasAlignment ns1:chaoticGood .\n\nns1:Bramblelash ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrassDragonGreatWyrm ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonJuvenile ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonMatureAdult ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonOld ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonVeryOld ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonVeryYoung ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonWyrm ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonWyrmling ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonYoungAdult ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrassJuggernaut ns1:hasAlignment ns1:trueNeutral .\n\nns1:Brethedan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Brijidine ns1:hasAlignment ns1:chaoticGood .\n\nns1:Brimorak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BrimstoneOoze ns1:hasAlignment ns1:neutralEvil .\n\nns1:BrineDragonAncient ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonGreatWyrm ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonJuvenile ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonMatureAdult ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonOld ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonVeryOld ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonVeryYoung ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonWyrm ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonWyrmling ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonYoungAdult ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineSeaSerpent ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BrineZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Brinedragonadult ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BringDragonYoung ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BristleBoar ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrokenChild ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BrokenSoulLillend ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Brontotherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:BronzeDragonGreatWyrm ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonJuvenile ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonMatureAdult ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonOld ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonVeryOld ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonVeryYoung ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonWyrm ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonWyrmling ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonYoungAdult ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:BronzeSentinel ns1:hasAlignment ns1:trueNeutral .\n\nns1:Broodiken ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrownBearorGrizzlyKodiakRussianBrown ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrownPudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:Brownie ns1:hasAlignment ns1:trueNeutral .\n\nns1:Brume ns1:hasAlignment ns1:neutralEvil .\n\nns1:BrushThylacine ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrutalisDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BruteDemonBalban ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BruteWight ns1:hasAlignment ns1:trueNeutral .\n\nns1:Brykolakas ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Buckawn ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bugbear ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BugbearEchohusk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Buggane ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Bukavac ns1:hasAlignment ns1:neutralEvil .\n\nns1:Bulabar ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Bulette ns1:hasAlignment ns1:trueNeutral .\n\nns1:BullShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bunyip ns1:hasAlignment ns1:trueNeutral .\n\nns1:Buraq ns1:hasAlignment ns1:neutralGood .\n\nns1:Burleev ns1:hasAlignment ns1:trueNeutral .\n\nns1:BurningChild ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BurningDervish ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BurningGiantBeheaded ns1:hasAlignment ns1:neutralEvil .\n\nns1:BurningMedusaHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:BurningSeveredHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:Burrowling ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Burstigeit ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bushyasta ns1:hasAlignment ns1:neutralEvil .\n\nns1:Byakhee ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Bythos ns1:hasAlignment ns1:trueNeutral .\n\nns1:CAVEGIANT ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CHALKYDRI ns1:hasAlignment ns1:neutralGood .\n\nns1:CLOCKWORKSCOUT ns1:hasAlignment ns1:trueNeutral .\n\nns1:CRABMAN ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaasimolarFormerPresidentofHell ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Cacodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:CactusLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cadaver ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CadaverLord ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CairnLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CaizelDeposedQueenofSuccubi ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Calathgar ns1:hasAlignment ns1:trueNeutral .\n\nns1:Calikang ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:CallerinDarkness ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CalligraphyWyrm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Calpina ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Cambion ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Camel ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cameroceras ns1:hasAlignment ns1:trueNeutral .\n\nns1:CandleCorpse ns1:hasAlignment ns1:trueNeutral .\n\nns1:CandlestoneCourtier ns1:hasAlignment ns1:neutralEvil .\n\nns1:CannibalChild ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CannonGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:CanopyCreeper ns1:hasAlignment ns1:trueNeutral .\n\nns1:CanopyTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Cantor ns1:hasAlignment ns1:lawfulEvil .\n\nns1:CapacitorOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Capramace ns1:hasAlignment ns1:trueNeutral .\n\nns1:Carbuncle ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarbuncleChampion ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarbuncleCompanion ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarbuncleHero ns1:hasAlignment ns1:trueNeutral .\n\nns1:CardinalMartyr ns1:hasAlignment ns1:lawfulGood .\n\nns1:CarnivorousBlob ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarnivorousCrystal ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarrionBeast ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CarrionBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarrionClaw ns1:hasAlignment ns1:neutralEvil .\n\nns1:CarrionCreeper ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarrionGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarrionGolemMount ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarrionGolemstandin ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarrionMoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Carrionstorm ns1:hasAlignment ns1:neutralEvil .\n\nns1:CaryatidColumn ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaryatidGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cassisian ns1:hasAlignment ns1:neutralGood .\n\nns1:Castellan ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Cat ns1:hasAlignment ns1:trueNeutral .\n\nns1:CatLordPantherForm ns1:hasAlignment ns1:trueNeutral .\n\nns1:CatSith ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Cataboligne ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Caterprism ns1:hasAlignment ns1:trueNeutral .\n\nns1:Caterwaul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Catfolk ns1:hasAlignment ns1:neutralGood .\n\nns1:Catoblepas ns1:hasAlignment ns1:trueNeutral .\n\nns1:Catrina ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cauchemar ns1:hasAlignment ns1:trueNeutral .\n\nns1:Caulborn ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaulbornThoughtkeeper ns1:hasAlignment ns1:trueNeutral .\n\nns1:CauldronBloom ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveBlight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CaveCricket ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveFisher ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CaveLeech ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveMoray ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CavelightMoss ns1:hasAlignment ns1:trueNeutral .\n\nns1:CavernLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cayhound ns1:hasAlignment ns1:chaoticGood .\n\nns1:Caypup ns1:hasAlignment ns1:chaoticGood .\n\nns1:Cecaelia ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Celedeen ns1:hasAlignment ns1:chaoticGood .\n\nns1:Celedon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Centaur ns1:hasAlignment ns1:trueNeutral .\n\nns1:CentipedeGiantWhiptail ns1:hasAlignment ns1:trueNeutral .\n\nns1:CentipedeGreatForest ns1:hasAlignment ns1:trueNeutral .\n\nns1:CentipedeHissing ns1:hasAlignment ns1:trueNeutral .\n\nns1:CentipedeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:CentipedeTitan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cephalophore ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ceratioidi ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ceratosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cerberi ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Cerberus ns1:hasAlignment ns1:neutralEvil .\n\nns1:CerberusWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:CerebralStalker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CerebricCyst ns1:hasAlignment ns1:neutralEvil .\n\nns1:CerebricFungus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ceru ns1:hasAlignment ns1:neutralGood .\n\nns1:Cervapral ns1:hasAlignment ns1:neutralGood .\n\nns1:Cervinal ns1:hasAlignment ns1:neutralGood .\n\nns1:CervineProtector ns1:hasAlignment ns1:lawfulGood .\n\nns1:Cerynitis ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cetaceal ns1:hasAlignment ns1:neutralGood .\n\nns1:Cetus ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Ceustodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:ChagBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:ChainWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chalicotherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chalkost ns1:hasAlignment ns1:lawfulGood .\n\nns1:ChampionAutomaton ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ChampionofPeace ns1:hasAlignment ns1:neutralGood .\n\nns1:ChanequeMR ns1:hasAlignment ns1:neutralEvil .\n\nns1:Changeling ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ChaosBeast ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ChaosDemonChoronzon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CharauKa ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Charda ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ChariotBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:CharnelColossus ns1:hasAlignment ns1:neutralEvil .\n\nns1:CharnelGod ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CharnelWhisperer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Charon ns1:hasAlignment ns1:neutralEvil .\n\nns1:CharonBoatmanofthelowerplanesCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:Charonodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Charybdis ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Chavazvug ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Cheetah ns1:hasAlignment ns1:trueNeutral .\n\nns1:CheitanDjinni ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CheitanJanni ns1:hasAlignment ns1:neutralEvil .\n\nns1:Chelarac ns1:hasAlignment ns1:neutralEvil .\n\nns1:ChelaracBroodling ns1:hasAlignment ns1:neutralEvil .\n\nns1:Chelicerae ns1:hasAlignment ns1:neutralEvil .\n\nns1:Chelonidal ns1:hasAlignment ns1:neutralGood .\n\nns1:Chemosit ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chernobue ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Cherufe ns1:hasAlignment ns1:neutralEvil .\n\nns1:Cherum ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chickcharney ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chicken ns1:hasAlignment ns1:trueNeutral .\n\nns1:ChickenCoop ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chikfari ns1:hasAlignment ns1:trueNeutral .\n\nns1:ChildoftheBriar ns1:hasAlignment ns1:neutralEvil .\n\nns1:Chimera ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Chimpanzee ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chiropteal ns1:hasAlignment ns1:neutralGood .\n\nns1:Chitikin ns1:hasAlignment ns1:trueNeutral .\n\nns1:Choker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ChokerBrute ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CholericOozeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:ChonChon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ChonChonSwarm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Choral ns1:hasAlignment ns1:neutralGood .\n\nns1:ChortDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Choxani ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ChrestomathCaulborn ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chronogeist ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Chrystone ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chupacabra ns1:hasAlignment ns1:trueNeutral .\n\nns1:ChurchGrim ns1:hasAlignment ns1:lawfulGood .\n\nns1:Churr ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chuspiki ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Chuul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ChuulLesser ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Chyzaedu ns1:hasAlignment ns1:lawfulEvil .\n\nns1:CicadaSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cikavak ns1:hasAlignment ns1:trueNeutral .\n\nns1:CinderGhoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CinderWolf ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cinderghost ns1:hasAlignment ns1:neutralEvil .\n\nns1:Cipactli ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ClackingSkullSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:ClamGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:Clamor ns1:hasAlignment ns1:trueNeutral .\n\nns1:Clawbat ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClawedKadian ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ClayGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:CliffGiant ns1:hasAlignment ns1:neutralGood .\n\nns1:Cloaker ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ClockworkAdvancedBronzeGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkAngel ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkAssassin ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkBrainGear ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkDrone ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkExcavator ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkFamiliar ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkFiend ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkGoblin ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkGoliath ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkGuardian ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkGunslinger ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkHound ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkHuntsman ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkLeviathan ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkMage ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkMyrmidon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkNautiloid ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkOverseer ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkParasite ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkPriest ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkReliquary ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ClockworkServant ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkSoldier ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkSongbird ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkSpy ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkSteed ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkTitan ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkWarrior ns1:hasAlignment ns1:trueNeutral .\n\nns1:CloudDragonAncient ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonGreatWyrm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonJuvenile ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonMatureAdult ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonOld ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonVeryOld ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonVeryYoung ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonWyrm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonWyrmling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonYoung ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonYoungAdult ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudGiantSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:ClowderofCats ns1:hasAlignment ns1:trueNeutral .\n\nns1:CobraBackInphidian ns1:hasAlignment ns1:neutralEvil .\n\nns1:CobraFlower ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cockatrice ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cockroach ns1:hasAlignment ns1:trueNeutral .\n\nns1:CockroachGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:CockroachSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:CodexArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:CofferCorpse ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CoffinAnemone ns1:hasAlignment ns1:trueNeutral .\n\nns1:ColdMutatedOgreSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:ColdRider ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ColdsnapBasilisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Colliatur ns1:hasAlignment ns1:neutralGood .\n\nns1:ColossalAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:ColourOutofSpace ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Coloxus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CombatTrainedWolliped ns1:hasAlignment ns1:trueNeutral .\n\nns1:Combusted ns1:hasAlignment ns1:neutralEvil .\n\nns1:CommandoConstruct ns1:hasAlignment ns1:trueNeutral .\n\nns1:CommonBat ns1:hasAlignment ns1:trueNeutral .\n\nns1:CommonDrow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CommonEurypterid ns1:hasAlignment ns1:trueNeutral .\n\nns1:CommonInphidian ns1:hasAlignment ns1:neutralEvil .\n\nns1:CommonMite ns1:hasAlignment ns1:lawfulEvil .\n\nns1:CommonTimeElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ComozantWyrd ns1:hasAlignment ns1:trueNeutral .\n\nns1:Compsognathus ns1:hasAlignment ns1:trueNeutral .\n\nns1:ConfoundingBandersnatch ns1:hasAlignment ns1:trueNeutral .\n\nns1:ConquerorWorm ns1:hasAlignment ns1:neutralEvil .\n\nns1:ConstrictorSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:Contemplative ns1:hasAlignment ns1:trueNeutral .\n\nns1:ContractDevilPhistophilus ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Cooshee ns1:hasAlignment ns1:trueNeutral .\n\nns1:CopperDragonGreatWyrm ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonJuvenile ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonMatureAdult ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonOld ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonVeryOld ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonVeryYoung ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonWyrm ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonWyrmling ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonYoungAdult ns1:hasAlignment ns1:chaoticGood .\n\nns1:Copsewight ns1:hasAlignment ns1:neutralEvil .\n\nns1:CoralCapuchin ns1:hasAlignment ns1:trueNeutral .\n\nns1:CoralDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:CoralGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:CorpseCandle ns1:hasAlignment ns1:neutralEvil .\n\nns1:CorpseLotus ns1:hasAlignment ns1:trueNeutral .\n\nns1:CorpseOrgy ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CorpseRook ns1:hasAlignment ns1:trueNeutral .\n\nns1:CorpsefeasterOtyugh ns1:hasAlignment ns1:trueNeutral .\n\nns1:Corpsespinner ns1:hasAlignment ns1:trueNeutral .\n\nns1:CorpsewaterBogMummy ns1:hasAlignment ns1:lawfulEvil .\n\nns1:CorpulentGhoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Couatl ns1:hasAlignment ns1:lawfulGood .\n\nns1:CovenOctopus ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:CovenOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrabCoconut ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrabGreatReef ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrabHermitGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:CracklingSkullSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:CragMan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CrawlingHand ns1:hasAlignment ns1:neutralEvil .\n\nns1:CrawlingHandGiant ns1:hasAlignment ns1:neutralEvil .\n\nns1:CreamfootFennec ns1:hasAlignment ns1:trueNeutral .\n\nns1:CreeperIvy ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrimsonBasilisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrimsonDeath ns1:hasAlignment ns1:neutralEvil .\n\nns1:CrimsonJellyfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrimsonWhale ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrimsonWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Criosphinx ns1:hasAlignment ns1:trueNeutral .\n\nns1:Crocodile ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrocodileDire ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrocodileZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:CroneQueen ns1:hasAlignment ns1:neutralEvil .\n\nns1:Crucidaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:CrucifixionSpirit ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Cryohydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:CryptFlower ns1:hasAlignment ns1:trueNeutral .\n\nns1:CryptThing ns1:hasAlignment ns1:neutralEvil .\n\nns1:Cryptguard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Crysmal ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrystalDragonGreatWyrm ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonJuvenile ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonMatureAdult ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonOld ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonVeryOld ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonVeryYoung ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonWyrm ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonWyrmling ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonYoungAdult ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrystalOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrystallineHorror ns1:hasAlignment ns1:neutralEvil .\n\nns1:Crystallis ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cuero ns1:hasAlignment ns1:trueNeutral .\n\nns1:CultistTroop ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CursedBeast ns1:hasAlignment ns1:neutralEvil .\n\nns1:CursedKing ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CutlassSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cyclops ns1:hasAlignment ns1:neutralEvil .\n\nns1:Cynosoma ns1:hasAlignment ns1:chaoticGood .\n\nns1:Cyphergull ns1:hasAlignment ns1:trueNeutral .\n\nns1:CystTrinityHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Cythnigot ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Cytillipede ns1:hasAlignment ns1:trueNeutral .\n\nns1:Daggocrustler ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dagon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DagonDemonPrinceoftheSea ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Dahzagan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Daitengu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dakon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Dallo ns1:hasAlignment ns1:trueNeutral .\n\nns1:DamnationBook ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Damned ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DanavaMR ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:DancerInphidian ns1:hasAlignment ns1:neutralEvil .\n\nns1:Dandasuka ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DanseMacabre ns1:hasAlignment ns1:neutralEvil .\n\nns1:Danthienne ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Dapsara ns1:hasAlignment ns1:neutralGood .\n\nns1:DarakhulOgre ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DarkAngel ns1:hasAlignment ns1:neutralEvil .\n\nns1:DarkCaller ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DarkCreeper ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DarkDancer ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DarkEmpath ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DarkIceGrig ns1:hasAlignment ns1:neutralGood .\n\nns1:DarkMatterEntropicOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:DarkScionDwarf ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DarkSlayer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DarkStalker ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DarkYoungofShubNiggurath ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Darkling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Darkmantle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Darnoc ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DaughterofShubNiggurath ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DaughteroftheDead ns1:hasAlignment ns1:neutralEvil .\n\nns1:DeadfallScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:DeadlyMantis ns1:hasAlignment ns1:trueNeutral .\n\nns1:DeathButterflySwarm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeathCoach ns1:hasAlignment ns1:neutralEvil .\n\nns1:DeathDog ns1:hasAlignment ns1:neutralEvil .\n\nns1:DeathWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Deathhand ns1:hasAlignment ns1:neutralEvil .\n\nns1:DeathleechHornedDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DeathlessSorcerer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeathsHeadJellyfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:Deathsnatcher ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeathtrapOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Deathweb ns1:hasAlignment ns1:trueNeutral .\n\nns1:DebasedAsrai ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DebasedNixie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Decapus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeepBadger ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeepHunterSeaSerpent ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:DeepMerfolk ns1:hasAlignment ns1:trueNeutral .\n\nns1:DeepNaga ns1:hasAlignment ns1:neutralEvil .\n\nns1:DeepOne ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeepOneHybrid ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeepOneScion ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeepSeaSerpent ns1:hasAlignment ns1:trueNeutral .\n\nns1:DeepSingerWhale ns1:hasAlignment ns1:trueNeutral .\n\nns1:DeepWalker ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DeepsightGogglesSymbiont ns1:hasAlignment ns1:trueNeutral .\n\nns1:Deer ns1:hasAlignment ns1:trueNeutral .\n\nns1:DefenderGlobe ns1:hasAlignment ns1:trueNeutral .\n\nns1:DegenerateOgre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DegenerateSerpentfolk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Deinochos ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Deinonychus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Deinosuchus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Deinotherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:Delgeth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Delver ns1:hasAlignment ns1:trueNeutral .\n\nns1:Demammoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:DemiLich ns1:hasAlignment ns1:neutralEvil .\n\nns1:Demilich ns1:hasAlignment ns1:neutralEvil .\n\nns1:Demiurge ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DemonStone ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DemonicDeadfallScorpion ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DemonicKnight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DemonicMohrg ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DemorielTwiceExiledSeductress ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DenizenofLeng ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DerakniLocustDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Derghodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Derhii ns1:hasAlignment ns1:trueNeutral .\n\nns1:Derro ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DerroFetalSavant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DerroMagister ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DesertBlight ns1:hasAlignment ns1:neutralEvil .\n\nns1:DesertDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:DesertGiant ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:DespicableSnowman ns1:hasAlignment ns1:neutralEvil .\n\nns1:Destrachan ns1:hasAlignment ns1:neutralEvil .\n\nns1:DevastatorMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DevilDog ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DevilMonkey ns1:hasAlignment ns1:trueNeutral .\n\nns1:DevilSteed ns1:hasAlignment ns1:neutralEvil .\n\nns1:Devilfish ns1:hasAlignment ns1:neutralEvil .\n\nns1:Devourer ns1:hasAlignment ns1:neutralEvil .\n\nns1:DevouringMist ns1:hasAlignment ns1:neutralEvil .\n\nns1:Dhampir ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Dhole ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DholeHatchling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DiamondSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Diatryma ns1:hasAlignment ns1:trueNeutral .\n\nns1:Digester ns1:hasAlignment ns1:trueNeutral .\n\nns1:Digmaul ns1:hasAlignment ns1:trueNeutral .\n\nns1:DimensionWalker ns1:hasAlignment ns1:neutralEvil .\n\nns1:DimensionalShambler ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Dimetrodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dimorphodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Diplodocus ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireApeGigantopithecus ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireBadger ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireBarracuda ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireBat ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireBison ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireCorby ns1:hasAlignment ns1:neutralEvil .\n\nns1:DireCorgi ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireElectricEel ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireFlytrap ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireGhoulWolf ns1:hasAlignment ns1:neutralEvil .\n\nns1:DireGoat ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireGrasshopperMouse ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireHippopotamusBehemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireHyena ns1:hasAlignment ns1:trueNeutral .\n\nns1:DirePolarBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:DirePorcupine ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireRacoon ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireRam ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireRatCompanionLevel ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireShadowRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireSharkMegalodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireSloth ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireSmilodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireWeasel ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireWolf ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireWolfwere ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DireWolverine ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireorCaveBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:DiseasedRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Disenchanter ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dispater ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DivineGuardianHydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:Djinni ns1:hasAlignment ns1:chaoticGood .\n\nns1:Dlurgraven ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dodo ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dog ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dogmole ns1:hasAlignment ns1:trueNeutral .\n\nns1:DogmoleJuggernaut ns1:hasAlignment ns1:trueNeutral .\n\nns1:DollDevilArusities ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Dolphin ns1:hasAlignment ns1:trueNeutral .\n\nns1:DomesticatedorWildWolliped ns1:hasAlignment ns1:trueNeutral .\n\nns1:DominationDevilGladiatrix ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Domovoi ns1:hasAlignment ns1:chaoticGood .\n\nns1:DonkeyRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Donratty ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Doombat ns1:hasAlignment ns1:neutralEvil .\n\nns1:Doorwarden ns1:hasAlignment ns1:trueNeutral .\n\nns1:Doppeldrek ns1:hasAlignment ns1:trueNeutral .\n\nns1:Doppelrat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Doru ns1:hasAlignment ns1:neutralEvil .\n\nns1:Dorvae ns1:hasAlignment ns1:neutralEvil .\n\nns1:DosojinKami ns1:hasAlignment ns1:neutralGood .\n\nns1:Dossenus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Draaki ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dracolisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Draconal ns1:hasAlignment ns1:neutralGood .\n\nns1:Draconid ns1:hasAlignment ns1:trueNeutral .\n\nns1:DraftHeavyHorse ns1:hasAlignment ns1:trueNeutral .\n\nns1:Draghul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DragonHorse ns1:hasAlignment ns1:neutralGood .\n\nns1:DragonTurtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dragonfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:DragonflyGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:DragonflyGiantNymph ns1:hasAlignment ns1:trueNeutral .\n\nns1:DragonhideGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dragonkin ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:DragonleafTreepp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dragonne ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dragonnel ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dragonship ns1:hasAlignment ns1:trueNeutral .\n\nns1:DrakainiaMR ns1:hasAlignment ns1:neutralEvil .\n\nns1:Drakauthix ns1:hasAlignment ns1:trueNeutral .\n\nns1:Draug ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Draugr ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DreadCorby ns1:hasAlignment ns1:neutralEvil .\n\nns1:DreadWraith ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DreadZombieAasimarWarrior ns1:hasAlignment ns1:trueNeutral .\n\nns1:DreamEater ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DreamImpCompanion ns1:hasAlignment ns1:neutralGood .\n\nns1:DreamImpCousin ns1:hasAlignment ns1:neutralGood .\n\nns1:DreamImpHero ns1:hasAlignment ns1:neutralGood .\n\nns1:DreamSpectre ns1:hasAlignment ns1:neutralEvil .\n\nns1:DreamSpectreNightmareCreature ns1:hasAlignment ns1:neutralEvil .\n\nns1:DreamSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:DreamVestigeMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DreamthiefHag ns1:hasAlignment ns1:neutralEvil .\n\nns1:Drekavac ns1:hasAlignment ns1:neutralEvil .\n\nns1:Dretch ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DrochaSwarm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DrowNoble ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DrownedMaiden ns1:hasAlignment ns1:neutralEvil .\n\nns1:DrowningDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Dryad ns1:hasAlignment ns1:chaoticGood .\n\nns1:Duergar ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DuergarTyrant ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Dullahan ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DunPudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:Duneshaker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dunkleosteus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Duppy ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DuskKamadan ns1:hasAlignment ns1:neutralEvil .\n\nns1:Duskwalker ns1:hasAlignment ns1:trueNeutral .\n\nns1:DustDigger ns1:hasAlignment ns1:trueNeutral .\n\nns1:DustGhoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DustMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dvorovoi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DwarfCaiman ns1:hasAlignment ns1:trueNeutral .\n\nns1:DweomerCap ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dweomercat ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DweomercatCub ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Dwiergeth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Dybbuk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Dyme ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Dziriak ns1:hasAlignment ns1:trueNeutral .\n\nns1:D\u00f8delig ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Eagle ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthElementalBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthElementalChampion ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthElementalConstruct ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthElementalSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthVeela ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthWysp ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthYaiOni ns1:hasAlignment ns1:neutralEvil .\n\nns1:EarthenSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Earthfiend ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EarthkingKaiju ns1:hasAlignment ns1:neutralGood .\n\nns1:Eblis ns1:hasAlignment ns1:neutralEvil .\n\nns1:EbonOoze ns1:hasAlignment ns1:neutralEvil .\n\nns1:EbonyGelatinousCube ns1:hasAlignment ns1:trueNeutral .\n\nns1:Echeneis ns1:hasAlignment ns1:trueNeutral .\n\nns1:EclipseGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ecorche ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EcstasyFeeder ns1:hasAlignment ns1:neutralEvil .\n\nns1:EctoplasmghostOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:EctoplasmicHuman ns1:hasAlignment ns1:trueNeutral .\n\nns1:Edimmu ns1:hasAlignment ns1:trueNeutral .\n\nns1:EelHound ns1:hasAlignment ns1:trueNeutral .\n\nns1:Efreeti ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EfreetiJanissary ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Egophage ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Egregore ns1:hasAlignment ns1:trueNeutral .\n\nns1:Einherji ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:EirisaiAncestor ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:EirisaiGreater ns1:hasAlignment ns1:trueNeutral .\n\nns1:EirisaiLesser ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:EirisaiMaster ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:EirisaiMedial ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Elasmosarus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Elasmotherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElasmotheriumGiantWoolyRhinoCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Elawah ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ElderAcidQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderAetherElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderAirElemental ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ElderColdironElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderDeepOne ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ElderEarthElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderFireElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderIceElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderLightningElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderMagmaElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderMudElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderNegativeEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderNirento ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderObsidianQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderPositiveEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderPsionicElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderThing ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ElderWaterElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderWitchlight ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderWorg ns1:hasAlignment ns1:neutralEvil .\n\nns1:ElderWyrm ns1:hasAlignment ns1:trueNeutral .\n\nns1:EldritchSteamMephit ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ElectricCube ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElectricEel ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElectricFroghemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElementalAirDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElementalDrake ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ElementalEarthDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElementalFireDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElementalWaterDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Elephant ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElephantSeal ns1:hasAlignment ns1:trueNeutral .\n\nns1:EliteShadowMastiff ns1:hasAlignment ns1:neutralEvil .\n\nns1:Elk ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElohimMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElusaHound ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElysianTitan ns1:hasAlignment ns1:chaoticGood .\n\nns1:EmbalmingGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:EmberWeaver ns1:hasAlignment ns1:trueNeutral .\n\nns1:Embolotherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:EmeraldOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Emkrah ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EmotionOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:EmperorBird ns1:hasAlignment ns1:trueNeutral .\n\nns1:EmperorCobra ns1:hasAlignment ns1:trueNeutral .\n\nns1:EmperorKirin ns1:hasAlignment ns1:lawfulGood .\n\nns1:EmperorStag ns1:hasAlignment ns1:trueNeutral .\n\nns1:EmperorWalrus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Emperorofscales ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EmpressBoreWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Empusa ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Empyreal ns1:hasAlignment ns1:lawfulGood .\n\nns1:Empyrean ns1:hasAlignment ns1:neutralGood .\n\nns1:Emu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Encantado ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:EncephalonGorger ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EncephalonGorgerPsychic ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EnchanterHeron ns1:hasAlignment ns1:trueNeutral .\n\nns1:EnergizedIceGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:EnergyProtectionSymbiont ns1:hasAlignment ns1:trueNeutral .\n\nns1:Enisysian ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EnlightenedConstructClockworkSoldier ns1:hasAlignment ns1:neutralEvil .\n\nns1:EnlightenedContemplative ns1:hasAlignment ns1:trueNeutral .\n\nns1:EnormousReefclaw ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:EnslavedSpawn ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EntropicOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:EnvironmentalSuitSymbiont ns1:hasAlignment ns1:trueNeutral .\n\nns1:Enzyme ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ercinee ns1:hasAlignment ns1:trueNeutral .\n\nns1:EremiteKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EremiteSymbiont ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EremiteWizard ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ErinatGremlin ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Erlking ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Erodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Escorite ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Esipil ns1:hasAlignment ns1:neutralEvil .\n\nns1:Esobok ns1:hasAlignment ns1:trueNeutral .\n\nns1:EtherDrake ns1:hasAlignment ns1:trueNeutral .\n\nns1:EtherealFilcher ns1:hasAlignment ns1:trueNeutral .\n\nns1:EtherealGraveyardTool ns1:hasAlignment ns1:trueNeutral .\n\nns1:EtherealMarauder ns1:hasAlignment ns1:trueNeutral .\n\nns1:EtherealRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:EthericJelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:Etheroot ns1:hasAlignment ns1:trueNeutral .\n\nns1:Etiainen ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Etioling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Ettercap ns1:hasAlignment ns1:neutralEvil .\n\nns1:Euryale ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EvilEye ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ExecutionerDevilMunagola ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ExecutionersHood ns1:hasAlignment ns1:trueNeutral .\n\nns1:ExiledShade ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ExoskeletonGiantCockroach ns1:hasAlignment ns1:neutralEvil .\n\nns1:ExoskeletonGiantStagBeetle ns1:hasAlignment ns1:neutralEvil .\n\nns1:ExoskeletonTitanCentipede ns1:hasAlignment ns1:neutralEvil .\n\nns1:ExsanguinatorDaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Exscinder ns1:hasAlignment ns1:lawfulGood .\n\nns1:EyeEater ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EyeKiller ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EyeSentinel ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EyeoftheDeep ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EyeoftheWatcher ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FacelessDemonGallu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FacelessDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FacelessFleshGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:FacelessHulkUgoroth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FacelessStalkerUgothol ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FacelessWhale ns1:hasAlignment ns1:trueNeutral .\n\nns1:Fachen ns1:hasAlignment ns1:neutralEvil .\n\nns1:FadingFox ns1:hasAlignment ns1:trueNeutral .\n\nns1:FaerieDragonDracoFraudatioMinimus ns1:hasAlignment ns1:chaoticGood .\n\nns1:FaerieMount ns1:hasAlignment ns1:trueNeutral .\n\nns1:FaerieSeer ns1:hasAlignment ns1:trueNeutral .\n\nns1:Faeriedragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:FailedApotheosisMimic ns1:hasAlignment ns1:neutralEvil .\n\nns1:Fallen ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FalseSpiderPedipalp ns1:hasAlignment ns1:trueNeutral .\n\nns1:FalseSpiderSolifugid ns1:hasAlignment ns1:trueNeutral .\n\nns1:FamiliarAutomaton ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FangedSeaSerpent ns1:hasAlignment ns1:trueNeutral .\n\nns1:FastZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Fastachee ns1:hasAlignment ns1:neutralGood .\n\nns1:Faun ns1:hasAlignment ns1:chaoticGood .\n\nns1:FearEater ns1:hasAlignment ns1:neutralEvil .\n\nns1:FearGuard ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Feargaunt ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FeliusDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Fellforged ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FellnightSpriggan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Fellsig ns1:hasAlignment ns1:neutralEvil .\n\nns1:FenMauler ns1:hasAlignment ns1:neutralEvil .\n\nns1:FenWitch ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FeralHogTroop ns1:hasAlignment ns1:trueNeutral .\n\nns1:FeralTitanLord ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:FerrousGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:FesteringSpirit ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Festrog ns1:hasAlignment ns1:neutralEvil .\n\nns1:Fetch ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FetchlingKayal ns1:hasAlignment ns1:trueNeutral .\n\nns1:FetidSporeMound ns1:hasAlignment ns1:trueNeutral .\n\nns1:FetidStray ns1:hasAlignment ns1:neutralEvil .\n\nns1:Fext ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FeyGiantToad ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:FeyWolverine ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Feyling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:FeywardTree ns1:hasAlignment ns1:trueNeutral .\n\nns1:FiendInfusedStoneGolem ns1:hasAlignment ns1:neutralEvil .\n\nns1:FiendishHeavyWarHorse ns1:hasAlignment ns1:neutralEvil .\n\nns1:FieryCorpseOrgy ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Firbolg ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireBirdCompanion ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireCrabGreater ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireCrabLesser ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireDrake ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireElementalConstruct ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireFish ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireGiant ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FireInfusedTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FireLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireNymph ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:FirePhantom ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FireSalamander ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireVampire ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FireVeela ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireWhale ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireWysp ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireYai ns1:hasAlignment ns1:neutralEvil .\n\nns1:Firebird ns1:hasAlignment ns1:neutralGood .\n\nns1:Firefiend ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FirefootFennec ns1:hasAlignment ns1:trueNeutral .\n\nns1:FjordLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FlagstoneGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlailSnail ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlailSnailFrogGodGames ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlameDrake ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FlameSpawnedTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FlamebrotherSalamander ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FlamingSkull ns1:hasAlignment ns1:neutralEvil .\n\nns1:FlappingHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:FlashBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlayerDevilMarzach ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FleaGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:FleshColossusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:FleshGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:FleshGolemHound ns1:hasAlignment ns1:trueNeutral .\n\nns1:FleshdollRogue ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Fleshdreg ns1:hasAlignment ns1:neutralEvil .\n\nns1:FleshdregSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:FlightPack ns1:hasAlignment ns1:trueNeutral .\n\nns1:FloatingEye ns1:hasAlignment ns1:trueNeutral .\n\nns1:FloodTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FloodslainArsinoitherium ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FloodslainOrc ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FlotsamTerror ns1:hasAlignment ns1:neutralEvil .\n\nns1:FloweringLattice ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlueHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Flumph ns1:hasAlignment ns1:lawfulGood .\n\nns1:Fluxwraith ns1:hasAlignment ns1:neutralEvil .\n\nns1:FlyGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlyingFox ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlyingPolyp ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FlyingSquirrel ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlytrapLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:Fogwarden ns1:hasAlignment ns1:neutralEvil .\n\nns1:FomorianTitanMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FooDog ns1:hasAlignment ns1:neutralGood .\n\nns1:ForestBlight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ForestDrake ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ForestGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ForestersBane ns1:hasAlignment ns1:trueNeutral .\n\nns1:ForgeSpurned ns1:hasAlignment ns1:neutralEvil .\n\nns1:ForgefiendScanderig ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ForgottenOne ns1:hasAlignment ns1:trueNeutral .\n\nns1:ForkedCat ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ForkedTailWyvern ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Forlarren ns1:hasAlignment ns1:neutralEvil .\n\nns1:FormianHiveQueen ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormianMyrmarch ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormianQueen ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormianRoyalGuard ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormianTaskmaster ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormianWarrior ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormianWorker ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormlessSpawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FortunesellerGoblin ns1:hasAlignment ns1:trueNeutral .\n\nns1:Fossegrim ns1:hasAlignment ns1:neutralEvil .\n\nns1:FossilGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:FourArmedGargoyle ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FourArmedMudraSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:FourArmedSahuaginMutant ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Fox ns1:hasAlignment ns1:trueNeutral .\n\nns1:Foxwere ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FrazUrbluuDemonPrinceofDeception ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FreezingFlow ns1:hasAlignment ns1:trueNeutral .\n\nns1:FreshwaterMerrow ns1:hasAlignment ns1:neutralEvil .\n\nns1:FrogDemonGreruor ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FrogFather ns1:hasAlignment ns1:trueNeutral .\n\nns1:FrogGiantDire ns1:hasAlignment ns1:trueNeutral .\n\nns1:FrogPoisonous ns1:hasAlignment ns1:trueNeutral .\n\nns1:Froghemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:FrostCube ns1:hasAlignment ns1:trueNeutral .\n\nns1:FrostDrake ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FrostGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FrostMan ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FrostMiteSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:FrostWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:FrostdeathDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:FrostfallenMammoth ns1:hasAlignment ns1:neutralEvil .\n\nns1:FrostyChiseler ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FrumiousBandersnatch ns1:hasAlignment ns1:trueNeutral .\n\nns1:FukujinKami ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Fuldrex ns1:hasAlignment ns1:neutralEvil .\n\nns1:Fulgati ns1:hasAlignment ns1:trueNeutral .\n\nns1:Funayurei ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FungalCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:FungalLizardfolk ns1:hasAlignment ns1:trueNeutral .\n\nns1:FungalNymph ns1:hasAlignment ns1:chaoticGood .\n\nns1:Fungiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:Funglet ns1:hasAlignment ns1:neutralGood .\n\nns1:Fungoid ns1:hasAlignment ns1:neutralEvil .\n\nns1:FungusGargoyle ns1:hasAlignment ns1:trueNeutral .\n\nns1:FungusLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:FungusMan ns1:hasAlignment ns1:trueNeutral .\n\nns1:FungusManKing ns1:hasAlignment ns1:trueNeutral .\n\nns1:FungusQueen ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FungusWeird ns1:hasAlignment ns1:trueNeutral .\n\nns1:Furcifer ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:FurnaceGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:FutureYithian ns1:hasAlignment ns1:neutralGood .\n\nns1:Fye ns1:hasAlignment ns1:trueNeutral .\n\nns1:Fyr ns1:hasAlignment ns1:trueNeutral .\n\nns1:GIANTWATERBEETLE ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Gaki ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gallerok ns1:hasAlignment ns1:trueNeutral .\n\nns1:GalluWarmongerDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Galvo ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gambado ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Gancanagh ns1:hasAlignment ns1:chaoticGood .\n\nns1:Ganzi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Gar ns1:hasAlignment ns1:trueNeutral .\n\nns1:GardenOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:GareLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GargantuanAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:GargantuanMonstrousSeaWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gargiya ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gargoyle ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GargoyleBrute ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GargoyleGuardian ns1:hasAlignment ns1:trueNeutral .\n\nns1:Garipan ns1:hasAlignment ns1:neutralEvil .\n\nns1:Garmunchi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Garuda ns1:hasAlignment ns1:chaoticGood .\n\nns1:Gashadokurou ns1:hasAlignment ns1:neutralEvil .\n\nns1:GateArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:Gathlain ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GatorGhoul ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gearghost ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Gearsman ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gegenees ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Geier ns1:hasAlignment ns1:trueNeutral .\n\nns1:Geist ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GelatinousCube ns1:hasAlignment ns1:trueNeutral .\n\nns1:GelatinousGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:GelatinousOrb ns1:hasAlignment ns1:trueNeutral .\n\nns1:GemCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:GemstoneGargoyle ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GeneralofVengeance ns1:hasAlignment ns1:lawfulGood .\n\nns1:Genghryl ns1:hasAlignment ns1:trueNeutral .\n\nns1:Genthodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Geon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GeruzouSlimeDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Geryon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GetofIblis ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GhaddarDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ghalzarokh ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ghast ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ghawwas ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gholdako ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ghole ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ghonhatine ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ghoran ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ghorazagh ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ghost ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ghoublin ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ghoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GhoulAvernal ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GhoulDireWolf ns1:hasAlignment ns1:neutralEvil .\n\nns1:GhoulHoundCompanion ns1:hasAlignment ns1:neutralEvil .\n\nns1:GhoulHoundHero ns1:hasAlignment ns1:neutralEvil .\n\nns1:GhoulStirge ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GhoulWolf ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ghul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GiantAbyssalDireFrog ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GiantAdultAntLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAdvancedDireBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAmoeba ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAnaconda ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAntDrone ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAntLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAntQueen ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAntSoldier ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAntSporeZombie ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GiantAntWorker ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAssassinBug ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAssassinSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBarracuda ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBee ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBeheaded ns1:hasAlignment ns1:neutralEvil .\n\nns1:GiantBelostomatid ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBlackWidowSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBlisterBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBlowfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBogTurtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBombardierBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBoringBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBotfly ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBumblebee ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBumblebeeQueen ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBumblebeeWorker ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantCaribe ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantCentipede ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantChameleon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantCicada ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantCockroachExoskeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:GiantConstrictorSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantCrabSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantDeathwatchBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantDemonGnoll ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantDireFrog ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantDragonflyXPNMediumverminInitSensesdarkvisionftPerceptionDEFENSEACtouchflatfootedDexnaturalhpdFortRefWillImmunevermintraitsOFFENSESpeedftflyftperfectMeleebitedTACTICSGiantdragonfliesareveryaggressiveandhuntwarmbloodedcreaturesfearlesslyattackinguntileithertheyortheirpreyaredeadSTATISTICSStrDexConIntWisChaBaseAtkCMBCMDvstripSkillsFly ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantEagle ns1:hasAlignment ns1:neutralGood .\n\nns1:GiantElectricCatfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantEmperorScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantFalcon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantFlea ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantFly ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantFlytrap ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantFrilledLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantFrog ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantGar ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantGecko ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantGroundCricket ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantGroundWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantHamster ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantHellgrammite ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantHissingCockroach ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantHornet ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantHorsefly ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantIsopod ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantKhopeshScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantLakeOctopus ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantLeech ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantLegwaterSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantLocust ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMaggot ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMantisCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMantisShrimp ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMarmoset ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMiningBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMonstrousCrayfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMorayEel ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMosquito ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMotleyCuttlefish ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMuckdweller ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantOctopus ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantOwl ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:GiantPhantomArmor ns1:hasAlignment ns1:neutralEvil .\n\nns1:GiantPike ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantPorcupine ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantQueenBee ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantRaven ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantRhinocerosBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantRotGrub ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSawtoothedBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantScarab ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSeaAnemone ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSeaSlug ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSeaSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSeahorse ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSkateSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSkunk ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSlicerBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSlug ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSnappingTurtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSolifugid ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantStagBeetleExoskeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:GiantStarfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantStargazer ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantStirge ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSundew ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTarantulaSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTardigrade ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTermite ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTick ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTigerBarb ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantToad ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTortoise ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTubeWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantVulture ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantWalkingStick ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantWaterStrider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantWeasel ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantYellowjacket ns1:hasAlignment ns1:trueNeutral .\n\nns1:Giantwingedchupacabra ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GibberingAbomination ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GibberingMouther ns1:hasAlignment ns1:trueNeutral .\n\nns1:GibberingOrb ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GibrilethDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Giganotosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:GigasClam ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GildedDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GildedSeaSerpent ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gillman ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ginever ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Giraffe ns1:hasAlignment ns1:trueNeutral .\n\nns1:Girallon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Girtablilu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gitwerc ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Glabrezu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GlacialOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:GlacierToad ns1:hasAlignment ns1:trueNeutral .\n\nns1:Glaciergeist ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GladiatorRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:GlaistigMR ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GlassGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:GlassUrchin ns1:hasAlignment ns1:trueNeutral .\n\nns1:GlassWyrm ns1:hasAlignment ns1:trueNeutral .\n\nns1:GlidingTurtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Glimmerhollow ns1:hasAlignment ns1:trueNeutral .\n\nns1:Globster ns1:hasAlignment ns1:trueNeutral .\n\nns1:GlomerayDaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:GloomCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gloomwing ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gluttongrass ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gnarlwood ns1:hasAlignment ns1:neutralEvil .\n\nns1:GnasherLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gnoll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GnollWhelp ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GnophKeh ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Gnophkeh ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gnorri ns1:hasAlignment ns1:trueNeutral .\n\nns1:Goat ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoatDemonMehrim ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Goblin ns1:hasAlignment ns1:neutralEvil .\n\nns1:GoblinDog ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoblinNaga ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GoblinSnake ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GoblinTroop ns1:hasAlignment ns1:neutralEvil .\n\nns1:Goemul ns1:hasAlignment ns1:neutralGood .\n\nns1:Goezspall ns1:hasAlignment ns1:trueNeutral .\n\nns1:GohlHydraCloud ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GoldDragonJuvenile ns1:hasAlignment ns1:lawfulGood .\n\nns1:GoldDragonMatureAdult ns1:hasAlignment ns1:lawfulGood .\n\nns1:GoldDragonOld ns1:hasAlignment ns1:lawfulGood .\n\nns1:GoldDragonVeryOld ns1:hasAlignment ns1:lawfulGood .\n\nns1:GoldDragonWyrm ns1:hasAlignment ns1:lawfulGood .\n\nns1:GoldDragonYoungAdult ns1:hasAlignment ns1:lawfulGood .\n\nns1:GoldGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoldenCat ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoldenCatDescendant ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoldenColossusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoldenScarabSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoldenSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:GolemCarrionweaponized ns1:hasAlignment ns1:trueNeutral .\n\nns1:GolemTreasure ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoliathFrog ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoliathSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoliathStagBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gongorinan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GongorinanQlippoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Gorbel ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gorgimera ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gorgon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gorgoni ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gorgoros ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GorillaBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:GorsonTheBloodDuke ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Gorynych ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GourdLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gowrow ns1:hasAlignment ns1:trueNeutral .\n\nns1:GrabbingGiantBeheaded ns1:hasAlignment ns1:neutralEvil .\n\nns1:GrabbingMedusaHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:GrabbingSeveredHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:GrachukkClanMaster ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GraeaeMR ns1:hasAlignment ns1:neutralEvil .\n\nns1:GrandfatherofFlowers ns1:hasAlignment ns1:neutralEvil .\n\nns1:Grangeri ns1:hasAlignment ns1:trueNeutral .\n\nns1:GrapplingClaw ns1:hasAlignment ns1:trueNeutral .\n\nns1:Grassling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Grauladon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GraveLynx ns1:hasAlignment ns1:neutralEvil .\n\nns1:GraveRisen ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GraveSage ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Gravebound ns1:hasAlignment ns1:neutralEvil .\n\nns1:GravenGuardian ns1:hasAlignment ns1:trueNeutral .\n\nns1:Graveshell ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gravesludge ns1:hasAlignment ns1:neutralEvil .\n\nns1:GravestoneDryad ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gray ns1:hasAlignment ns1:neutralEvil .\n\nns1:GrayApeDecurion ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:GrayApeLegionnaire ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:GrayApePirateKing ns1:hasAlignment ns1:trueNeutral .\n\nns1:GrayGoo ns1:hasAlignment ns1:trueNeutral .\n\nns1:GrayNisp ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GrayOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:GrayRender ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatAssassinBug ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatCaretaker ns1:hasAlignment ns1:neutralGood .\n\nns1:GreatCyclops ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreatDiademUrchin ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatGatorGhoul ns1:hasAlignment ns1:neutralEvil .\n\nns1:GreatGhul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreatHornedOwl ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatSeaAnemone ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatWhiteShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatWhiteWhale ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatWyrmBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreatWyrmBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GreatWyrmDungeonDragonAKAGargaxtheMightyMasteroftheDungeonDragons ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatWyrmForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreatWyrmGoldDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:GreatWyrmGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GreatWyrmRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreatWyrmRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GreatWyrmSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:GreatWyrmSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatWyrmWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreaterAcidQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterAetherElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterAirElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterBarghest ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GreaterBasilisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterBoneneedle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterCeustodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:GreaterColdIronElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterEarthElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterFireElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterGelidBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterGravityElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterIceElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterLightningElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterMagmaElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterMedusa ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GreaterMudElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterNegativeEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterNelbarzoth ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GreaterObsidianQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterOozeDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreaterPositiveEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterPsionicElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterPubo ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterShadowCR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreaterShedu ns1:hasAlignment ns1:lawfulGood .\n\nns1:GreaterShieldWarden ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:GreaterVerdurousOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterWaterElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterYamabushiTengu ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:GreatwyrmUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Greatwyrmclouddragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreenGuardianCR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreenHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreenMan ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreenstingScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gregole ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Gremlin ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GremlinBatspawnCR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GremlinLightningspawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GremlinNuglub ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GremlinPugwampi ns1:hasAlignment ns1:neutralEvil .\n\nns1:GremlinSpiderspawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GremlinVexgit ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GrenadierTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GrendelMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Greymalkin ns1:hasAlignment ns1:neutralEvil .\n\nns1:Grick ns1:hasAlignment ns1:trueNeutral .\n\nns1:Griefgall ns1:hasAlignment ns1:neutralEvil .\n\nns1:Griffon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Grig ns1:hasAlignment ns1:neutralGood .\n\nns1:GrigSwarm ns1:hasAlignment ns1:neutralGood .\n\nns1:Grigori ns1:hasAlignment ns1:trueNeutral .\n\nns1:Grikkitog ns1:hasAlignment ns1:neutralEvil .\n\nns1:GrimReaper ns1:hasAlignment ns1:neutralEvil .\n\nns1:Grimlock ns1:hasAlignment ns1:neutralEvil .\n\nns1:Grimm ns1:hasAlignment ns1:neutralEvil .\n\nns1:Grimple ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Grimslake ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Grimstalker ns1:hasAlignment ns1:neutralEvil .\n\nns1:Grindylow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Grioth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Grippli ns1:hasAlignment ns1:trueNeutral .\n\nns1:GristlyDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GrizzlyBearRug ns1:hasAlignment ns1:trueNeutral .\n\nns1:GroaningSpirit ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Grodair ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GrogrisantMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Grokosh ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gronk ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Grootslang ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Grothlut ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GroundWaspSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:GroveGuardian ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GruffLanternGoat ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Gryph ns1:hasAlignment ns1:neutralEvil .\n\nns1:GuardianDaemon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GuardianDoll ns1:hasAlignment ns1:neutralEvil .\n\nns1:GuardianDragonMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:GuardianPhantomArmor ns1:hasAlignment ns1:neutralEvil .\n\nns1:GuardianScroll ns1:hasAlignment ns1:trueNeutral .\n\nns1:GuardianSpirit ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GuardianoftheTower ns1:hasAlignment ns1:trueNeutral .\n\nns1:Guecubu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Gug ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GugSavant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GulperEel ns1:hasAlignment ns1:trueNeutral .\n\nns1:GunpowderOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:GurgistMortic ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gutslug ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gutted ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GyeongsaWarpStorm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Gylptodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gynosphinx ns1:hasAlignment ns1:trueNeutral .\n\nns1:G\u00f8gelid ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:HYDRODAEMON ns1:hasAlignment ns1:neutralEvil .\n\nns1:Hadhayosh ns1:hasAlignment ns1:trueNeutral .\n\nns1:HagEyeOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:HalaDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HalfCelestialUnicorn ns1:hasAlignment ns1:trueNeutral .\n\nns1:HalfFiendDryad ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HalfFiendMinotaur ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HalfOgre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Halsora ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hamadryad ns1:hasAlignment ns1:chaoticGood .\n\nns1:HammerheadShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:HandOfTheInheritor ns1:hasAlignment ns1:lawfulGood .\n\nns1:HandmaidenDevilGylou ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HangmanTree ns1:hasAlignment ns1:neutralEvil .\n\nns1:Haniver ns1:hasAlignment ns1:trueNeutral .\n\nns1:HarbingerArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:HarbingerDaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:HarbingerofBrokenDealsFinePrintandUnfairBargains ns1:hasAlignment ns1:neutralEvil .\n\nns1:Harionago ns1:hasAlignment ns1:neutralEvil .\n\nns1:Harpy ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Harridan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HarvestHaunt ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Hastur ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HatethrallDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Haunt ns1:hasAlignment ns1:trueNeutral .\n\nns1:HauntedChain ns1:hasAlignment ns1:trueNeutral .\n\nns1:HauntedConstructScarecrow ns1:hasAlignment ns1:neutralEvil .\n\nns1:Havero ns1:hasAlignment ns1:neutralEvil .\n\nns1:HaveroTentacle ns1:hasAlignment ns1:neutralEvil .\n\nns1:HawanarGenie ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Hawk ns1:hasAlignment ns1:trueNeutral .\n\nns1:HeadedCryohydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:HeadedHydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:HeadedPryohydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:HeadedPyrohydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:HeadmansScythe ns1:hasAlignment ns1:trueNeutral .\n\nns1:HeartrotTree ns1:hasAlignment ns1:neutralEvil .\n\nns1:Hedgehog ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hegessik ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Heikegani ns1:hasAlignment ns1:neutralEvil .\n\nns1:HekatonkheiresTitan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HelBehir ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hela ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HelicoprionShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Helixmothlarva ns1:hasAlignment ns1:trueNeutral .\n\nns1:HellEngineAdamantineGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:HellHound ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HellMoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hellcat ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Hellcrown ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HellfireIgnis ns1:hasAlignment ns1:neutralEvil .\n\nns1:HellionRevenant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HellstokerDevilMarnasoth ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HellwaspSwarm ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HeraldofArmageddon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:HeraldofDreams ns1:hasAlignment ns1:chaoticGood .\n\nns1:HeraldofFreedom ns1:hasAlignment ns1:chaoticGood .\n\nns1:HeraldofFreedomandJustice ns1:hasAlignment ns1:chaoticGood .\n\nns1:HeraldofHell ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HeraldofRunes ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HeraldoftheDemonQueen ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HeraldofthePirateQueen ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:HereciteofAsmodeus ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HerensugueDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HeresyDevilAyngavhaul ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Hetkoshu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hezrou ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hidebehind ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hieracosphinx ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HighGirallon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HighPriestofShubNiggurath ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HighVeinar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:HillGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hippocampus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hippogriff ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hippopotamus ns1:hasAlignment ns1:trueNeutral .\n\nns1:HiveBrute ns1:hasAlignment ns1:neutralEvil .\n\nns1:HiveLarvaSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:HiveMindBeetleSwarm ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:HiveQueen ns1:hasAlignment ns1:neutralEvil .\n\nns1:HiveWarrior ns1:hasAlignment ns1:neutralEvil .\n\nns1:HivemindRatSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:HoarSpirit ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HobbeHound ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hobgoblin ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HobgoblinPhalanxTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HobgoblinTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Hobkins ns1:hasAlignment ns1:neutralEvil .\n\nns1:Hodag ns1:hasAlignment ns1:trueNeutral .\n\nns1:HollowHelm ns1:hasAlignment ns1:neutralEvil .\n\nns1:HollowSerpent ns1:hasAlignment ns1:neutralEvil .\n\nns1:HomotheriumSmilodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Homunculus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hondra ns1:hasAlignment ns1:trueNeutral .\n\nns1:HookfangWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:HordeRiot ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Horla ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HornCaterpillar ns1:hasAlignment ns1:trueNeutral .\n\nns1:HornedDemonKalavakus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HornedDevilCornugon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HornedLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Horse ns1:hasAlignment ns1:trueNeutral .\n\nns1:HostDevilMagaav ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HoundArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:HoundofTindalos ns1:hasAlignment ns1:neutralEvil .\n\nns1:HouseCentipede ns1:hasAlignment ns1:trueNeutral .\n\nns1:Howler ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hoyrall ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Huecuva ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HugeAcidQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeAetherElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeAirElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeColdironElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeEarthElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeFireElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeGravityElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeIceElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeLightningElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeMagmaElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeMonstrousSeaWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeMudElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeNegativeEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeObsidianQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugePositiveEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugePsionicElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeWaterElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Huggermugger ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Huldra ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:HumanJujuzombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:HumanMeatPuppetCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:HumanScholarBrainCylinder ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Humbaba ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Hundun ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hungerer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HungryFlesh ns1:hasAlignment ns1:trueNeutral .\n\nns1:HungryFog ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hunted ns1:hasAlignment ns1:neutralEvil .\n\nns1:HunterUrchin ns1:hasAlignment ns1:trueNeutral .\n\nns1:HuntingHorror ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hupia ns1:hasAlignment ns1:neutralEvil .\n\nns1:Hutijin ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Hyaenodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hyakume ns1:hasAlignment ns1:neutralEvil .\n\nns1:Hyaleth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hydraggon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hydrodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Hydrus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hyena ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hykariut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Hypnalis ns1:hasAlignment ns1:trueNeutral .\n\nns1:Iathavos ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IbShade ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ibshaunet ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:IceDevilGelugon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IceDrake ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IceGnomeBarbegaziCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:IceGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:IceKratah ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IceLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IceMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:IceTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IceYai ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Icegaunt ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ichkoh ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ichthyocentaur ns1:hasAlignment ns1:trueNeutral .\n\nns1:IdOozeCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Idun ns1:hasAlignment ns1:neutralGood .\n\nns1:Ifrit ns1:hasAlignment ns1:trueNeutral .\n\nns1:Iguanodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ijiraq ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:IkuTurso ns1:hasAlignment ns1:neutralEvil .\n\nns1:Illureshi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ImenteshProtean ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Imjarvi ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ImmatureNorn ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ImmenseMandragora ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ImmenseTortoise ns1:hasAlignment ns1:trueNeutral .\n\nns1:ImmolationDevilPuragaus ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ImmortalIchor ns1:hasAlignment ns1:neutralEvil .\n\nns1:Imp ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Impariut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ImperialGhoul ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ImplacableStalker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Impundulu ns1:hasAlignment ns1:neutralEvil .\n\nns1:Incubus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Incutilis ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IncutilisLord ns1:hasAlignment ns1:neutralEvil .\n\nns1:InevitableAevarutMR ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Infantis ns1:hasAlignment ns1:neutralEvil .\n\nns1:Infernor ns1:hasAlignment ns1:chaoticEvil .\n\nns1:InkDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IntellectDevourer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:InterlocutorKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IntermediateNelbarzoth ns1:hasAlignment ns1:lawfulGood .\n\nns1:InubrixGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:InvertedGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:InvisibleStalker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Iophanite ns1:hasAlignment ns1:lawfulGood .\n\nns1:IounGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:IounWyrd ns1:hasAlignment ns1:trueNeutral .\n\nns1:IrefulHellion ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Irii ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Irlgaunt ns1:hasAlignment ns1:neutralEvil .\n\nns1:IrminsulMR ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Irnakurse ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IronCobra ns1:hasAlignment ns1:trueNeutral .\n\nns1:IronColossusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:IronGhoul ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IronGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:IronGolemArcher ns1:hasAlignment ns1:trueNeutral .\n\nns1:IronMagehunterTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IronMaidenGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:IronRiderTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IronSiegeAlchemistTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IronWight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Isitoq ns1:hasAlignment ns1:neutralEvil .\n\nns1:Isonade ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IsphAunVuln ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ivoyro ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Izfiitar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:JaNoiOni ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Jabberwock ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JackOLantern ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jackal ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jackalwere ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JackinIronsGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JackoLantern ns1:hasAlignment ns1:neutralEvil .\n\nns1:Jaculi ns1:hasAlignment ns1:trueNeutral .\n\nns1:JadeColossuspp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jadeling ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jaguar ns1:hasAlignment ns1:trueNeutral .\n\nns1:Janni ns1:hasAlignment ns1:trueNeutral .\n\nns1:JanniCaptain ns1:hasAlignment ns1:lawfulEvil .\n\nns1:JellyfishGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:JellyfishSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jerboa ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jesulan ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Jherikite ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JigsawShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jinmenju ns1:hasAlignment ns1:trueNeutral .\n\nns1:JinnWizard ns1:hasAlignment ns1:neutralEvil .\n\nns1:Jinushigami ns1:hasAlignment ns1:trueNeutral .\n\nns1:JinxCatCompanion ns1:hasAlignment ns1:trueNeutral .\n\nns1:JitterboneMortic ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Jorogumo ns1:hasAlignment ns1:neutralEvil .\n\nns1:JotunbloodHillGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JotundTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Jotunnboar ns1:hasAlignment ns1:trueNeutral .\n\nns1:JoyfulThing ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Jubear ns1:hasAlignment ns1:trueNeutral .\n\nns1:JubilexTheFacelessLord ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JubilexTouchedMarshJelly ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JubjubBird ns1:hasAlignment ns1:trueNeutral .\n\nns1:JudgementDevilAshmede ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Juggerloathe ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Juggernaut ns1:hasAlignment ns1:trueNeutral .\n\nns1:JulunggaliMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:JungleDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:JungleGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:JungleGrick ns1:hasAlignment ns1:trueNeutral .\n\nns1:JunkGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:JupiterBloodsucker ns1:hasAlignment ns1:trueNeutral .\n\nns1:JuvenileBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JuvenileBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:JuvenileForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JuvenileGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:JuvenileRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JuvenileRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:JuvenileSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:JuvenileSeps ns1:hasAlignment ns1:trueNeutral .\n\nns1:JuvenileSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:JuvenileSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:JuvenileUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:JuvenileWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Kabandha ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Kaenju ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kaicharek ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kakapo ns1:hasAlignment ns1:trueNeutral .\n\nns1:KakuenTaka ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Kamaitachi ns1:hasAlignment ns1:chaoticEvil .\n\nns1:KamiShikigami ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:KaminariKami ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kampfult ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kangaroo ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kapoacinth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Kappa ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kapre ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kaprosuchus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Karek ns1:hasAlignment ns1:trueNeutral .\n\nns1:Karkadann ns1:hasAlignment ns1:trueNeutral .\n\nns1:Karkinoi ns1:hasAlignment ns1:chaoticEvil .\n\nns1:KarkinoiBroodSwarm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Karumzek ns1:hasAlignment ns1:neutralEvil .\n\nns1:KarzSlug ns1:hasAlignment ns1:trueNeutral .\n\nns1:KarzSlugQueen ns1:hasAlignment ns1:trueNeutral .\n\nns1:KasaObake ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kasatha ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Kastamut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Kathlin ns1:hasAlignment ns1:neutralGood .\n\nns1:KawaAkago ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kech ns1:hasAlignment ns1:neutralEvil .\n\nns1:KeeperoftheYellowSign ns1:hasAlignment ns1:chaoticEvil .\n\nns1:KelpDevil ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kelpie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kentrosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:KerePsychopomp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ketesthius ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Keulia ns1:hasAlignment ns1:trueNeutral .\n\nns1:Khaei ns1:hasAlignment ns1:trueNeutral .\n\nns1:Khala ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Khardajeen ns1:hasAlignment ns1:neutralEvil .\n\nns1:Khargra ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kigyo ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Kijimuna ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kikimora ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kikituk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kilblain ns1:hasAlignment ns1:neutralEvil .\n\nns1:KillerFrog ns1:hasAlignment ns1:trueNeutral .\n\nns1:KillerSeahorse ns1:hasAlignment ns1:trueNeutral .\n\nns1:Killmoulis ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kimenhul ns1:hasAlignment ns1:neutralEvil .\n\nns1:KingCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:KingRagworm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kirin ns1:hasAlignment ns1:lawfulGood .\n\nns1:KithangianBeastDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Kitsune ns1:hasAlignment ns1:trueNeutral .\n\nns1:KnightAnt ns1:hasAlignment ns1:trueNeutral .\n\nns1:KnightoftheGateUniqueAdvancedDevourer ns1:hasAlignment ns1:neutralEvil .\n\nns1:Koala ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kobold ns1:hasAlignment ns1:lawfulEvil .\n\nns1:KoboldZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kodama ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kolyarut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Kongamato ns1:hasAlignment ns1:trueNeutral .\n\nns1:KorirKokembe ns1:hasAlignment ns1:trueNeutral .\n\nns1:Korkcitura ns1:hasAlignment ns1:neutralEvil .\n\nns1:Korred ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:KostchtchieDemonPrinceofWrath ns1:hasAlignment ns1:chaoticEvil .\n\nns1:KotoFurunishi ns1:hasAlignment ns1:neutralGood .\n\nns1:Kraidyl ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kraken ns1:hasAlignment ns1:neutralEvil .\n\nns1:Krampus ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kratah ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Krenshar ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kronosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:KuahLij ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Kuchrima ns1:hasAlignment ns1:chaoticEvil .\n\nns1:KudzuTheEverblight ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kurobozu ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Kuru ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Kuwa ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Kyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:KytonDemagogue ns1:hasAlignment ns1:lawfulEvil .\n\nns1:LabyrinthMinotaur ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LacedonAquaticGhoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lacridaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:LakeTroll ns1:hasAlignment ns1:neutralEvil .\n\nns1:Lamhigyn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lamia ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LamiaMatriarch ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lammasu ns1:hasAlignment ns1:lawfulGood .\n\nns1:Lampad ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Lampadarius ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Lamprey ns1:hasAlignment ns1:trueNeutral .\n\nns1:LandLamprey ns1:hasAlignment ns1:trueNeutral .\n\nns1:LandwalkerShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:LanternArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:LanternGoat ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Larabay ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:LargeAcidQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeAetherElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeAirElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeColdIronElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeEarthElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeFireElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeGravityElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeIceElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeLightningElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeLightningQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeMagmaElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeMonstrousSeaWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeMudElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeNegativeEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeObsidianQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargePositiveEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargePsionicElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeStingray ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeWaterElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Larva ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LarvalChuul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LarvalSlimeCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:LarvalStarspawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lashunta ns1:hasAlignment ns1:neutralGood .\n\nns1:Laurapathis ns1:hasAlignment ns1:lawfulEvil .\n\nns1:LavaChild ns1:hasAlignment ns1:trueNeutral .\n\nns1:LavaDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:LavaWeird ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lawgiver ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:LeadCladWyvern ns1:hasAlignment ns1:trueNeutral .\n\nns1:LeadGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:LeadSkeleton ns1:hasAlignment ns1:trueNeutral .\n\nns1:LeafLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:LeafRay ns1:hasAlignment ns1:trueNeutral .\n\nns1:LeananSidheMR ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:LeechSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Leechroot ns1:hasAlignment ns1:neutralEvil .\n\nns1:LegendaryChimera ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LegionArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:Lejnth ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Lemkin ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Lemming ns1:hasAlignment ns1:trueNeutral .\n\nns1:Lemure ns1:hasAlignment ns1:lawfulEvil .\n\nns1:LengGhoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LengHound ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LengSpider ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Leonal ns1:hasAlignment ns1:neutralGood .\n\nns1:Leopard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Leprechaun ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:LesserBandersnatch ns1:hasAlignment ns1:trueNeutral .\n\nns1:LesserBoneneedle ns1:hasAlignment ns1:trueNeutral .\n\nns1:LesserCeustodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:LesserDeath ns1:hasAlignment ns1:neutralEvil .\n\nns1:LesserGelidBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:LesserGibberingOrb ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LesserHostDevilGaav ns1:hasAlignment ns1:lawfulEvil .\n\nns1:LesserJabberwock ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LesserNecrophidius ns1:hasAlignment ns1:trueNeutral .\n\nns1:LesserOozeDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LesserPubo ns1:hasAlignment ns1:trueNeutral .\n\nns1:LesserShadow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LesserShieldWarden ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Leucrotta ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Leukodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Leviathan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Lhaksharut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:LibitinariiKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:LibreumGolem ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:LichNewt ns1:hasAlignment ns1:trueNeutral .\n\nns1:LichPsychic ns1:hasAlignment ns1:lawfulEvil .\n\nns1:LichShade ns1:hasAlignment ns1:neutralEvil .\n\nns1:LichenLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:LifeleecherMortic ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lifesuit ns1:hasAlignment ns1:trueNeutral .\n\nns1:LightRidingHorse ns1:hasAlignment ns1:trueNeutral .\n\nns1:LightningCatChampion ns1:hasAlignment ns1:trueNeutral .\n\nns1:LightningCatCompanion ns1:hasAlignment ns1:trueNeutral .\n\nns1:LightningCatHero ns1:hasAlignment ns1:trueNeutral .\n\nns1:LightningMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:LightningTreantppCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:LightningWeird ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lilin ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Lilith ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Lilitu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LiminalSprite ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:LinnormCrag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lion ns1:hasAlignment ns1:trueNeutral .\n\nns1:LionAlebrije ns1:hasAlignment ns1:trueNeutral .\n\nns1:LionBeastofChaos ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Lionwere ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lipika ns1:hasAlignment ns1:trueNeutral .\n\nns1:Litanu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Livestone ns1:hasAlignment ns1:trueNeutral .\n\nns1:LivingArmor ns1:hasAlignment ns1:trueNeutral .\n\nns1:LivingDoldrums ns1:hasAlignment ns1:neutralEvil .\n\nns1:LivingLake ns1:hasAlignment ns1:trueNeutral .\n\nns1:LivingMirage ns1:hasAlignment ns1:trueNeutral .\n\nns1:LivingRune ns1:hasAlignment ns1:neutralEvil .\n\nns1:LivingTopiary ns1:hasAlignment ns1:trueNeutral .\n\nns1:LivingWall ns1:hasAlignment ns1:trueNeutral .\n\nns1:Lizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:LizardKing ns1:hasAlignment ns1:trueNeutral .\n\nns1:Lizardfolk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Llama ns1:hasAlignment ns1:trueNeutral .\n\nns1:Llorona ns1:hasAlignment ns1:neutralEvil .\n\nns1:Locathah ns1:hasAlignment ns1:trueNeutral .\n\nns1:LocustPlagueSwarmMR ns1:hasAlignment ns1:neutralEvil .\n\nns1:LocustSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:LordSunWarrior ns1:hasAlignment ns1:lawfulGood .\n\nns1:Lorelei ns1:hasAlignment ns1:neutralEvil .\n\nns1:LotusLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:LotusTree ns1:hasAlignment ns1:trueNeutral .\n\nns1:Lovelorn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lukwata ns1:hasAlignment ns1:trueNeutral .\n\nns1:Luma ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Lunarma ns1:hasAlignment ns1:trueNeutral .\n\nns1:LurkerAbove ns1:hasAlignment ns1:trueNeutral .\n\nns1:LurkerInTheCrypt ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LurkerinLight ns1:hasAlignment ns1:neutralEvil .\n\nns1:Lusca ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lustspawn ns1:hasAlignment ns1:neutralEvil .\n\nns1:Lynx ns1:hasAlignment ns1:trueNeutral .\n\nns1:Lythic ns1:hasAlignment ns1:trueNeutral .\n\nns1:MOUSELORDMOUSEFORM ns1:hasAlignment ns1:trueNeutral .\n\nns1:MachineSoldier ns1:hasAlignment ns1:trueNeutral .\n\nns1:MadnessSlug ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MadnessSlugAlternateForm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Maenad ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MaenadDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Maftet ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagebaneGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagicbaneBandersnatch ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagmaDragonGreatWyrm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonJuvenile ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonMatureAdult ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonOld ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonVeryOld ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonVeryYoung ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonWyrm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonWyrmling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonYoungAdult ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaElementalRamCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagmaMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagmaOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagmaRoc ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Magmin ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Magmoid ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagnesiumGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagnesiumSpirit ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Maharaja ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MaharishiManu ns1:hasAlignment ns1:lawfulGood .\n\nns1:MakaraVahana ns1:hasAlignment ns1:trueNeutral .\n\nns1:Malboro ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Malenti ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Mammon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Mammoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:MammothFlea ns1:hasAlignment ns1:trueNeutral .\n\nns1:ManEatingRam ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Manananggal ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mandragora ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MandragoraSwarm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mandrill ns1:hasAlignment ns1:trueNeutral .\n\nns1:ManimalTriceratops ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Manitou ns1:hasAlignment ns1:neutralGood .\n\nns1:MannequinRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mannstirge ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MantaRay ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mantari ns1:hasAlignment ns1:neutralEvil .\n\nns1:Mantidrake ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Manu ns1:hasAlignment ns1:lawfulGood .\n\nns1:MaphistalSecondofOrcus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mapinguari ns1:hasAlignment ns1:trueNeutral .\n\nns1:Marai ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Marathoner ns1:hasAlignment ns1:trueNeutral .\n\nns1:MarbleSentinel ns1:hasAlignment ns1:trueNeutral .\n\nns1:MarbleSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:Margay ns1:hasAlignment ns1:trueNeutral .\n\nns1:Margoyle ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MaridGenie ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Marilith ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MarineCrocodile ns1:hasAlignment ns1:trueNeutral .\n\nns1:MarrowstoneGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MarshGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MarshJelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:Marut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:MaskGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MaskedOkkator ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MasterAutomaton ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Mastodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:MatureAdultBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MatureAdultBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MatureAdultForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MatureAdultGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MatureAdultRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MatureAdultRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MatureAdultSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:MatureAdultSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:MatureAdultSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:MatureAdultWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MatureAdultclouddragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:MatureDarkYoung ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MatureSlimeCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:MatureadultUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Mawler ns1:hasAlignment ns1:neutralEvil .\n\nns1:MechanicalViper ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumAcidQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumAetherElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumAirElemental ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MediumAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumBarracuda ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumEarthElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumFireCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumFireElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumGravityElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumIceElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumLightningElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumLightningQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumMagmaElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumMonstrousSeaWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumMudElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumNegativeEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumObsidianQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumPositiveEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumPsionicElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:MediumSlimeMold ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumStingray ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumWaterElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mediumcoldironelemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Medusa ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MedusaAnimusShade ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MedusaHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:Meerkat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Megalania ns1:hasAlignment ns1:trueNeutral .\n\nns1:Megaloceros ns1:hasAlignment ns1:trueNeutral .\n\nns1:MegaponAnt ns1:hasAlignment ns1:trueNeutral .\n\nns1:Megaprimatus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Megaraptor ns1:hasAlignment ns1:trueNeutral .\n\nns1:Megatherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:Melacage ns1:hasAlignment ns1:neutralEvil .\n\nns1:Meladaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:MelancholicOozeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:MemitimPsychopomp ns1:hasAlignment ns1:trueNeutral .\n\nns1:MemoryChild ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mephistopheles ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Mercane ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:MercuryOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Merfolk ns1:hasAlignment ns1:trueNeutral .\n\nns1:MerfolkCavalier ns1:hasAlignment ns1:trueNeutral .\n\nns1:MerfolkCavalierAlurian ns1:hasAlignment ns1:trueNeutral .\n\nns1:MetalSlime ns1:hasAlignment ns1:trueNeutral .\n\nns1:MetallicGorgimera ns1:hasAlignment ns1:trueNeutral .\n\nns1:MetallicOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mezlan ns1:hasAlignment ns1:trueNeutral .\n\nns1:MiGo ns1:hasAlignment ns1:neutralEvil .\n\nns1:MidnightPeddler ns1:hasAlignment ns1:trueNeutral .\n\nns1:MightyCyclops ns1:hasAlignment ns1:neutralEvil .\n\nns1:Mihstu ns1:hasAlignment ns1:neutralEvil .\n\nns1:Mimi ns1:hasAlignment ns1:trueNeutral .\n\nns1:MimicOoze ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MindslaverMold ns1:hasAlignment ns1:neutralEvil .\n\nns1:MindstabFungus ns1:hasAlignment ns1:trueNeutral .\n\nns1:MinorReaper ns1:hasAlignment ns1:neutralEvil .\n\nns1:MinotaurElder ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MireBrute ns1:hasAlignment ns1:neutralEvil .\n\nns1:MireNettle ns1:hasAlignment ns1:trueNeutral .\n\nns1:MirrorSerpent ns1:hasAlignment ns1:trueNeutral .\n\nns1:MissingLynx ns1:hasAlignment ns1:trueNeutral .\n\nns1:MistDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:Mite ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MithralGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MixCouatl ns1:hasAlignment ns1:chaoticGood .\n\nns1:Mnemor ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Mngwa ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Moa ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mobat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mobogo ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mockingfey ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Mogaru ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Mohrg ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MokeleMbembe ns1:hasAlignment ns1:trueNeutral .\n\nns1:Moldwretch ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mole ns1:hasAlignment ns1:trueNeutral .\n\nns1:Moloch ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MomeRath ns1:hasAlignment ns1:trueNeutral .\n\nns1:Monaciello ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MonadicDeva ns1:hasAlignment ns1:neutralGood .\n\nns1:MongrelCaveGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mongrelman ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:MonitorLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Monkey ns1:hasAlignment ns1:trueNeutral .\n\nns1:MonkeyGoblin ns1:hasAlignment ns1:neutralEvil .\n\nns1:MonkeySwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:MonstrousCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:MonstrousJellyfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:MonstrousLobster ns1:hasAlignment ns1:trueNeutral .\n\nns1:Montaphant ns1:hasAlignment ns1:trueNeutral .\n\nns1:MoonBeast ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MoonDog ns1:hasAlignment ns1:neutralGood .\n\nns1:MoonGiant ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:MoonHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Moonbeast ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Moonflower ns1:hasAlignment ns1:trueNeutral .\n\nns1:Moonpriest ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Moose ns1:hasAlignment ns1:trueNeutral .\n\nns1:Morbai ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mordnaissant ns1:hasAlignment ns1:neutralEvil .\n\nns1:Morgodea ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Morlock ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MorlockSwarmerTroop ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Morrigna ns1:hasAlignment ns1:trueNeutral .\n\nns1:MortuaryCyclone ns1:hasAlignment ns1:trueNeutral .\n\nns1:MosaicTileGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MosquitoSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:MossMonster ns1:hasAlignment ns1:neutralEvil .\n\nns1:MossTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mosslord ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MotherofOblivion ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MothersMaw ns1:hasAlignment ns1:neutralEvil .\n\nns1:Mothman ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MountainAurochs ns1:hasAlignment ns1:trueNeutral .\n\nns1:MountainBlight ns1:hasAlignment ns1:neutralEvil .\n\nns1:MountainGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MountainLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:MovanicDeva ns1:hasAlignment ns1:neutralGood .\n\nns1:MuSpore ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Muckdweller ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mudbog ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mudlord ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mudman ns1:hasAlignment ns1:trueNeutral .\n\nns1:Muhuru ns1:hasAlignment ns1:trueNeutral .\n\nns1:Muldnal ns1:hasAlignment ns1:neutralGood .\n\nns1:MultiplyingTRexSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:MummifiedBaboon ns1:hasAlignment ns1:neutralEvil .\n\nns1:MummifiedCrocodile ns1:hasAlignment ns1:trueNeutral .\n\nns1:MummifiedElephant ns1:hasAlignment ns1:trueNeutral .\n\nns1:MummifiedGynosphinx ns1:hasAlignment ns1:neutralEvil .\n\nns1:MummifiedHippopotamus ns1:hasAlignment ns1:neutralEvil .\n\nns1:Mummy ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MummyLord ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MummyOfTheDeep ns1:hasAlignment ns1:neutralEvil .\n\nns1:Munavri ns1:hasAlignment ns1:chaoticGood .\n\nns1:Murajau ns1:hasAlignment ns1:neutralGood .\n\nns1:MurderBorn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MurderCrow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MurderofCrows ns1:hasAlignment ns1:trueNeutral .\n\nns1:Muse ns1:hasAlignment ns1:chaoticGood .\n\nns1:MushroomGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MustardJelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mutah ns1:hasAlignment ns1:trueNeutral .\n\nns1:MutantOrc ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MutantOtyughtentacledMutant ns1:hasAlignment ns1:trueNeutral .\n\nns1:MutatedTurtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:MuteHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mutilated ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Myceloid ns1:hasAlignment ns1:neutralEvil .\n\nns1:MyrmecoleonMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Myrmidon ns1:hasAlignment ns1:trueNeutral .\n\nns1:MythicNelbarzothMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MythicalLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:MythosGhast ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MythosGhoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MythosSatyr ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nabasu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:NabasuDemonling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:NabasuMature ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nachzehrer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nagaji ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Naiad ns1:hasAlignment ns1:neutralGood .\n\nns1:Najikai ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Nalfeshnee ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Narwhal ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nazalor ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:NecroPede ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Necrocraft ns1:hasAlignment ns1:neutralEvil .\n\nns1:NecromancerofLeng ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Necrophidius ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nekomata ns1:hasAlignment ns1:neutralEvil .\n\nns1:NemesisDevilAdvodaza ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Nemhain ns1:hasAlignment ns1:neutralEvil .\n\nns1:Neothelid ns1:hasAlignment ns1:chaoticEvil .\n\nns1:NeothelidOverlord ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Neozecktole ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nependis ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nephilim ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nereid ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:NerizoDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:NessianWarhoundCR ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Netherspark ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ngoga ns1:hasAlignment ns1:trueNeutral .\n\nns1:NightAdderInphidian ns1:hasAlignment ns1:neutralEvil .\n\nns1:NightHag ns1:hasAlignment ns1:neutralEvil .\n\nns1:NightWyvern ns1:hasAlignment ns1:trueNeutral .\n\nns1:NightbringerApe ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nightcaller ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nightcrawler ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nightgaunt ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Nightmare ns1:hasAlignment ns1:neutralEvil .\n\nns1:NightmareArtist ns1:hasAlignment ns1:neutralEvil .\n\nns1:NightmareEttercap ns1:hasAlignment ns1:neutralEvil .\n\nns1:NightmareMount ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nightskitter ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nightwalker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nightwave ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nightwing ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nikaramsa ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Nilith ns1:hasAlignment ns1:neutralEvil .\n\nns1:Niln ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ningen ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ningyo ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nirento ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nisid ns1:hasAlignment ns1:chaoticGood .\n\nns1:Nixie ns1:hasAlignment ns1:trueNeutral .\n\nns1:NobleDjinniVizier ns1:hasAlignment ns1:chaoticGood .\n\nns1:NobleEfreet ns1:hasAlignment ns1:lawfulEvil .\n\nns1:NobleSalamander ns1:hasAlignment ns1:chaoticEvil .\n\nns1:NobleTimeElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nochlean ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nocticula ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nogitsune ns1:hasAlignment ns1:neutralEvil .\n\nns1:NoqualGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Norn ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Nosferatu ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nosoi ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nothosaur ns1:hasAlignment ns1:trueNeutral .\n\nns1:Novenarut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Nuckalavee ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nuckelavee ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nucol ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nue ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nulmind ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nuno ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nupperibo ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Nycar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Nymph ns1:hasAlignment ns1:chaoticGood .\n\nns1:NymphWaterStrider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nyogoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:NysrockDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Oakman ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:OaurOoung ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Obcisidaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Oblivion ns1:hasAlignment ns1:neutralEvil .\n\nns1:ObsidianGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:ObsidianMinotaur ns1:hasAlignment ns1:trueNeutral .\n\nns1:OceanGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OceanLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:Oceanid ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:OchreEurypterid ns1:hasAlignment ns1:trueNeutral .\n\nns1:OchreJelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:OctopodMechanicDrone ns1:hasAlignment ns1:trueNeutral .\n\nns1:Octopus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ofalth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ogre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreBoss ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreBrute ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreDestroyer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreGlutton ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreHunter ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreKing ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreMage ns1:hasAlignment ns1:lawfulEvil .\n\nns1:OgreMancatcher ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgrePriest ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:OgreStalker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgrekinHalfOgre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ogren ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ogrillon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ohancanu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OilShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:OitosKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:OkkatorAssassin ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OldBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OldBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:OldGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:OldRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OldRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:OldSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:OldSilverDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:OldSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:OldSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:OldWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Olethrodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Olethros ns1:hasAlignment ns1:trueNeutral .\n\nns1:Oliphantpp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Olkhia ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ollph\u00e9ist ns1:hasAlignment ns1:trueNeutral .\n\nns1:Oma ns1:hasAlignment ns1:trueNeutral .\n\nns1:Omnipath ns1:hasAlignment ns1:lawfulEvil .\n\nns1:OmoxDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OnwuAzu ns1:hasAlignment ns1:trueNeutral .\n\nns1:OnyxDeer ns1:hasAlignment ns1:trueNeutral .\n\nns1:OnyxScourge ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Oolioddroo ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OozeGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:OozeMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:OozingOtyugh ns1:hasAlignment ns1:trueNeutral .\n\nns1:OphiduanAnguineumCaste ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OphiduanHominisCaste ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OphiduanSemiferumCaste ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OphiotaurusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Orangutan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Orca ns1:hasAlignment ns1:trueNeutral .\n\nns1:OrcishWarclops ns1:hasAlignment ns1:trueNeutral .\n\nns1:OrcusDemonPrinceoftheUndead ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Oread ns1:hasAlignment ns1:trueNeutral .\n\nns1:Orog ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Oronci ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Orsatka ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Orsheval ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Orzar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Oshageros ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Osteon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ostiarius ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ostovite ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ostrich ns1:hasAlignment ns1:trueNeutral .\n\nns1:Othaos ns1:hasAlignment ns1:trueNeutral .\n\nns1:Otyugh ns1:hasAlignment ns1:trueNeutral .\n\nns1:OtyughMeatPuppet ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ourdivar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Ouroboros ns1:hasAlignment ns1:trueNeutral .\n\nns1:OuterAbominationTheSecondStage ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OuterMutantPriest ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:OutlawTroop ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Ovinnik ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Owb ns1:hasAlignment ns1:neutralEvil .\n\nns1:Owl ns1:hasAlignment ns1:trueNeutral .\n\nns1:Owlbear ns1:hasAlignment ns1:trueNeutral .\n\nns1:OwlbearSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:Owlephant ns1:hasAlignment ns1:trueNeutral .\n\nns1:Owlwere ns1:hasAlignment ns1:chaoticEvil .\n\nns1:PISCODAEMON ns1:hasAlignment ns1:neutralEvil .\n\nns1:Pachycephalosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Paguroida ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:PaigoelDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Painajai ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Pairaka ns1:hasAlignment ns1:neutralEvil .\n\nns1:Pakalchi ns1:hasAlignment ns1:neutralEvil .\n\nns1:PaleStranger ns1:hasAlignment ns1:neutralEvil .\n\nns1:PaleoskeletonTriceratops ns1:hasAlignment ns1:trueNeutral .\n\nns1:PallidAngel ns1:hasAlignment ns1:neutralEvil .\n\nns1:Panda ns1:hasAlignment ns1:trueNeutral .\n\nns1:Panotti ns1:hasAlignment ns1:neutralGood .\n\nns1:Papinijuwari ns1:hasAlignment ns1:neutralEvil .\n\nns1:Papinu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Paracletus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Parasaurolophus ns1:hasAlignment ns1:trueNeutral .\n\nns1:ParasiteMystic ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Pard ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Parrot ns1:hasAlignment ns1:trueNeutral .\n\nns1:PashaNobleShaitan ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:PastYithian ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Pavbagha ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Pazuzu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:PazuzuDemonPrinceofAir ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Peafowl ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pech ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pegasus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pelagastr ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:PelagastrProtean ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:PelagosSeaSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Peluda ns1:hasAlignment ns1:neutralEvil .\n\nns1:Pendula ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Pengizu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Penguin ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pepfralcon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Peri ns1:hasAlignment ns1:neutralGood .\n\nns1:PersonificationOfFury ns1:hasAlignment ns1:trueNeutral .\n\nns1:Peryton ns1:hasAlignment ns1:chaoticEvil .\n\nns1:PestDrakeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pestie ns1:hasAlignment ns1:trueNeutral .\n\nns1:PestilenziDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:PetitionerHumanCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Petrifern ns1:hasAlignment ns1:trueNeutral .\n\nns1:PetrifiedMaiden ns1:hasAlignment ns1:neutralEvil .\n\nns1:Petrous ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Peuchen ns1:hasAlignment ns1:neutralEvil .\n\nns1:Phantasm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:PhantomFungus ns1:hasAlignment ns1:trueNeutral .\n\nns1:PhantomLancer ns1:hasAlignment ns1:neutralEvil .\n\nns1:PhantomStalker ns1:hasAlignment ns1:trueNeutral .\n\nns1:PharaonicGuardian ns1:hasAlignment ns1:lawfulEvil .\n\nns1:PhaseFlea ns1:hasAlignment ns1:trueNeutral .\n\nns1:PhaseSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Phasm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Phasma ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Phasmadaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:PhlegmaticOozeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Phlogiston ns1:hasAlignment ns1:trueNeutral .\n\nns1:Phoenix ns1:hasAlignment ns1:neutralGood .\n\nns1:Phooka ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Phoso ns1:hasAlignment ns1:trueNeutral .\n\nns1:PhrenicScourge ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Phycomid ns1:hasAlignment ns1:trueNeutral .\n\nns1:PickledPunk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Pipefox ns1:hasAlignment ns1:trueNeutral .\n\nns1:PiranhaMature ns1:hasAlignment ns1:trueNeutral .\n\nns1:PiranhaSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Piscodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:PitBoar ns1:hasAlignment ns1:trueNeutral .\n\nns1:PitFiend ns1:hasAlignment ns1:lawfulEvil .\n\nns1:PitHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Pixie ns1:hasAlignment ns1:neutralGood .\n\nns1:PixieCircle ns1:hasAlignment ns1:trueNeutral .\n\nns1:PlagueGiant ns1:hasAlignment ns1:neutralEvil .\n\nns1:PlagueLocustSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:PlagueZombie ns1:hasAlignment ns1:trueNeutral .\n\nns1:PlaguebearerOtyugh ns1:hasAlignment ns1:trueNeutral .\n\nns1:PlaguedHorse ns1:hasAlignment ns1:neutralEvil .\n\nns1:Planetar ns1:hasAlignment ns1:neutralGood .\n\nns1:Plankta ns1:hasAlignment ns1:neutralEvil .\n\nns1:PlantImbuedApe ns1:hasAlignment ns1:neutralGood .\n\nns1:Plantoid ns1:hasAlignment ns1:trueNeutral .\n\nns1:PlantoidServitor ns1:hasAlignment ns1:trueNeutral .\n\nns1:PlasmaOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Platypus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pleroma ns1:hasAlignment ns1:trueNeutral .\n\nns1:Plesiosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Plizeazoth ns1:hasAlignment ns1:neutralEvil .\n\nns1:PodCannon ns1:hasAlignment ns1:trueNeutral .\n\nns1:PoisonFrog ns1:hasAlignment ns1:trueNeutral .\n\nns1:PoisonGauntlet ns1:hasAlignment ns1:trueNeutral .\n\nns1:PoisonousFrog ns1:hasAlignment ns1:trueNeutral .\n\nns1:PoisonousFrogSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:PoisonousManticore ns1:hasAlignment ns1:lawfulEvil .\n\nns1:PolarBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:PolarKamadan ns1:hasAlignment ns1:neutralEvil .\n\nns1:PolarWhaler ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:PolarWhalerSimulacrum ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Polevik ns1:hasAlignment ns1:neutralEvil .\n\nns1:Polong ns1:hasAlignment ns1:neutralEvil .\n\nns1:Poltergeist ns1:hasAlignment ns1:lawfulEvil .\n\nns1:PondDrinker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pony ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pooka ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Popobala ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Popoto ns1:hasAlignment ns1:trueNeutral .\n\nns1:PoppyLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:Poracha ns1:hasAlignment ns1:trueNeutral .\n\nns1:Porcupine ns1:hasAlignment ns1:trueNeutral .\n\nns1:PortunusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Possessor ns1:hasAlignment ns1:lawfulEvil .\n\nns1:PranaGhost ns1:hasAlignment ns1:neutralGood .\n\nns1:PreceptorArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:PretenderDevilDissimulare ns1:hasAlignment ns1:lawfulEvil .\n\nns1:PrideLordAgathion ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:PrismDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ProcyalAgathion ns1:hasAlignment ns1:neutralGood .\n\nns1:Proscriber ns1:hasAlignment ns1:trueNeutral .\n\nns1:ProteanKeketar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ProteanNaunet ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ProteanVoidworm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Protector ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ProtoShoggoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Prydanu ns1:hasAlignment ns1:chaoticGood .\n\nns1:Pseudodragon ns1:hasAlignment ns1:neutralGood .\n\nns1:Pseudosphinx ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pseudowyvern ns1:hasAlignment ns1:trueNeutral .\n\nns1:PsionicAlMiraj ns1:hasAlignment ns1:trueNeutral .\n\nns1:Psiwyrm ns1:hasAlignment ns1:neutralEvil .\n\nns1:Psoglav ns1:hasAlignment ns1:chaoticEvil .\n\nns1:PsycheSerpent ns1:hasAlignment ns1:trueNeutral .\n\nns1:Psychemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Psychepore ns1:hasAlignment ns1:trueNeutral .\n\nns1:PsychicStalker ns1:hasAlignment ns1:neutralEvil .\n\nns1:PsychicWard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Psychlown ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Psychofant ns1:hasAlignment ns1:trueNeutral .\n\nns1:PsychoplasmicBehir ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ptarmigan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pteranodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pufferfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:Puffin ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pukwudgie ns1:hasAlignment ns1:neutralEvil .\n\nns1:PumpkinGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:PurpleWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Purrodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:PutridOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:PygmyGnoll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Pyrausta ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Pyrogeist ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Pyrolisk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Qallupilluk ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Qolok ns1:hasAlignment ns1:neutralEvil .\n\nns1:QuantiumGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Quantum ns1:hasAlignment ns1:trueNeutral .\n\nns1:Quasit ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Quatoid ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:QueenThermite ns1:hasAlignment ns1:trueNeutral .\n\nns1:Quelaunt ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Quetzalcoatlus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Quickling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Quickwood ns1:hasAlignment ns1:trueNeutral .\n\nns1:QuintessenceGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Quipper ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rabbit ns1:hasAlignment ns1:trueNeutral .\n\nns1:Raccoon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Racoon ns1:hasAlignment ns1:trueNeutral .\n\nns1:RadiantEssence ns1:hasAlignment ns1:neutralGood .\n\nns1:Raelis ns1:hasAlignment ns1:chaoticGood .\n\nns1:RageDemonAeshma ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RagebornGnoll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ragewight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Raggoth ns1:hasAlignment ns1:neutralEvil .\n\nns1:RagingRubble ns1:hasAlignment ns1:trueNeutral .\n\nns1:Raiju ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:RajputAmbari ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RakasaBatu ns1:hasAlignment ns1:trueNeutral .\n\nns1:RakklethornToad ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rakshasa ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Raktavarna ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ram ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ramidreju ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rast ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rat ns1:hasAlignment ns1:trueNeutral .\n\nns1:RatKing ns1:hasAlignment ns1:trueNeutral .\n\nns1:RatOgre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RatPlagueSwarmMR ns1:hasAlignment ns1:lawfulEvil .\n\nns1:RatSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ratfolk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ratling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RattlerInphidian ns1:hasAlignment ns1:neutralEvil .\n\nns1:RavagerSpawnCrawlerForm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Raven ns1:hasAlignment ns1:trueNeutral .\n\nns1:RavenSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:RavenousGnoll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RavenousTumbleweed ns1:hasAlignment ns1:trueNeutral .\n\nns1:RavenousUrchinSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:RavenousWendigo ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Rawbones ns1:hasAlignment ns1:neutralEvil .\n\nns1:Rawhead ns1:hasAlignment ns1:neutralEvil .\n\nns1:RazorAngler ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:RazorBoar ns1:hasAlignment ns1:trueNeutral .\n\nns1:RazorFern ns1:hasAlignment ns1:trueNeutral .\n\nns1:Razormouth ns1:hasAlignment ns1:trueNeutral .\n\nns1:RecycledGearsman ns1:hasAlignment ns1:trueNeutral .\n\nns1:RedJester ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:RedPanda ns1:hasAlignment ns1:trueNeutral .\n\nns1:RedReaver ns1:hasAlignment ns1:trueNeutral .\n\nns1:RedWraith ns1:hasAlignment ns1:neutralEvil .\n\nns1:RedWyrmRavener ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Redcap ns1:hasAlignment ns1:neutralEvil .\n\nns1:Redkind ns1:hasAlignment ns1:neutralEvil .\n\nns1:Reefclaw ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Reigon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Reindeer ns1:hasAlignment ns1:trueNeutral .\n\nns1:ReliquaryGuardian ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Remacera ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Renzer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RepairRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:Reptial ns1:hasAlignment ns1:neutralGood .\n\nns1:Reptoid ns1:hasAlignment ns1:lawfulEvil .\n\nns1:RequiemBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:RetchHound ns1:hasAlignment ns1:neutralEvil .\n\nns1:Retriever ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Rhamphorhynchus ns1:hasAlignment ns1:trueNeutral .\n\nns1:RhanTegoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Rhinoceros ns1:hasAlignment ns1:trueNeutral .\n\nns1:RhinocerosWoolly ns1:hasAlignment ns1:trueNeutral .\n\nns1:RhuChalik ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RidingDog ns1:hasAlignment ns1:trueNeutral .\n\nns1:RiftFlumph ns1:hasAlignment ns1:chaoticGood .\n\nns1:Riftcreeper ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RimefireEidolon ns1:hasAlignment ns1:chaoticGood .\n\nns1:Ringhorn ns1:hasAlignment ns1:trueNeutral .\n\nns1:Riotblood ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RipperDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RiptideHorror ns1:hasAlignment ns1:lawfulEvil .\n\nns1:RisenWitch ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RishiManu ns1:hasAlignment ns1:lawfulGood .\n\nns1:RiverDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:RiverElk ns1:hasAlignment ns1:trueNeutral .\n\nns1:RiverGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RiverTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RiverswellSpirit ns1:hasAlignment ns1:neutralEvil .\n\nns1:RobotGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Roc ns1:hasAlignment ns1:trueNeutral .\n\nns1:RockCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:RockReptile ns1:hasAlignment ns1:trueNeutral .\n\nns1:RockTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RockTuatara ns1:hasAlignment ns1:trueNeutral .\n\nns1:RoilingOil ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rokurokubi ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Rokyamut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Ronus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Roofgarden ns1:hasAlignment ns1:trueNeutral .\n\nns1:RopeDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:RopeGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Roper ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Rorkoun ns1:hasAlignment ns1:neutralEvil .\n\nns1:Roseling ns1:hasAlignment ns1:neutralGood .\n\nns1:RotGrubSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rougarou ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:RoyalTimeElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rufidier ns1:hasAlignment ns1:neutralEvil .\n\nns1:Rukh ns1:hasAlignment ns1:trueNeutral .\n\nns1:RuneGiant ns1:hasAlignment ns1:lawfulEvil .\n\nns1:RuneGuardian ns1:hasAlignment ns1:trueNeutral .\n\nns1:RunewarpedGoblin ns1:hasAlignment ns1:neutralEvil .\n\nns1:Rusalka ns1:hasAlignment ns1:neutralEvil .\n\nns1:RussetMold ns1:hasAlignment ns1:trueNeutral .\n\nns1:RustLord ns1:hasAlignment ns1:trueNeutral .\n\nns1:RustMiteSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:RustMonster ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ryven ns1:hasAlignment ns1:trueNeutral .\n\nns1:SANDGIANT ns1:hasAlignment ns1:neutralEvil .\n\nns1:SabbatPrancer ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Sabosan ns1:hasAlignment ns1:neutralEvil .\n\nns1:Sacristan ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Sagari ns1:hasAlignment ns1:neutralEvil .\n\nns1:Saguaroi ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sahuagin ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Salamander ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SaltDrake ns1:hasAlignment ns1:trueNeutral .\n\nns1:SaltMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:SaltWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:SaltwaterCrocodile ns1:hasAlignment ns1:trueNeutral .\n\nns1:SaltwaterMerrow ns1:hasAlignment ns1:neutralEvil .\n\nns1:Samsaran ns1:hasAlignment ns1:trueNeutral .\n\nns1:SandGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:SandHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SandKraken ns1:hasAlignment ns1:trueNeutral .\n\nns1:SandScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:SandStalker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sandling ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sandman ns1:hasAlignment ns1:neutralEvil .\n\nns1:Sangoi ns1:hasAlignment ns1:neutralEvil .\n\nns1:Sangudaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:SanguineOozeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:SapphireJellyfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:SapphireOoze ns1:hasAlignment ns1:chaoticGood .\n\nns1:Sarcovalt ns1:hasAlignment ns1:neutralEvil .\n\nns1:Sard ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SargassumFiend ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sasquatch ns1:hasAlignment ns1:trueNeutral .\n\nns1:Satyr ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SaumenKar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Saurian ns1:hasAlignment ns1:trueNeutral .\n\nns1:SavageGreenHorde ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SawdustSlough ns1:hasAlignment ns1:trueNeutral .\n\nns1:SawlegLocust ns1:hasAlignment ns1:trueNeutral .\n\nns1:Saxra ns1:hasAlignment ns1:neutralEvil .\n\nns1:Sayona ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ScaldingMinotaur ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ScarabBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScarabSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Scarecrow ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScarletSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScarletSpiderSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScarletWalker ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ScavengerWormCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sceaduinar ns1:hasAlignment ns1:neutralEvil .\n\nns1:Sceazir ns1:hasAlignment ns1:neutralEvil .\n\nns1:Schir ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Scitalis ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScorpionDemonGharros ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ScorpionSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Scorpionfolk ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ScragAquaticTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Scraghound ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScrapyardRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScreamingDevilkin ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ScreamingGiantBeheadedCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:ScreamingMedusaHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:ScreamingSeveredHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:ScreamingSeveredSkull ns1:hasAlignment ns1:neutralEvil .\n\nns1:ScreamingSkull ns1:hasAlignment ns1:trueNeutral .\n\nns1:Scylla ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ScytheHorn ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScytheTree ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SeaCat ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:SeaGiant ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SeaHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SeaLinnorm ns1:hasAlignment ns1:neutralEvil .\n\nns1:SeaLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaScourge ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaSerpent ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaSphereBlubble ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaSpider ns1:hasAlignment ns1:neutralEvil .\n\nns1:Seal ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaweedLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaweedSiren ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SecurityMannequin ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Seilenos ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Selkie ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SentientWaxGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:SentinelHut ns1:hasAlignment ns1:trueNeutral .\n\nns1:SepiaSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sepid ns1:hasAlignment ns1:neutralEvil .\n\nns1:Seps ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sepsidaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Seraptis ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SerpentAlchemist ns1:hasAlignment ns1:neutralEvil .\n\nns1:SerpentDemonMallor ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Serpentfolk ns1:hasAlignment ns1:neutralEvil .\n\nns1:SerpentfolkReclaimer ns1:hasAlignment ns1:neutralEvil .\n\nns1:Serpopard ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ServitoroftheOuterGods ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Seugathi ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SeugathiSavant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SewerBlight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SewerOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:SewerTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Sha ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Shabti ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ShachathDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Shadow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShadowAngel ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ShadowAnimalLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShadowCollector ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ShadowDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShadowDrake ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShadowFern ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShadowGiant ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ShadowHunter ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShadowHunterHatchling ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShadowMastiff ns1:hasAlignment ns1:neutralEvil .\n\nns1:ShadowRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShadowRatSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:ShadowRoper ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShadowWolf ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Shae ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShaggyDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShahzadaNobleMarid ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Shalkeshka ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShamblingMound ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shampe ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Shantak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShardSlag ns1:hasAlignment ns1:trueNeutral .\n\nns1:SharkEatingCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:SharpshooterAutomaton ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Shasalqu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shedu ns1:hasAlignment ns1:lawfulGood .\n\nns1:Sheep ns1:hasAlignment ns1:trueNeutral .\n\nns1:SheetFungus ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShemhazianDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShenMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shenzuzhou ns1:hasAlignment ns1:neutralEvil .\n\nns1:Shikigami ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShimmerwingDragonfly ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shinigami ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ShiningSentinel ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShipSentinel ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShipbreakerSeaSerpent ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ShipinaBottle ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShipwreckerCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shira ns1:hasAlignment ns1:neutralEvil .\n\nns1:Shobhad ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShockerLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shoggoth ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Shoggti ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShokiPsychopomp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shotalashu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shredskin ns1:hasAlignment ns1:neutralEvil .\n\nns1:Shrieker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shriezyx ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShrineBlessedBurningSkeletons ns1:hasAlignment ns1:neutralEvil .\n\nns1:Shrroth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Shulsaga ns1:hasAlignment ns1:trueNeutral .\n\nns1:Siabrae ns1:hasAlignment ns1:neutralEvil .\n\nns1:SiegeOwlbear ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sigbin ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Silid ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Silvanshee ns1:hasAlignment ns1:neutralGood .\n\nns1:SilverBells ns1:hasAlignment ns1:trueNeutral .\n\nns1:SilverDragonGreatWyrm ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonJuvenile ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonMatureAdult ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonVeryOld ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonVeryYoung ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonWyrm ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonWyrmling ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonYoungAdult ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverbloodWerewolfHumanForm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Simurgh ns1:hasAlignment ns1:neutralGood .\n\nns1:SinSeeker ns1:hasAlignment ns1:trueNeutral .\n\nns1:SinbornDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SingingShrieker ns1:hasAlignment ns1:trueNeutral .\n\nns1:SinspawnEnvy ns1:hasAlignment ns1:neutralEvil .\n\nns1:SinspawnGluttony ns1:hasAlignment ns1:neutralEvil .\n\nns1:SinspawnGreedspawn ns1:hasAlignment ns1:neutralEvil .\n\nns1:SinspawnPride ns1:hasAlignment ns1:neutralEvil .\n\nns1:SinspawnSloth ns1:hasAlignment ns1:neutralEvil .\n\nns1:SinspawnWrath ns1:hasAlignment ns1:neutralEvil .\n\nns1:SireDevilPatraavex ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Siren ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SirensBedAnemone ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sirrush ns1:hasAlignment ns1:neutralGood .\n\nns1:Sishkanset ns1:hasAlignment ns1:neutralEvil .\n\nns1:Siyokoy ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkateSpiderSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Skaveling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SkeletalArcher ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkeletalChampion ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkeletalChampionArcherCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkeletalMage ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkeletalMount ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkeletonHostCorpse ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkeletonReindeer ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkildpadderGiantTortoiseBullette ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkinStealer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SkinStitcher ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Skincrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkincrawlerDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Skinstitch ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkirmishersTroop ns1:hasAlignment ns1:chaoticGood .\n\nns1:SkitterRat ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Skitterdark ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Skittergoat ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkrikNettle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Skrimsl ns1:hasAlignment ns1:trueNeutral .\n\nns1:Skua ns1:hasAlignment ns1:trueNeutral .\n\nns1:Skulk ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SkullRipper ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SkullSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkullSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:Skullcruncher ns1:hasAlignment ns1:neutralEvil .\n\nns1:Skulleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkumUlatKini ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Skunk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Skvader ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkyDreamer ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlaadLordOfEntropy ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SlaadLordOfTheInsane ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SlagGiant ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:SlagWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Slaughterford ns1:hasAlignment ns1:neutralEvil .\n\nns1:SleepingWillow ns1:hasAlignment ns1:neutralEvil .\n\nns1:SleeykOwlbear ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sleipnir ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlicerBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlimeDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SlimeInfectedBasilisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlimeMold ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlimyDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SlimyHagfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:Slinker ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SlitheringPit ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlitheringTracker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Slorath ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Sloth ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlothSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlothViper ns1:hasAlignment ns1:trueNeutral .\n\nns1:Slugspawn ns1:hasAlignment ns1:trueNeutral .\n\nns1:Slurk ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallAcidQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallAetherElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallAirElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallBarracuda ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallColdironelemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallEarthElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallFireCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallFireElemental ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SmallGravityElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallIceElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallLightningElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallLightningQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallMagmaElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallMonstrousSeaWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallMudElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallNegativeenergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallObsidianQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallPositiveEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallPsionicElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallStingray ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallUnfetteredEidolon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SmallWaterElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmilodonSaberToothedCat ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmokeDragonDracoFumoSuffaco ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmokeGiant ns1:hasAlignment ns1:neutralEvil .\n\nns1:SmokeMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmokeSentinel ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Smokeshade ns1:hasAlignment ns1:neutralEvil .\n\nns1:SnailFlail ns1:hasAlignment ns1:trueNeutral .\n\nns1:SnakeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Snallygaster ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SnapdragonLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:SnapjawHomunculus ns1:hasAlignment ns1:neutralEvil .\n\nns1:SnappingTurtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Snark ns1:hasAlignment ns1:trueNeutral .\n\nns1:SnowGiant ns1:hasAlignment ns1:neutralEvil .\n\nns1:SnowLeopard ns1:hasAlignment ns1:trueNeutral .\n\nns1:SnowRoc ns1:hasAlignment ns1:trueNeutral .\n\nns1:Snowcloak ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Snowking ns1:hasAlignment ns1:neutralEvil .\n\nns1:SoddenDraugerTroop ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SoddenDraugrTroop ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Solar ns1:hasAlignment ns1:neutralGood .\n\nns1:SolarPitriAgnishvattaMR ns1:hasAlignment ns1:lawfulGood .\n\nns1:SoldierThermite ns1:hasAlignment ns1:trueNeutral .\n\nns1:Somalcygot ns1:hasAlignment ns1:neutralEvil .\n\nns1:Somlum ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SonechardGeneralofOrcus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SonicKratah ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Soucouyant ns1:hasAlignment ns1:neutralEvil .\n\nns1:SoulEater ns1:hasAlignment ns1:neutralEvil .\n\nns1:SoulNibbler ns1:hasAlignment ns1:trueNeutral .\n\nns1:SoulReaper ns1:hasAlignment ns1:neutralEvil .\n\nns1:SoulboundAnnihilatorRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:SoulboundDoll ns1:hasAlignment ns1:trueNeutral .\n\nns1:SoulboundMannequin ns1:hasAlignment ns1:trueNeutral .\n\nns1:SoulboundShell ns1:hasAlignment ns1:trueNeutral .\n\nns1:SoullessDestroyer ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Soulsliver ns1:hasAlignment ns1:neutralEvil .\n\nns1:Spartolos ns1:hasAlignment ns1:neutralEvil .\n\nns1:SpawningCanker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SpawnofYogSothoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SpearUrchin ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpectralRockTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Spectre ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SpellgorgedZombie ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpellscarredFext ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SphinxColossusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpiderCollective ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpiderEater ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpiderSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpikestoneGuardian ns1:hasAlignment ns1:trueNeutral .\n\nns1:Spindler ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SpineDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Spinosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpinyEurypterid ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpinyStarfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpireDrake ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SpiritOni ns1:hasAlignment ns1:neutralEvil .\n\nns1:SpiritofAbandon ns1:hasAlignment ns1:neutralGood .\n\nns1:SpiteSpitter ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SpittingCobra ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpittingEurypterid ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpittingSeaSerpent ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SplinterDrake ns1:hasAlignment ns1:trueNeutral .\n\nns1:SporeRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Spriggan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SpringHeeledJack ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Sprite ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SpyglassArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:SquamousDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Squealer ns1:hasAlignment ns1:trueNeutral .\n\nns1:Squid ns1:hasAlignment ns1:trueNeutral .\n\nns1:SquidGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:Squirrel ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stag ns1:hasAlignment ns1:trueNeutral .\n\nns1:StagArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:StalkBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:StalkerAutomaton ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:StandardShieldWarden ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:StarDrake ns1:hasAlignment ns1:trueNeutral .\n\nns1:StarMonarch ns1:hasAlignment ns1:chaoticGood .\n\nns1:StarSpawnofCthulhu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:StarVampire ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Starspawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SteamBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:SteamMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:SteamPoweredClockworkDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stegaloviper ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stegocentipede ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stegosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:StenchKow ns1:hasAlignment ns1:trueNeutral .\n\nns1:StewardOfTheSkein ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sthenno ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Stingray ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stirge ns1:hasAlignment ns1:trueNeutral .\n\nns1:StirgeDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:StirgeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneColossusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneGuardianGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneMaiden ns1:hasAlignment ns1:trueNeutral .\n\nns1:StonePudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneRoper ns1:hasAlignment ns1:chaoticEvil .\n\nns1:StoneSalveshapedFiendishEnhancedBlackPudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneTreant ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneTroglodyte ns1:hasAlignment ns1:chaoticEvil .\n\nns1:StormGiant ns1:hasAlignment ns1:chaoticGood .\n\nns1:StormGiantZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:StormHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Stormghost ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Stormwarden ns1:hasAlignment ns1:neutralEvil .\n\nns1:StrangleWeed ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stranglereed ns1:hasAlignment ns1:trueNeutral .\n\nns1:StringyDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Strix ns1:hasAlignment ns1:trueNeutral .\n\nns1:StrokeLad ns1:hasAlignment ns1:neutralEvil .\n\nns1:StumbleFish ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stunjelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:StygianLeviathan ns1:hasAlignment ns1:neutralEvil .\n\nns1:StygianTurtleShark ns1:hasAlignment ns1:neutralEvil .\n\nns1:Stygira ns1:hasAlignment ns1:lawfulEvil .\n\nns1:StymphalianBird ns1:hasAlignment ns1:trueNeutral .\n\nns1:StymphalidesSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stymphalidies ns1:hasAlignment ns1:trueNeutral .\n\nns1:Styracosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Su ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Succubus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Sudoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Suffragan ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SuijinKami ns1:hasAlignment ns1:trueNeutral .\n\nns1:Suli ns1:hasAlignment ns1:trueNeutral .\n\nns1:SummonedAurochs ns1:hasAlignment ns1:trueNeutral .\n\nns1:SummonedGorilla ns1:hasAlignment ns1:trueNeutral .\n\nns1:SummonedWolf ns1:hasAlignment ns1:trueNeutral .\n\nns1:SumpSteward ns1:hasAlignment ns1:trueNeutral .\n\nns1:SunGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SunflowerLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sunlord ns1:hasAlignment ns1:neutralGood .\n\nns1:Suspiridaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:SutureVine ns1:hasAlignment ns1:trueNeutral .\n\nns1:Suzalisk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Svartalfar ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Svirfneblin ns1:hasAlignment ns1:trueNeutral .\n\nns1:SvirfneblinRidingSlug ns1:hasAlignment ns1:neutralGood .\n\nns1:Swaithe ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SwampBarracuda ns1:hasAlignment ns1:trueNeutral .\n\nns1:SwampBlight ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SwampMummy ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SwampTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SwanMaiden ns1:hasAlignment ns1:chaoticGood .\n\nns1:SwarmDemonDaraka ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SwitchbackJackal ns1:hasAlignment ns1:trueNeutral .\n\nns1:Swordfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sylph ns1:hasAlignment ns1:trueNeutral .\n\nns1:Synesis ns1:hasAlignment ns1:trueNeutral .\n\nns1:Synevite ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Syricta ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Syrinx ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Szaboan ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Szuriel ns1:hasAlignment ns1:neutralEvil .\n\nns1:TShann ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tabaxi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Tadhemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Taer ns1:hasAlignment ns1:trueNeutral .\n\nns1:TaigaGiant ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TaigaLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TailessCragLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TallowGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tangtal ns1:hasAlignment ns1:neutralEvil .\n\nns1:Taniniver ns1:hasAlignment ns1:neutralEvil .\n\nns1:Taniwha ns1:hasAlignment ns1:chaoticGood .\n\nns1:Tanuki ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TarJelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:TarantulaTree ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Targotha ns1:hasAlignment ns1:trueNeutral .\n\nns1:TarnLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TarrasqueB ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TarryDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TarryDemodandCR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tarsier ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tataka ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Tatzlwyrm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tauhoti ns1:hasAlignment ns1:trueNeutral .\n\nns1:TaviMongooseFolk ns1:hasAlignment ns1:trueNeutral .\n\nns1:TawilAtumr ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TaxidermicGrizzlyBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tazelwurm ns1:hasAlignment ns1:trueNeutral .\n\nns1:TchoTcho ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tearjerker ns1:hasAlignment ns1:trueNeutral .\n\nns1:TearofBurningFlame ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Telgrodradt ns1:hasAlignment ns1:neutralEvil .\n\nns1:Temerdaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:TempestBehemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:TemporalCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tendriculos ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tendrul ns1:hasAlignment ns1:trueNeutral .\n\nns1:TenebrousBlight ns1:hasAlignment ns1:trueNeutral .\n\nns1:TenebrousPurpleWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:TenebrousWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tengu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tenome ns1:hasAlignment ns1:neutralEvil .\n\nns1:TentacledHorror ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tentamort ns1:hasAlignment ns1:trueNeutral .\n\nns1:TermagantKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:TermiteSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:TerracottaArcher ns1:hasAlignment ns1:trueNeutral .\n\nns1:TerracottaHorseman ns1:hasAlignment ns1:trueNeutral .\n\nns1:TerracottaSoldier ns1:hasAlignment ns1:trueNeutral .\n\nns1:Terraformer ns1:hasAlignment ns1:trueNeutral .\n\nns1:TerrorBird ns1:hasAlignment ns1:trueNeutral .\n\nns1:TerrorWolf ns1:hasAlignment ns1:neutralEvil .\n\nns1:Terrorized ns1:hasAlignment ns1:neutralEvil .\n\nns1:TestudoTroops ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Tether ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Tetrolimulus ns1:hasAlignment ns1:neutralEvil .\n\nns1:ThalassicBehemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thanadaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:ThanatosFey ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ThanatoticTitan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Thancrus ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Thawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheBlackRider ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:TheDesire ns1:hasAlignment ns1:neutralEvil .\n\nns1:TheEndSinger ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheFatherofAllLinnorms ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheFirebleeder ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheFirstBlade ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TheFuriesErinyes ns1:hasAlignment ns1:lawfulEvil .\n\nns1:TheGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:TheGrandDefender ns1:hasAlignment ns1:lawfulGood .\n\nns1:TheGrimWhiteStag ns1:hasAlignment ns1:lawfulGood .\n\nns1:TheHeraldofPassion ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TheHobblingHookClawedApparatus ns1:hasAlignment ns1:trueNeutral .\n\nns1:TheHornedLord ns1:hasAlignment ns1:chaoticGood .\n\nns1:TheInfernalDuke ns1:hasAlignment ns1:lawfulEvil .\n\nns1:TheMantisGod ns1:hasAlignment ns1:lawfulEvil .\n\nns1:TheOinodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:TheOldMan ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ThePrinceinChains ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ThePrinceofHell ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheRavagerCrawlerForm ns1:hasAlignment ns1:trueNeutral .\n\nns1:TheRedRider ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:TheScarecrow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheSpiritOfAdoration ns1:hasAlignment ns1:neutralGood .\n\nns1:TheStabbingBeast ns1:hasAlignment ns1:neutralEvil .\n\nns1:TheSunlord ns1:hasAlignment ns1:neutralGood .\n\nns1:TheThirdStageOuterSpawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheWaterLizard ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TheWhiteRider ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Theletos ns1:hasAlignment ns1:trueNeutral .\n\nns1:Therizinosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thessalgorgon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thessalhydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thessalisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThinMan ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Thognorok ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Thoqqua ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThornDog ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thorny ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThornyAdvancedTyrannosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThoughtEater ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThrallofYogSothoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Thrasfyr ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ThriaeConstructor ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThriaeDancer ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ThriaeQueen ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ThriaeSeer ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ThriaeSoldier ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Thrush ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thulgant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ThunderBeast ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThunderBehemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thunderbird ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thundershrike ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thuskchoon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Thylacine ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thyrlien ns1:hasAlignment ns1:chaoticGood .\n\nns1:Tiberolith ns1:hasAlignment ns1:trueNeutral .\n\nns1:TickSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:TidepoolDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Tidewretch ns1:hasAlignment ns1:neutralEvil .\n\nns1:Tiger ns1:hasAlignment ns1:trueNeutral .\n\nns1:TigerFish ns1:hasAlignment ns1:trueNeutral .\n\nns1:TigerShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tigrilla ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tikbalang ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tilket ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TimberWight ns1:hasAlignment ns1:lawfulEvil .\n\nns1:TimeFlayer ns1:hasAlignment ns1:neutralEvil .\n\nns1:Tintargurill ns1:hasAlignment ns1:trueNeutral .\n\nns1:TinyAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:TinyMonstrousSeaWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:TitanCentipedeExoskeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:Titanboar ns1:hasAlignment ns1:trueNeutral .\n\nns1:TitanicAdultBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TitanicWhipSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Titanoboa ns1:hasAlignment ns1:trueNeutral .\n\nns1:Titivilus ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Tixitog ns1:hasAlignment ns1:neutralEvil .\n\nns1:Tiyanak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tizheruk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tlalusk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Toad ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tobongo ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tojanida ns1:hasAlignment ns1:trueNeutral .\n\nns1:TombGiant ns1:hasAlignment ns1:neutralEvil .\n\nns1:TombstoneFairy ns1:hasAlignment ns1:neutralEvil .\n\nns1:TomeofHorrors ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tonberry ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ToothFairy ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ToothFairyMonarch ns1:hasAlignment ns1:neutralEvil .\n\nns1:Tophet ns1:hasAlignment ns1:trueNeutral .\n\nns1:TorLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TormentorofSoulsTormentorDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:TorturerRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:Toshigami ns1:hasAlignment ns1:neutralGood .\n\nns1:TotemGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Totenmaske ns1:hasAlignment ns1:neutralEvil .\n\nns1:Trailgaunt ns1:hasAlignment ns1:neutralEvil .\n\nns1:Transposer ns1:hasAlignment ns1:trueNeutral .\n\nns1:Trapper ns1:hasAlignment ns1:trueNeutral .\n\nns1:Treant ns1:hasAlignment ns1:neutralGood .\n\nns1:Trelmarixian ns1:hasAlignment ns1:neutralEvil .\n\nns1:TrenchMist ns1:hasAlignment ns1:neutralEvil .\n\nns1:TriFlowerFrond ns1:hasAlignment ns1:trueNeutral .\n\nns1:TriTongueHorror ns1:hasAlignment ns1:trueNeutral .\n\nns1:Triaxian ns1:hasAlignment ns1:trueNeutral .\n\nns1:TribalProtector ns1:hasAlignment ns1:neutralGood .\n\nns1:Triceratops ns1:hasAlignment ns1:trueNeutral .\n\nns1:Trilobite ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tripurasura ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Triton ns1:hasAlignment ns1:neutralGood .\n\nns1:Troblin ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Troggle ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TroggleRaider ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Troglodyte ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Troll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollAcolyte ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollBerserker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollBrute ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollElderMatron ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollFury ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollMonarch ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollMountain ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TrollRender ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollRipper ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:TrollWarden ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Trollhound ns1:hasAlignment ns1:trueNeutral .\n\nns1:Trollkin ns1:hasAlignment ns1:trueNeutral .\n\nns1:Troodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Trox ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TrumpetArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:TrumpeterSwan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tsaalgrend ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tsathar ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TsatharScourge ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TsathoggaTheFrogGod ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tuatara ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tullimonstrum ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tumblespark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tunche ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TunnelBrute ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TunnelWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tupilaq ns1:hasAlignment ns1:trueNeutral .\n\nns1:Turtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Turul ns1:hasAlignment ns1:trueNeutral .\n\nns1:Twigjack ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TwilightPitriBarhisad ns1:hasAlignment ns1:lawfulGood .\n\nns1:TwoHeadedTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TwoheadedWinterWorg ns1:hasAlignment ns1:neutralEvil .\n\nns1:Tychilarius ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tylosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tyngderkraften ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Tyrannosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:TyrantJellyMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tzitzimitl ns1:hasAlignment ns1:neutralEvil .\n\nns1:UbashkiSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ubue ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:UdaeusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:UgashIram ns1:hasAlignment ns1:neutralEvil .\n\nns1:Uintatherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:Uinuja ns1:hasAlignment ns1:chaoticGood .\n\nns1:Ujaheim ns1:hasAlignment ns1:trueNeutral .\n\nns1:Uldraaghu ns1:hasAlignment ns1:lawfulEvil .\n\nns1:UltharChampion ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:UltimaWeapon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:UmbralDragonGreatWyrm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonJuvenile ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonMatureAdult ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonOld ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonVeryOld ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonVeryYoung ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonWyrm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonWyrmling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonYoungAdult ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralEyeKiller ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralShepherd ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Umbralobe ns1:hasAlignment ns1:neutralEvil .\n\nns1:UnchosenGnoll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UndeadEmu ns1:hasAlignment ns1:neutralEvil .\n\nns1:UndeadNingyo ns1:hasAlignment ns1:neutralEvil .\n\nns1:UndeadOoze ns1:hasAlignment ns1:neutralEvil .\n\nns1:UndeadWarlord ns1:hasAlignment ns1:trueNeutral .\n\nns1:UnderworldBatSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Undigested ns1:hasAlignment ns1:neutralEvil .\n\nns1:UndigestedSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:Undine ns1:hasAlignment ns1:trueNeutral .\n\nns1:UnfetteredEidolon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:UnfetteredPhantom ns1:hasAlignment ns1:trueNeutral .\n\nns1:UnhallowedGreaterShadow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UnhallowedMohrg ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UnhallowedMummy ns1:hasAlignment ns1:lawfulEvil .\n\nns1:UnhallowedZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Unicorn ns1:hasAlignment ns1:chaoticGood .\n\nns1:Uniila ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Unrisen ns1:hasAlignment ns1:neutralEvil .\n\nns1:UnseelieShadowMastiff ns1:hasAlignment ns1:neutralEvil .\n\nns1:Upasunda ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Uraeus ns1:hasAlignment ns1:lawfulGood .\n\nns1:Urannag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Urdefhan ns1:hasAlignment ns1:neutralEvil .\n\nns1:Urhag ns1:hasAlignment ns1:neutralEvil .\n\nns1:Urrk ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ursikka ns1:hasAlignment ns1:trueNeutral .\n\nns1:Urskan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ushabti ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Utukku ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Valharut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Valkyrie ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Vamore ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Vampire ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VampireRose ns1:hasAlignment ns1:trueNeutral .\n\nns1:VampireSpawn ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VampireSquid ns1:hasAlignment ns1:trueNeutral .\n\nns1:VampiricMist ns1:hasAlignment ns1:neutralEvil .\n\nns1:VampiricOoze ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vanara ns1:hasAlignment ns1:lawfulGood .\n\nns1:Vanth ns1:hasAlignment ns1:trueNeutral .\n\nns1:VaporDireRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:VaporWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vargouille ns1:hasAlignment ns1:neutralEvil .\n\nns1:VariantAllip ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VariantAtticWhisperer ns1:hasAlignment ns1:trueNeutral .\n\nns1:Varklops ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VaultBuilderMR ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:VaultGiant ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VaultKeeper ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Vavakia ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vayuphak ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ved ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vegepygmy ns1:hasAlignment ns1:trueNeutral .\n\nns1:VegepygmyBodyguard ns1:hasAlignment ns1:trueNeutral .\n\nns1:VegepygmyChief ns1:hasAlignment ns1:trueNeutral .\n\nns1:VegepygmyCommoner ns1:hasAlignment ns1:trueNeutral .\n\nns1:VegepygmyGuard ns1:hasAlignment ns1:trueNeutral .\n\nns1:VegepygmySubchief ns1:hasAlignment ns1:trueNeutral .\n\nns1:VegepygmyWorker ns1:hasAlignment ns1:trueNeutral .\n\nns1:VeiledMaster ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Veinar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Veldenar ns1:hasAlignment ns1:trueNeutral .\n\nns1:Velociraptor ns1:hasAlignment ns1:trueNeutral .\n\nns1:VelvetAntSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vemerak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vendenopterix ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Venedaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:VenomDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VenomousSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:VenomousSnakeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Venomroach ns1:hasAlignment ns1:trueNeutral .\n\nns1:VeparDukeofDagon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Veranallia ns1:hasAlignment ns1:chaoticGood .\n\nns1:VeranalliaAzata ns1:hasAlignment ns1:chaoticGood .\n\nns1:VerdurousOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:VerminLord ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vermlek ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryOldBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryOldBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VeryOldCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:VeryOldGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VeryOldRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryOldRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:VeryOldSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:VeryOldSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:VeryOldWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryYoungBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryYoungBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VeryYoungForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryYoungGoldDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:VeryYoungGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VeryYoungRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryYoungRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:VeryYoungSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:VeryYoungSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:VeryYoungSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:VeryYoungUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VeryYoungWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryoldForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryoldSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:VescavorQueen ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vespergaunt ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vestraadi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Vidre ns1:hasAlignment ns1:trueNeutral .\n\nns1:ViduusPsychopomp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vilderavn ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vilkacis ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vilsteth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vilstrak ns1:hasAlignment ns1:neutralEvil .\n\nns1:VioletFungus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Viper ns1:hasAlignment ns1:trueNeutral .\n\nns1:ViperVine ns1:hasAlignment ns1:trueNeutral .\n\nns1:ViridiumGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vishap ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vishkanya ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vodyanoi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:VoidYai ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VoidZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:VoidstickZombie ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VolcanoGiant ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Volt ns1:hasAlignment ns1:trueNeutral .\n\nns1:VoltGhost ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Voltleech ns1:hasAlignment ns1:neutralEvil .\n\nns1:Voonith ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Vorgozen ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Vorin ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vorvorak ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vouivre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vrock ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vrolikai ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vrykolakas ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vukodlak ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vulchling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vulnudaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vulpinal ns1:hasAlignment ns1:neutralGood .\n\nns1:Vulture ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vvor ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vydrarch ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Wakandagi ns1:hasAlignment ns1:neutralGood .\n\nns1:Wallaby ns1:hasAlignment ns1:trueNeutral .\n\nns1:Walrus ns1:hasAlignment ns1:trueNeutral .\n\nns1:WandWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:WangLiang ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WarBringerGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WarBull ns1:hasAlignment ns1:trueNeutral .\n\nns1:WarPony ns1:hasAlignment ns1:trueNeutral .\n\nns1:Warcat ns1:hasAlignment ns1:trueNeutral .\n\nns1:WardenJackSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:WarmazeDisciplesTroop ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Warmonger ns1:hasAlignment ns1:trueNeutral .\n\nns1:WarmongerDevilLevaloch ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WarmongerWasp ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WarpedOne ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WarpglassOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Warsworn ns1:hasAlignment ns1:neutralEvil .\n\nns1:WaspDemonMezzalorn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WaspSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Waspite ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Watcher ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:WaterElementalConstruct ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaterLeaper ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WaterMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaterOrm ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaterStriderSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaterVeela ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaterWeird ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WaterWraith ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WaterWysp ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaterYai ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Waterfiend ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WaxGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaxworkHuman ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wayang ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Weasel ns1:hasAlignment ns1:trueNeutral .\n\nns1:Weedwhip ns1:hasAlignment ns1:trueNeutral .\n\nns1:WellLurker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wendigo ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WerebatHumanForm ns1:hasAlignment ns1:neutralEvil .\n\nns1:WereboarHumanForm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WerecrocodileHumanForm ns1:hasAlignment ns1:neutralEvil .\n\nns1:WeremantisHumanForm ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WereraptorHumanForm ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:WereraptorHybridForm ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:WereratHumanForm ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WeresharkHumanForm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WerespiderHumanForm ns1:hasAlignment ns1:neutralEvil .\n\nns1:WeretigerHumanForm ns1:hasAlignment ns1:neutralEvil .\n\nns1:WerewaspElfForm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WerewolfHumanFormCR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Whale ns1:hasAlignment ns1:trueNeutral .\n\nns1:WhalerJellyfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:WhipJelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:WhiptailDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Whirlmaw ns1:hasAlignment ns1:trueNeutral .\n\nns1:WhisperVulture ns1:hasAlignment ns1:trueNeutral .\n\nns1:Whisperer ns1:hasAlignment ns1:neutralEvil .\n\nns1:WhisperscaleHunter ns1:hasAlignment ns1:neutralEvil .\n\nns1:WhitePudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:Whyrlish ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wickerman ns1:hasAlignment ns1:trueNeutral .\n\nns1:WidowCreeper ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wight ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WightAdultRedDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WightMinotaur ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WightMonk ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Wihsaak ns1:hasAlignment ns1:neutralEvil .\n\nns1:Wikkawak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WildDreamImpCompanion ns1:hasAlignment ns1:neutralGood .\n\nns1:WildDreamImpHero ns1:hasAlignment ns1:neutralGood .\n\nns1:WildHuntArcher ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WildHuntHorse ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WildHuntHound ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WildHuntMonarch ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WildHuntScout ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WilloWisp ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WillowDusk ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WindWalker ns1:hasAlignment ns1:trueNeutral .\n\nns1:WindWalkerWendigo ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WindYai ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Winterwight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Wisagatcak ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WitchDollGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:WitchTree ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Witchcrow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Witchfire ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Witherstench ns1:hasAlignment ns1:trueNeutral .\n\nns1:Witherweed ns1:hasAlignment ns1:trueNeutral .\n\nns1:WizardsShackle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Woghemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wolf ns1:hasAlignment ns1:trueNeutral .\n\nns1:WolfInSheepsClothing ns1:hasAlignment ns1:trueNeutral .\n\nns1:WolfSpider ns1:hasAlignment ns1:neutralEvil .\n\nns1:WolfinSheepsClothing ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wolliped ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wolpertinger ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wolverine ns1:hasAlignment ns1:trueNeutral .\n\nns1:WoodColossusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:WoodGiant ns1:hasAlignment ns1:chaoticGood .\n\nns1:WoodGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Woodwose ns1:hasAlignment ns1:neutralEvil .\n\nns1:WoollyRhinoceros ns1:hasAlignment ns1:trueNeutral .\n\nns1:Worg ns1:hasAlignment ns1:neutralEvil .\n\nns1:WorkWraith ns1:hasAlignment ns1:neutralEvil .\n\nns1:WorkerThermite ns1:hasAlignment ns1:trueNeutral .\n\nns1:WorldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WormThatWalksHuman ns1:hasAlignment ns1:neutralEvil .\n\nns1:WormthatWalksLocustVariant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Woundwyrm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Wrackworm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Wraith ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WrathBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:WrathDragonDracoSanctusBenevolentia ns1:hasAlignment ns1:neutralGood .\n\nns1:WrathplatedClockworkMage ns1:hasAlignment ns1:trueNeutral .\n\nns1:WyrmBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WyrmForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WyrmRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WyrmSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:WyrmSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:WyrmWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmlingBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmlingBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WyrmlingForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmlingGoldDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:WyrmlingGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WyrmlingRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmlingRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WyrmlingSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:WyrmlingSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:WyrmlingSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:WyrmlingUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WyrmlingWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Wyrmwraith ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Wyrwood ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wyvaran ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Wyvern ns1:hasAlignment ns1:trueNeutral .\n\nns1:Xacarba ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Xanthos ns1:hasAlignment ns1:trueNeutral .\n\nns1:Xaphan ns1:hasAlignment ns1:lawfulEvil .\n\nns1:XenarthIchorShark ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Xenopterid ns1:hasAlignment ns1:trueNeutral .\n\nns1:Xiao ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Xill ns1:hasAlignment ns1:lawfulEvil .\n\nns1:XillMatriarch ns1:hasAlignment ns1:lawfulEvil .\n\nns1:XillixLesserNelbarzoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ximtal ns1:hasAlignment ns1:neutralEvil .\n\nns1:XiuhCouatl ns1:hasAlignment ns1:neutralGood .\n\nns1:Xocothian ns1:hasAlignment ns1:trueNeutral .\n\nns1:Xocouatl ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Xorn ns1:hasAlignment ns1:trueNeutral .\n\nns1:Xtabay ns1:hasAlignment ns1:trueNeutral .\n\nns1:Xulgath ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Yaddithian ns1:hasAlignment ns1:trueNeutral .\n\nns1:Yaenit ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YamabushiTengu ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Yamah ns1:hasAlignment ns1:chaoticGood .\n\nns1:Yamaraj ns1:hasAlignment ns1:trueNeutral .\n\nns1:Yangethe ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Yaoguai ns1:hasAlignment ns1:trueNeutral .\n\nns1:Yarthoon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:YellowMuskCreeper ns1:hasAlignment ns1:trueNeutral .\n\nns1:YellowMuskZombie ns1:hasAlignment ns1:trueNeutral .\n\nns1:YethHound ns1:hasAlignment ns1:neutralEvil .\n\nns1:Yeti ns1:hasAlignment ns1:trueNeutral .\n\nns1:Yhohm ns1:hasAlignment ns1:neutralGood .\n\nns1:Yig ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Yithian ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:YithianElder ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Ymir ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Yothga ns1:hasAlignment ns1:neutralEvil .\n\nns1:YoungAdultBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungAdultBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:YoungAdultGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:YoungAdultRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungAdultRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:YoungAdultSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:YoungAdultSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:YoungAdultSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungAdultWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungApocalypseDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:YoungAstralDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungBlissDragon ns1:hasAlignment ns1:neutralGood .\n\nns1:YoungBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:YoungBrassDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:YoungCaveDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:YoungCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungCopperDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:YoungCrystalDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:YoungDreamDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungEdictDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:YoungEthericDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungGoldDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:YoungGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:YoungLunarDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:YoungMagmaDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:YoungMistDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungNightmareDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:YoungOccultDragon ns1:hasAlignment ns1:neutralGood .\n\nns1:YoungRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:YoungSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:YoungSilverDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:YoungSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:YoungSolarDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:YoungSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungTimeDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungUmbralDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:YoungVoidDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:YoungVortexDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:YoungWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungadultForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ypotryll ns1:hasAlignment ns1:trueNeutral .\n\nns1:Yrthak ns1:hasAlignment ns1:trueNeutral .\n\nns1:Yukionna ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Yurei ns1:hasAlignment ns1:neutralEvil .\n\nns1:Zalyakavat ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Zaramuun ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Zarxorin ns1:hasAlignment ns1:trueNeutral .\n\nns1:ZealotWraith ns1:hasAlignment ns1:neutralEvil .\n\nns1:Zelekhut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Zentragt ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Zeuglodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ZhenWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Zhyen ns1:hasAlignment ns1:trueNeutral .\n\nns1:Zohanil ns1:hasAlignment ns1:neutralEvil .\n\nns1:Zolavoi ns1:hasAlignment ns1:trueNeutral .\n\nns1:Zombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:ZombieHandservant ns1:hasAlignment ns1:neutralEvil .\n\nns1:ZombieHillGiant ns1:hasAlignment ns1:neutralEvil .\n\nns1:ZombieHorde ns1:hasAlignment ns1:neutralEvil .\n\nns1:ZombieWolf ns1:hasAlignment ns1:neutralEvil .\n\nns1:Zomok ns1:hasAlignment ns1:trueNeutral .\n\nns1:Zoog ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Zuishin ns1:hasAlignment ns1:lawfulGood .\n\nns1:Zuvembie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Zvucni ns1:hasAlignment ns1:neutralGood .\n\nns1:Zwerc ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:aasimar ns1:hasAlignment ns1:neutralGood .\n\nns1:caypup ns1:hasAlignment ns1:chaoticGood .\n\nns1:earthElementalHero ns1:hasAlignment ns1:trueNeutral .\n\nns1:greatwyrmSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:hangedman ns1:hasAlignment ns1:chaoticEvil .\n\nns1:headedPyrohydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:helixmothmature ns1:hasAlignment ns1:trueNeutral .\n\nns1:heraldoftsathogga ns1:hasAlignment ns1:chaoticEvil .\n\nns1:hoarfox ns1:hasAlignment ns1:trueNeutral .\n\nns1:juvenileCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:oldForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:oldUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:oldclouddragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:theFirebleeder ns1:hasAlignment ns1:chaoticEvil .\n\nns1:theMonarchWorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:veryYoungCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:veryoldUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:witchwyrd ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:wyrmSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:wyrmUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:wyrmclouddragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:wyrmlingCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:youngAdultCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:youngadultUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "subgraph",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:09.306227",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:45:41.636275",
        "Please generate a SPARQL query for the given RDF graph and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what is the most common alignment type\n\ngraph:\n```turtle\nl...```"
      ],
      [
        "response",
        "2024-05-13T13:45:44.760310",
        "```sparql\nSELECT ?alignment (COUNT(?alignment) AS ?count)\nWHERE {\n  ?character ns1:alignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1\n```"
      ],
      [
        "prompt",
        "2024-05-13T13:45:44.844180",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T13:45:47.431292",
        "```sparql\nSELECT ?alignment (COUNT(?character) AS ?numberOfCharacters)\nWHERE {\n  ?character ns1:alignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?numberOfCharacters)\nLIMIT 1\n```"
      ],
      [
        "prompt",
        "2024-05-13T13:45:47.495121",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T13:45:50.942494",
        "```sparql\nSELECT ?alignmentType (COUNT(?character) as ?count)\nWHERE {\n  ?character <http://example.org/alignment> ?alignment .\n  ?alignment <http://www.w3.org/2000/01/rdf-schema#label> ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:46:03.086202",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubgraph",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 703,
      "actualSize": 682
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary019",
        "sparql": "PREFIX ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#>\n\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+PREFIX ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#>\n+\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ns1:cold .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:aasimar"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary019",
        "sparql": "PREFIX ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#>\n\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+PREFIX ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#>\n+\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ns1:cold .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:aasimar"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary019",
      "question": "what creatures do have cold resist",
      "refSparql": "SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }",
      "refResultSet": [
        "ns1:aasimar"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:aasimar ns1:hasResists ns1:cold .\n\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "subgraph",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:04.398029",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:46:03.086210",
        "Please generate a SPARQL query for the given RDF graph and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what creatures do have cold resist\n\ngraph:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:aasimar ns1:hasResists ns1:cold .\n\n```"
      ],
      [
        "response",
        "2024-05-13T13:46:07.484231",
        "```sparql\nPREFIX ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#>\n\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:46:19.152460",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubgraph",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 799,
      "actualSize": 1188
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:alignment \"Chaotic Good\" .\n  FILTER NOT EXISTS {\n    ?creature ns1:speaksLanguage \"Draconic\"\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:alignment \"Chaotic Good\" .\n+  FILTER NOT EXISTS {\n+    ?creature ns1:speaksLanguage \"Draconic\"\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:alignment \"Chaotic Good\"^^xsd:string .\n  FILTER NOT EXISTS {\n    ?creature ns1:speaks \"Draconic\"^^xsd:string\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:alignment \"Chaotic Good\"^^xsd:string .\n+  FILTER NOT EXISTS {\n+    ?creature ns1:speaks \"Draconic\"^^xsd:string\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:alignment \"Chaotic Good\" .\n  OPTIONAL {\n    ?creature ns1:speaksLanguage ?language\n  }\n  FILTER (!BOUND(?language) || ?language != \"Draconic\")\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:alignment \"Chaotic Good\" .\n+  OPTIONAL {\n+    ?creature ns1:speaksLanguage ?language\n+  }\n+  FILTER (!BOUND(?language) || ?language != \"Draconic\")\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:alignment \"Chaotic Good\" .\n  OPTIONAL {\n    ?creature ns1:speaksLanguage ?language\n  }\n  FILTER (!BOUND(?language) || ?language != \"Draconic\")\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:alignment \"Chaotic Good\" .\n+  OPTIONAL {\n+    ?creature ns1:speaksLanguage ?language\n+  }\n+  FILTER (!BOUND(?language) || ?language != \"Draconic\")\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary001",
      "question": "which creatures not speaking draconic language do have chaotic good alignment",
      "refSparql": "SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }",
      "refResultSet": [
        "ns1:Anhana",
        "ns1:Ataxian",
        "ns1:Azruverda",
        "ns1:BattleImp",
        "ns1:Biofreezer",
        "ns1:BlackButterfly",
        "ns1:Cayhound",
        "ns1:Caypup",
        "ns1:Celedeen",
        "ns1:Cynosoma",
        "ns1:Djinni",
        "ns1:Domovoi",
        "ns1:Dryad",
        "ns1:ElysianTitan",
        "ns1:Faun",
        "ns1:FungalNymph",
        "ns1:Gancanagh",
        "ns1:Garuda",
        "ns1:Hamadryad",
        "ns1:HeraldofDreams",
        "ns1:Munavri",
        "ns1:Muse",
        "ns1:Nisid",
        "ns1:NobleDjinniVizier",
        "ns1:Nymph",
        "ns1:RiftFlumph",
        "ns1:RimefireEidolon",
        "ns1:SapphireOoze",
        "ns1:SkirmishersTroop",
        "ns1:StarMonarch",
        "ns1:SwanMaiden",
        "ns1:Taniwha",
        "ns1:Unicorn",
        "ns1:WoodGiant",
        "ns1:caypup"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:AdultBrassDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AdultCopperDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AdultCrystalDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AdultSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AncientBrassDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AncientCopperDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AncientCrystalDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AncientSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Androsphinx ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Anhana ns1:hasAlignment ns1:chaoticGood .\n\nns1:Ataxian ns1:hasAlignment ns1:chaoticGood .\n\nns1:AuwazCouatl ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Azruverda ns1:hasAlignment ns1:chaoticGood .\n\nns1:BattleImp ns1:hasAlignment ns1:chaoticGood .\n\nns1:Biofreezer ns1:hasAlignment ns1:chaoticGood .\n\nns1:BlackButterfly ns1:hasAlignment ns1:chaoticGood .\n\nns1:Bralani ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonGreatWyrm ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonJuvenile ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonMatureAdult ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonOld ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonVeryOld ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonVeryYoung ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonWyrm ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonWyrmling ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonYoungAdult ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Brijidine ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Cayhound ns1:hasAlignment ns1:chaoticGood .\n\nns1:Caypup ns1:hasAlignment ns1:chaoticGood .\n\nns1:Celedeen ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonGreatWyrm ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonJuvenile ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonMatureAdult ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonOld ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonVeryOld ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonVeryYoung ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonWyrm ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonWyrmling ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonYoungAdult ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonGreatWyrm ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonJuvenile ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonMatureAdult ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonOld ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonVeryOld ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonVeryYoung ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonWyrm ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonWyrmling ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonYoungAdult ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Cynosoma ns1:hasAlignment ns1:chaoticGood .\n\nns1:Djinni ns1:hasAlignment ns1:chaoticGood .\n\nns1:Domovoi ns1:hasAlignment ns1:chaoticGood .\n\nns1:Dryad ns1:hasAlignment ns1:chaoticGood .\n\nns1:ElysianTitan ns1:hasAlignment ns1:chaoticGood .\n\nns1:FaerieDragonDracoFraudatioMinimus ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Faeriedragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Faun ns1:hasAlignment ns1:chaoticGood .\n\nns1:FungalNymph ns1:hasAlignment ns1:chaoticGood .\n\nns1:Gancanagh ns1:hasAlignment ns1:chaoticGood .\n\nns1:Garuda ns1:hasAlignment ns1:chaoticGood .\n\nns1:Hamadryad ns1:hasAlignment ns1:chaoticGood .\n\nns1:HeraldofDreams ns1:hasAlignment ns1:chaoticGood .\n\nns1:HeraldofFreedom ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:HeraldofFreedomandJustice ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:JuvenileSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:MatureAdultSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:MixCouatl ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Munavri ns1:hasAlignment ns1:chaoticGood .\n\nns1:Muse ns1:hasAlignment ns1:chaoticGood .\n\nns1:Nisid ns1:hasAlignment ns1:chaoticGood .\n\nns1:NobleDjinniVizier ns1:hasAlignment ns1:chaoticGood .\n\nns1:Nymph ns1:hasAlignment ns1:chaoticGood .\n\nns1:OldSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Prydanu ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Raelis ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:RiftFlumph ns1:hasAlignment ns1:chaoticGood .\n\nns1:RimefireEidolon ns1:hasAlignment ns1:chaoticGood .\n\nns1:SapphireOoze ns1:hasAlignment ns1:chaoticGood .\n\nns1:SkirmishersTroop ns1:hasAlignment ns1:chaoticGood .\n\nns1:StarMonarch ns1:hasAlignment ns1:chaoticGood .\n\nns1:StormGiant ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:SwanMaiden ns1:hasAlignment ns1:chaoticGood .\n\nns1:Taniwha ns1:hasAlignment ns1:chaoticGood .\n\nns1:TheHornedLord ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Thyrlien ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Uinuja ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Unicorn ns1:hasAlignment ns1:chaoticGood .\n\nns1:Veranallia ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:VeranalliaAzata ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:VeryYoungSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:VeryoldSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:WoodGiant ns1:hasAlignment ns1:chaoticGood .\n\nns1:WyrmlingSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Yamah ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:YoungAdultSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:YoungBrassDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:YoungCopperDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:YoungCrystalDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:YoungSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:caypup ns1:hasAlignment ns1:chaoticGood .\n\nns1:greatwyrmSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:wyrmSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "subgraph",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:21.182271",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:46:19.152467",
        "Please generate a SPARQL query for the given RDF graph and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:which creatures not speaking draconic language do have chaotic good alignment\n\ngraph:\n```turtle\nn...```"
      ],
      [
        "response",
        "2024-05-13T13:46:24.285972",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:alignment \"Chaotic Good\" .\n  FILTER NOT EXISTS {\n    ?creature ns1:speaksLanguage \"Draconic\"\n  }\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T13:46:24.322507",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T13:46:36.970720",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:alignment \"Chaotic Good\"^^xsd:string .\n  FILTER NOT EXISTS {\n    ?creature ns1:speaks \"Draconic\"^^xsd:string\n  }\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T13:46:36.994098",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T13:46:40.334731",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:alignment \"Chaotic Good\" .\n  OPTIONAL {\n    ?creature ns1:speaksLanguage ?language\n  }\n  FILTER (!BOUND(?language) || ?language != \"Draconic\")\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:46:51.875020",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubgraph",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 1470,
      "actualSize": 961
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) AS ?countCreatures)\nWHERE {\n    ?creature ns1:hasLanguages ns1:TreantL .\n    MINUS { ?creature ns1:hasAlignment ns1:trueNeutral . }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) AS ?countCreatures)\n+WHERE {\n+    ?creature ns1:hasLanguages ns1:TreantL .\n+    MINUS { ?creature ns1:hasAlignment ns1:trueNeutral . }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 0.6666666666666666,
        "sparqlIrisF1measure": 0.8,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 0.6666666666666666,
        "sparqlIrisSuffixF1measure": 0.8,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "4"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) AS ?countCreatures)\nWHERE {\n    ?creature ns1:hasLanguages ns1:TreantL .\n    MINUS { ?creature ns1:hasAlignment ns1:trueNeutral . }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) AS ?countCreatures)\n+WHERE {\n+    ?creature ns1:hasLanguages ns1:TreantL .\n+    MINUS { ?creature ns1:hasAlignment ns1:trueNeutral . }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 0.6666666666666666,
        "sparqlIrisF1measure": 0.8,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 0.6666666666666666,
        "sparqlIrisSuffixF1measure": 0.8,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "4"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary005",
      "question": "how many creatures with non-neutral alignment do speak treant language",
      "refSparql": "SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }",
      "refResultSet": [
        "4"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:ArcticDruid ns1:hasLanguages ns1:TreantL .\n\nns1:Goemul ns1:hasLanguages ns1:TreantL .\n\nns1:ScytheTree ns1:hasLanguages ns1:TreantL .\n\nns1:Tobongo ns1:hasAlignment ns1:trueNeutral ;\n    ns1:hasLanguages ns1:TreantL .\n\nns1:Treant ns1:hasLanguages ns1:TreantL .\n\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "subgraph",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:03.264223",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:46:51.875029",
        "Please generate a SPARQL query for the given RDF graph and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:how many creatures with non-neutral alignment do speak treant language\n\ngraph:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:ArcticDruid ns1:hasLanguages ns1:TreantL .\n\nns1:Goemul ns1:hasLanguages ns1:TreantL .\n\nns1:ScytheTree ns1:hasLanguages ns1:TreantL .\n\nns1:Tobongo ns1:hasAlignment ns1:trueNeutral ;\n    ns1:hasLanguages ns1:TreantL .\n\nns1:Treant ns1:hasLanguages ns1:TreantL .\n\n```"
      ],
      [
        "response",
        "2024-05-13T13:46:55.139243",
        "```sparql\nSELECT (COUNT(?creature) AS ?countCreatures)\nWHERE {\n    ?creature ns1:hasLanguages ns1:TreantL .\n    MINUS { ?creature ns1:hasAlignment ns1:trueNeutral . }\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:47:05.719941",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubgraph",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 1116,
      "actualSize": 922
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?commonSpell\nWHERE {\n  ns1:aasimar ns1:canSpell ?commonSpell .\n  ns1:caypup ns1:canSpell ?commonSpell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?commonSpell\n+WHERE {\n+  ns1:aasimar ns1:canSpell ?commonSpell .\n+  ns1:caypup ns1:canSpell ?commonSpell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:stabilize"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?commonSpell\nWHERE {\n  ns1:aasimar ns1:canSpell ?commonSpell .\n  ns1:caypup ns1:canSpell ?commonSpell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?commonSpell\n+WHERE {\n+  ns1:aasimar ns1:canSpell ?commonSpell .\n+  ns1:caypup ns1:canSpell ?commonSpell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:stabilize"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary007",
      "question": "what spells Aasimar and Caypup do have in common",
      "refSparql": "SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }",
      "refResultSet": [
        "ns1:stabilize"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:aasimar ns1:canSpell ns1:bless,\n        ns1:command,\n        ns1:daylight,\n        ns1:detectMagic,\n        ns1:guidance,\n        ns1:protectionFromEvil,\n        ns1:stabilize .\n\nns1:caypup ns1:canSpell ns1:dimensionDoor,\n        ns1:knock,\n        ns1:openClose,\n        ns1:stabilize .\n\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "subgraph",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:04.748096",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:47:05.719949",
        "Please generate a SPARQL query for the given RDF graph and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what spells Aasimar and Caypup do have in common\n\ngraph:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:aasimar ns1:canSpell ns1:bless,\n        ns1:command,\n        ns1:daylight,\n        ns1:detectMagic,\n        ns1:guidance,\n        ns1:protectionFromEvil,\n        ns1:stabilize .\n\nns1:caypup ns1:canSpell ns1:dimensionDoor,\n        ns1:knock,\n        ns1:openClose,\n        ns1:stabilize .\n\n```"
      ],
      [
        "response",
        "2024-05-13T13:47:10.468037",
        "```sparql\nSELECT ?commonSpell\nWHERE {\n  ns1:aasimar ns1:canSpell ?commonSpell .\n  ns1:caypup ns1:canSpell ?commonSpell .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:47:22.030890",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubgraph",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 579,
      "actualSize": 1235
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignment (COUNT(?character) AS ?count)\nWHERE {\n  ?character ns1:alignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignment (COUNT(?character) AS ?count)\n+WHERE {\n+  ?character ns1:alignment ?alignment .\n+}\n+GROUP BY ?alignment\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignment (COUNT(?character) as ?numCharacters)\nWHERE {\n  ?character ns1:alignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?numCharacters)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignment (COUNT(?character) as ?numCharacters)\n+WHERE {\n+  ?character ns1:alignment ?alignment .\n+}\n+GROUP BY ?alignment\n+ORDER BY DESC(?numCharacters)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignmentType (COUNT(?alignmentType) as ?alignmentCount) \nWHERE {\n  ?subject ?predicate ?alignmentType .\n  ?subject rdf:type ns1:Character .\n  ?subject ns1:alignment ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?alignmentCount)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,9 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignmentType (COUNT(?alignmentType) as ?alignmentCount) \n+WHERE {\n+  ?subject ?predicate ?alignmentType .\n+  ?subject rdf:type ns1:Character .\n+  ?subject ns1:alignment ?alignmentType .\n+}\n+GROUP BY ?alignmentType\n+ORDER BY DESC(?alignmentCount)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignmentType (COUNT(?alignmentType) as ?alignmentCount) \nWHERE {\n  ?subject ?predicate ?alignmentType .\n  ?subject rdf:type ns1:Character .\n  ?subject ns1:alignment ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?alignmentCount)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,9 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignmentType (COUNT(?alignmentType) as ?alignmentCount) \n+WHERE {\n+  ?subject ?predicate ?alignmentType .\n+  ?subject rdf:type ns1:Character .\n+  ?subject ns1:alignment ?alignmentType .\n+}\n+GROUP BY ?alignmentType\n+ORDER BY DESC(?alignmentCount)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary011",
      "question": "what is the most common alignment type",
      "refSparql": "SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1",
      "refResultSet": [
        "ns1:trueNeutral"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1: ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aasimar ns1:hasAlignment ns1:neutralGood .\n\nns1:Aatheriexa ns1:hasAlignment ns1:neutralEvil .\n\nns1:Abaia ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aballonian ns1:hasAlignment ns1:trueNeutral .\n\nns1:AbandonedArmory ns1:hasAlignment ns1:neutralEvil .\n\nns1:AbasheenGenie ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aberrant ns1:hasAlignment ns1:neutralEvil .\n\nns1:Abhominal ns1:hasAlignment ns1:neutralEvil .\n\nns1:Aboleth ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Abrikandilu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AbyssGigas ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AbyssalBasilisk ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AbyssalCustodian ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AbyssalHarvester ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AbyssalLarva ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AbyssalWolf ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AccompliceDevilHesperian ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AccuserDevilZebub ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Achaierai ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AcidNaga ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AdamantineCobra ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdamantineGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdamantineWaspSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdaptiveOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Adaro ns1:hasAlignment ns1:neutralEvil .\n\nns1:Addanc ns1:hasAlignment ns1:neutralEvil .\n\nns1:AddictionDevilAtropocustra ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Addu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Adherer ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Adhukait ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Adlet ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AdolescentDarkYoung ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdultApocalypseDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdultAstralDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdultBlissDragon ns1:hasAlignment ns1:neutralGood .\n\nns1:AdultBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AdultBrassDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AdultBronzeDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:AdultCaveDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdultCloudDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AdultCopperDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AdultCrystalDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AdultDarkYoung ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdultDreamDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultEdictDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AdultEthericDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdultGoldDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:AdultGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AdultLunarDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AdultMagmaDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AdultMistDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultMithralDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultNightmareDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdultOccultDragon ns1:hasAlignment ns1:neutralGood .\n\nns1:AdultRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdultRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AdultSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AdultSilverDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:AdultSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:AdultSolarDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AdultSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultTimeDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultUmbralDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdultUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AdultVoidDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdultVortexDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AdultWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedAnimateDream ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedBulette ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedDraugr ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedEttercap ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedFrostWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedGiantFlytrap ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedGiantScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedHangmanTree ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedHorse ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedInvisibleStalker ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedLengSpider ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedLeukodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedLightningTreantppCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedMegaraptorSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedMummy ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedNightmare ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedNightwing ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedOgre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedTroglodyte ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedUnhallowedBodak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedUnhallowedTotenmaske ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedWoodGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aequoreal ns1:hasAlignment ns1:neutralGood .\n\nns1:AerialServant ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aerialservant ns1:hasAlignment ns1:trueNeutral .\n\nns1:AetherWysp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Afanc ns1:hasAlignment ns1:neutralEvil .\n\nns1:Aghash ns1:hasAlignment ns1:neutralEvil .\n\nns1:Aghasura ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Agnoia ns1:hasAlignment ns1:trueNeutral .\n\nns1:Agogwe ns1:hasAlignment ns1:trueNeutral .\n\nns1:Agorth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Agrawgh ns1:hasAlignment ns1:trueNeutral .\n\nns1:Agyra ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Ahkhat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ahlinni ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Ahmuuth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ahool ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ahooling ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ahuizotl ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ailuro ns1:hasAlignment ns1:trueNeutral .\n\nns1:AirElementalConstruct ns1:hasAlignment ns1:trueNeutral .\n\nns1:AirMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:AirShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:AirVeela ns1:hasAlignment ns1:trueNeutral .\n\nns1:AirWysp ns1:hasAlignment ns1:trueNeutral .\n\nns1:AirsuitSymbiontCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:AizskartzAsteroid ns1:hasAlignment ns1:neutralEvil .\n\nns1:Akaname ns1:hasAlignment ns1:trueNeutral .\n\nns1:Akaruzug ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Akata ns1:hasAlignment ns1:trueNeutral .\n\nns1:Akhana ns1:hasAlignment ns1:trueNeutral .\n\nns1:Akhlut ns1:hasAlignment ns1:trueNeutral .\n\nns1:Akizendri ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Akvan ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ala ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Alastor ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AlbinoCaveSolifugid ns1:hasAlignment ns1:trueNeutral .\n\nns1:AlbinoCaveSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:AlchemicAmoeba ns1:hasAlignment ns1:trueNeutral .\n\nns1:AlchemicalGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Algea ns1:hasAlignment ns1:trueNeutral .\n\nns1:Algoid ns1:hasAlignment ns1:trueNeutral .\n\nns1:Alligator ns1:hasAlignment ns1:trueNeutral .\n\nns1:Allip ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Allosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Almiraj ns1:hasAlignment ns1:trueNeutral .\n\nns1:Alp ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Alpluachra ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Alraune ns1:hasAlignment ns1:neutralEvil .\n\nns1:Alseid ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AluDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Aluum ns1:hasAlignment ns1:trueNeutral .\n\nns1:AmaimonDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Amalgamation ns1:hasAlignment ns1:trueNeutral .\n\nns1:Amanusya ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Amargasaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Amarok ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AmberOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ambergrim ns1:hasAlignment ns1:trueNeutral .\n\nns1:AmoebaSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Amon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Amphiptere ns1:hasAlignment ns1:trueNeutral .\n\nns1:Amphisbaena ns1:hasAlignment ns1:trueNeutral .\n\nns1:AmphisbaenaBasilisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:AmphisbaenaEncephalonGorger ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AncestralDragonTurtle ns1:hasAlignment ns1:neutralGood .\n\nns1:AncestralGorgon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientApocalypseDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AncientAstralDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AncientBlissDragon ns1:hasAlignment ns1:neutralGood .\n\nns1:AncientBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AncientBlueDragonRavener ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AncientBrassDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AncientCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientCopperDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AncientCrystalDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AncientDreamDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientEdictDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AncientEthericDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AncientGoldDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:AncientGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AncientGreenDragonRavener ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AncientLunarDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AncientMagmaDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AncientMistDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientMithralDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientNightmareDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AncientOccultDragon ns1:hasAlignment ns1:neutralGood .\n\nns1:AncientRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AncientRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AncientSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AncientSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:AncientSolarDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AncientSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientTimeDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientUmbralDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AncientUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AncientVoidDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AncientVortexDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AncientWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Andrenjinyi ns1:hasAlignment ns1:trueNeutral .\n\nns1:Android ns1:hasAlignment ns1:trueNeutral .\n\nns1:Androsphinx ns1:hasAlignment ns1:chaoticGood .\n\nns1:Anemos ns1:hasAlignment ns1:trueNeutral .\n\nns1:AngelicGuardian ns1:hasAlignment ns1:trueNeutral .\n\nns1:Anghenfil ns1:hasAlignment ns1:trueNeutral .\n\nns1:AngheuvoreMortic ns1:hasAlignment ns1:neutralEvil .\n\nns1:AngustidenShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Anhana ns1:hasAlignment ns1:chaoticGood .\n\nns1:AnimateAria ns1:hasAlignment ns1:trueNeutral .\n\nns1:AnimateDream ns1:hasAlignment ns1:neutralEvil .\n\nns1:AnimateHair ns1:hasAlignment ns1:neutralEvil .\n\nns1:AnimatedJackOLantern ns1:hasAlignment ns1:trueNeutral .\n\nns1:AnimatedManacles ns1:hasAlignment ns1:trueNeutral .\n\nns1:AnimatedShrineStone ns1:hasAlignment ns1:trueNeutral .\n\nns1:AnimatedStraitjacket ns1:hasAlignment ns1:trueNeutral .\n\nns1:Anisydaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ankheg ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ankhrav ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ankou ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ankylosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Annihilator ns1:hasAlignment ns1:trueNeutral .\n\nns1:AnnisHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AnnisHagAlterEgo ns1:hasAlignment ns1:trueNeutral .\n\nns1:AntLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:Antelope ns1:hasAlignment ns1:trueNeutral .\n\nns1:AnunnakiMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aoandon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Apallie ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aphorite ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ApkalluMR ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ApocalypseHorse ns1:hasAlignment ns1:neutralEvil .\n\nns1:ApocalypseLocustMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ApocalypseZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Apollyon ns1:hasAlignment ns1:neutralEvil .\n\nns1:ApostasyWraith ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ApostateDevilDeimavigga ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ApostleKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Apparition ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Aptom ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AquaticWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Arach ns1:hasAlignment ns1:neutralEvil .\n\nns1:ArachnidRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aranea ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aravax ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Arbiter ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Arcadex ns1:hasAlignment ns1:neutralEvil .\n\nns1:Arcanoplasm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Arcanotheign ns1:hasAlignment ns1:trueNeutral .\n\nns1:Archaeopteryx ns1:hasAlignment ns1:trueNeutral .\n\nns1:Archelon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArcherBush ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArcherfishGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArchonShield ns1:hasAlignment ns1:lawfulGood .\n\nns1:ArchonStar ns1:hasAlignment ns1:lawfulGood .\n\nns1:ArcticDruid ns1:hasAlignment ns1:neutralEvil .\n\nns1:ArcticHare ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArcticTern ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArgentWarden ns1:hasAlignment ns1:lawfulGood .\n\nns1:Argorth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ArgorthCinderscourge ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ArgusMR ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Armadillo ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArmoredClayGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArmoredOgreSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:ArmyAntSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Arrowhawk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Arsinoitherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:Asakku ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ascomoid ns1:hasAlignment ns1:trueNeutral .\n\nns1:AshGiant ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AshHag ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Asp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Asrai ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AssassinRingSymbiont ns1:hasAlignment ns1:trueNeutral .\n\nns1:AssassinVine ns1:hasAlignment ns1:trueNeutral .\n\nns1:Asswere ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Astradaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AstralDeva ns1:hasAlignment ns1:neutralGood .\n\nns1:AstralLeviathan ns1:hasAlignment ns1:trueNeutral .\n\nns1:AstralShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Asurendra ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AtamahutaOni ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ataxian ns1:hasAlignment ns1:chaoticGood .\n\nns1:Athach ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Atomie ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AtticWhisperer ns1:hasAlignment ns1:neutralEvil .\n\nns1:Atuikakura ns1:hasAlignment ns1:trueNeutral .\n\nns1:Augnagar ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AugurKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Aurochs ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aurosrath ns1:hasAlignment ns1:neutralEvil .\n\nns1:Aurspeily ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Aurumvorax ns1:hasAlignment ns1:trueNeutral .\n\nns1:AutomataDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AutumnDeath ns1:hasAlignment ns1:neutralEvil .\n\nns1:AuwazCouatl ns1:hasAlignment ns1:chaoticGood .\n\nns1:Avatarana ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AvatarofAlkumuoto ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Avoral ns1:hasAlignment ns1:neutralGood .\n\nns1:AwakenedDemilich ns1:hasAlignment ns1:neutralEvil .\n\nns1:AxeBeak ns1:hasAlignment ns1:trueNeutral .\n\nns1:AxialMonitor ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Axiomite ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AxiomiteGraveknight ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Azer ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AzizouPainDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Azruverda ns1:hasAlignment ns1:chaoticGood .\n\nns1:Azuretzi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BLOODHAWK ns1:hasAlignment ns1:trueNeutral .\n\nns1:Baal ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Baalzebul ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BaaphelDukeofHell ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Babau ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Babbler ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Baboon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bacallia ns1:hasAlignment ns1:trueNeutral .\n\nns1:Baccae ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BadWolfMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Badger ns1:hasAlignment ns1:trueNeutral .\n\nns1:Baetriov ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Bagiennik ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Bakekujira ns1:hasAlignment ns1:neutralEvil .\n\nns1:Baku ns1:hasAlignment ns1:trueNeutral .\n\nns1:BakuDreamweaver ns1:hasAlignment ns1:trueNeutral .\n\nns1:Balisse ns1:hasAlignment ns1:neutralGood .\n\nns1:BalisseAngel ns1:hasAlignment ns1:neutralGood .\n\nns1:Balor ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BalorLord ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Baluchitherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:Banderlog ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bandersnatch ns1:hasAlignment ns1:trueNeutral .\n\nns1:Banelight ns1:hasAlignment ns1:neutralEvil .\n\nns1:Banshee ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BaobhanSith ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Baphomet ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BaphometDemonLordofBeasts ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Barbatos ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BarbedDevilHamatula ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BarbedRam ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarbtonguedWyvern ns1:hasAlignment ns1:neutralEvil .\n\nns1:Baregara ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Barghest ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Baric ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarizouAssassinDemonCR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Barometz ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarracudaLarge ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarracudaMedium ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarracudaSmall ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarrierBreakerTroop ns1:hasAlignment ns1:neutralEvil .\n\nns1:BarrowRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarrowWight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Basidirond ns1:hasAlignment ns1:trueNeutral .\n\nns1:Basilisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Basilosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:BastionArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:BatMobat ns1:hasAlignment ns1:trueNeutral .\n\nns1:BatPlagueSwarmMR ns1:hasAlignment ns1:neutralEvil .\n\nns1:BatSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:BattleEmu ns1:hasAlignment ns1:trueNeutral .\n\nns1:BattleImp ns1:hasAlignment ns1:chaoticGood .\n\nns1:Baykok ns1:hasAlignment ns1:neutralEvil .\n\nns1:BeardedDevilBarbazu ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BeastDemonChaaor ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BeastDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:BeastmasterTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Bebilith ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Bedlam ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BeeMan ns1:hasAlignment ns1:neutralEvil .\n\nns1:BeetleGiantStag ns1:hasAlignment ns1:trueNeutral .\n\nns1:BegedhiParasite ns1:hasAlignment ns1:neutralEvil .\n\nns1:Beheaded ns1:hasAlignment ns1:neutralEvil .\n\nns1:BehemothGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:BehemothHippopotamus ns1:hasAlignment ns1:trueNeutral .\n\nns1:BehemothPudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:Behimiron ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Behir ns1:hasAlignment ns1:trueNeutral .\n\nns1:BeingofIb ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Belabra ns1:hasAlignment ns1:trueNeutral .\n\nns1:BelchingGiantBeheadedCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:BelchingMedusaHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:BelchingSeveredHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:Belial ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BelierDevilBdellavritra ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Belker ns1:hasAlignment ns1:neutralEvil .\n\nns1:BellyborerBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Belostomatid ns1:hasAlignment ns1:trueNeutral .\n\nns1:BeluiriTheTemptress ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Berbalang ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Bezravnis ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Bhole ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BholeHatchling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Bhuta ns1:hasAlignment ns1:neutralEvil .\n\nns1:Bibliodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Biclops ns1:hasAlignment ns1:trueNeutral .\n\nns1:Biddlytree ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Biddlywink ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BiddlywinkChrysalis ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Biggin ns1:hasAlignment ns1:trueNeutral .\n\nns1:Biloko ns1:hasAlignment ns1:neutralEvil .\n\nns1:Biofreezer ns1:hasAlignment ns1:chaoticGood .\n\nns1:BishaGaTsuku ns1:hasAlignment ns1:neutralEvil .\n\nns1:BishopAgathion ns1:hasAlignment ns1:neutralGood .\n\nns1:BisonCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:BlackBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:BlackButterfly ns1:hasAlignment ns1:chaoticGood .\n\nns1:BlackGoat ns1:hasAlignment ns1:neutralEvil .\n\nns1:BlackJinni ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BlackMagga ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BlackPudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:BlackScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:BlackShuck ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BlackSpotUrchin ns1:hasAlignment ns1:neutralEvil .\n\nns1:BlackWorm ns1:hasAlignment ns1:neutralEvil .\n\nns1:BlackwispEgret ns1:hasAlignment ns1:trueNeutral .\n\nns1:BlastShadow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BleedingHorrorMinotaur ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BlightedFeySatyr ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Blightrat ns1:hasAlignment ns1:neutralEvil .\n\nns1:Blightspawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Blindheim ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BlinkDog ns1:hasAlignment ns1:lawfulGood .\n\nns1:Blodeuwedd ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Blodeuweddqueen ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BloodAlgaeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodBramble ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodBush ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodCaterpillar ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodHag ns1:hasAlignment ns1:neutralEvil .\n\nns1:BloodKaktos ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BloodLily ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodMaize ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodOrc ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BloodOrchid ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BloodPudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodQueen ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BloodReaverDevilGaruginCR ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BloodWeird ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BloodWight ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bloodbrush ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodhazeMosquitoSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodplateBurster ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bloodsuckle ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodyBones ns1:hasAlignment ns1:neutralEvil .\n\nns1:BloodySkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:BlueRingedOctopus ns1:hasAlignment ns1:trueNeutral .\n\nns1:BlueWhale ns1:hasAlignment ns1:trueNeutral .\n\nns1:BluetipEurypterid ns1:hasAlignment ns1:trueNeutral .\n\nns1:Boalisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Boar ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoarDireDaeodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bodak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Bodythief ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BogBeast ns1:hasAlignment ns1:trueNeutral .\n\nns1:BogCreeper ns1:hasAlignment ns1:trueNeutral .\n\nns1:BogMummy ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BogNixie ns1:hasAlignment ns1:neutralEvil .\n\nns1:BogScum ns1:hasAlignment ns1:trueNeutral .\n\nns1:BogStrider ns1:hasAlignment ns1:trueNeutral .\n\nns1:BogStriderSeerQueen ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bogeyman ns1:hasAlignment ns1:neutralEvil .\n\nns1:Boggard ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Boggart ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Boggle ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Bogwid ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Bogwiggle ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Boilborn ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoneCobbler ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BoneCollective ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BoneCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoneCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoneDevilOsyluth ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BoneGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoneReaperReflection ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoneShip ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BonepowderGhoul ns1:hasAlignment ns1:neutralEvil .\n\nns1:Bonesnapper ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bonestorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Bonesucker ns1:hasAlignment ns1:neutralEvil .\n\nns1:Bonethorn ns1:hasAlignment ns1:trueNeutral .\n\nns1:BonewroughtWillow ns1:hasAlignment ns1:trueNeutral .\n\nns1:BookGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoreWormMonarch ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoreWormSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:BorealAnnisHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BorealManticore ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BorealWolf ns1:hasAlignment ns1:trueNeutral .\n\nns1:Boroboroton ns1:hasAlignment ns1:neutralEvil .\n\nns1:Boruta ns1:hasAlignment ns1:trueNeutral .\n\nns1:BotflySwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:BottledArmada ns1:hasAlignment ns1:trueNeutral .\n\nns1:Brachiosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrainMole ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrainMoleMonarch ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrainOoze ns1:hasAlignment ns1:neutralEvil .\n\nns1:BrainRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bralani ns1:hasAlignment ns1:chaoticGood .\n\nns1:Bramblelash ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrassDragonGreatWyrm ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonJuvenile ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonMatureAdult ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonOld ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonVeryOld ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonVeryYoung ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonWyrm ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonWyrmling ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonYoungAdult ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrassJuggernaut ns1:hasAlignment ns1:trueNeutral .\n\nns1:Brethedan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Brijidine ns1:hasAlignment ns1:chaoticGood .\n\nns1:Brimorak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BrimstoneOoze ns1:hasAlignment ns1:neutralEvil .\n\nns1:BrineDragonAncient ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonGreatWyrm ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonJuvenile ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonMatureAdult ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonOld ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonVeryOld ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonVeryYoung ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonWyrm ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonWyrmling ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonYoungAdult ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineSeaSerpent ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BrineZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Brinedragonadult ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BringDragonYoung ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BristleBoar ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrokenChild ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BrokenSoulLillend ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Brontotherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:BronzeDragonGreatWyrm ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonJuvenile ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonMatureAdult ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonOld ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonVeryOld ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonVeryYoung ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonWyrm ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonWyrmling ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonYoungAdult ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:BronzeSentinel ns1:hasAlignment ns1:trueNeutral .\n\nns1:Broodiken ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrownBearorGrizzlyKodiakRussianBrown ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrownPudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:Brownie ns1:hasAlignment ns1:trueNeutral .\n\nns1:Brume ns1:hasAlignment ns1:neutralEvil .\n\nns1:BrushThylacine ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrutalisDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BruteDemonBalban ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BruteWight ns1:hasAlignment ns1:trueNeutral .\n\nns1:Brykolakas ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Buckawn ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bugbear ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BugbearEchohusk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Buggane ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Bukavac ns1:hasAlignment ns1:neutralEvil .\n\nns1:Bulabar ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Bulette ns1:hasAlignment ns1:trueNeutral .\n\nns1:BullShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bunyip ns1:hasAlignment ns1:trueNeutral .\n\nns1:Buraq ns1:hasAlignment ns1:neutralGood .\n\nns1:Burleev ns1:hasAlignment ns1:trueNeutral .\n\nns1:BurningChild ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BurningDervish ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BurningGiantBeheaded ns1:hasAlignment ns1:neutralEvil .\n\nns1:BurningMedusaHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:BurningSeveredHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:Burrowling ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Burstigeit ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bushyasta ns1:hasAlignment ns1:neutralEvil .\n\nns1:Byakhee ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Bythos ns1:hasAlignment ns1:trueNeutral .\n\nns1:CAVEGIANT ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CHALKYDRI ns1:hasAlignment ns1:neutralGood .\n\nns1:CLOCKWORKSCOUT ns1:hasAlignment ns1:trueNeutral .\n\nns1:CRABMAN ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaasimolarFormerPresidentofHell ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Cacodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:CactusLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cadaver ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CadaverLord ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CairnLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CaizelDeposedQueenofSuccubi ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Calathgar ns1:hasAlignment ns1:trueNeutral .\n\nns1:Calikang ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:CallerinDarkness ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CalligraphyWyrm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Calpina ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Cambion ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Camel ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cameroceras ns1:hasAlignment ns1:trueNeutral .\n\nns1:CandleCorpse ns1:hasAlignment ns1:trueNeutral .\n\nns1:CandlestoneCourtier ns1:hasAlignment ns1:neutralEvil .\n\nns1:CannibalChild ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CannonGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:CanopyCreeper ns1:hasAlignment ns1:trueNeutral .\n\nns1:CanopyTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Cantor ns1:hasAlignment ns1:lawfulEvil .\n\nns1:CapacitorOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Capramace ns1:hasAlignment ns1:trueNeutral .\n\nns1:Carbuncle ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarbuncleChampion ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarbuncleCompanion ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarbuncleHero ns1:hasAlignment ns1:trueNeutral .\n\nns1:CardinalMartyr ns1:hasAlignment ns1:lawfulGood .\n\nns1:CarnivorousBlob ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarnivorousCrystal ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarrionBeast ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CarrionBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarrionClaw ns1:hasAlignment ns1:neutralEvil .\n\nns1:CarrionCreeper ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarrionGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarrionGolemMount ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarrionGolemstandin ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarrionMoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Carrionstorm ns1:hasAlignment ns1:neutralEvil .\n\nns1:CaryatidColumn ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaryatidGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cassisian ns1:hasAlignment ns1:neutralGood .\n\nns1:Castellan ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Cat ns1:hasAlignment ns1:trueNeutral .\n\nns1:CatLordPantherForm ns1:hasAlignment ns1:trueNeutral .\n\nns1:CatSith ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Cataboligne ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Caterprism ns1:hasAlignment ns1:trueNeutral .\n\nns1:Caterwaul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Catfolk ns1:hasAlignment ns1:neutralGood .\n\nns1:Catoblepas ns1:hasAlignment ns1:trueNeutral .\n\nns1:Catrina ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cauchemar ns1:hasAlignment ns1:trueNeutral .\n\nns1:Caulborn ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaulbornThoughtkeeper ns1:hasAlignment ns1:trueNeutral .\n\nns1:CauldronBloom ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveBlight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CaveCricket ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveFisher ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CaveLeech ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveMoray ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CavelightMoss ns1:hasAlignment ns1:trueNeutral .\n\nns1:CavernLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cayhound ns1:hasAlignment ns1:chaoticGood .\n\nns1:Caypup ns1:hasAlignment ns1:chaoticGood .\n\nns1:Cecaelia ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Celedeen ns1:hasAlignment ns1:chaoticGood .\n\nns1:Celedon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Centaur ns1:hasAlignment ns1:trueNeutral .\n\nns1:CentipedeGiantWhiptail ns1:hasAlignment ns1:trueNeutral .\n\nns1:CentipedeGreatForest ns1:hasAlignment ns1:trueNeutral .\n\nns1:CentipedeHissing ns1:hasAlignment ns1:trueNeutral .\n\nns1:CentipedeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:CentipedeTitan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cephalophore ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ceratioidi ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ceratosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cerberi ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Cerberus ns1:hasAlignment ns1:neutralEvil .\n\nns1:CerberusWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:CerebralStalker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CerebricCyst ns1:hasAlignment ns1:neutralEvil .\n\nns1:CerebricFungus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ceru ns1:hasAlignment ns1:neutralGood .\n\nns1:Cervapral ns1:hasAlignment ns1:neutralGood .\n\nns1:Cervinal ns1:hasAlignment ns1:neutralGood .\n\nns1:CervineProtector ns1:hasAlignment ns1:lawfulGood .\n\nns1:Cerynitis ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cetaceal ns1:hasAlignment ns1:neutralGood .\n\nns1:Cetus ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Ceustodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:ChagBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:ChainWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chalicotherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chalkost ns1:hasAlignment ns1:lawfulGood .\n\nns1:ChampionAutomaton ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ChampionofPeace ns1:hasAlignment ns1:neutralGood .\n\nns1:ChanequeMR ns1:hasAlignment ns1:neutralEvil .\n\nns1:Changeling ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ChaosBeast ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ChaosDemonChoronzon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CharauKa ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Charda ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ChariotBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:CharnelColossus ns1:hasAlignment ns1:neutralEvil .\n\nns1:CharnelGod ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CharnelWhisperer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Charon ns1:hasAlignment ns1:neutralEvil .\n\nns1:CharonBoatmanofthelowerplanesCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:Charonodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Charybdis ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Chavazvug ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Cheetah ns1:hasAlignment ns1:trueNeutral .\n\nns1:CheitanDjinni ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CheitanJanni ns1:hasAlignment ns1:neutralEvil .\n\nns1:Chelarac ns1:hasAlignment ns1:neutralEvil .\n\nns1:ChelaracBroodling ns1:hasAlignment ns1:neutralEvil .\n\nns1:Chelicerae ns1:hasAlignment ns1:neutralEvil .\n\nns1:Chelonidal ns1:hasAlignment ns1:neutralGood .\n\nns1:Chemosit ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chernobue ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Cherufe ns1:hasAlignment ns1:neutralEvil .\n\nns1:Cherum ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chickcharney ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chicken ns1:hasAlignment ns1:trueNeutral .\n\nns1:ChickenCoop ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chikfari ns1:hasAlignment ns1:trueNeutral .\n\nns1:ChildoftheBriar ns1:hasAlignment ns1:neutralEvil .\n\nns1:Chimera ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Chimpanzee ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chiropteal ns1:hasAlignment ns1:neutralGood .\n\nns1:Chitikin ns1:hasAlignment ns1:trueNeutral .\n\nns1:Choker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ChokerBrute ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CholericOozeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:ChonChon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ChonChonSwarm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Choral ns1:hasAlignment ns1:neutralGood .\n\nns1:ChortDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Choxani ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ChrestomathCaulborn ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chronogeist ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Chrystone ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chupacabra ns1:hasAlignment ns1:trueNeutral .\n\nns1:ChurchGrim ns1:hasAlignment ns1:lawfulGood .\n\nns1:Churr ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chuspiki ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Chuul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ChuulLesser ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Chyzaedu ns1:hasAlignment ns1:lawfulEvil .\n\nns1:CicadaSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cikavak ns1:hasAlignment ns1:trueNeutral .\n\nns1:CinderGhoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CinderWolf ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cinderghost ns1:hasAlignment ns1:neutralEvil .\n\nns1:Cipactli ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ClackingSkullSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:ClamGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:Clamor ns1:hasAlignment ns1:trueNeutral .\n\nns1:Clawbat ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClawedKadian ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ClayGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:CliffGiant ns1:hasAlignment ns1:neutralGood .\n\nns1:Cloaker ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ClockworkAdvancedBronzeGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkAngel ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkAssassin ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkBrainGear ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkDrone ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkExcavator ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkFamiliar ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkFiend ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkGoblin ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkGoliath ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkGuardian ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkGunslinger ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkHound ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkHuntsman ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkLeviathan ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkMage ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkMyrmidon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkNautiloid ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkOverseer ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkParasite ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkPriest ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkReliquary ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ClockworkServant ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkSoldier ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkSongbird ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkSpy ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkSteed ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkTitan ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkWarrior ns1:hasAlignment ns1:trueNeutral .\n\nns1:CloudDragonAncient ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonGreatWyrm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonJuvenile ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonMatureAdult ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonOld ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonVeryOld ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonVeryYoung ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonWyrm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonWyrmling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonYoung ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonYoungAdult ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudGiantSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:ClowderofCats ns1:hasAlignment ns1:trueNeutral .\n\nns1:CobraBackInphidian ns1:hasAlignment ns1:neutralEvil .\n\nns1:CobraFlower ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cockatrice ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cockroach ns1:hasAlignment ns1:trueNeutral .\n\nns1:CockroachGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:CockroachSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:CodexArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:CofferCorpse ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CoffinAnemone ns1:hasAlignment ns1:trueNeutral .\n\nns1:ColdMutatedOgreSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:ColdRider ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ColdsnapBasilisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Colliatur ns1:hasAlignment ns1:neutralGood .\n\nns1:ColossalAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:ColourOutofSpace ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Coloxus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CombatTrainedWolliped ns1:hasAlignment ns1:trueNeutral .\n\nns1:Combusted ns1:hasAlignment ns1:neutralEvil .\n\nns1:CommandoConstruct ns1:hasAlignment ns1:trueNeutral .\n\nns1:CommonBat ns1:hasAlignment ns1:trueNeutral .\n\nns1:CommonDrow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CommonEurypterid ns1:hasAlignment ns1:trueNeutral .\n\nns1:CommonInphidian ns1:hasAlignment ns1:neutralEvil .\n\nns1:CommonMite ns1:hasAlignment ns1:lawfulEvil .\n\nns1:CommonTimeElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ComozantWyrd ns1:hasAlignment ns1:trueNeutral .\n\nns1:Compsognathus ns1:hasAlignment ns1:trueNeutral .\n\nns1:ConfoundingBandersnatch ns1:hasAlignment ns1:trueNeutral .\n\nns1:ConquerorWorm ns1:hasAlignment ns1:neutralEvil .\n\nns1:ConstrictorSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:Contemplative ns1:hasAlignment ns1:trueNeutral .\n\nns1:ContractDevilPhistophilus ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Cooshee ns1:hasAlignment ns1:trueNeutral .\n\nns1:CopperDragonGreatWyrm ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonJuvenile ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonMatureAdult ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonOld ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonVeryOld ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonVeryYoung ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonWyrm ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonWyrmling ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonYoungAdult ns1:hasAlignment ns1:chaoticGood .\n\nns1:Copsewight ns1:hasAlignment ns1:neutralEvil .\n\nns1:CoralCapuchin ns1:hasAlignment ns1:trueNeutral .\n\nns1:CoralDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:CoralGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:CorpseCandle ns1:hasAlignment ns1:neutralEvil .\n\nns1:CorpseLotus ns1:hasAlignment ns1:trueNeutral .\n\nns1:CorpseOrgy ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CorpseRook ns1:hasAlignment ns1:trueNeutral .\n\nns1:CorpsefeasterOtyugh ns1:hasAlignment ns1:trueNeutral .\n\nns1:Corpsespinner ns1:hasAlignment ns1:trueNeutral .\n\nns1:CorpsewaterBogMummy ns1:hasAlignment ns1:lawfulEvil .\n\nns1:CorpulentGhoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Couatl ns1:hasAlignment ns1:lawfulGood .\n\nns1:CovenOctopus ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:CovenOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrabCoconut ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrabGreatReef ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrabHermitGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:CracklingSkullSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:CragMan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CrawlingHand ns1:hasAlignment ns1:neutralEvil .\n\nns1:CrawlingHandGiant ns1:hasAlignment ns1:neutralEvil .\n\nns1:CreamfootFennec ns1:hasAlignment ns1:trueNeutral .\n\nns1:CreeperIvy ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrimsonBasilisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrimsonDeath ns1:hasAlignment ns1:neutralEvil .\n\nns1:CrimsonJellyfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrimsonWhale ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrimsonWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Criosphinx ns1:hasAlignment ns1:trueNeutral .\n\nns1:Crocodile ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrocodileDire ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrocodileZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:CroneQueen ns1:hasAlignment ns1:neutralEvil .\n\nns1:Crucidaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:CrucifixionSpirit ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Cryohydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:CryptFlower ns1:hasAlignment ns1:trueNeutral .\n\nns1:CryptThing ns1:hasAlignment ns1:neutralEvil .\n\nns1:Cryptguard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Crysmal ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrystalDragonGreatWyrm ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonJuvenile ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonMatureAdult ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonOld ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonVeryOld ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonVeryYoung ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonWyrm ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonWyrmling ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonYoungAdult ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrystalOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrystallineHorror ns1:hasAlignment ns1:neutralEvil .\n\nns1:Crystallis ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cuero ns1:hasAlignment ns1:trueNeutral .\n\nns1:CultistTroop ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CursedBeast ns1:hasAlignment ns1:neutralEvil .\n\nns1:CursedKing ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CutlassSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cyclops ns1:hasAlignment ns1:neutralEvil .\n\nns1:Cynosoma ns1:hasAlignment ns1:chaoticGood .\n\nns1:Cyphergull ns1:hasAlignment ns1:trueNeutral .\n\nns1:CystTrinityHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Cythnigot ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Cytillipede ns1:hasAlignment ns1:trueNeutral .\n\nns1:Daggocrustler ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dagon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DagonDemonPrinceoftheSea ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Dahzagan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Daitengu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dakon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Dallo ns1:hasAlignment ns1:trueNeutral .\n\nns1:DamnationBook ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Damned ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DanavaMR ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:DancerInphidian ns1:hasAlignment ns1:neutralEvil .\n\nns1:Dandasuka ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DanseMacabre ns1:hasAlignment ns1:neutralEvil .\n\nns1:Danthienne ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Dapsara ns1:hasAlignment ns1:neutralGood .\n\nns1:DarakhulOgre ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DarkAngel ns1:hasAlignment ns1:neutralEvil .\n\nns1:DarkCaller ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DarkCreeper ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DarkDancer ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DarkEmpath ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DarkIceGrig ns1:hasAlignment ns1:neutralGood .\n\nns1:DarkMatterEntropicOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:DarkScionDwarf ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DarkSlayer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DarkStalker ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DarkYoungofShubNiggurath ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Darkling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Darkmantle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Darnoc ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DaughterofShubNiggurath ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DaughteroftheDead ns1:hasAlignment ns1:neutralEvil .\n\nns1:DeadfallScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:DeadlyMantis ns1:hasAlignment ns1:trueNeutral .\n\nns1:DeathButterflySwarm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeathCoach ns1:hasAlignment ns1:neutralEvil .\n\nns1:DeathDog ns1:hasAlignment ns1:neutralEvil .\n\nns1:DeathWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Deathhand ns1:hasAlignment ns1:neutralEvil .\n\nns1:DeathleechHornedDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DeathlessSorcerer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeathsHeadJellyfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:Deathsnatcher ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeathtrapOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Deathweb ns1:hasAlignment ns1:trueNeutral .\n\nns1:DebasedAsrai ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DebasedNixie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Decapus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeepBadger ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeepHunterSeaSerpent ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:DeepMerfolk ns1:hasAlignment ns1:trueNeutral .\n\nns1:DeepNaga ns1:hasAlignment ns1:neutralEvil .\n\nns1:DeepOne ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeepOneHybrid ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeepOneScion ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeepSeaSerpent ns1:hasAlignment ns1:trueNeutral .\n\nns1:DeepSingerWhale ns1:hasAlignment ns1:trueNeutral .\n\nns1:DeepWalker ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DeepsightGogglesSymbiont ns1:hasAlignment ns1:trueNeutral .\n\nns1:Deer ns1:hasAlignment ns1:trueNeutral .\n\nns1:DefenderGlobe ns1:hasAlignment ns1:trueNeutral .\n\nns1:DegenerateOgre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DegenerateSerpentfolk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Deinochos ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Deinonychus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Deinosuchus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Deinotherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:Delgeth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Delver ns1:hasAlignment ns1:trueNeutral .\n\nns1:Demammoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:DemiLich ns1:hasAlignment ns1:neutralEvil .\n\nns1:Demilich ns1:hasAlignment ns1:neutralEvil .\n\nns1:Demiurge ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DemonStone ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DemonicDeadfallScorpion ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DemonicKnight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DemonicMohrg ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DemorielTwiceExiledSeductress ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DenizenofLeng ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DerakniLocustDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Derghodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Derhii ns1:hasAlignment ns1:trueNeutral .\n\nns1:Derro ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DerroFetalSavant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DerroMagister ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DesertBlight ns1:hasAlignment ns1:neutralEvil .\n\nns1:DesertDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:DesertGiant ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:DespicableSnowman ns1:hasAlignment ns1:neutralEvil .\n\nns1:Destrachan ns1:hasAlignment ns1:neutralEvil .\n\nns1:DevastatorMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DevilDog ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DevilMonkey ns1:hasAlignment ns1:trueNeutral .\n\nns1:DevilSteed ns1:hasAlignment ns1:neutralEvil .\n\nns1:Devilfish ns1:hasAlignment ns1:neutralEvil .\n\nns1:Devourer ns1:hasAlignment ns1:neutralEvil .\n\nns1:DevouringMist ns1:hasAlignment ns1:neutralEvil .\n\nns1:Dhampir ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Dhole ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DholeHatchling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DiamondSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Diatryma ns1:hasAlignment ns1:trueNeutral .\n\nns1:Digester ns1:hasAlignment ns1:trueNeutral .\n\nns1:Digmaul ns1:hasAlignment ns1:trueNeutral .\n\nns1:DimensionWalker ns1:hasAlignment ns1:neutralEvil .\n\nns1:DimensionalShambler ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Dimetrodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dimorphodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Diplodocus ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireApeGigantopithecus ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireBadger ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireBarracuda ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireBat ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireBison ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireCorby ns1:hasAlignment ns1:neutralEvil .\n\nns1:DireCorgi ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireElectricEel ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireFlytrap ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireGhoulWolf ns1:hasAlignment ns1:neutralEvil .\n\nns1:DireGoat ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireGrasshopperMouse ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireHippopotamusBehemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireHyena ns1:hasAlignment ns1:trueNeutral .\n\nns1:DirePolarBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:DirePorcupine ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireRacoon ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireRam ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireRatCompanionLevel ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireShadowRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireSharkMegalodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireSloth ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireSmilodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireWeasel ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireWolf ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireWolfwere ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DireWolverine ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireorCaveBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:DiseasedRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Disenchanter ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dispater ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DivineGuardianHydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:Djinni ns1:hasAlignment ns1:chaoticGood .\n\nns1:Dlurgraven ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dodo ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dog ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dogmole ns1:hasAlignment ns1:trueNeutral .\n\nns1:DogmoleJuggernaut ns1:hasAlignment ns1:trueNeutral .\n\nns1:DollDevilArusities ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Dolphin ns1:hasAlignment ns1:trueNeutral .\n\nns1:DomesticatedorWildWolliped ns1:hasAlignment ns1:trueNeutral .\n\nns1:DominationDevilGladiatrix ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Domovoi ns1:hasAlignment ns1:chaoticGood .\n\nns1:DonkeyRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Donratty ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Doombat ns1:hasAlignment ns1:neutralEvil .\n\nns1:Doorwarden ns1:hasAlignment ns1:trueNeutral .\n\nns1:Doppeldrek ns1:hasAlignment ns1:trueNeutral .\n\nns1:Doppelrat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Doru ns1:hasAlignment ns1:neutralEvil .\n\nns1:Dorvae ns1:hasAlignment ns1:neutralEvil .\n\nns1:DosojinKami ns1:hasAlignment ns1:neutralGood .\n\nns1:Dossenus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Draaki ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dracolisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Draconal ns1:hasAlignment ns1:neutralGood .\n\nns1:Draconid ns1:hasAlignment ns1:trueNeutral .\n\nns1:DraftHeavyHorse ns1:hasAlignment ns1:trueNeutral .\n\nns1:Draghul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DragonHorse ns1:hasAlignment ns1:neutralGood .\n\nns1:DragonTurtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dragonfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:DragonflyGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:DragonflyGiantNymph ns1:hasAlignment ns1:trueNeutral .\n\nns1:DragonhideGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dragonkin ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:DragonleafTreepp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dragonne ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dragonnel ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dragonship ns1:hasAlignment ns1:trueNeutral .\n\nns1:DrakainiaMR ns1:hasAlignment ns1:neutralEvil .\n\nns1:Drakauthix ns1:hasAlignment ns1:trueNeutral .\n\nns1:Draug ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Draugr ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DreadCorby ns1:hasAlignment ns1:neutralEvil .\n\nns1:DreadWraith ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DreadZombieAasimarWarrior ns1:hasAlignment ns1:trueNeutral .\n\nns1:DreamEater ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DreamImpCompanion ns1:hasAlignment ns1:neutralGood .\n\nns1:DreamImpCousin ns1:hasAlignment ns1:neutralGood .\n\nns1:DreamImpHero ns1:hasAlignment ns1:neutralGood .\n\nns1:DreamSpectre ns1:hasAlignment ns1:neutralEvil .\n\nns1:DreamSpectreNightmareCreature ns1:hasAlignment ns1:neutralEvil .\n\nns1:DreamSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:DreamVestigeMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DreamthiefHag ns1:hasAlignment ns1:neutralEvil .\n\nns1:Drekavac ns1:hasAlignment ns1:neutralEvil .\n\nns1:Dretch ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DrochaSwarm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DrowNoble ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DrownedMaiden ns1:hasAlignment ns1:neutralEvil .\n\nns1:DrowningDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Dryad ns1:hasAlignment ns1:chaoticGood .\n\nns1:Duergar ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DuergarTyrant ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Dullahan ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DunPudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:Duneshaker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dunkleosteus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Duppy ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DuskKamadan ns1:hasAlignment ns1:neutralEvil .\n\nns1:Duskwalker ns1:hasAlignment ns1:trueNeutral .\n\nns1:DustDigger ns1:hasAlignment ns1:trueNeutral .\n\nns1:DustGhoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DustMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dvorovoi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DwarfCaiman ns1:hasAlignment ns1:trueNeutral .\n\nns1:DweomerCap ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dweomercat ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DweomercatCub ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Dwiergeth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Dybbuk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Dyme ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Dziriak ns1:hasAlignment ns1:trueNeutral .\n\nns1:D\u00f8delig ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Eagle ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthElementalBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthElementalChampion ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthElementalConstruct ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthElementalSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthVeela ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthWysp ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthYaiOni ns1:hasAlignment ns1:neutralEvil .\n\nns1:EarthenSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Earthfiend ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EarthkingKaiju ns1:hasAlignment ns1:neutralGood .\n\nns1:Eblis ns1:hasAlignment ns1:neutralEvil .\n\nns1:EbonOoze ns1:hasAlignment ns1:neutralEvil .\n\nns1:EbonyGelatinousCube ns1:hasAlignment ns1:trueNeutral .\n\nns1:Echeneis ns1:hasAlignment ns1:trueNeutral .\n\nns1:EclipseGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ecorche ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EcstasyFeeder ns1:hasAlignment ns1:neutralEvil .\n\nns1:EctoplasmghostOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:EctoplasmicHuman ns1:hasAlignment ns1:trueNeutral .\n\nns1:Edimmu ns1:hasAlignment ns1:trueNeutral .\n\nns1:EelHound ns1:hasAlignment ns1:trueNeutral .\n\nns1:Efreeti ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EfreetiJanissary ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Egophage ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Egregore ns1:hasAlignment ns1:trueNeutral .\n\nns1:Einherji ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:EirisaiAncestor ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:EirisaiGreater ns1:hasAlignment ns1:trueNeutral .\n\nns1:EirisaiLesser ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:EirisaiMaster ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:EirisaiMedial ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Elasmosarus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Elasmotherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElasmotheriumGiantWoolyRhinoCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Elawah ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ElderAcidQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderAetherElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderAirElemental ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ElderColdironElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderDeepOne ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ElderEarthElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderFireElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderIceElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderLightningElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderMagmaElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderMudElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderNegativeEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderNirento ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderObsidianQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderPositiveEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderPsionicElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderThing ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ElderWaterElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderWitchlight ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderWorg ns1:hasAlignment ns1:neutralEvil .\n\nns1:ElderWyrm ns1:hasAlignment ns1:trueNeutral .\n\nns1:EldritchSteamMephit ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ElectricCube ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElectricEel ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElectricFroghemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElementalAirDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElementalDrake ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ElementalEarthDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElementalFireDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElementalWaterDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Elephant ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElephantSeal ns1:hasAlignment ns1:trueNeutral .\n\nns1:EliteShadowMastiff ns1:hasAlignment ns1:neutralEvil .\n\nns1:Elk ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElohimMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElusaHound ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElysianTitan ns1:hasAlignment ns1:chaoticGood .\n\nns1:EmbalmingGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:EmberWeaver ns1:hasAlignment ns1:trueNeutral .\n\nns1:Embolotherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:EmeraldOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Emkrah ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EmotionOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:EmperorBird ns1:hasAlignment ns1:trueNeutral .\n\nns1:EmperorCobra ns1:hasAlignment ns1:trueNeutral .\n\nns1:EmperorKirin ns1:hasAlignment ns1:lawfulGood .\n\nns1:EmperorStag ns1:hasAlignment ns1:trueNeutral .\n\nns1:EmperorWalrus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Emperorofscales ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EmpressBoreWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Empusa ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Empyreal ns1:hasAlignment ns1:lawfulGood .\n\nns1:Empyrean ns1:hasAlignment ns1:neutralGood .\n\nns1:Emu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Encantado ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:EncephalonGorger ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EncephalonGorgerPsychic ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EnchanterHeron ns1:hasAlignment ns1:trueNeutral .\n\nns1:EnergizedIceGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:EnergyProtectionSymbiont ns1:hasAlignment ns1:trueNeutral .\n\nns1:Enisysian ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EnlightenedConstructClockworkSoldier ns1:hasAlignment ns1:neutralEvil .\n\nns1:EnlightenedContemplative ns1:hasAlignment ns1:trueNeutral .\n\nns1:EnormousReefclaw ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:EnslavedSpawn ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EntropicOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:EnvironmentalSuitSymbiont ns1:hasAlignment ns1:trueNeutral .\n\nns1:Enzyme ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ercinee ns1:hasAlignment ns1:trueNeutral .\n\nns1:EremiteKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EremiteSymbiont ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EremiteWizard ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ErinatGremlin ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Erlking ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Erodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Escorite ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Esipil ns1:hasAlignment ns1:neutralEvil .\n\nns1:Esobok ns1:hasAlignment ns1:trueNeutral .\n\nns1:EtherDrake ns1:hasAlignment ns1:trueNeutral .\n\nns1:EtherealFilcher ns1:hasAlignment ns1:trueNeutral .\n\nns1:EtherealGraveyardTool ns1:hasAlignment ns1:trueNeutral .\n\nns1:EtherealMarauder ns1:hasAlignment ns1:trueNeutral .\n\nns1:EtherealRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:EthericJelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:Etheroot ns1:hasAlignment ns1:trueNeutral .\n\nns1:Etiainen ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Etioling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Ettercap ns1:hasAlignment ns1:neutralEvil .\n\nns1:Euryale ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EvilEye ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ExecutionerDevilMunagola ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ExecutionersHood ns1:hasAlignment ns1:trueNeutral .\n\nns1:ExiledShade ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ExoskeletonGiantCockroach ns1:hasAlignment ns1:neutralEvil .\n\nns1:ExoskeletonGiantStagBeetle ns1:hasAlignment ns1:neutralEvil .\n\nns1:ExoskeletonTitanCentipede ns1:hasAlignment ns1:neutralEvil .\n\nns1:ExsanguinatorDaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Exscinder ns1:hasAlignment ns1:lawfulGood .\n\nns1:EyeEater ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EyeKiller ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EyeSentinel ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EyeoftheDeep ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EyeoftheWatcher ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FacelessDemonGallu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FacelessDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FacelessFleshGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:FacelessHulkUgoroth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FacelessStalkerUgothol ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FacelessWhale ns1:hasAlignment ns1:trueNeutral .\n\nns1:Fachen ns1:hasAlignment ns1:neutralEvil .\n\nns1:FadingFox ns1:hasAlignment ns1:trueNeutral .\n\nns1:FaerieDragonDracoFraudatioMinimus ns1:hasAlignment ns1:chaoticGood .\n\nns1:FaerieMount ns1:hasAlignment ns1:trueNeutral .\n\nns1:FaerieSeer ns1:hasAlignment ns1:trueNeutral .\n\nns1:Faeriedragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:FailedApotheosisMimic ns1:hasAlignment ns1:neutralEvil .\n\nns1:Fallen ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FalseSpiderPedipalp ns1:hasAlignment ns1:trueNeutral .\n\nns1:FalseSpiderSolifugid ns1:hasAlignment ns1:trueNeutral .\n\nns1:FamiliarAutomaton ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FangedSeaSerpent ns1:hasAlignment ns1:trueNeutral .\n\nns1:FastZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Fastachee ns1:hasAlignment ns1:neutralGood .\n\nns1:Faun ns1:hasAlignment ns1:chaoticGood .\n\nns1:FearEater ns1:hasAlignment ns1:neutralEvil .\n\nns1:FearGuard ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Feargaunt ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FeliusDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Fellforged ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FellnightSpriggan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Fellsig ns1:hasAlignment ns1:neutralEvil .\n\nns1:FenMauler ns1:hasAlignment ns1:neutralEvil .\n\nns1:FenWitch ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FeralHogTroop ns1:hasAlignment ns1:trueNeutral .\n\nns1:FeralTitanLord ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:FerrousGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:FesteringSpirit ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Festrog ns1:hasAlignment ns1:neutralEvil .\n\nns1:Fetch ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FetchlingKayal ns1:hasAlignment ns1:trueNeutral .\n\nns1:FetidSporeMound ns1:hasAlignment ns1:trueNeutral .\n\nns1:FetidStray ns1:hasAlignment ns1:neutralEvil .\n\nns1:Fext ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FeyGiantToad ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:FeyWolverine ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Feyling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:FeywardTree ns1:hasAlignment ns1:trueNeutral .\n\nns1:FiendInfusedStoneGolem ns1:hasAlignment ns1:neutralEvil .\n\nns1:FiendishHeavyWarHorse ns1:hasAlignment ns1:neutralEvil .\n\nns1:FieryCorpseOrgy ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Firbolg ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireBirdCompanion ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireCrabGreater ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireCrabLesser ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireDrake ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireElementalConstruct ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireFish ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireGiant ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FireInfusedTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FireLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireNymph ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:FirePhantom ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FireSalamander ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireVampire ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FireVeela ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireWhale ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireWysp ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireYai ns1:hasAlignment ns1:neutralEvil .\n\nns1:Firebird ns1:hasAlignment ns1:neutralGood .\n\nns1:Firefiend ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FirefootFennec ns1:hasAlignment ns1:trueNeutral .\n\nns1:FjordLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FlagstoneGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlailSnail ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlailSnailFrogGodGames ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlameDrake ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FlameSpawnedTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FlamebrotherSalamander ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FlamingSkull ns1:hasAlignment ns1:neutralEvil .\n\nns1:FlappingHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:FlashBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlayerDevilMarzach ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FleaGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:FleshColossusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:FleshGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:FleshGolemHound ns1:hasAlignment ns1:trueNeutral .\n\nns1:FleshdollRogue ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Fleshdreg ns1:hasAlignment ns1:neutralEvil .\n\nns1:FleshdregSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:FlightPack ns1:hasAlignment ns1:trueNeutral .\n\nns1:FloatingEye ns1:hasAlignment ns1:trueNeutral .\n\nns1:FloodTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FloodslainArsinoitherium ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FloodslainOrc ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FlotsamTerror ns1:hasAlignment ns1:neutralEvil .\n\nns1:FloweringLattice ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlueHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Flumph ns1:hasAlignment ns1:lawfulGood .\n\nns1:Fluxwraith ns1:hasAlignment ns1:neutralEvil .\n\nns1:FlyGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlyingFox ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlyingPolyp ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FlyingSquirrel ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlytrapLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:Fogwarden ns1:hasAlignment ns1:neutralEvil .\n\nns1:FomorianTitanMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FooDog ns1:hasAlignment ns1:neutralGood .\n\nns1:ForestBlight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ForestDrake ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ForestGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ForestersBane ns1:hasAlignment ns1:trueNeutral .\n\nns1:ForgeSpurned ns1:hasAlignment ns1:neutralEvil .\n\nns1:ForgefiendScanderig ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ForgottenOne ns1:hasAlignment ns1:trueNeutral .\n\nns1:ForkedCat ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ForkedTailWyvern ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Forlarren ns1:hasAlignment ns1:neutralEvil .\n\nns1:FormianHiveQueen ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormianMyrmarch ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormianQueen ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormianRoyalGuard ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormianTaskmaster ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormianWarrior ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormianWorker ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormlessSpawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FortunesellerGoblin ns1:hasAlignment ns1:trueNeutral .\n\nns1:Fossegrim ns1:hasAlignment ns1:neutralEvil .\n\nns1:FossilGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:FourArmedGargoyle ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FourArmedMudraSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:FourArmedSahuaginMutant ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Fox ns1:hasAlignment ns1:trueNeutral .\n\nns1:Foxwere ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FrazUrbluuDemonPrinceofDeception ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FreezingFlow ns1:hasAlignment ns1:trueNeutral .\n\nns1:FreshwaterMerrow ns1:hasAlignment ns1:neutralEvil .\n\nns1:FrogDemonGreruor ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FrogFather ns1:hasAlignment ns1:trueNeutral .\n\nns1:FrogGiantDire ns1:hasAlignment ns1:trueNeutral .\n\nns1:FrogPoisonous ns1:hasAlignment ns1:trueNeutral .\n\nns1:Froghemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:FrostCube ns1:hasAlignment ns1:trueNeutral .\n\nns1:FrostDrake ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FrostGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FrostMan ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FrostMiteSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:FrostWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:FrostdeathDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:FrostfallenMammoth ns1:hasAlignment ns1:neutralEvil .\n\nns1:FrostyChiseler ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FrumiousBandersnatch ns1:hasAlignment ns1:trueNeutral .\n\nns1:FukujinKami ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Fuldrex ns1:hasAlignment ns1:neutralEvil .\n\nns1:Fulgati ns1:hasAlignment ns1:trueNeutral .\n\nns1:Funayurei ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FungalCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:FungalLizardfolk ns1:hasAlignment ns1:trueNeutral .\n\nns1:FungalNymph ns1:hasAlignment ns1:chaoticGood .\n\nns1:Fungiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:Funglet ns1:hasAlignment ns1:neutralGood .\n\nns1:Fungoid ns1:hasAlignment ns1:neutralEvil .\n\nns1:FungusGargoyle ns1:hasAlignment ns1:trueNeutral .\n\nns1:FungusLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:FungusMan ns1:hasAlignment ns1:trueNeutral .\n\nns1:FungusManKing ns1:hasAlignment ns1:trueNeutral .\n\nns1:FungusQueen ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FungusWeird ns1:hasAlignment ns1:trueNeutral .\n\nns1:Furcifer ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:FurnaceGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:FutureYithian ns1:hasAlignment ns1:neutralGood .\n\nns1:Fye ns1:hasAlignment ns1:trueNeutral .\n\nns1:Fyr ns1:hasAlignment ns1:trueNeutral .\n\nns1:GIANTWATERBEETLE ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Gaki ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gallerok ns1:hasAlignment ns1:trueNeutral .\n\nns1:GalluWarmongerDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Galvo ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gambado ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Gancanagh ns1:hasAlignment ns1:chaoticGood .\n\nns1:Ganzi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Gar ns1:hasAlignment ns1:trueNeutral .\n\nns1:GardenOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:GareLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GargantuanAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:GargantuanMonstrousSeaWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gargiya ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gargoyle ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GargoyleBrute ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GargoyleGuardian ns1:hasAlignment ns1:trueNeutral .\n\nns1:Garipan ns1:hasAlignment ns1:neutralEvil .\n\nns1:Garmunchi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Garuda ns1:hasAlignment ns1:chaoticGood .\n\nns1:Gashadokurou ns1:hasAlignment ns1:neutralEvil .\n\nns1:GateArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:Gathlain ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GatorGhoul ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gearghost ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Gearsman ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gegenees ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Geier ns1:hasAlignment ns1:trueNeutral .\n\nns1:Geist ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GelatinousCube ns1:hasAlignment ns1:trueNeutral .\n\nns1:GelatinousGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:GelatinousOrb ns1:hasAlignment ns1:trueNeutral .\n\nns1:GemCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:GemstoneGargoyle ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GeneralofVengeance ns1:hasAlignment ns1:lawfulGood .\n\nns1:Genghryl ns1:hasAlignment ns1:trueNeutral .\n\nns1:Genthodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Geon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GeruzouSlimeDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Geryon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GetofIblis ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GhaddarDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ghalzarokh ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ghast ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ghawwas ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gholdako ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ghole ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ghonhatine ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ghoran ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ghorazagh ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ghost ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ghoublin ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ghoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GhoulAvernal ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GhoulDireWolf ns1:hasAlignment ns1:neutralEvil .\n\nns1:GhoulHoundCompanion ns1:hasAlignment ns1:neutralEvil .\n\nns1:GhoulHoundHero ns1:hasAlignment ns1:neutralEvil .\n\nns1:GhoulStirge ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GhoulWolf ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ghul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GiantAbyssalDireFrog ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GiantAdultAntLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAdvancedDireBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAmoeba ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAnaconda ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAntDrone ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAntLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAntQueen ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAntSoldier ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAntSporeZombie ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GiantAntWorker ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAssassinBug ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAssassinSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBarracuda ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBee ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBeheaded ns1:hasAlignment ns1:neutralEvil .\n\nns1:GiantBelostomatid ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBlackWidowSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBlisterBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBlowfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBogTurtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBombardierBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBoringBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBotfly ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBumblebee ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBumblebeeQueen ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBumblebeeWorker ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantCaribe ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantCentipede ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantChameleon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantCicada ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantCockroachExoskeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:GiantConstrictorSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantCrabSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantDeathwatchBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantDemonGnoll ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantDireFrog ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantDragonflyXPNMediumverminInitSensesdarkvisionftPerceptionDEFENSEACtouchflatfootedDexnaturalhpdFortRefWillImmunevermintraitsOFFENSESpeedftflyftperfectMeleebitedTACTICSGiantdragonfliesareveryaggressiveandhuntwarmbloodedcreaturesfearlesslyattackinguntileithertheyortheirpreyaredeadSTATISTICSStrDexConIntWisChaBaseAtkCMBCMDvstripSkillsFly ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantEagle ns1:hasAlignment ns1:neutralGood .\n\nns1:GiantElectricCatfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantEmperorScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantFalcon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantFlea ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantFly ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantFlytrap ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantFrilledLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantFrog ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantGar ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantGecko ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantGroundCricket ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantGroundWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantHamster ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantHellgrammite ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantHissingCockroach ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantHornet ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantHorsefly ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantIsopod ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantKhopeshScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantLakeOctopus ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantLeech ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantLegwaterSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantLocust ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMaggot ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMantisCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMantisShrimp ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMarmoset ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMiningBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMonstrousCrayfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMorayEel ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMosquito ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMotleyCuttlefish ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMuckdweller ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantOctopus ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantOwl ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:GiantPhantomArmor ns1:hasAlignment ns1:neutralEvil .\n\nns1:GiantPike ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantPorcupine ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantQueenBee ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantRaven ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantRhinocerosBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantRotGrub ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSawtoothedBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantScarab ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSeaAnemone ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSeaSlug ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSeaSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSeahorse ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSkateSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSkunk ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSlicerBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSlug ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSnappingTurtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSolifugid ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantStagBeetleExoskeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:GiantStarfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantStargazer ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantStirge ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSundew ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTarantulaSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTardigrade ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTermite ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTick ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTigerBarb ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantToad ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTortoise ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTubeWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantVulture ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantWalkingStick ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantWaterStrider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantWeasel ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantYellowjacket ns1:hasAlignment ns1:trueNeutral .\n\nns1:Giantwingedchupacabra ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GibberingAbomination ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GibberingMouther ns1:hasAlignment ns1:trueNeutral .\n\nns1:GibberingOrb ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GibrilethDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Giganotosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:GigasClam ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GildedDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GildedSeaSerpent ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gillman ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ginever ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Giraffe ns1:hasAlignment ns1:trueNeutral .\n\nns1:Girallon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Girtablilu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gitwerc ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Glabrezu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GlacialOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:GlacierToad ns1:hasAlignment ns1:trueNeutral .\n\nns1:Glaciergeist ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GladiatorRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:GlaistigMR ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GlassGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:GlassUrchin ns1:hasAlignment ns1:trueNeutral .\n\nns1:GlassWyrm ns1:hasAlignment ns1:trueNeutral .\n\nns1:GlidingTurtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Glimmerhollow ns1:hasAlignment ns1:trueNeutral .\n\nns1:Globster ns1:hasAlignment ns1:trueNeutral .\n\nns1:GlomerayDaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:GloomCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gloomwing ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gluttongrass ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gnarlwood ns1:hasAlignment ns1:neutralEvil .\n\nns1:GnasherLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gnoll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GnollWhelp ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GnophKeh ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Gnophkeh ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gnorri ns1:hasAlignment ns1:trueNeutral .\n\nns1:Goat ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoatDemonMehrim ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Goblin ns1:hasAlignment ns1:neutralEvil .\n\nns1:GoblinDog ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoblinNaga ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GoblinSnake ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GoblinTroop ns1:hasAlignment ns1:neutralEvil .\n\nns1:Goemul ns1:hasAlignment ns1:neutralGood .\n\nns1:Goezspall ns1:hasAlignment ns1:trueNeutral .\n\nns1:GohlHydraCloud ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GoldDragonJuvenile ns1:hasAlignment ns1:lawfulGood .\n\nns1:GoldDragonMatureAdult ns1:hasAlignment ns1:lawfulGood .\n\nns1:GoldDragonOld ns1:hasAlignment ns1:lawfulGood .\n\nns1:GoldDragonVeryOld ns1:hasAlignment ns1:lawfulGood .\n\nns1:GoldDragonWyrm ns1:hasAlignment ns1:lawfulGood .\n\nns1:GoldDragonYoungAdult ns1:hasAlignment ns1:lawfulGood .\n\nns1:GoldGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoldenCat ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoldenCatDescendant ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoldenColossusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoldenScarabSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoldenSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:GolemCarrionweaponized ns1:hasAlignment ns1:trueNeutral .\n\nns1:GolemTreasure ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoliathFrog ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoliathSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoliathStagBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gongorinan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GongorinanQlippoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Gorbel ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gorgimera ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gorgon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gorgoni ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gorgoros ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GorillaBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:GorsonTheBloodDuke ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Gorynych ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GourdLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gowrow ns1:hasAlignment ns1:trueNeutral .\n\nns1:GrabbingGiantBeheaded ns1:hasAlignment ns1:neutralEvil .\n\nns1:GrabbingMedusaHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:GrabbingSeveredHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:GrachukkClanMaster ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GraeaeMR ns1:hasAlignment ns1:neutralEvil .\n\nns1:GrandfatherofFlowers ns1:hasAlignment ns1:neutralEvil .\n\nns1:Grangeri ns1:hasAlignment ns1:trueNeutral .\n\nns1:GrapplingClaw ns1:hasAlignment ns1:trueNeutral .\n\nns1:Grassling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Grauladon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GraveLynx ns1:hasAlignment ns1:neutralEvil .\n\nns1:GraveRisen ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GraveSage ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Gravebound ns1:hasAlignment ns1:neutralEvil .\n\nns1:GravenGuardian ns1:hasAlignment ns1:trueNeutral .\n\nns1:Graveshell ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gravesludge ns1:hasAlignment ns1:neutralEvil .\n\nns1:GravestoneDryad ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gray ns1:hasAlignment ns1:neutralEvil .\n\nns1:GrayApeDecurion ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:GrayApeLegionnaire ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:GrayApePirateKing ns1:hasAlignment ns1:trueNeutral .\n\nns1:GrayGoo ns1:hasAlignment ns1:trueNeutral .\n\nns1:GrayNisp ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GrayOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:GrayRender ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatAssassinBug ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatCaretaker ns1:hasAlignment ns1:neutralGood .\n\nns1:GreatCyclops ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreatDiademUrchin ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatGatorGhoul ns1:hasAlignment ns1:neutralEvil .\n\nns1:GreatGhul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreatHornedOwl ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatSeaAnemone ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatWhiteShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatWhiteWhale ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatWyrmBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreatWyrmBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GreatWyrmDungeonDragonAKAGargaxtheMightyMasteroftheDungeonDragons ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatWyrmForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreatWyrmGoldDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:GreatWyrmGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GreatWyrmRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreatWyrmRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GreatWyrmSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:GreatWyrmSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatWyrmWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreaterAcidQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterAetherElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterAirElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterBarghest ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GreaterBasilisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterBoneneedle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterCeustodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:GreaterColdIronElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterEarthElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterFireElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterGelidBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterGravityElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterIceElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterLightningElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterMagmaElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterMedusa ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GreaterMudElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterNegativeEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterNelbarzoth ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GreaterObsidianQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterOozeDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreaterPositiveEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterPsionicElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterPubo ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterShadowCR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreaterShedu ns1:hasAlignment ns1:lawfulGood .\n\nns1:GreaterShieldWarden ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:GreaterVerdurousOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterWaterElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterYamabushiTengu ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:GreatwyrmUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Greatwyrmclouddragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreenGuardianCR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreenHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreenMan ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreenstingScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gregole ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Gremlin ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GremlinBatspawnCR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GremlinLightningspawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GremlinNuglub ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GremlinPugwampi ns1:hasAlignment ns1:neutralEvil .\n\nns1:GremlinSpiderspawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GremlinVexgit ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GrenadierTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GrendelMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Greymalkin ns1:hasAlignment ns1:neutralEvil .\n\nns1:Grick ns1:hasAlignment ns1:trueNeutral .\n\nns1:Griefgall ns1:hasAlignment ns1:neutralEvil .\n\nns1:Griffon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Grig ns1:hasAlignment ns1:neutralGood .\n\nns1:GrigSwarm ns1:hasAlignment ns1:neutralGood .\n\nns1:Grigori ns1:hasAlignment ns1:trueNeutral .\n\nns1:Grikkitog ns1:hasAlignment ns1:neutralEvil .\n\nns1:GrimReaper ns1:hasAlignment ns1:neutralEvil .\n\nns1:Grimlock ns1:hasAlignment ns1:neutralEvil .\n\nns1:Grimm ns1:hasAlignment ns1:neutralEvil .\n\nns1:Grimple ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Grimslake ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Grimstalker ns1:hasAlignment ns1:neutralEvil .\n\nns1:Grindylow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Grioth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Grippli ns1:hasAlignment ns1:trueNeutral .\n\nns1:GristlyDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GrizzlyBearRug ns1:hasAlignment ns1:trueNeutral .\n\nns1:GroaningSpirit ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Grodair ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GrogrisantMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Grokosh ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gronk ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Grootslang ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Grothlut ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GroundWaspSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:GroveGuardian ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GruffLanternGoat ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Gryph ns1:hasAlignment ns1:neutralEvil .\n\nns1:GuardianDaemon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GuardianDoll ns1:hasAlignment ns1:neutralEvil .\n\nns1:GuardianDragonMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:GuardianPhantomArmor ns1:hasAlignment ns1:neutralEvil .\n\nns1:GuardianScroll ns1:hasAlignment ns1:trueNeutral .\n\nns1:GuardianSpirit ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GuardianoftheTower ns1:hasAlignment ns1:trueNeutral .\n\nns1:Guecubu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Gug ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GugSavant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GulperEel ns1:hasAlignment ns1:trueNeutral .\n\nns1:GunpowderOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:GurgistMortic ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gutslug ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gutted ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GyeongsaWarpStorm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Gylptodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gynosphinx ns1:hasAlignment ns1:trueNeutral .\n\nns1:G\u00f8gelid ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:HYDRODAEMON ns1:hasAlignment ns1:neutralEvil .\n\nns1:Hadhayosh ns1:hasAlignment ns1:trueNeutral .\n\nns1:HagEyeOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:HalaDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HalfCelestialUnicorn ns1:hasAlignment ns1:trueNeutral .\n\nns1:HalfFiendDryad ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HalfFiendMinotaur ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HalfOgre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Halsora ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hamadryad ns1:hasAlignment ns1:chaoticGood .\n\nns1:HammerheadShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:HandOfTheInheritor ns1:hasAlignment ns1:lawfulGood .\n\nns1:HandmaidenDevilGylou ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HangmanTree ns1:hasAlignment ns1:neutralEvil .\n\nns1:Haniver ns1:hasAlignment ns1:trueNeutral .\n\nns1:HarbingerArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:HarbingerDaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:HarbingerofBrokenDealsFinePrintandUnfairBargains ns1:hasAlignment ns1:neutralEvil .\n\nns1:Harionago ns1:hasAlignment ns1:neutralEvil .\n\nns1:Harpy ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Harridan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HarvestHaunt ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Hastur ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HatethrallDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Haunt ns1:hasAlignment ns1:trueNeutral .\n\nns1:HauntedChain ns1:hasAlignment ns1:trueNeutral .\n\nns1:HauntedConstructScarecrow ns1:hasAlignment ns1:neutralEvil .\n\nns1:Havero ns1:hasAlignment ns1:neutralEvil .\n\nns1:HaveroTentacle ns1:hasAlignment ns1:neutralEvil .\n\nns1:HawanarGenie ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Hawk ns1:hasAlignment ns1:trueNeutral .\n\nns1:HeadedCryohydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:HeadedHydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:HeadedPryohydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:HeadedPyrohydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:HeadmansScythe ns1:hasAlignment ns1:trueNeutral .\n\nns1:HeartrotTree ns1:hasAlignment ns1:neutralEvil .\n\nns1:Hedgehog ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hegessik ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Heikegani ns1:hasAlignment ns1:neutralEvil .\n\nns1:HekatonkheiresTitan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HelBehir ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hela ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HelicoprionShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Helixmothlarva ns1:hasAlignment ns1:trueNeutral .\n\nns1:HellEngineAdamantineGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:HellHound ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HellMoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hellcat ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Hellcrown ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HellfireIgnis ns1:hasAlignment ns1:neutralEvil .\n\nns1:HellionRevenant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HellstokerDevilMarnasoth ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HellwaspSwarm ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HeraldofArmageddon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:HeraldofDreams ns1:hasAlignment ns1:chaoticGood .\n\nns1:HeraldofFreedom ns1:hasAlignment ns1:chaoticGood .\n\nns1:HeraldofFreedomandJustice ns1:hasAlignment ns1:chaoticGood .\n\nns1:HeraldofHell ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HeraldofRunes ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HeraldoftheDemonQueen ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HeraldofthePirateQueen ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:HereciteofAsmodeus ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HerensugueDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HeresyDevilAyngavhaul ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Hetkoshu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hezrou ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hidebehind ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hieracosphinx ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HighGirallon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HighPriestofShubNiggurath ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HighVeinar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:HillGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hippocampus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hippogriff ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hippopotamus ns1:hasAlignment ns1:trueNeutral .\n\nns1:HiveBrute ns1:hasAlignment ns1:neutralEvil .\n\nns1:HiveLarvaSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:HiveMindBeetleSwarm ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:HiveQueen ns1:hasAlignment ns1:neutralEvil .\n\nns1:HiveWarrior ns1:hasAlignment ns1:neutralEvil .\n\nns1:HivemindRatSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:HoarSpirit ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HobbeHound ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hobgoblin ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HobgoblinPhalanxTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HobgoblinTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Hobkins ns1:hasAlignment ns1:neutralEvil .\n\nns1:Hodag ns1:hasAlignment ns1:trueNeutral .\n\nns1:HollowHelm ns1:hasAlignment ns1:neutralEvil .\n\nns1:HollowSerpent ns1:hasAlignment ns1:neutralEvil .\n\nns1:HomotheriumSmilodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Homunculus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hondra ns1:hasAlignment ns1:trueNeutral .\n\nns1:HookfangWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:HordeRiot ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Horla ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HornCaterpillar ns1:hasAlignment ns1:trueNeutral .\n\nns1:HornedDemonKalavakus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HornedDevilCornugon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HornedLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Horse ns1:hasAlignment ns1:trueNeutral .\n\nns1:HostDevilMagaav ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HoundArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:HoundofTindalos ns1:hasAlignment ns1:neutralEvil .\n\nns1:HouseCentipede ns1:hasAlignment ns1:trueNeutral .\n\nns1:Howler ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hoyrall ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Huecuva ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HugeAcidQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeAetherElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeAirElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeColdironElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeEarthElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeFireElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeGravityElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeIceElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeLightningElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeMagmaElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeMonstrousSeaWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeMudElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeNegativeEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeObsidianQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugePositiveEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugePsionicElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeWaterElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Huggermugger ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Huldra ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:HumanJujuzombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:HumanMeatPuppetCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:HumanScholarBrainCylinder ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Humbaba ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Hundun ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hungerer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HungryFlesh ns1:hasAlignment ns1:trueNeutral .\n\nns1:HungryFog ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hunted ns1:hasAlignment ns1:neutralEvil .\n\nns1:HunterUrchin ns1:hasAlignment ns1:trueNeutral .\n\nns1:HuntingHorror ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hupia ns1:hasAlignment ns1:neutralEvil .\n\nns1:Hutijin ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Hyaenodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hyakume ns1:hasAlignment ns1:neutralEvil .\n\nns1:Hyaleth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hydraggon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hydrodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Hydrus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hyena ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hykariut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Hypnalis ns1:hasAlignment ns1:trueNeutral .\n\nns1:Iathavos ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IbShade ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ibshaunet ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:IceDevilGelugon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IceDrake ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IceGnomeBarbegaziCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:IceGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:IceKratah ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IceLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IceMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:IceTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IceYai ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Icegaunt ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ichkoh ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ichthyocentaur ns1:hasAlignment ns1:trueNeutral .\n\nns1:IdOozeCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Idun ns1:hasAlignment ns1:neutralGood .\n\nns1:Ifrit ns1:hasAlignment ns1:trueNeutral .\n\nns1:Iguanodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ijiraq ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:IkuTurso ns1:hasAlignment ns1:neutralEvil .\n\nns1:Illureshi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ImenteshProtean ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Imjarvi ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ImmatureNorn ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ImmenseMandragora ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ImmenseTortoise ns1:hasAlignment ns1:trueNeutral .\n\nns1:ImmolationDevilPuragaus ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ImmortalIchor ns1:hasAlignment ns1:neutralEvil .\n\nns1:Imp ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Impariut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ImperialGhoul ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ImplacableStalker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Impundulu ns1:hasAlignment ns1:neutralEvil .\n\nns1:Incubus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Incutilis ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IncutilisLord ns1:hasAlignment ns1:neutralEvil .\n\nns1:InevitableAevarutMR ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Infantis ns1:hasAlignment ns1:neutralEvil .\n\nns1:Infernor ns1:hasAlignment ns1:chaoticEvil .\n\nns1:InkDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IntellectDevourer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:InterlocutorKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IntermediateNelbarzoth ns1:hasAlignment ns1:lawfulGood .\n\nns1:InubrixGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:InvertedGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:InvisibleStalker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Iophanite ns1:hasAlignment ns1:lawfulGood .\n\nns1:IounGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:IounWyrd ns1:hasAlignment ns1:trueNeutral .\n\nns1:IrefulHellion ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Irii ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Irlgaunt ns1:hasAlignment ns1:neutralEvil .\n\nns1:IrminsulMR ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Irnakurse ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IronCobra ns1:hasAlignment ns1:trueNeutral .\n\nns1:IronColossusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:IronGhoul ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IronGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:IronGolemArcher ns1:hasAlignment ns1:trueNeutral .\n\nns1:IronMagehunterTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IronMaidenGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:IronRiderTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IronSiegeAlchemistTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IronWight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Isitoq ns1:hasAlignment ns1:neutralEvil .\n\nns1:Isonade ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IsphAunVuln ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ivoyro ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Izfiitar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:JaNoiOni ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Jabberwock ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JackOLantern ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jackal ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jackalwere ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JackinIronsGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JackoLantern ns1:hasAlignment ns1:neutralEvil .\n\nns1:Jaculi ns1:hasAlignment ns1:trueNeutral .\n\nns1:JadeColossuspp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jadeling ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jaguar ns1:hasAlignment ns1:trueNeutral .\n\nns1:Janni ns1:hasAlignment ns1:trueNeutral .\n\nns1:JanniCaptain ns1:hasAlignment ns1:lawfulEvil .\n\nns1:JellyfishGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:JellyfishSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jerboa ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jesulan ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Jherikite ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JigsawShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jinmenju ns1:hasAlignment ns1:trueNeutral .\n\nns1:JinnWizard ns1:hasAlignment ns1:neutralEvil .\n\nns1:Jinushigami ns1:hasAlignment ns1:trueNeutral .\n\nns1:JinxCatCompanion ns1:hasAlignment ns1:trueNeutral .\n\nns1:JitterboneMortic ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Jorogumo ns1:hasAlignment ns1:neutralEvil .\n\nns1:JotunbloodHillGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JotundTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Jotunnboar ns1:hasAlignment ns1:trueNeutral .\n\nns1:JoyfulThing ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Jubear ns1:hasAlignment ns1:trueNeutral .\n\nns1:JubilexTheFacelessLord ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JubilexTouchedMarshJelly ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JubjubBird ns1:hasAlignment ns1:trueNeutral .\n\nns1:JudgementDevilAshmede ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Juggerloathe ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Juggernaut ns1:hasAlignment ns1:trueNeutral .\n\nns1:JulunggaliMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:JungleDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:JungleGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:JungleGrick ns1:hasAlignment ns1:trueNeutral .\n\nns1:JunkGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:JupiterBloodsucker ns1:hasAlignment ns1:trueNeutral .\n\nns1:JuvenileBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JuvenileBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:JuvenileForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JuvenileGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:JuvenileRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JuvenileRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:JuvenileSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:JuvenileSeps ns1:hasAlignment ns1:trueNeutral .\n\nns1:JuvenileSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:JuvenileSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:JuvenileUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:JuvenileWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Kabandha ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Kaenju ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kaicharek ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kakapo ns1:hasAlignment ns1:trueNeutral .\n\nns1:KakuenTaka ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Kamaitachi ns1:hasAlignment ns1:chaoticEvil .\n\nns1:KamiShikigami ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:KaminariKami ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kampfult ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kangaroo ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kapoacinth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Kappa ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kapre ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kaprosuchus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Karek ns1:hasAlignment ns1:trueNeutral .\n\nns1:Karkadann ns1:hasAlignment ns1:trueNeutral .\n\nns1:Karkinoi ns1:hasAlignment ns1:chaoticEvil .\n\nns1:KarkinoiBroodSwarm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Karumzek ns1:hasAlignment ns1:neutralEvil .\n\nns1:KarzSlug ns1:hasAlignment ns1:trueNeutral .\n\nns1:KarzSlugQueen ns1:hasAlignment ns1:trueNeutral .\n\nns1:KasaObake ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kasatha ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Kastamut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Kathlin ns1:hasAlignment ns1:neutralGood .\n\nns1:KawaAkago ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kech ns1:hasAlignment ns1:neutralEvil .\n\nns1:KeeperoftheYellowSign ns1:hasAlignment ns1:chaoticEvil .\n\nns1:KelpDevil ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kelpie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kentrosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:KerePsychopomp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ketesthius ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Keulia ns1:hasAlignment ns1:trueNeutral .\n\nns1:Khaei ns1:hasAlignment ns1:trueNeutral .\n\nns1:Khala ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Khardajeen ns1:hasAlignment ns1:neutralEvil .\n\nns1:Khargra ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kigyo ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Kijimuna ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kikimora ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kikituk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kilblain ns1:hasAlignment ns1:neutralEvil .\n\nns1:KillerFrog ns1:hasAlignment ns1:trueNeutral .\n\nns1:KillerSeahorse ns1:hasAlignment ns1:trueNeutral .\n\nns1:Killmoulis ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kimenhul ns1:hasAlignment ns1:neutralEvil .\n\nns1:KingCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:KingRagworm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kirin ns1:hasAlignment ns1:lawfulGood .\n\nns1:KithangianBeastDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Kitsune ns1:hasAlignment ns1:trueNeutral .\n\nns1:KnightAnt ns1:hasAlignment ns1:trueNeutral .\n\nns1:KnightoftheGateUniqueAdvancedDevourer ns1:hasAlignment ns1:neutralEvil .\n\nns1:Koala ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kobold ns1:hasAlignment ns1:lawfulEvil .\n\nns1:KoboldZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kodama ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kolyarut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Kongamato ns1:hasAlignment ns1:trueNeutral .\n\nns1:KorirKokembe ns1:hasAlignment ns1:trueNeutral .\n\nns1:Korkcitura ns1:hasAlignment ns1:neutralEvil .\n\nns1:Korred ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:KostchtchieDemonPrinceofWrath ns1:hasAlignment ns1:chaoticEvil .\n\nns1:KotoFurunishi ns1:hasAlignment ns1:neutralGood .\n\nns1:Kraidyl ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kraken ns1:hasAlignment ns1:neutralEvil .\n\nns1:Krampus ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kratah ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Krenshar ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kronosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:KuahLij ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Kuchrima ns1:hasAlignment ns1:chaoticEvil .\n\nns1:KudzuTheEverblight ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kurobozu ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Kuru ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Kuwa ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Kyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:KytonDemagogue ns1:hasAlignment ns1:lawfulEvil .\n\nns1:LabyrinthMinotaur ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LacedonAquaticGhoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lacridaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:LakeTroll ns1:hasAlignment ns1:neutralEvil .\n\nns1:Lamhigyn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lamia ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LamiaMatriarch ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lammasu ns1:hasAlignment ns1:lawfulGood .\n\nns1:Lampad ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Lampadarius ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Lamprey ns1:hasAlignment ns1:trueNeutral .\n\nns1:LandLamprey ns1:hasAlignment ns1:trueNeutral .\n\nns1:LandwalkerShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:LanternArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:LanternGoat ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Larabay ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:LargeAcidQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeAetherElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeAirElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeColdIronElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeEarthElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeFireElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeGravityElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeIceElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeLightningElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeLightningQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeMagmaElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeMonstrousSeaWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeMudElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeNegativeEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeObsidianQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargePositiveEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargePsionicElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeStingray ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeWaterElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Larva ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LarvalChuul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LarvalSlimeCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:LarvalStarspawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lashunta ns1:hasAlignment ns1:neutralGood .\n\nns1:Laurapathis ns1:hasAlignment ns1:lawfulEvil .\n\nns1:LavaChild ns1:hasAlignment ns1:trueNeutral .\n\nns1:LavaDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:LavaWeird ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lawgiver ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:LeadCladWyvern ns1:hasAlignment ns1:trueNeutral .\n\nns1:LeadGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:LeadSkeleton ns1:hasAlignment ns1:trueNeutral .\n\nns1:LeafLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:LeafRay ns1:hasAlignment ns1:trueNeutral .\n\nns1:LeananSidheMR ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:LeechSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Leechroot ns1:hasAlignment ns1:neutralEvil .\n\nns1:LegendaryChimera ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LegionArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:Lejnth ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Lemkin ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Lemming ns1:hasAlignment ns1:trueNeutral .\n\nns1:Lemure ns1:hasAlignment ns1:lawfulEvil .\n\nns1:LengGhoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LengHound ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LengSpider ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Leonal ns1:hasAlignment ns1:neutralGood .\n\nns1:Leopard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Leprechaun ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:LesserBandersnatch ns1:hasAlignment ns1:trueNeutral .\n\nns1:LesserBoneneedle ns1:hasAlignment ns1:trueNeutral .\n\nns1:LesserCeustodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:LesserDeath ns1:hasAlignment ns1:neutralEvil .\n\nns1:LesserGelidBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:LesserGibberingOrb ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LesserHostDevilGaav ns1:hasAlignment ns1:lawfulEvil .\n\nns1:LesserJabberwock ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LesserNecrophidius ns1:hasAlignment ns1:trueNeutral .\n\nns1:LesserOozeDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LesserPubo ns1:hasAlignment ns1:trueNeutral .\n\nns1:LesserShadow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LesserShieldWarden ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Leucrotta ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Leukodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Leviathan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Lhaksharut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:LibitinariiKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:LibreumGolem ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:LichNewt ns1:hasAlignment ns1:trueNeutral .\n\nns1:LichPsychic ns1:hasAlignment ns1:lawfulEvil .\n\nns1:LichShade ns1:hasAlignment ns1:neutralEvil .\n\nns1:LichenLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:LifeleecherMortic ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lifesuit ns1:hasAlignment ns1:trueNeutral .\n\nns1:LightRidingHorse ns1:hasAlignment ns1:trueNeutral .\n\nns1:LightningCatChampion ns1:hasAlignment ns1:trueNeutral .\n\nns1:LightningCatCompanion ns1:hasAlignment ns1:trueNeutral .\n\nns1:LightningCatHero ns1:hasAlignment ns1:trueNeutral .\n\nns1:LightningMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:LightningTreantppCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:LightningWeird ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lilin ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Lilith ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Lilitu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LiminalSprite ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:LinnormCrag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lion ns1:hasAlignment ns1:trueNeutral .\n\nns1:LionAlebrije ns1:hasAlignment ns1:trueNeutral .\n\nns1:LionBeastofChaos ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Lionwere ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lipika ns1:hasAlignment ns1:trueNeutral .\n\nns1:Litanu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Livestone ns1:hasAlignment ns1:trueNeutral .\n\nns1:LivingArmor ns1:hasAlignment ns1:trueNeutral .\n\nns1:LivingDoldrums ns1:hasAlignment ns1:neutralEvil .\n\nns1:LivingLake ns1:hasAlignment ns1:trueNeutral .\n\nns1:LivingMirage ns1:hasAlignment ns1:trueNeutral .\n\nns1:LivingRune ns1:hasAlignment ns1:neutralEvil .\n\nns1:LivingTopiary ns1:hasAlignment ns1:trueNeutral .\n\nns1:LivingWall ns1:hasAlignment ns1:trueNeutral .\n\nns1:Lizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:LizardKing ns1:hasAlignment ns1:trueNeutral .\n\nns1:Lizardfolk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Llama ns1:hasAlignment ns1:trueNeutral .\n\nns1:Llorona ns1:hasAlignment ns1:neutralEvil .\n\nns1:Locathah ns1:hasAlignment ns1:trueNeutral .\n\nns1:LocustPlagueSwarmMR ns1:hasAlignment ns1:neutralEvil .\n\nns1:LocustSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:LordSunWarrior ns1:hasAlignment ns1:lawfulGood .\n\nns1:Lorelei ns1:hasAlignment ns1:neutralEvil .\n\nns1:LotusLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:LotusTree ns1:hasAlignment ns1:trueNeutral .\n\nns1:Lovelorn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lukwata ns1:hasAlignment ns1:trueNeutral .\n\nns1:Luma ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Lunarma ns1:hasAlignment ns1:trueNeutral .\n\nns1:LurkerAbove ns1:hasAlignment ns1:trueNeutral .\n\nns1:LurkerInTheCrypt ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LurkerinLight ns1:hasAlignment ns1:neutralEvil .\n\nns1:Lusca ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lustspawn ns1:hasAlignment ns1:neutralEvil .\n\nns1:Lynx ns1:hasAlignment ns1:trueNeutral .\n\nns1:Lythic ns1:hasAlignment ns1:trueNeutral .\n\nns1:MOUSELORDMOUSEFORM ns1:hasAlignment ns1:trueNeutral .\n\nns1:MachineSoldier ns1:hasAlignment ns1:trueNeutral .\n\nns1:MadnessSlug ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MadnessSlugAlternateForm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Maenad ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MaenadDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Maftet ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagebaneGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagicbaneBandersnatch ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagmaDragonGreatWyrm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonJuvenile ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonMatureAdult ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonOld ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonVeryOld ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonVeryYoung ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonWyrm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonWyrmling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonYoungAdult ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaElementalRamCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagmaMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagmaOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagmaRoc ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Magmin ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Magmoid ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagnesiumGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagnesiumSpirit ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Maharaja ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MaharishiManu ns1:hasAlignment ns1:lawfulGood .\n\nns1:MakaraVahana ns1:hasAlignment ns1:trueNeutral .\n\nns1:Malboro ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Malenti ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Mammon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Mammoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:MammothFlea ns1:hasAlignment ns1:trueNeutral .\n\nns1:ManEatingRam ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Manananggal ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mandragora ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MandragoraSwarm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mandrill ns1:hasAlignment ns1:trueNeutral .\n\nns1:ManimalTriceratops ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Manitou ns1:hasAlignment ns1:neutralGood .\n\nns1:MannequinRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mannstirge ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MantaRay ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mantari ns1:hasAlignment ns1:neutralEvil .\n\nns1:Mantidrake ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Manu ns1:hasAlignment ns1:lawfulGood .\n\nns1:MaphistalSecondofOrcus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mapinguari ns1:hasAlignment ns1:trueNeutral .\n\nns1:Marai ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Marathoner ns1:hasAlignment ns1:trueNeutral .\n\nns1:MarbleSentinel ns1:hasAlignment ns1:trueNeutral .\n\nns1:MarbleSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:Margay ns1:hasAlignment ns1:trueNeutral .\n\nns1:Margoyle ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MaridGenie ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Marilith ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MarineCrocodile ns1:hasAlignment ns1:trueNeutral .\n\nns1:MarrowstoneGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MarshGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MarshJelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:Marut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:MaskGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MaskedOkkator ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MasterAutomaton ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Mastodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:MatureAdultBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MatureAdultBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MatureAdultForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MatureAdultGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MatureAdultRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MatureAdultRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MatureAdultSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:MatureAdultSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:MatureAdultSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:MatureAdultWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MatureAdultclouddragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:MatureDarkYoung ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MatureSlimeCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:MatureadultUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Mawler ns1:hasAlignment ns1:neutralEvil .\n\nns1:MechanicalViper ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumAcidQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumAetherElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumAirElemental ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MediumAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumBarracuda ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumEarthElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumFireCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumFireElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumGravityElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumIceElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumLightningElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumLightningQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumMagmaElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumMonstrousSeaWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumMudElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumNegativeEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumObsidianQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumPositiveEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumPsionicElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:MediumSlimeMold ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumStingray ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumWaterElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mediumcoldironelemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Medusa ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MedusaAnimusShade ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MedusaHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:Meerkat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Megalania ns1:hasAlignment ns1:trueNeutral .\n\nns1:Megaloceros ns1:hasAlignment ns1:trueNeutral .\n\nns1:MegaponAnt ns1:hasAlignment ns1:trueNeutral .\n\nns1:Megaprimatus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Megaraptor ns1:hasAlignment ns1:trueNeutral .\n\nns1:Megatherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:Melacage ns1:hasAlignment ns1:neutralEvil .\n\nns1:Meladaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:MelancholicOozeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:MemitimPsychopomp ns1:hasAlignment ns1:trueNeutral .\n\nns1:MemoryChild ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mephistopheles ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Mercane ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:MercuryOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Merfolk ns1:hasAlignment ns1:trueNeutral .\n\nns1:MerfolkCavalier ns1:hasAlignment ns1:trueNeutral .\n\nns1:MerfolkCavalierAlurian ns1:hasAlignment ns1:trueNeutral .\n\nns1:MetalSlime ns1:hasAlignment ns1:trueNeutral .\n\nns1:MetallicGorgimera ns1:hasAlignment ns1:trueNeutral .\n\nns1:MetallicOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mezlan ns1:hasAlignment ns1:trueNeutral .\n\nns1:MiGo ns1:hasAlignment ns1:neutralEvil .\n\nns1:MidnightPeddler ns1:hasAlignment ns1:trueNeutral .\n\nns1:MightyCyclops ns1:hasAlignment ns1:neutralEvil .\n\nns1:Mihstu ns1:hasAlignment ns1:neutralEvil .\n\nns1:Mimi ns1:hasAlignment ns1:trueNeutral .\n\nns1:MimicOoze ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MindslaverMold ns1:hasAlignment ns1:neutralEvil .\n\nns1:MindstabFungus ns1:hasAlignment ns1:trueNeutral .\n\nns1:MinorReaper ns1:hasAlignment ns1:neutralEvil .\n\nns1:MinotaurElder ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MireBrute ns1:hasAlignment ns1:neutralEvil .\n\nns1:MireNettle ns1:hasAlignment ns1:trueNeutral .\n\nns1:MirrorSerpent ns1:hasAlignment ns1:trueNeutral .\n\nns1:MissingLynx ns1:hasAlignment ns1:trueNeutral .\n\nns1:MistDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:Mite ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MithralGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MixCouatl ns1:hasAlignment ns1:chaoticGood .\n\nns1:Mnemor ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Mngwa ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Moa ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mobat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mobogo ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mockingfey ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Mogaru ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Mohrg ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MokeleMbembe ns1:hasAlignment ns1:trueNeutral .\n\nns1:Moldwretch ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mole ns1:hasAlignment ns1:trueNeutral .\n\nns1:Moloch ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MomeRath ns1:hasAlignment ns1:trueNeutral .\n\nns1:Monaciello ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MonadicDeva ns1:hasAlignment ns1:neutralGood .\n\nns1:MongrelCaveGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mongrelman ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:MonitorLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Monkey ns1:hasAlignment ns1:trueNeutral .\n\nns1:MonkeyGoblin ns1:hasAlignment ns1:neutralEvil .\n\nns1:MonkeySwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:MonstrousCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:MonstrousJellyfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:MonstrousLobster ns1:hasAlignment ns1:trueNeutral .\n\nns1:Montaphant ns1:hasAlignment ns1:trueNeutral .\n\nns1:MoonBeast ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MoonDog ns1:hasAlignment ns1:neutralGood .\n\nns1:MoonGiant ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:MoonHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Moonbeast ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Moonflower ns1:hasAlignment ns1:trueNeutral .\n\nns1:Moonpriest ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Moose ns1:hasAlignment ns1:trueNeutral .\n\nns1:Morbai ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mordnaissant ns1:hasAlignment ns1:neutralEvil .\n\nns1:Morgodea ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Morlock ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MorlockSwarmerTroop ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Morrigna ns1:hasAlignment ns1:trueNeutral .\n\nns1:MortuaryCyclone ns1:hasAlignment ns1:trueNeutral .\n\nns1:MosaicTileGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MosquitoSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:MossMonster ns1:hasAlignment ns1:neutralEvil .\n\nns1:MossTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mosslord ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MotherofOblivion ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MothersMaw ns1:hasAlignment ns1:neutralEvil .\n\nns1:Mothman ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MountainAurochs ns1:hasAlignment ns1:trueNeutral .\n\nns1:MountainBlight ns1:hasAlignment ns1:neutralEvil .\n\nns1:MountainGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MountainLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:MovanicDeva ns1:hasAlignment ns1:neutralGood .\n\nns1:MuSpore ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Muckdweller ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mudbog ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mudlord ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mudman ns1:hasAlignment ns1:trueNeutral .\n\nns1:Muhuru ns1:hasAlignment ns1:trueNeutral .\n\nns1:Muldnal ns1:hasAlignment ns1:neutralGood .\n\nns1:MultiplyingTRexSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:MummifiedBaboon ns1:hasAlignment ns1:neutralEvil .\n\nns1:MummifiedCrocodile ns1:hasAlignment ns1:trueNeutral .\n\nns1:MummifiedElephant ns1:hasAlignment ns1:trueNeutral .\n\nns1:MummifiedGynosphinx ns1:hasAlignment ns1:neutralEvil .\n\nns1:MummifiedHippopotamus ns1:hasAlignment ns1:neutralEvil .\n\nns1:Mummy ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MummyLord ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MummyOfTheDeep ns1:hasAlignment ns1:neutralEvil .\n\nns1:Munavri ns1:hasAlignment ns1:chaoticGood .\n\nns1:Murajau ns1:hasAlignment ns1:neutralGood .\n\nns1:MurderBorn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MurderCrow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MurderofCrows ns1:hasAlignment ns1:trueNeutral .\n\nns1:Muse ns1:hasAlignment ns1:chaoticGood .\n\nns1:MushroomGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MustardJelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mutah ns1:hasAlignment ns1:trueNeutral .\n\nns1:MutantOrc ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MutantOtyughtentacledMutant ns1:hasAlignment ns1:trueNeutral .\n\nns1:MutatedTurtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:MuteHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mutilated ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Myceloid ns1:hasAlignment ns1:neutralEvil .\n\nns1:MyrmecoleonMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Myrmidon ns1:hasAlignment ns1:trueNeutral .\n\nns1:MythicNelbarzothMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MythicalLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:MythosGhast ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MythosGhoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MythosSatyr ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nabasu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:NabasuDemonling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:NabasuMature ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nachzehrer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nagaji ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Naiad ns1:hasAlignment ns1:neutralGood .\n\nns1:Najikai ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Nalfeshnee ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Narwhal ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nazalor ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:NecroPede ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Necrocraft ns1:hasAlignment ns1:neutralEvil .\n\nns1:NecromancerofLeng ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Necrophidius ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nekomata ns1:hasAlignment ns1:neutralEvil .\n\nns1:NemesisDevilAdvodaza ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Nemhain ns1:hasAlignment ns1:neutralEvil .\n\nns1:Neothelid ns1:hasAlignment ns1:chaoticEvil .\n\nns1:NeothelidOverlord ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Neozecktole ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nependis ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nephilim ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nereid ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:NerizoDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:NessianWarhoundCR ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Netherspark ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ngoga ns1:hasAlignment ns1:trueNeutral .\n\nns1:NightAdderInphidian ns1:hasAlignment ns1:neutralEvil .\n\nns1:NightHag ns1:hasAlignment ns1:neutralEvil .\n\nns1:NightWyvern ns1:hasAlignment ns1:trueNeutral .\n\nns1:NightbringerApe ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nightcaller ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nightcrawler ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nightgaunt ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Nightmare ns1:hasAlignment ns1:neutralEvil .\n\nns1:NightmareArtist ns1:hasAlignment ns1:neutralEvil .\n\nns1:NightmareEttercap ns1:hasAlignment ns1:neutralEvil .\n\nns1:NightmareMount ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nightskitter ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nightwalker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nightwave ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nightwing ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nikaramsa ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Nilith ns1:hasAlignment ns1:neutralEvil .\n\nns1:Niln ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ningen ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ningyo ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nirento ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nisid ns1:hasAlignment ns1:chaoticGood .\n\nns1:Nixie ns1:hasAlignment ns1:trueNeutral .\n\nns1:NobleDjinniVizier ns1:hasAlignment ns1:chaoticGood .\n\nns1:NobleEfreet ns1:hasAlignment ns1:lawfulEvil .\n\nns1:NobleSalamander ns1:hasAlignment ns1:chaoticEvil .\n\nns1:NobleTimeElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nochlean ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nocticula ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nogitsune ns1:hasAlignment ns1:neutralEvil .\n\nns1:NoqualGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Norn ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Nosferatu ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nosoi ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nothosaur ns1:hasAlignment ns1:trueNeutral .\n\nns1:Novenarut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Nuckalavee ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nuckelavee ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nucol ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nue ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nulmind ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nuno ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nupperibo ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Nycar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Nymph ns1:hasAlignment ns1:chaoticGood .\n\nns1:NymphWaterStrider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nyogoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:NysrockDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Oakman ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:OaurOoung ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Obcisidaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Oblivion ns1:hasAlignment ns1:neutralEvil .\n\nns1:ObsidianGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:ObsidianMinotaur ns1:hasAlignment ns1:trueNeutral .\n\nns1:OceanGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OceanLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:Oceanid ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:OchreEurypterid ns1:hasAlignment ns1:trueNeutral .\n\nns1:OchreJelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:OctopodMechanicDrone ns1:hasAlignment ns1:trueNeutral .\n\nns1:Octopus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ofalth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ogre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreBoss ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreBrute ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreDestroyer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreGlutton ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreHunter ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreKing ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreMage ns1:hasAlignment ns1:lawfulEvil .\n\nns1:OgreMancatcher ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgrePriest ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:OgreStalker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgrekinHalfOgre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ogren ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ogrillon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ohancanu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OilShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:OitosKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:OkkatorAssassin ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OldBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OldBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:OldGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:OldRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OldRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:OldSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:OldSilverDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:OldSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:OldSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:OldWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Olethrodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Olethros ns1:hasAlignment ns1:trueNeutral .\n\nns1:Oliphantpp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Olkhia ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ollph\u00e9ist ns1:hasAlignment ns1:trueNeutral .\n\nns1:Oma ns1:hasAlignment ns1:trueNeutral .\n\nns1:Omnipath ns1:hasAlignment ns1:lawfulEvil .\n\nns1:OmoxDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OnwuAzu ns1:hasAlignment ns1:trueNeutral .\n\nns1:OnyxDeer ns1:hasAlignment ns1:trueNeutral .\n\nns1:OnyxScourge ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Oolioddroo ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OozeGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:OozeMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:OozingOtyugh ns1:hasAlignment ns1:trueNeutral .\n\nns1:OphiduanAnguineumCaste ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OphiduanHominisCaste ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OphiduanSemiferumCaste ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OphiotaurusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Orangutan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Orca ns1:hasAlignment ns1:trueNeutral .\n\nns1:OrcishWarclops ns1:hasAlignment ns1:trueNeutral .\n\nns1:OrcusDemonPrinceoftheUndead ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Oread ns1:hasAlignment ns1:trueNeutral .\n\nns1:Orog ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Oronci ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Orsatka ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Orsheval ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Orzar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Oshageros ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Osteon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ostiarius ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ostovite ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ostrich ns1:hasAlignment ns1:trueNeutral .\n\nns1:Othaos ns1:hasAlignment ns1:trueNeutral .\n\nns1:Otyugh ns1:hasAlignment ns1:trueNeutral .\n\nns1:OtyughMeatPuppet ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ourdivar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Ouroboros ns1:hasAlignment ns1:trueNeutral .\n\nns1:OuterAbominationTheSecondStage ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OuterMutantPriest ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:OutlawTroop ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Ovinnik ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Owb ns1:hasAlignment ns1:neutralEvil .\n\nns1:Owl ns1:hasAlignment ns1:trueNeutral .\n\nns1:Owlbear ns1:hasAlignment ns1:trueNeutral .\n\nns1:OwlbearSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:Owlephant ns1:hasAlignment ns1:trueNeutral .\n\nns1:Owlwere ns1:hasAlignment ns1:chaoticEvil .\n\nns1:PISCODAEMON ns1:hasAlignment ns1:neutralEvil .\n\nns1:Pachycephalosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Paguroida ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:PaigoelDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Painajai ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Pairaka ns1:hasAlignment ns1:neutralEvil .\n\nns1:Pakalchi ns1:hasAlignment ns1:neutralEvil .\n\nns1:PaleStranger ns1:hasAlignment ns1:neutralEvil .\n\nns1:PaleoskeletonTriceratops ns1:hasAlignment ns1:trueNeutral .\n\nns1:PallidAngel ns1:hasAlignment ns1:neutralEvil .\n\nns1:Panda ns1:hasAlignment ns1:trueNeutral .\n\nns1:Panotti ns1:hasAlignment ns1:neutralGood .\n\nns1:Papinijuwari ns1:hasAlignment ns1:neutralEvil .\n\nns1:Papinu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Paracletus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Parasaurolophus ns1:hasAlignment ns1:trueNeutral .\n\nns1:ParasiteMystic ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Pard ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Parrot ns1:hasAlignment ns1:trueNeutral .\n\nns1:PashaNobleShaitan ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:PastYithian ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Pavbagha ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Pazuzu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:PazuzuDemonPrinceofAir ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Peafowl ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pech ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pegasus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pelagastr ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:PelagastrProtean ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:PelagosSeaSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Peluda ns1:hasAlignment ns1:neutralEvil .\n\nns1:Pendula ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Pengizu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Penguin ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pepfralcon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Peri ns1:hasAlignment ns1:neutralGood .\n\nns1:PersonificationOfFury ns1:hasAlignment ns1:trueNeutral .\n\nns1:Peryton ns1:hasAlignment ns1:chaoticEvil .\n\nns1:PestDrakeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pestie ns1:hasAlignment ns1:trueNeutral .\n\nns1:PestilenziDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:PetitionerHumanCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Petrifern ns1:hasAlignment ns1:trueNeutral .\n\nns1:PetrifiedMaiden ns1:hasAlignment ns1:neutralEvil .\n\nns1:Petrous ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Peuchen ns1:hasAlignment ns1:neutralEvil .\n\nns1:Phantasm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:PhantomFungus ns1:hasAlignment ns1:trueNeutral .\n\nns1:PhantomLancer ns1:hasAlignment ns1:neutralEvil .\n\nns1:PhantomStalker ns1:hasAlignment ns1:trueNeutral .\n\nns1:PharaonicGuardian ns1:hasAlignment ns1:lawfulEvil .\n\nns1:PhaseFlea ns1:hasAlignment ns1:trueNeutral .\n\nns1:PhaseSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Phasm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Phasma ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Phasmadaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:PhlegmaticOozeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Phlogiston ns1:hasAlignment ns1:trueNeutral .\n\nns1:Phoenix ns1:hasAlignment ns1:neutralGood .\n\nns1:Phooka ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Phoso ns1:hasAlignment ns1:trueNeutral .\n\nns1:PhrenicScourge ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Phycomid ns1:hasAlignment ns1:trueNeutral .\n\nns1:PickledPunk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Pipefox ns1:hasAlignment ns1:trueNeutral .\n\nns1:PiranhaMature ns1:hasAlignment ns1:trueNeutral .\n\nns1:PiranhaSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Piscodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:PitBoar ns1:hasAlignment ns1:trueNeutral .\n\nns1:PitFiend ns1:hasAlignment ns1:lawfulEvil .\n\nns1:PitHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Pixie ns1:hasAlignment ns1:neutralGood .\n\nns1:PixieCircle ns1:hasAlignment ns1:trueNeutral .\n\nns1:PlagueGiant ns1:hasAlignment ns1:neutralEvil .\n\nns1:PlagueLocustSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:PlagueZombie ns1:hasAlignment ns1:trueNeutral .\n\nns1:PlaguebearerOtyugh ns1:hasAlignment ns1:trueNeutral .\n\nns1:PlaguedHorse ns1:hasAlignment ns1:neutralEvil .\n\nns1:Planetar ns1:hasAlignment ns1:neutralGood .\n\nns1:Plankta ns1:hasAlignment ns1:neutralEvil .\n\nns1:PlantImbuedApe ns1:hasAlignment ns1:neutralGood .\n\nns1:Plantoid ns1:hasAlignment ns1:trueNeutral .\n\nns1:PlantoidServitor ns1:hasAlignment ns1:trueNeutral .\n\nns1:PlasmaOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Platypus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pleroma ns1:hasAlignment ns1:trueNeutral .\n\nns1:Plesiosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Plizeazoth ns1:hasAlignment ns1:neutralEvil .\n\nns1:PodCannon ns1:hasAlignment ns1:trueNeutral .\n\nns1:PoisonFrog ns1:hasAlignment ns1:trueNeutral .\n\nns1:PoisonGauntlet ns1:hasAlignment ns1:trueNeutral .\n\nns1:PoisonousFrog ns1:hasAlignment ns1:trueNeutral .\n\nns1:PoisonousFrogSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:PoisonousManticore ns1:hasAlignment ns1:lawfulEvil .\n\nns1:PolarBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:PolarKamadan ns1:hasAlignment ns1:neutralEvil .\n\nns1:PolarWhaler ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:PolarWhalerSimulacrum ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Polevik ns1:hasAlignment ns1:neutralEvil .\n\nns1:Polong ns1:hasAlignment ns1:neutralEvil .\n\nns1:Poltergeist ns1:hasAlignment ns1:lawfulEvil .\n\nns1:PondDrinker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pony ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pooka ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Popobala ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Popoto ns1:hasAlignment ns1:trueNeutral .\n\nns1:PoppyLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:Poracha ns1:hasAlignment ns1:trueNeutral .\n\nns1:Porcupine ns1:hasAlignment ns1:trueNeutral .\n\nns1:PortunusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Possessor ns1:hasAlignment ns1:lawfulEvil .\n\nns1:PranaGhost ns1:hasAlignment ns1:neutralGood .\n\nns1:PreceptorArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:PretenderDevilDissimulare ns1:hasAlignment ns1:lawfulEvil .\n\nns1:PrideLordAgathion ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:PrismDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ProcyalAgathion ns1:hasAlignment ns1:neutralGood .\n\nns1:Proscriber ns1:hasAlignment ns1:trueNeutral .\n\nns1:ProteanKeketar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ProteanNaunet ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ProteanVoidworm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Protector ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ProtoShoggoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Prydanu ns1:hasAlignment ns1:chaoticGood .\n\nns1:Pseudodragon ns1:hasAlignment ns1:neutralGood .\n\nns1:Pseudosphinx ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pseudowyvern ns1:hasAlignment ns1:trueNeutral .\n\nns1:PsionicAlMiraj ns1:hasAlignment ns1:trueNeutral .\n\nns1:Psiwyrm ns1:hasAlignment ns1:neutralEvil .\n\nns1:Psoglav ns1:hasAlignment ns1:chaoticEvil .\n\nns1:PsycheSerpent ns1:hasAlignment ns1:trueNeutral .\n\nns1:Psychemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Psychepore ns1:hasAlignment ns1:trueNeutral .\n\nns1:PsychicStalker ns1:hasAlignment ns1:neutralEvil .\n\nns1:PsychicWard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Psychlown ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Psychofant ns1:hasAlignment ns1:trueNeutral .\n\nns1:PsychoplasmicBehir ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ptarmigan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pteranodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pufferfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:Puffin ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pukwudgie ns1:hasAlignment ns1:neutralEvil .\n\nns1:PumpkinGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:PurpleWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Purrodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:PutridOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:PygmyGnoll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Pyrausta ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Pyrogeist ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Pyrolisk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Qallupilluk ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Qolok ns1:hasAlignment ns1:neutralEvil .\n\nns1:QuantiumGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Quantum ns1:hasAlignment ns1:trueNeutral .\n\nns1:Quasit ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Quatoid ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:QueenThermite ns1:hasAlignment ns1:trueNeutral .\n\nns1:Quelaunt ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Quetzalcoatlus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Quickling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Quickwood ns1:hasAlignment ns1:trueNeutral .\n\nns1:QuintessenceGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Quipper ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rabbit ns1:hasAlignment ns1:trueNeutral .\n\nns1:Raccoon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Racoon ns1:hasAlignment ns1:trueNeutral .\n\nns1:RadiantEssence ns1:hasAlignment ns1:neutralGood .\n\nns1:Raelis ns1:hasAlignment ns1:chaoticGood .\n\nns1:RageDemonAeshma ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RagebornGnoll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ragewight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Raggoth ns1:hasAlignment ns1:neutralEvil .\n\nns1:RagingRubble ns1:hasAlignment ns1:trueNeutral .\n\nns1:Raiju ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:RajputAmbari ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RakasaBatu ns1:hasAlignment ns1:trueNeutral .\n\nns1:RakklethornToad ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rakshasa ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Raktavarna ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ram ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ramidreju ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rast ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rat ns1:hasAlignment ns1:trueNeutral .\n\nns1:RatKing ns1:hasAlignment ns1:trueNeutral .\n\nns1:RatOgre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RatPlagueSwarmMR ns1:hasAlignment ns1:lawfulEvil .\n\nns1:RatSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ratfolk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ratling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RattlerInphidian ns1:hasAlignment ns1:neutralEvil .\n\nns1:RavagerSpawnCrawlerForm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Raven ns1:hasAlignment ns1:trueNeutral .\n\nns1:RavenSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:RavenousGnoll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RavenousTumbleweed ns1:hasAlignment ns1:trueNeutral .\n\nns1:RavenousUrchinSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:RavenousWendigo ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Rawbones ns1:hasAlignment ns1:neutralEvil .\n\nns1:Rawhead ns1:hasAlignment ns1:neutralEvil .\n\nns1:RazorAngler ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:RazorBoar ns1:hasAlignment ns1:trueNeutral .\n\nns1:RazorFern ns1:hasAlignment ns1:trueNeutral .\n\nns1:Razormouth ns1:hasAlignment ns1:trueNeutral .\n\nns1:RecycledGearsman ns1:hasAlignment ns1:trueNeutral .\n\nns1:RedJester ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:RedPanda ns1:hasAlignment ns1:trueNeutral .\n\nns1:RedReaver ns1:hasAlignment ns1:trueNeutral .\n\nns1:RedWraith ns1:hasAlignment ns1:neutralEvil .\n\nns1:RedWyrmRavener ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Redcap ns1:hasAlignment ns1:neutralEvil .\n\nns1:Redkind ns1:hasAlignment ns1:neutralEvil .\n\nns1:Reefclaw ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Reigon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Reindeer ns1:hasAlignment ns1:trueNeutral .\n\nns1:ReliquaryGuardian ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Remacera ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Renzer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RepairRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:Reptial ns1:hasAlignment ns1:neutralGood .\n\nns1:Reptoid ns1:hasAlignment ns1:lawfulEvil .\n\nns1:RequiemBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:RetchHound ns1:hasAlignment ns1:neutralEvil .\n\nns1:Retriever ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Rhamphorhynchus ns1:hasAlignment ns1:trueNeutral .\n\nns1:RhanTegoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Rhinoceros ns1:hasAlignment ns1:trueNeutral .\n\nns1:RhinocerosWoolly ns1:hasAlignment ns1:trueNeutral .\n\nns1:RhuChalik ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RidingDog ns1:hasAlignment ns1:trueNeutral .\n\nns1:RiftFlumph ns1:hasAlignment ns1:chaoticGood .\n\nns1:Riftcreeper ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RimefireEidolon ns1:hasAlignment ns1:chaoticGood .\n\nns1:Ringhorn ns1:hasAlignment ns1:trueNeutral .\n\nns1:Riotblood ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RipperDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RiptideHorror ns1:hasAlignment ns1:lawfulEvil .\n\nns1:RisenWitch ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RishiManu ns1:hasAlignment ns1:lawfulGood .\n\nns1:RiverDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:RiverElk ns1:hasAlignment ns1:trueNeutral .\n\nns1:RiverGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RiverTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RiverswellSpirit ns1:hasAlignment ns1:neutralEvil .\n\nns1:RobotGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Roc ns1:hasAlignment ns1:trueNeutral .\n\nns1:RockCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:RockReptile ns1:hasAlignment ns1:trueNeutral .\n\nns1:RockTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RockTuatara ns1:hasAlignment ns1:trueNeutral .\n\nns1:RoilingOil ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rokurokubi ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Rokyamut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Ronus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Roofgarden ns1:hasAlignment ns1:trueNeutral .\n\nns1:RopeDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:RopeGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Roper ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Rorkoun ns1:hasAlignment ns1:neutralEvil .\n\nns1:Roseling ns1:hasAlignment ns1:neutralGood .\n\nns1:RotGrubSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rougarou ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:RoyalTimeElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rufidier ns1:hasAlignment ns1:neutralEvil .\n\nns1:Rukh ns1:hasAlignment ns1:trueNeutral .\n\nns1:RuneGiant ns1:hasAlignment ns1:lawfulEvil .\n\nns1:RuneGuardian ns1:hasAlignment ns1:trueNeutral .\n\nns1:RunewarpedGoblin ns1:hasAlignment ns1:neutralEvil .\n\nns1:Rusalka ns1:hasAlignment ns1:neutralEvil .\n\nns1:RussetMold ns1:hasAlignment ns1:trueNeutral .\n\nns1:RustLord ns1:hasAlignment ns1:trueNeutral .\n\nns1:RustMiteSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:RustMonster ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ryven ns1:hasAlignment ns1:trueNeutral .\n\nns1:SANDGIANT ns1:hasAlignment ns1:neutralEvil .\n\nns1:SabbatPrancer ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Sabosan ns1:hasAlignment ns1:neutralEvil .\n\nns1:Sacristan ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Sagari ns1:hasAlignment ns1:neutralEvil .\n\nns1:Saguaroi ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sahuagin ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Salamander ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SaltDrake ns1:hasAlignment ns1:trueNeutral .\n\nns1:SaltMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:SaltWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:SaltwaterCrocodile ns1:hasAlignment ns1:trueNeutral .\n\nns1:SaltwaterMerrow ns1:hasAlignment ns1:neutralEvil .\n\nns1:Samsaran ns1:hasAlignment ns1:trueNeutral .\n\nns1:SandGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:SandHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SandKraken ns1:hasAlignment ns1:trueNeutral .\n\nns1:SandScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:SandStalker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sandling ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sandman ns1:hasAlignment ns1:neutralEvil .\n\nns1:Sangoi ns1:hasAlignment ns1:neutralEvil .\n\nns1:Sangudaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:SanguineOozeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:SapphireJellyfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:SapphireOoze ns1:hasAlignment ns1:chaoticGood .\n\nns1:Sarcovalt ns1:hasAlignment ns1:neutralEvil .\n\nns1:Sard ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SargassumFiend ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sasquatch ns1:hasAlignment ns1:trueNeutral .\n\nns1:Satyr ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SaumenKar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Saurian ns1:hasAlignment ns1:trueNeutral .\n\nns1:SavageGreenHorde ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SawdustSlough ns1:hasAlignment ns1:trueNeutral .\n\nns1:SawlegLocust ns1:hasAlignment ns1:trueNeutral .\n\nns1:Saxra ns1:hasAlignment ns1:neutralEvil .\n\nns1:Sayona ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ScaldingMinotaur ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ScarabBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScarabSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Scarecrow ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScarletSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScarletSpiderSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScarletWalker ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ScavengerWormCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sceaduinar ns1:hasAlignment ns1:neutralEvil .\n\nns1:Sceazir ns1:hasAlignment ns1:neutralEvil .\n\nns1:Schir ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Scitalis ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScorpionDemonGharros ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ScorpionSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Scorpionfolk ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ScragAquaticTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Scraghound ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScrapyardRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScreamingDevilkin ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ScreamingGiantBeheadedCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:ScreamingMedusaHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:ScreamingSeveredHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:ScreamingSeveredSkull ns1:hasAlignment ns1:neutralEvil .\n\nns1:ScreamingSkull ns1:hasAlignment ns1:trueNeutral .\n\nns1:Scylla ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ScytheHorn ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScytheTree ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SeaCat ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:SeaGiant ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SeaHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SeaLinnorm ns1:hasAlignment ns1:neutralEvil .\n\nns1:SeaLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaScourge ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaSerpent ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaSphereBlubble ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaSpider ns1:hasAlignment ns1:neutralEvil .\n\nns1:Seal ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaweedLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaweedSiren ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SecurityMannequin ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Seilenos ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Selkie ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SentientWaxGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:SentinelHut ns1:hasAlignment ns1:trueNeutral .\n\nns1:SepiaSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sepid ns1:hasAlignment ns1:neutralEvil .\n\nns1:Seps ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sepsidaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Seraptis ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SerpentAlchemist ns1:hasAlignment ns1:neutralEvil .\n\nns1:SerpentDemonMallor ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Serpentfolk ns1:hasAlignment ns1:neutralEvil .\n\nns1:SerpentfolkReclaimer ns1:hasAlignment ns1:neutralEvil .\n\nns1:Serpopard ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ServitoroftheOuterGods ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Seugathi ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SeugathiSavant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SewerBlight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SewerOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:SewerTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Sha ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Shabti ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ShachathDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Shadow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShadowAngel ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ShadowAnimalLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShadowCollector ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ShadowDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShadowDrake ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShadowFern ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShadowGiant ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ShadowHunter ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShadowHunterHatchling ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShadowMastiff ns1:hasAlignment ns1:neutralEvil .\n\nns1:ShadowRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShadowRatSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:ShadowRoper ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShadowWolf ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Shae ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShaggyDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShahzadaNobleMarid ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Shalkeshka ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShamblingMound ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shampe ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Shantak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShardSlag ns1:hasAlignment ns1:trueNeutral .\n\nns1:SharkEatingCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:SharpshooterAutomaton ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Shasalqu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shedu ns1:hasAlignment ns1:lawfulGood .\n\nns1:Sheep ns1:hasAlignment ns1:trueNeutral .\n\nns1:SheetFungus ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShemhazianDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShenMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shenzuzhou ns1:hasAlignment ns1:neutralEvil .\n\nns1:Shikigami ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShimmerwingDragonfly ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shinigami ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ShiningSentinel ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShipSentinel ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShipbreakerSeaSerpent ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ShipinaBottle ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShipwreckerCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shira ns1:hasAlignment ns1:neutralEvil .\n\nns1:Shobhad ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShockerLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shoggoth ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Shoggti ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShokiPsychopomp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shotalashu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shredskin ns1:hasAlignment ns1:neutralEvil .\n\nns1:Shrieker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shriezyx ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShrineBlessedBurningSkeletons ns1:hasAlignment ns1:neutralEvil .\n\nns1:Shrroth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Shulsaga ns1:hasAlignment ns1:trueNeutral .\n\nns1:Siabrae ns1:hasAlignment ns1:neutralEvil .\n\nns1:SiegeOwlbear ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sigbin ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Silid ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Silvanshee ns1:hasAlignment ns1:neutralGood .\n\nns1:SilverBells ns1:hasAlignment ns1:trueNeutral .\n\nns1:SilverDragonGreatWyrm ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonJuvenile ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonMatureAdult ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonVeryOld ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonVeryYoung ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonWyrm ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonWyrmling ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonYoungAdult ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverbloodWerewolfHumanForm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Simurgh ns1:hasAlignment ns1:neutralGood .\n\nns1:SinSeeker ns1:hasAlignment ns1:trueNeutral .\n\nns1:SinbornDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SingingShrieker ns1:hasAlignment ns1:trueNeutral .\n\nns1:SinspawnEnvy ns1:hasAlignment ns1:neutralEvil .\n\nns1:SinspawnGluttony ns1:hasAlignment ns1:neutralEvil .\n\nns1:SinspawnGreedspawn ns1:hasAlignment ns1:neutralEvil .\n\nns1:SinspawnPride ns1:hasAlignment ns1:neutralEvil .\n\nns1:SinspawnSloth ns1:hasAlignment ns1:neutralEvil .\n\nns1:SinspawnWrath ns1:hasAlignment ns1:neutralEvil .\n\nns1:SireDevilPatraavex ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Siren ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SirensBedAnemone ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sirrush ns1:hasAlignment ns1:neutralGood .\n\nns1:Sishkanset ns1:hasAlignment ns1:neutralEvil .\n\nns1:Siyokoy ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkateSpiderSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Skaveling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SkeletalArcher ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkeletalChampion ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkeletalChampionArcherCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkeletalMage ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkeletalMount ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkeletonHostCorpse ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkeletonReindeer ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkildpadderGiantTortoiseBullette ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkinStealer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SkinStitcher ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Skincrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkincrawlerDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Skinstitch ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkirmishersTroop ns1:hasAlignment ns1:chaoticGood .\n\nns1:SkitterRat ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Skitterdark ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Skittergoat ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkrikNettle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Skrimsl ns1:hasAlignment ns1:trueNeutral .\n\nns1:Skua ns1:hasAlignment ns1:trueNeutral .\n\nns1:Skulk ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SkullRipper ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SkullSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkullSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:Skullcruncher ns1:hasAlignment ns1:neutralEvil .\n\nns1:Skulleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkumUlatKini ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Skunk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Skvader ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkyDreamer ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlaadLordOfEntropy ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SlaadLordOfTheInsane ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SlagGiant ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:SlagWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Slaughterford ns1:hasAlignment ns1:neutralEvil .\n\nns1:SleepingWillow ns1:hasAlignment ns1:neutralEvil .\n\nns1:SleeykOwlbear ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sleipnir ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlicerBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlimeDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SlimeInfectedBasilisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlimeMold ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlimyDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SlimyHagfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:Slinker ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SlitheringPit ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlitheringTracker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Slorath ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Sloth ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlothSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlothViper ns1:hasAlignment ns1:trueNeutral .\n\nns1:Slugspawn ns1:hasAlignment ns1:trueNeutral .\n\nns1:Slurk ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallAcidQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallAetherElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallAirElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallBarracuda ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallColdironelemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallEarthElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallFireCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallFireElemental ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SmallGravityElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallIceElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallLightningElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallLightningQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallMagmaElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallMonstrousSeaWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallMudElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallNegativeenergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallObsidianQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallPositiveEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallPsionicElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallStingray ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallUnfetteredEidolon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SmallWaterElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmilodonSaberToothedCat ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmokeDragonDracoFumoSuffaco ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmokeGiant ns1:hasAlignment ns1:neutralEvil .\n\nns1:SmokeMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmokeSentinel ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Smokeshade ns1:hasAlignment ns1:neutralEvil .\n\nns1:SnailFlail ns1:hasAlignment ns1:trueNeutral .\n\nns1:SnakeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Snallygaster ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SnapdragonLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:SnapjawHomunculus ns1:hasAlignment ns1:neutralEvil .\n\nns1:SnappingTurtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Snark ns1:hasAlignment ns1:trueNeutral .\n\nns1:SnowGiant ns1:hasAlignment ns1:neutralEvil .\n\nns1:SnowLeopard ns1:hasAlignment ns1:trueNeutral .\n\nns1:SnowRoc ns1:hasAlignment ns1:trueNeutral .\n\nns1:Snowcloak ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Snowking ns1:hasAlignment ns1:neutralEvil .\n\nns1:SoddenDraugerTroop ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SoddenDraugrTroop ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Solar ns1:hasAlignment ns1:neutralGood .\n\nns1:SolarPitriAgnishvattaMR ns1:hasAlignment ns1:lawfulGood .\n\nns1:SoldierThermite ns1:hasAlignment ns1:trueNeutral .\n\nns1:Somalcygot ns1:hasAlignment ns1:neutralEvil .\n\nns1:Somlum ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SonechardGeneralofOrcus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SonicKratah ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Soucouyant ns1:hasAlignment ns1:neutralEvil .\n\nns1:SoulEater ns1:hasAlignment ns1:neutralEvil .\n\nns1:SoulNibbler ns1:hasAlignment ns1:trueNeutral .\n\nns1:SoulReaper ns1:hasAlignment ns1:neutralEvil .\n\nns1:SoulboundAnnihilatorRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:SoulboundDoll ns1:hasAlignment ns1:trueNeutral .\n\nns1:SoulboundMannequin ns1:hasAlignment ns1:trueNeutral .\n\nns1:SoulboundShell ns1:hasAlignment ns1:trueNeutral .\n\nns1:SoullessDestroyer ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Soulsliver ns1:hasAlignment ns1:neutralEvil .\n\nns1:Spartolos ns1:hasAlignment ns1:neutralEvil .\n\nns1:SpawningCanker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SpawnofYogSothoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SpearUrchin ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpectralRockTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Spectre ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SpellgorgedZombie ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpellscarredFext ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SphinxColossusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpiderCollective ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpiderEater ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpiderSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpikestoneGuardian ns1:hasAlignment ns1:trueNeutral .\n\nns1:Spindler ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SpineDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Spinosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpinyEurypterid ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpinyStarfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpireDrake ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SpiritOni ns1:hasAlignment ns1:neutralEvil .\n\nns1:SpiritofAbandon ns1:hasAlignment ns1:neutralGood .\n\nns1:SpiteSpitter ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SpittingCobra ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpittingEurypterid ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpittingSeaSerpent ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SplinterDrake ns1:hasAlignment ns1:trueNeutral .\n\nns1:SporeRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Spriggan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SpringHeeledJack ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Sprite ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SpyglassArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:SquamousDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Squealer ns1:hasAlignment ns1:trueNeutral .\n\nns1:Squid ns1:hasAlignment ns1:trueNeutral .\n\nns1:SquidGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:Squirrel ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stag ns1:hasAlignment ns1:trueNeutral .\n\nns1:StagArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:StalkBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:StalkerAutomaton ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:StandardShieldWarden ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:StarDrake ns1:hasAlignment ns1:trueNeutral .\n\nns1:StarMonarch ns1:hasAlignment ns1:chaoticGood .\n\nns1:StarSpawnofCthulhu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:StarVampire ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Starspawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SteamBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:SteamMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:SteamPoweredClockworkDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stegaloviper ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stegocentipede ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stegosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:StenchKow ns1:hasAlignment ns1:trueNeutral .\n\nns1:StewardOfTheSkein ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sthenno ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Stingray ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stirge ns1:hasAlignment ns1:trueNeutral .\n\nns1:StirgeDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:StirgeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneColossusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneGuardianGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneMaiden ns1:hasAlignment ns1:trueNeutral .\n\nns1:StonePudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneRoper ns1:hasAlignment ns1:chaoticEvil .\n\nns1:StoneSalveshapedFiendishEnhancedBlackPudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneTreant ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneTroglodyte ns1:hasAlignment ns1:chaoticEvil .\n\nns1:StormGiant ns1:hasAlignment ns1:chaoticGood .\n\nns1:StormGiantZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:StormHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Stormghost ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Stormwarden ns1:hasAlignment ns1:neutralEvil .\n\nns1:StrangleWeed ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stranglereed ns1:hasAlignment ns1:trueNeutral .\n\nns1:StringyDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Strix ns1:hasAlignment ns1:trueNeutral .\n\nns1:StrokeLad ns1:hasAlignment ns1:neutralEvil .\n\nns1:StumbleFish ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stunjelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:StygianLeviathan ns1:hasAlignment ns1:neutralEvil .\n\nns1:StygianTurtleShark ns1:hasAlignment ns1:neutralEvil .\n\nns1:Stygira ns1:hasAlignment ns1:lawfulEvil .\n\nns1:StymphalianBird ns1:hasAlignment ns1:trueNeutral .\n\nns1:StymphalidesSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stymphalidies ns1:hasAlignment ns1:trueNeutral .\n\nns1:Styracosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Su ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Succubus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Sudoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Suffragan ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SuijinKami ns1:hasAlignment ns1:trueNeutral .\n\nns1:Suli ns1:hasAlignment ns1:trueNeutral .\n\nns1:SummonedAurochs ns1:hasAlignment ns1:trueNeutral .\n\nns1:SummonedGorilla ns1:hasAlignment ns1:trueNeutral .\n\nns1:SummonedWolf ns1:hasAlignment ns1:trueNeutral .\n\nns1:SumpSteward ns1:hasAlignment ns1:trueNeutral .\n\nns1:SunGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SunflowerLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sunlord ns1:hasAlignment ns1:neutralGood .\n\nns1:Suspiridaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:SutureVine ns1:hasAlignment ns1:trueNeutral .\n\nns1:Suzalisk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Svartalfar ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Svirfneblin ns1:hasAlignment ns1:trueNeutral .\n\nns1:SvirfneblinRidingSlug ns1:hasAlignment ns1:neutralGood .\n\nns1:Swaithe ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SwampBarracuda ns1:hasAlignment ns1:trueNeutral .\n\nns1:SwampBlight ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SwampMummy ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SwampTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SwanMaiden ns1:hasAlignment ns1:chaoticGood .\n\nns1:SwarmDemonDaraka ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SwitchbackJackal ns1:hasAlignment ns1:trueNeutral .\n\nns1:Swordfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sylph ns1:hasAlignment ns1:trueNeutral .\n\nns1:Synesis ns1:hasAlignment ns1:trueNeutral .\n\nns1:Synevite ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Syricta ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Syrinx ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Szaboan ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Szuriel ns1:hasAlignment ns1:neutralEvil .\n\nns1:TShann ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tabaxi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Tadhemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Taer ns1:hasAlignment ns1:trueNeutral .\n\nns1:TaigaGiant ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TaigaLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TailessCragLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TallowGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tangtal ns1:hasAlignment ns1:neutralEvil .\n\nns1:Taniniver ns1:hasAlignment ns1:neutralEvil .\n\nns1:Taniwha ns1:hasAlignment ns1:chaoticGood .\n\nns1:Tanuki ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TarJelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:TarantulaTree ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Targotha ns1:hasAlignment ns1:trueNeutral .\n\nns1:TarnLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TarrasqueB ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TarryDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TarryDemodandCR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tarsier ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tataka ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Tatzlwyrm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tauhoti ns1:hasAlignment ns1:trueNeutral .\n\nns1:TaviMongooseFolk ns1:hasAlignment ns1:trueNeutral .\n\nns1:TawilAtumr ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TaxidermicGrizzlyBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tazelwurm ns1:hasAlignment ns1:trueNeutral .\n\nns1:TchoTcho ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tearjerker ns1:hasAlignment ns1:trueNeutral .\n\nns1:TearofBurningFlame ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Telgrodradt ns1:hasAlignment ns1:neutralEvil .\n\nns1:Temerdaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:TempestBehemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:TemporalCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tendriculos ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tendrul ns1:hasAlignment ns1:trueNeutral .\n\nns1:TenebrousBlight ns1:hasAlignment ns1:trueNeutral .\n\nns1:TenebrousPurpleWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:TenebrousWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tengu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tenome ns1:hasAlignment ns1:neutralEvil .\n\nns1:TentacledHorror ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tentamort ns1:hasAlignment ns1:trueNeutral .\n\nns1:TermagantKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:TermiteSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:TerracottaArcher ns1:hasAlignment ns1:trueNeutral .\n\nns1:TerracottaHorseman ns1:hasAlignment ns1:trueNeutral .\n\nns1:TerracottaSoldier ns1:hasAlignment ns1:trueNeutral .\n\nns1:Terraformer ns1:hasAlignment ns1:trueNeutral .\n\nns1:TerrorBird ns1:hasAlignment ns1:trueNeutral .\n\nns1:TerrorWolf ns1:hasAlignment ns1:neutralEvil .\n\nns1:Terrorized ns1:hasAlignment ns1:neutralEvil .\n\nns1:TestudoTroops ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Tether ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Tetrolimulus ns1:hasAlignment ns1:neutralEvil .\n\nns1:ThalassicBehemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thanadaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:ThanatosFey ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ThanatoticTitan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Thancrus ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Thawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheBlackRider ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:TheDesire ns1:hasAlignment ns1:neutralEvil .\n\nns1:TheEndSinger ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheFatherofAllLinnorms ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheFirebleeder ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheFirstBlade ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TheFuriesErinyes ns1:hasAlignment ns1:lawfulEvil .\n\nns1:TheGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:TheGrandDefender ns1:hasAlignment ns1:lawfulGood .\n\nns1:TheGrimWhiteStag ns1:hasAlignment ns1:lawfulGood .\n\nns1:TheHeraldofPassion ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TheHobblingHookClawedApparatus ns1:hasAlignment ns1:trueNeutral .\n\nns1:TheHornedLord ns1:hasAlignment ns1:chaoticGood .\n\nns1:TheInfernalDuke ns1:hasAlignment ns1:lawfulEvil .\n\nns1:TheMantisGod ns1:hasAlignment ns1:lawfulEvil .\n\nns1:TheOinodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:TheOldMan ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ThePrinceinChains ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ThePrinceofHell ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheRavagerCrawlerForm ns1:hasAlignment ns1:trueNeutral .\n\nns1:TheRedRider ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:TheScarecrow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheSpiritOfAdoration ns1:hasAlignment ns1:neutralGood .\n\nns1:TheStabbingBeast ns1:hasAlignment ns1:neutralEvil .\n\nns1:TheSunlord ns1:hasAlignment ns1:neutralGood .\n\nns1:TheThirdStageOuterSpawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheWaterLizard ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TheWhiteRider ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Theletos ns1:hasAlignment ns1:trueNeutral .\n\nns1:Therizinosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thessalgorgon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thessalhydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thessalisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThinMan ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Thognorok ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Thoqqua ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThornDog ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thorny ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThornyAdvancedTyrannosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThoughtEater ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThrallofYogSothoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Thrasfyr ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ThriaeConstructor ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThriaeDancer ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ThriaeQueen ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ThriaeSeer ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ThriaeSoldier ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Thrush ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thulgant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ThunderBeast ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThunderBehemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thunderbird ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thundershrike ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thuskchoon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Thylacine ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thyrlien ns1:hasAlignment ns1:chaoticGood .\n\nns1:Tiberolith ns1:hasAlignment ns1:trueNeutral .\n\nns1:TickSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:TidepoolDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Tidewretch ns1:hasAlignment ns1:neutralEvil .\n\nns1:Tiger ns1:hasAlignment ns1:trueNeutral .\n\nns1:TigerFish ns1:hasAlignment ns1:trueNeutral .\n\nns1:TigerShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tigrilla ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tikbalang ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tilket ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TimberWight ns1:hasAlignment ns1:lawfulEvil .\n\nns1:TimeFlayer ns1:hasAlignment ns1:neutralEvil .\n\nns1:Tintargurill ns1:hasAlignment ns1:trueNeutral .\n\nns1:TinyAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:TinyMonstrousSeaWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:TitanCentipedeExoskeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:Titanboar ns1:hasAlignment ns1:trueNeutral .\n\nns1:TitanicAdultBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TitanicWhipSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Titanoboa ns1:hasAlignment ns1:trueNeutral .\n\nns1:Titivilus ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Tixitog ns1:hasAlignment ns1:neutralEvil .\n\nns1:Tiyanak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tizheruk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tlalusk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Toad ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tobongo ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tojanida ns1:hasAlignment ns1:trueNeutral .\n\nns1:TombGiant ns1:hasAlignment ns1:neutralEvil .\n\nns1:TombstoneFairy ns1:hasAlignment ns1:neutralEvil .\n\nns1:TomeofHorrors ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tonberry ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ToothFairy ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ToothFairyMonarch ns1:hasAlignment ns1:neutralEvil .\n\nns1:Tophet ns1:hasAlignment ns1:trueNeutral .\n\nns1:TorLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TormentorofSoulsTormentorDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:TorturerRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:Toshigami ns1:hasAlignment ns1:neutralGood .\n\nns1:TotemGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Totenmaske ns1:hasAlignment ns1:neutralEvil .\n\nns1:Trailgaunt ns1:hasAlignment ns1:neutralEvil .\n\nns1:Transposer ns1:hasAlignment ns1:trueNeutral .\n\nns1:Trapper ns1:hasAlignment ns1:trueNeutral .\n\nns1:Treant ns1:hasAlignment ns1:neutralGood .\n\nns1:Trelmarixian ns1:hasAlignment ns1:neutralEvil .\n\nns1:TrenchMist ns1:hasAlignment ns1:neutralEvil .\n\nns1:TriFlowerFrond ns1:hasAlignment ns1:trueNeutral .\n\nns1:TriTongueHorror ns1:hasAlignment ns1:trueNeutral .\n\nns1:Triaxian ns1:hasAlignment ns1:trueNeutral .\n\nns1:TribalProtector ns1:hasAlignment ns1:neutralGood .\n\nns1:Triceratops ns1:hasAlignment ns1:trueNeutral .\n\nns1:Trilobite ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tripurasura ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Triton ns1:hasAlignment ns1:neutralGood .\n\nns1:Troblin ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Troggle ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TroggleRaider ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Troglodyte ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Troll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollAcolyte ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollBerserker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollBrute ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollElderMatron ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollFury ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollMonarch ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollMountain ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TrollRender ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollRipper ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:TrollWarden ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Trollhound ns1:hasAlignment ns1:trueNeutral .\n\nns1:Trollkin ns1:hasAlignment ns1:trueNeutral .\n\nns1:Troodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Trox ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TrumpetArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:TrumpeterSwan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tsaalgrend ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tsathar ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TsatharScourge ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TsathoggaTheFrogGod ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tuatara ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tullimonstrum ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tumblespark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tunche ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TunnelBrute ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TunnelWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tupilaq ns1:hasAlignment ns1:trueNeutral .\n\nns1:Turtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Turul ns1:hasAlignment ns1:trueNeutral .\n\nns1:Twigjack ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TwilightPitriBarhisad ns1:hasAlignment ns1:lawfulGood .\n\nns1:TwoHeadedTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TwoheadedWinterWorg ns1:hasAlignment ns1:neutralEvil .\n\nns1:Tychilarius ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tylosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tyngderkraften ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Tyrannosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:TyrantJellyMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tzitzimitl ns1:hasAlignment ns1:neutralEvil .\n\nns1:UbashkiSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ubue ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:UdaeusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:UgashIram ns1:hasAlignment ns1:neutralEvil .\n\nns1:Uintatherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:Uinuja ns1:hasAlignment ns1:chaoticGood .\n\nns1:Ujaheim ns1:hasAlignment ns1:trueNeutral .\n\nns1:Uldraaghu ns1:hasAlignment ns1:lawfulEvil .\n\nns1:UltharChampion ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:UltimaWeapon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:UmbralDragonGreatWyrm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonJuvenile ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonMatureAdult ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonOld ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonVeryOld ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonVeryYoung ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonWyrm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonWyrmling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonYoungAdult ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralEyeKiller ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralShepherd ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Umbralobe ns1:hasAlignment ns1:neutralEvil .\n\nns1:UnchosenGnoll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UndeadEmu ns1:hasAlignment ns1:neutralEvil .\n\nns1:UndeadNingyo ns1:hasAlignment ns1:neutralEvil .\n\nns1:UndeadOoze ns1:hasAlignment ns1:neutralEvil .\n\nns1:UndeadWarlord ns1:hasAlignment ns1:trueNeutral .\n\nns1:UnderworldBatSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Undigested ns1:hasAlignment ns1:neutralEvil .\n\nns1:UndigestedSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:Undine ns1:hasAlignment ns1:trueNeutral .\n\nns1:UnfetteredEidolon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:UnfetteredPhantom ns1:hasAlignment ns1:trueNeutral .\n\nns1:UnhallowedGreaterShadow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UnhallowedMohrg ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UnhallowedMummy ns1:hasAlignment ns1:lawfulEvil .\n\nns1:UnhallowedZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Unicorn ns1:hasAlignment ns1:chaoticGood .\n\nns1:Uniila ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Unrisen ns1:hasAlignment ns1:neutralEvil .\n\nns1:UnseelieShadowMastiff ns1:hasAlignment ns1:neutralEvil .\n\nns1:Upasunda ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Uraeus ns1:hasAlignment ns1:lawfulGood .\n\nns1:Urannag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Urdefhan ns1:hasAlignment ns1:neutralEvil .\n\nns1:Urhag ns1:hasAlignment ns1:neutralEvil .\n\nns1:Urrk ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ursikka ns1:hasAlignment ns1:trueNeutral .\n\nns1:Urskan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ushabti ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Utukku ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Valharut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Valkyrie ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Vamore ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Vampire ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VampireRose ns1:hasAlignment ns1:trueNeutral .\n\nns1:VampireSpawn ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VampireSquid ns1:hasAlignment ns1:trueNeutral .\n\nns1:VampiricMist ns1:hasAlignment ns1:neutralEvil .\n\nns1:VampiricOoze ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vanara ns1:hasAlignment ns1:lawfulGood .\n\nns1:Vanth ns1:hasAlignment ns1:trueNeutral .\n\nns1:VaporDireRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:VaporWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vargouille ns1:hasAlignment ns1:neutralEvil .\n\nns1:VariantAllip ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VariantAtticWhisperer ns1:hasAlignment ns1:trueNeutral .\n\nns1:Varklops ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VaultBuilderMR ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:VaultGiant ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VaultKeeper ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Vavakia ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vayuphak ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ved ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vegepygmy ns1:hasAlignment ns1:trueNeutral .\n\nns1:VegepygmyBodyguard ns1:hasAlignment ns1:trueNeutral .\n\nns1:VegepygmyChief ns1:hasAlignment ns1:trueNeutral .\n\nns1:VegepygmyCommoner ns1:hasAlignment ns1:trueNeutral .\n\nns1:VegepygmyGuard ns1:hasAlignment ns1:trueNeutral .\n\nns1:VegepygmySubchief ns1:hasAlignment ns1:trueNeutral .\n\nns1:VegepygmyWorker ns1:hasAlignment ns1:trueNeutral .\n\nns1:VeiledMaster ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Veinar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Veldenar ns1:hasAlignment ns1:trueNeutral .\n\nns1:Velociraptor ns1:hasAlignment ns1:trueNeutral .\n\nns1:VelvetAntSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vemerak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vendenopterix ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Venedaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:VenomDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VenomousSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:VenomousSnakeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Venomroach ns1:hasAlignment ns1:trueNeutral .\n\nns1:VeparDukeofDagon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Veranallia ns1:hasAlignment ns1:chaoticGood .\n\nns1:VeranalliaAzata ns1:hasAlignment ns1:chaoticGood .\n\nns1:VerdurousOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:VerminLord ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vermlek ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryOldBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryOldBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VeryOldCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:VeryOldGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VeryOldRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryOldRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:VeryOldSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:VeryOldSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:VeryOldWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryYoungBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryYoungBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VeryYoungForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryYoungGoldDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:VeryYoungGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VeryYoungRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryYoungRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:VeryYoungSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:VeryYoungSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:VeryYoungSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:VeryYoungUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VeryYoungWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryoldForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryoldSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:VescavorQueen ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vespergaunt ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vestraadi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Vidre ns1:hasAlignment ns1:trueNeutral .\n\nns1:ViduusPsychopomp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vilderavn ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vilkacis ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vilsteth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vilstrak ns1:hasAlignment ns1:neutralEvil .\n\nns1:VioletFungus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Viper ns1:hasAlignment ns1:trueNeutral .\n\nns1:ViperVine ns1:hasAlignment ns1:trueNeutral .\n\nns1:ViridiumGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vishap ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vishkanya ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vodyanoi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:VoidYai ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VoidZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:VoidstickZombie ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VolcanoGiant ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Volt ns1:hasAlignment ns1:trueNeutral .\n\nns1:VoltGhost ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Voltleech ns1:hasAlignment ns1:neutralEvil .\n\nns1:Voonith ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Vorgozen ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Vorin ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vorvorak ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vouivre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vrock ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vrolikai ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vrykolakas ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vukodlak ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vulchling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vulnudaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vulpinal ns1:hasAlignment ns1:neutralGood .\n\nns1:Vulture ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vvor ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vydrarch ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Wakandagi ns1:hasAlignment ns1:neutralGood .\n\nns1:Wallaby ns1:hasAlignment ns1:trueNeutral .\n\nns1:Walrus ns1:hasAlignment ns1:trueNeutral .\n\nns1:WandWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:WangLiang ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WarBringerGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WarBull ns1:hasAlignment ns1:trueNeutral .\n\nns1:WarPony ns1:hasAlignment ns1:trueNeutral .\n\nns1:Warcat ns1:hasAlignment ns1:trueNeutral .\n\nns1:WardenJackSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:WarmazeDisciplesTroop ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Warmonger ns1:hasAlignment ns1:trueNeutral .\n\nns1:WarmongerDevilLevaloch ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WarmongerWasp ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WarpedOne ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WarpglassOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Warsworn ns1:hasAlignment ns1:neutralEvil .\n\nns1:WaspDemonMezzalorn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WaspSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Waspite ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Watcher ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:WaterElementalConstruct ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaterLeaper ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WaterMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaterOrm ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaterStriderSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaterVeela ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaterWeird ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WaterWraith ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WaterWysp ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaterYai ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Waterfiend ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WaxGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaxworkHuman ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wayang ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Weasel ns1:hasAlignment ns1:trueNeutral .\n\nns1:Weedwhip ns1:hasAlignment ns1:trueNeutral .\n\nns1:WellLurker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wendigo ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WerebatHumanForm ns1:hasAlignment ns1:neutralEvil .\n\nns1:WereboarHumanForm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WerecrocodileHumanForm ns1:hasAlignment ns1:neutralEvil .\n\nns1:WeremantisHumanForm ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WereraptorHumanForm ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:WereraptorHybridForm ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:WereratHumanForm ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WeresharkHumanForm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WerespiderHumanForm ns1:hasAlignment ns1:neutralEvil .\n\nns1:WeretigerHumanForm ns1:hasAlignment ns1:neutralEvil .\n\nns1:WerewaspElfForm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WerewolfHumanFormCR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Whale ns1:hasAlignment ns1:trueNeutral .\n\nns1:WhalerJellyfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:WhipJelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:WhiptailDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Whirlmaw ns1:hasAlignment ns1:trueNeutral .\n\nns1:WhisperVulture ns1:hasAlignment ns1:trueNeutral .\n\nns1:Whisperer ns1:hasAlignment ns1:neutralEvil .\n\nns1:WhisperscaleHunter ns1:hasAlignment ns1:neutralEvil .\n\nns1:WhitePudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:Whyrlish ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wickerman ns1:hasAlignment ns1:trueNeutral .\n\nns1:WidowCreeper ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wight ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WightAdultRedDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WightMinotaur ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WightMonk ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Wihsaak ns1:hasAlignment ns1:neutralEvil .\n\nns1:Wikkawak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WildDreamImpCompanion ns1:hasAlignment ns1:neutralGood .\n\nns1:WildDreamImpHero ns1:hasAlignment ns1:neutralGood .\n\nns1:WildHuntArcher ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WildHuntHorse ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WildHuntHound ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WildHuntMonarch ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WildHuntScout ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WilloWisp ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WillowDusk ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WindWalker ns1:hasAlignment ns1:trueNeutral .\n\nns1:WindWalkerWendigo ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WindYai ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Winterwight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Wisagatcak ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WitchDollGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:WitchTree ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Witchcrow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Witchfire ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Witherstench ns1:hasAlignment ns1:trueNeutral .\n\nns1:Witherweed ns1:hasAlignment ns1:trueNeutral .\n\nns1:WizardsShackle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Woghemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wolf ns1:hasAlignment ns1:trueNeutral .\n\nns1:WolfInSheepsClothing ns1:hasAlignment ns1:trueNeutral .\n\nns1:WolfSpider ns1:hasAlignment ns1:neutralEvil .\n\nns1:WolfinSheepsClothing ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wolliped ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wolpertinger ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wolverine ns1:hasAlignment ns1:trueNeutral .\n\nns1:WoodColossusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:WoodGiant ns1:hasAlignment ns1:chaoticGood .\n\nns1:WoodGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Woodwose ns1:hasAlignment ns1:neutralEvil .\n\nns1:WoollyRhinoceros ns1:hasAlignment ns1:trueNeutral .\n\nns1:Worg ns1:hasAlignment ns1:neutralEvil .\n\nns1:WorkWraith ns1:hasAlignment ns1:neutralEvil .\n\nns1:WorkerThermite ns1:hasAlignment ns1:trueNeutral .\n\nns1:WorldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WormThatWalksHuman ns1:hasAlignment ns1:neutralEvil .\n\nns1:WormthatWalksLocustVariant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Woundwyrm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Wrackworm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Wraith ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WrathBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:WrathDragonDracoSanctusBenevolentia ns1:hasAlignment ns1:neutralGood .\n\nns1:WrathplatedClockworkMage ns1:hasAlignment ns1:trueNeutral .\n\nns1:WyrmBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WyrmForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WyrmRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WyrmSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:WyrmSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:WyrmWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmlingBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmlingBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WyrmlingForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmlingGoldDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:WyrmlingGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WyrmlingRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmlingRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WyrmlingSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:WyrmlingSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:WyrmlingSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:WyrmlingUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WyrmlingWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Wyrmwraith ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Wyrwood ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wyvaran ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Wyvern ns1:hasAlignment ns1:trueNeutral .\n\nns1:Xacarba ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Xanthos ns1:hasAlignment ns1:trueNeutral .\n\nns1:Xaphan ns1:hasAlignment ns1:lawfulEvil .\n\nns1:XenarthIchorShark ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Xenopterid ns1:hasAlignment ns1:trueNeutral .\n\nns1:Xiao ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Xill ns1:hasAlignment ns1:lawfulEvil .\n\nns1:XillMatriarch ns1:hasAlignment ns1:lawfulEvil .\n\nns1:XillixLesserNelbarzoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ximtal ns1:hasAlignment ns1:neutralEvil .\n\nns1:XiuhCouatl ns1:hasAlignment ns1:neutralGood .\n\nns1:Xocothian ns1:hasAlignment ns1:trueNeutral .\n\nns1:Xocouatl ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Xorn ns1:hasAlignment ns1:trueNeutral .\n\nns1:Xtabay ns1:hasAlignment ns1:trueNeutral .\n\nns1:Xulgath ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Yaddithian ns1:hasAlignment ns1:trueNeutral .\n\nns1:Yaenit ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YamabushiTengu ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Yamah ns1:hasAlignment ns1:chaoticGood .\n\nns1:Yamaraj ns1:hasAlignment ns1:trueNeutral .\n\nns1:Yangethe ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Yaoguai ns1:hasAlignment ns1:trueNeutral .\n\nns1:Yarthoon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:YellowMuskCreeper ns1:hasAlignment ns1:trueNeutral .\n\nns1:YellowMuskZombie ns1:hasAlignment ns1:trueNeutral .\n\nns1:YethHound ns1:hasAlignment ns1:neutralEvil .\n\nns1:Yeti ns1:hasAlignment ns1:trueNeutral .\n\nns1:Yhohm ns1:hasAlignment ns1:neutralGood .\n\nns1:Yig ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Yithian ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:YithianElder ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Ymir ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Yothga ns1:hasAlignment ns1:neutralEvil .\n\nns1:YoungAdultBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungAdultBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:YoungAdultGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:YoungAdultRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungAdultRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:YoungAdultSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:YoungAdultSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:YoungAdultSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungAdultWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungApocalypseDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:YoungAstralDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungBlissDragon ns1:hasAlignment ns1:neutralGood .\n\nns1:YoungBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:YoungBrassDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:YoungCaveDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:YoungCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungCopperDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:YoungCrystalDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:YoungDreamDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungEdictDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:YoungEthericDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungGoldDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:YoungGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:YoungLunarDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:YoungMagmaDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:YoungMistDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungNightmareDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:YoungOccultDragon ns1:hasAlignment ns1:neutralGood .\n\nns1:YoungRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:YoungSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:YoungSilverDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:YoungSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:YoungSolarDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:YoungSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungTimeDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungUmbralDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:YoungVoidDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:YoungVortexDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:YoungWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungadultForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ypotryll ns1:hasAlignment ns1:trueNeutral .\n\nns1:Yrthak ns1:hasAlignment ns1:trueNeutral .\n\nns1:Yukionna ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Yurei ns1:hasAlignment ns1:neutralEvil .\n\nns1:Zalyakavat ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Zaramuun ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Zarxorin ns1:hasAlignment ns1:trueNeutral .\n\nns1:ZealotWraith ns1:hasAlignment ns1:neutralEvil .\n\nns1:Zelekhut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Zentragt ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Zeuglodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ZhenWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Zhyen ns1:hasAlignment ns1:trueNeutral .\n\nns1:Zohanil ns1:hasAlignment ns1:neutralEvil .\n\nns1:Zolavoi ns1:hasAlignment ns1:trueNeutral .\n\nns1:Zombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:ZombieHandservant ns1:hasAlignment ns1:neutralEvil .\n\nns1:ZombieHillGiant ns1:hasAlignment ns1:neutralEvil .\n\nns1:ZombieHorde ns1:hasAlignment ns1:neutralEvil .\n\nns1:ZombieWolf ns1:hasAlignment ns1:neutralEvil .\n\nns1:Zomok ns1:hasAlignment ns1:trueNeutral .\n\nns1:Zoog ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Zuishin ns1:hasAlignment ns1:lawfulGood .\n\nns1:Zuvembie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Zvucni ns1:hasAlignment ns1:neutralGood .\n\nns1:Zwerc ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:aasimar ns1:hasAlignment ns1:neutralGood .\n\nns1:caypup ns1:hasAlignment ns1:chaoticGood .\n\nns1:earthElementalHero ns1:hasAlignment ns1:trueNeutral .\n\nns1:greatwyrmSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:hangedman ns1:hasAlignment ns1:chaoticEvil .\n\nns1:headedPyrohydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:helixmothmature ns1:hasAlignment ns1:trueNeutral .\n\nns1:heraldoftsathogga ns1:hasAlignment ns1:chaoticEvil .\n\nns1:hoarfox ns1:hasAlignment ns1:trueNeutral .\n\nns1:juvenileCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:oldForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:oldUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:oldclouddragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:theFirebleeder ns1:hasAlignment ns1:chaoticEvil .\n\nns1:theMonarchWorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:veryYoungCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:veryoldUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:witchwyrd ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:wyrmSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:wyrmUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:wyrmclouddragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:wyrmlingCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:youngAdultCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:youngadultUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "subgraph",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:08.595190",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:47:22.030898",
        "Please generate a SPARQL query for the given RDF graph and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what is the most common alignment type\n\ngraph:\n```turtle\nl...```"
      ],
      [
        "response",
        "2024-05-13T13:47:24.750817",
        "```sparql\nSELECT ?alignment (COUNT(?character) AS ?count)\nWHERE {\n  ?character ns1:alignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1\n```"
      ],
      [
        "prompt",
        "2024-05-13T13:47:24.801673",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T13:47:27.239409",
        "```sparql\nSELECT ?alignment (COUNT(?character) as ?numCharacters)\nWHERE {\n  ?character ns1:alignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?numCharacters)\nLIMIT 1\n```"
      ],
      [
        "prompt",
        "2024-05-13T13:47:27.328056",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T13:47:30.626080",
        "```sparql\nSELECT ?alignmentType (COUNT(?alignmentType) as ?alignmentCount) \nWHERE {\n  ?subject ?predicate ?alignmentType .\n  ?subject rdf:type ns1:Character .\n  ?subject ns1:alignment ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?alignmentCount)\nLIMIT 1\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:47:40.479809",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubgraph",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 703,
      "actualSize": 606
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,4 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ns1:cold .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:aasimar"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,4 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ns1:cold .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:aasimar"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary019",
      "question": "what creatures do have cold resist",
      "refSparql": "SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }",
      "refResultSet": [
        "ns1:aasimar"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:aasimar ns1:hasResists ns1:cold .\n\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "subgraph",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:02.826570",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:47:40.479816",
        "Please generate a SPARQL query for the given RDF graph and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what creatures do have cold resist\n\ngraph:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:aasimar ns1:hasResists ns1:cold .\n\n```"
      ],
      [
        "response",
        "2024-05-13T13:47:43.306379",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:47:53.099184",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubgraph",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 799,
      "actualSize": 1180
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n    ?creature ns1:alignment \"Chaotic Good\".\n    FILTER NOT EXISTS {\n        ?creature ns1:speaks \"Draconic\".\n    }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+    ?creature ns1:alignment \"Chaotic Good\".\n+    FILTER NOT EXISTS {\n+        ?creature ns1:speaks \"Draconic\".\n+    }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n    ?creature ns1:alignment \"Chaotic Good\".\n    OPTIONAL {\n        ?creature ns1:speaks ?language.\n    }\n    FILTER (?language != \"Draconic\" || !BOUND(?language))\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+    ?creature ns1:alignment \"Chaotic Good\".\n+    OPTIONAL {\n+        ?creature ns1:speaks ?language.\n+    }\n+    FILTER (?language != \"Draconic\" || !BOUND(?language))\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n    ?creature ns1:alignment \"Chaotic Good\".\n    FILTER NOT EXISTS {\n        ?creature ns1:speaks \"Draconic\".\n    }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+    ?creature ns1:alignment \"Chaotic Good\".\n+    FILTER NOT EXISTS {\n+        ?creature ns1:speaks \"Draconic\".\n+    }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n    ?creature ns1:alignment \"Chaotic Good\".\n    FILTER NOT EXISTS {\n        ?creature ns1:speaks \"Draconic\".\n    }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+    ?creature ns1:alignment \"Chaotic Good\".\n+    FILTER NOT EXISTS {\n+        ?creature ns1:speaks \"Draconic\".\n+    }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary001",
      "question": "which creatures not speaking draconic language do have chaotic good alignment",
      "refSparql": "SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }",
      "refResultSet": [
        "ns1:Anhana",
        "ns1:Ataxian",
        "ns1:Azruverda",
        "ns1:BattleImp",
        "ns1:Biofreezer",
        "ns1:BlackButterfly",
        "ns1:Cayhound",
        "ns1:Caypup",
        "ns1:Celedeen",
        "ns1:Cynosoma",
        "ns1:Djinni",
        "ns1:Domovoi",
        "ns1:Dryad",
        "ns1:ElysianTitan",
        "ns1:Faun",
        "ns1:FungalNymph",
        "ns1:Gancanagh",
        "ns1:Garuda",
        "ns1:Hamadryad",
        "ns1:HeraldofDreams",
        "ns1:Munavri",
        "ns1:Muse",
        "ns1:Nisid",
        "ns1:NobleDjinniVizier",
        "ns1:Nymph",
        "ns1:RiftFlumph",
        "ns1:RimefireEidolon",
        "ns1:SapphireOoze",
        "ns1:SkirmishersTroop",
        "ns1:StarMonarch",
        "ns1:SwanMaiden",
        "ns1:Taniwha",
        "ns1:Unicorn",
        "ns1:WoodGiant",
        "ns1:caypup"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:AdultBrassDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AdultCopperDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AdultCrystalDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AdultSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AncientBrassDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AncientCopperDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AncientCrystalDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AncientSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Androsphinx ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Anhana ns1:hasAlignment ns1:chaoticGood .\n\nns1:Ataxian ns1:hasAlignment ns1:chaoticGood .\n\nns1:AuwazCouatl ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Azruverda ns1:hasAlignment ns1:chaoticGood .\n\nns1:BattleImp ns1:hasAlignment ns1:chaoticGood .\n\nns1:Biofreezer ns1:hasAlignment ns1:chaoticGood .\n\nns1:BlackButterfly ns1:hasAlignment ns1:chaoticGood .\n\nns1:Bralani ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonGreatWyrm ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonJuvenile ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonMatureAdult ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonOld ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonVeryOld ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonVeryYoung ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonWyrm ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonWyrmling ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonYoungAdult ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Brijidine ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Cayhound ns1:hasAlignment ns1:chaoticGood .\n\nns1:Caypup ns1:hasAlignment ns1:chaoticGood .\n\nns1:Celedeen ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonGreatWyrm ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonJuvenile ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonMatureAdult ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonOld ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonVeryOld ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonVeryYoung ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonWyrm ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonWyrmling ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonYoungAdult ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonGreatWyrm ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonJuvenile ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonMatureAdult ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonOld ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonVeryOld ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonVeryYoung ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonWyrm ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonWyrmling ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonYoungAdult ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Cynosoma ns1:hasAlignment ns1:chaoticGood .\n\nns1:Djinni ns1:hasAlignment ns1:chaoticGood .\n\nns1:Domovoi ns1:hasAlignment ns1:chaoticGood .\n\nns1:Dryad ns1:hasAlignment ns1:chaoticGood .\n\nns1:ElysianTitan ns1:hasAlignment ns1:chaoticGood .\n\nns1:FaerieDragonDracoFraudatioMinimus ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Faeriedragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Faun ns1:hasAlignment ns1:chaoticGood .\n\nns1:FungalNymph ns1:hasAlignment ns1:chaoticGood .\n\nns1:Gancanagh ns1:hasAlignment ns1:chaoticGood .\n\nns1:Garuda ns1:hasAlignment ns1:chaoticGood .\n\nns1:Hamadryad ns1:hasAlignment ns1:chaoticGood .\n\nns1:HeraldofDreams ns1:hasAlignment ns1:chaoticGood .\n\nns1:HeraldofFreedom ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:HeraldofFreedomandJustice ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:JuvenileSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:MatureAdultSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:MixCouatl ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Munavri ns1:hasAlignment ns1:chaoticGood .\n\nns1:Muse ns1:hasAlignment ns1:chaoticGood .\n\nns1:Nisid ns1:hasAlignment ns1:chaoticGood .\n\nns1:NobleDjinniVizier ns1:hasAlignment ns1:chaoticGood .\n\nns1:Nymph ns1:hasAlignment ns1:chaoticGood .\n\nns1:OldSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Prydanu ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Raelis ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:RiftFlumph ns1:hasAlignment ns1:chaoticGood .\n\nns1:RimefireEidolon ns1:hasAlignment ns1:chaoticGood .\n\nns1:SapphireOoze ns1:hasAlignment ns1:chaoticGood .\n\nns1:SkirmishersTroop ns1:hasAlignment ns1:chaoticGood .\n\nns1:StarMonarch ns1:hasAlignment ns1:chaoticGood .\n\nns1:StormGiant ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:SwanMaiden ns1:hasAlignment ns1:chaoticGood .\n\nns1:Taniwha ns1:hasAlignment ns1:chaoticGood .\n\nns1:TheHornedLord ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Thyrlien ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Uinuja ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Unicorn ns1:hasAlignment ns1:chaoticGood .\n\nns1:Veranallia ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:VeranalliaAzata ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:VeryYoungSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:VeryoldSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:WoodGiant ns1:hasAlignment ns1:chaoticGood .\n\nns1:WyrmlingSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Yamah ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:YoungAdultSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:YoungBrassDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:YoungCopperDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:YoungCrystalDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:YoungSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:caypup ns1:hasAlignment ns1:chaoticGood .\n\nns1:greatwyrmSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:wyrmSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "subgraph",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:17.835540",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:47:53.099192",
        "Please generate a SPARQL query for the given RDF graph and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:which creatures not speaking draconic language do have chaotic good alignment\n\ngraph:\n```turtle\nn...```"
      ],
      [
        "response",
        "2024-05-13T13:47:58.086590",
        "```sparql\nSELECT ?creature\nWHERE {\n    ?creature ns1:alignment \"Chaotic Good\".\n    FILTER NOT EXISTS {\n        ?creature ns1:speaks \"Draconic\".\n    }\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T13:47:58.130941",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T13:48:01.293580",
        "```sparql\nSELECT ?creature\nWHERE {\n    ?creature ns1:alignment \"Chaotic Good\".\n    OPTIONAL {\n        ?creature ns1:speaks ?language.\n    }\n    FILTER (?language != \"Draconic\" || !BOUND(?language))\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T13:48:01.334423",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T13:48:10.934724",
        "```sparql\nSELECT ?creature\nWHERE {\n    ?creature ns1:alignment \"Chaotic Good\".\n    FILTER NOT EXISTS {\n        ?creature ns1:speaks \"Draconic\".\n    }\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:48:21.190334",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubgraph",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 1470,
      "actualSize": 1004
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) AS ?count)\nWHERE {\n  ?creature ns1:hasLanguages ns1:TreantL .\n  OPTIONAL {?creature ns1:hasAlignment ?alignment}\n  FILTER(?alignment != ns1:trueNeutral || !BOUND(?alignment))\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) AS ?count)\n+WHERE {\n+  ?creature ns1:hasLanguages ns1:TreantL .\n+  OPTIONAL {?creature ns1:hasAlignment ?alignment}\n+  FILTER(?alignment != ns1:trueNeutral || !BOUND(?alignment))\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 0.6666666666666666,
        "sparqlIrisF1measure": 0.8,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 0.6666666666666666,
        "sparqlIrisSuffixF1measure": 0.8,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "4"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) AS ?count)\nWHERE {\n  ?creature ns1:hasLanguages ns1:TreantL .\n  OPTIONAL {?creature ns1:hasAlignment ?alignment}\n  FILTER(?alignment != ns1:trueNeutral || !BOUND(?alignment))\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) AS ?count)\n+WHERE {\n+  ?creature ns1:hasLanguages ns1:TreantL .\n+  OPTIONAL {?creature ns1:hasAlignment ?alignment}\n+  FILTER(?alignment != ns1:trueNeutral || !BOUND(?alignment))\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 0.6666666666666666,
        "sparqlIrisF1measure": 0.8,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 0.6666666666666666,
        "sparqlIrisSuffixF1measure": 0.8,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "4"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary005",
      "question": "how many creatures with non-neutral alignment do speak treant language",
      "refSparql": "SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }",
      "refResultSet": [
        "4"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:ArcticDruid ns1:hasLanguages ns1:TreantL .\n\nns1:Goemul ns1:hasLanguages ns1:TreantL .\n\nns1:ScytheTree ns1:hasLanguages ns1:TreantL .\n\nns1:Tobongo ns1:hasAlignment ns1:trueNeutral ;\n    ns1:hasLanguages ns1:TreantL .\n\nns1:Treant ns1:hasLanguages ns1:TreantL .\n\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "subgraph",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:06.060222",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:48:21.190343",
        "Please generate a SPARQL query for the given RDF graph and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:how many creatures with non-neutral alignment do speak treant language\n\ngraph:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:ArcticDruid ns1:hasLanguages ns1:TreantL .\n\nns1:Goemul ns1:hasLanguages ns1:TreantL .\n\nns1:ScytheTree ns1:hasLanguages ns1:TreantL .\n\nns1:Tobongo ns1:hasAlignment ns1:trueNeutral ;\n    ns1:hasLanguages ns1:TreantL .\n\nns1:Treant ns1:hasLanguages ns1:TreantL .\n\n```"
      ],
      [
        "response",
        "2024-05-13T13:48:27.250556",
        "```sparql\nSELECT (COUNT(?creature) AS ?count)\nWHERE {\n  ?creature ns1:hasLanguages ns1:TreantL .\n  OPTIONAL {?creature ns1:hasAlignment ?alignment}\n  FILTER(?alignment != ns1:trueNeutral || !BOUND(?alignment))\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:48:38.133090",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubgraph",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 1116,
      "actualSize": 927
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?commonSpell \nWHERE {\n    ns1:aasimar ns1:canSpell ?commonSpell .\n    ns1:caypup ns1:canSpell ?commonSpell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?commonSpell \n+WHERE {\n+    ns1:aasimar ns1:canSpell ?commonSpell .\n+    ns1:caypup ns1:canSpell ?commonSpell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:stabilize"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?commonSpell \nWHERE {\n    ns1:aasimar ns1:canSpell ?commonSpell .\n    ns1:caypup ns1:canSpell ?commonSpell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?commonSpell \n+WHERE {\n+    ns1:aasimar ns1:canSpell ?commonSpell .\n+    ns1:caypup ns1:canSpell ?commonSpell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:stabilize"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary007",
      "question": "what spells Aasimar and Caypup do have in common",
      "refSparql": "SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }",
      "refResultSet": [
        "ns1:stabilize"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:aasimar ns1:canSpell ns1:bless,\n        ns1:command,\n        ns1:daylight,\n        ns1:detectMagic,\n        ns1:guidance,\n        ns1:protectionFromEvil,\n        ns1:stabilize .\n\nns1:caypup ns1:canSpell ns1:dimensionDoor,\n        ns1:knock,\n        ns1:openClose,\n        ns1:stabilize .\n\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "subgraph",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:04.332354",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:48:38.133100",
        "Please generate a SPARQL query for the given RDF graph and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what spells Aasimar and Caypup do have in common\n\ngraph:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:aasimar ns1:canSpell ns1:bless,\n        ns1:command,\n        ns1:daylight,\n        ns1:detectMagic,\n        ns1:guidance,\n        ns1:protectionFromEvil,\n        ns1:stabilize .\n\nns1:caypup ns1:canSpell ns1:dimensionDoor,\n        ns1:knock,\n        ns1:openClose,\n        ns1:stabilize .\n\n```"
      ],
      [
        "response",
        "2024-05-13T13:48:42.465444",
        "```sparql\nSELECT ?commonSpell \nWHERE {\n    ns1:aasimar ns1:canSpell ?commonSpell .\n    ns1:caypup ns1:canSpell ?commonSpell .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:48:52.785483",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubgraph",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 579,
      "actualSize": 1107
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignment (COUNT(?alignment) AS ?count)\nWHERE {\n    ?s ns1:alignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignment (COUNT(?alignment) AS ?count)\n+WHERE {\n+    ?s ns1:alignment ?alignment .\n+}\n+GROUP BY ?alignment\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignment (COUNT(?alignment) AS ?count)\nWHERE {\n    ?character ns1:alignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignment (COUNT(?alignment) AS ?count)\n+WHERE {\n+    ?character ns1:alignment ?alignment .\n+}\n+GROUP BY ?alignment\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignment (COUNT(?character) AS ?count)\nWHERE {\n  ?character ns1:alignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignment (COUNT(?character) AS ?count)\n+WHERE {\n+  ?character ns1:alignment ?alignment .\n+}\n+GROUP BY ?alignment\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignment (COUNT(?character) AS ?count)\nWHERE {\n  ?character ns1:alignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignment (COUNT(?character) AS ?count)\n+WHERE {\n+  ?character ns1:alignment ?alignment .\n+}\n+GROUP BY ?alignment\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary011",
      "question": "what is the most common alignment type",
      "refSparql": "SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1",
      "refResultSet": [
        "ns1:trueNeutral"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1: ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aasimar ns1:hasAlignment ns1:neutralGood .\n\nns1:Aatheriexa ns1:hasAlignment ns1:neutralEvil .\n\nns1:Abaia ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aballonian ns1:hasAlignment ns1:trueNeutral .\n\nns1:AbandonedArmory ns1:hasAlignment ns1:neutralEvil .\n\nns1:AbasheenGenie ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aberrant ns1:hasAlignment ns1:neutralEvil .\n\nns1:Abhominal ns1:hasAlignment ns1:neutralEvil .\n\nns1:Aboleth ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Abrikandilu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AbyssGigas ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AbyssalBasilisk ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AbyssalCustodian ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AbyssalHarvester ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AbyssalLarva ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AbyssalWolf ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AccompliceDevilHesperian ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AccuserDevilZebub ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Achaierai ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AcidNaga ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AdamantineCobra ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdamantineGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdamantineWaspSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdaptiveOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Adaro ns1:hasAlignment ns1:neutralEvil .\n\nns1:Addanc ns1:hasAlignment ns1:neutralEvil .\n\nns1:AddictionDevilAtropocustra ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Addu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Adherer ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Adhukait ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Adlet ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AdolescentDarkYoung ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdultApocalypseDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdultAstralDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdultBlissDragon ns1:hasAlignment ns1:neutralGood .\n\nns1:AdultBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AdultBrassDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AdultBronzeDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:AdultCaveDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdultCloudDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AdultCopperDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AdultCrystalDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AdultDarkYoung ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdultDreamDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultEdictDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AdultEthericDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdultGoldDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:AdultGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AdultLunarDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AdultMagmaDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AdultMistDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultMithralDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultNightmareDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdultOccultDragon ns1:hasAlignment ns1:neutralGood .\n\nns1:AdultRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdultRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AdultSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AdultSilverDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:AdultSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:AdultSolarDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AdultSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultTimeDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultUmbralDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdultUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AdultVoidDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdultVortexDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AdultWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedAnimateDream ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedBulette ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedDraugr ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedEttercap ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedFrostWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedGiantFlytrap ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedGiantScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedHangmanTree ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedHorse ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedInvisibleStalker ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedLengSpider ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedLeukodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedLightningTreantppCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedMegaraptorSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedMummy ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedNightmare ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedNightwing ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedOgre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedTroglodyte ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedUnhallowedBodak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedUnhallowedTotenmaske ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedWoodGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aequoreal ns1:hasAlignment ns1:neutralGood .\n\nns1:AerialServant ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aerialservant ns1:hasAlignment ns1:trueNeutral .\n\nns1:AetherWysp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Afanc ns1:hasAlignment ns1:neutralEvil .\n\nns1:Aghash ns1:hasAlignment ns1:neutralEvil .\n\nns1:Aghasura ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Agnoia ns1:hasAlignment ns1:trueNeutral .\n\nns1:Agogwe ns1:hasAlignment ns1:trueNeutral .\n\nns1:Agorth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Agrawgh ns1:hasAlignment ns1:trueNeutral .\n\nns1:Agyra ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Ahkhat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ahlinni ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Ahmuuth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ahool ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ahooling ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ahuizotl ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ailuro ns1:hasAlignment ns1:trueNeutral .\n\nns1:AirElementalConstruct ns1:hasAlignment ns1:trueNeutral .\n\nns1:AirMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:AirShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:AirVeela ns1:hasAlignment ns1:trueNeutral .\n\nns1:AirWysp ns1:hasAlignment ns1:trueNeutral .\n\nns1:AirsuitSymbiontCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:AizskartzAsteroid ns1:hasAlignment ns1:neutralEvil .\n\nns1:Akaname ns1:hasAlignment ns1:trueNeutral .\n\nns1:Akaruzug ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Akata ns1:hasAlignment ns1:trueNeutral .\n\nns1:Akhana ns1:hasAlignment ns1:trueNeutral .\n\nns1:Akhlut ns1:hasAlignment ns1:trueNeutral .\n\nns1:Akizendri ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Akvan ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ala ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Alastor ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AlbinoCaveSolifugid ns1:hasAlignment ns1:trueNeutral .\n\nns1:AlbinoCaveSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:AlchemicAmoeba ns1:hasAlignment ns1:trueNeutral .\n\nns1:AlchemicalGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Algea ns1:hasAlignment ns1:trueNeutral .\n\nns1:Algoid ns1:hasAlignment ns1:trueNeutral .\n\nns1:Alligator ns1:hasAlignment ns1:trueNeutral .\n\nns1:Allip ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Allosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Almiraj ns1:hasAlignment ns1:trueNeutral .\n\nns1:Alp ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Alpluachra ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Alraune ns1:hasAlignment ns1:neutralEvil .\n\nns1:Alseid ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AluDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Aluum ns1:hasAlignment ns1:trueNeutral .\n\nns1:AmaimonDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Amalgamation ns1:hasAlignment ns1:trueNeutral .\n\nns1:Amanusya ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Amargasaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Amarok ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AmberOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ambergrim ns1:hasAlignment ns1:trueNeutral .\n\nns1:AmoebaSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Amon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Amphiptere ns1:hasAlignment ns1:trueNeutral .\n\nns1:Amphisbaena ns1:hasAlignment ns1:trueNeutral .\n\nns1:AmphisbaenaBasilisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:AmphisbaenaEncephalonGorger ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AncestralDragonTurtle ns1:hasAlignment ns1:neutralGood .\n\nns1:AncestralGorgon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientApocalypseDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AncientAstralDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AncientBlissDragon ns1:hasAlignment ns1:neutralGood .\n\nns1:AncientBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AncientBlueDragonRavener ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AncientBrassDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AncientCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientCopperDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AncientCrystalDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AncientDreamDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientEdictDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AncientEthericDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AncientGoldDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:AncientGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AncientGreenDragonRavener ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AncientLunarDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AncientMagmaDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AncientMistDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientMithralDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientNightmareDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AncientOccultDragon ns1:hasAlignment ns1:neutralGood .\n\nns1:AncientRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AncientRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AncientSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AncientSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:AncientSolarDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AncientSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientTimeDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientUmbralDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AncientUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AncientVoidDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AncientVortexDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AncientWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Andrenjinyi ns1:hasAlignment ns1:trueNeutral .\n\nns1:Android ns1:hasAlignment ns1:trueNeutral .\n\nns1:Androsphinx ns1:hasAlignment ns1:chaoticGood .\n\nns1:Anemos ns1:hasAlignment ns1:trueNeutral .\n\nns1:AngelicGuardian ns1:hasAlignment ns1:trueNeutral .\n\nns1:Anghenfil ns1:hasAlignment ns1:trueNeutral .\n\nns1:AngheuvoreMortic ns1:hasAlignment ns1:neutralEvil .\n\nns1:AngustidenShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Anhana ns1:hasAlignment ns1:chaoticGood .\n\nns1:AnimateAria ns1:hasAlignment ns1:trueNeutral .\n\nns1:AnimateDream ns1:hasAlignment ns1:neutralEvil .\n\nns1:AnimateHair ns1:hasAlignment ns1:neutralEvil .\n\nns1:AnimatedJackOLantern ns1:hasAlignment ns1:trueNeutral .\n\nns1:AnimatedManacles ns1:hasAlignment ns1:trueNeutral .\n\nns1:AnimatedShrineStone ns1:hasAlignment ns1:trueNeutral .\n\nns1:AnimatedStraitjacket ns1:hasAlignment ns1:trueNeutral .\n\nns1:Anisydaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ankheg ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ankhrav ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ankou ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ankylosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Annihilator ns1:hasAlignment ns1:trueNeutral .\n\nns1:AnnisHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AnnisHagAlterEgo ns1:hasAlignment ns1:trueNeutral .\n\nns1:AntLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:Antelope ns1:hasAlignment ns1:trueNeutral .\n\nns1:AnunnakiMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aoandon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Apallie ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aphorite ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ApkalluMR ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ApocalypseHorse ns1:hasAlignment ns1:neutralEvil .\n\nns1:ApocalypseLocustMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ApocalypseZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Apollyon ns1:hasAlignment ns1:neutralEvil .\n\nns1:ApostasyWraith ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ApostateDevilDeimavigga ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ApostleKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Apparition ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Aptom ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AquaticWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Arach ns1:hasAlignment ns1:neutralEvil .\n\nns1:ArachnidRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aranea ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aravax ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Arbiter ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Arcadex ns1:hasAlignment ns1:neutralEvil .\n\nns1:Arcanoplasm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Arcanotheign ns1:hasAlignment ns1:trueNeutral .\n\nns1:Archaeopteryx ns1:hasAlignment ns1:trueNeutral .\n\nns1:Archelon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArcherBush ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArcherfishGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArchonShield ns1:hasAlignment ns1:lawfulGood .\n\nns1:ArchonStar ns1:hasAlignment ns1:lawfulGood .\n\nns1:ArcticDruid ns1:hasAlignment ns1:neutralEvil .\n\nns1:ArcticHare ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArcticTern ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArgentWarden ns1:hasAlignment ns1:lawfulGood .\n\nns1:Argorth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ArgorthCinderscourge ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ArgusMR ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Armadillo ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArmoredClayGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArmoredOgreSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:ArmyAntSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Arrowhawk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Arsinoitherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:Asakku ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ascomoid ns1:hasAlignment ns1:trueNeutral .\n\nns1:AshGiant ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AshHag ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Asp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Asrai ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AssassinRingSymbiont ns1:hasAlignment ns1:trueNeutral .\n\nns1:AssassinVine ns1:hasAlignment ns1:trueNeutral .\n\nns1:Asswere ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Astradaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AstralDeva ns1:hasAlignment ns1:neutralGood .\n\nns1:AstralLeviathan ns1:hasAlignment ns1:trueNeutral .\n\nns1:AstralShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Asurendra ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AtamahutaOni ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ataxian ns1:hasAlignment ns1:chaoticGood .\n\nns1:Athach ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Atomie ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AtticWhisperer ns1:hasAlignment ns1:neutralEvil .\n\nns1:Atuikakura ns1:hasAlignment ns1:trueNeutral .\n\nns1:Augnagar ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AugurKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Aurochs ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aurosrath ns1:hasAlignment ns1:neutralEvil .\n\nns1:Aurspeily ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Aurumvorax ns1:hasAlignment ns1:trueNeutral .\n\nns1:AutomataDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AutumnDeath ns1:hasAlignment ns1:neutralEvil .\n\nns1:AuwazCouatl ns1:hasAlignment ns1:chaoticGood .\n\nns1:Avatarana ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AvatarofAlkumuoto ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Avoral ns1:hasAlignment ns1:neutralGood .\n\nns1:AwakenedDemilich ns1:hasAlignment ns1:neutralEvil .\n\nns1:AxeBeak ns1:hasAlignment ns1:trueNeutral .\n\nns1:AxialMonitor ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Axiomite ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AxiomiteGraveknight ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Azer ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AzizouPainDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Azruverda ns1:hasAlignment ns1:chaoticGood .\n\nns1:Azuretzi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BLOODHAWK ns1:hasAlignment ns1:trueNeutral .\n\nns1:Baal ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Baalzebul ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BaaphelDukeofHell ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Babau ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Babbler ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Baboon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bacallia ns1:hasAlignment ns1:trueNeutral .\n\nns1:Baccae ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BadWolfMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Badger ns1:hasAlignment ns1:trueNeutral .\n\nns1:Baetriov ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Bagiennik ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Bakekujira ns1:hasAlignment ns1:neutralEvil .\n\nns1:Baku ns1:hasAlignment ns1:trueNeutral .\n\nns1:BakuDreamweaver ns1:hasAlignment ns1:trueNeutral .\n\nns1:Balisse ns1:hasAlignment ns1:neutralGood .\n\nns1:BalisseAngel ns1:hasAlignment ns1:neutralGood .\n\nns1:Balor ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BalorLord ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Baluchitherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:Banderlog ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bandersnatch ns1:hasAlignment ns1:trueNeutral .\n\nns1:Banelight ns1:hasAlignment ns1:neutralEvil .\n\nns1:Banshee ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BaobhanSith ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Baphomet ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BaphometDemonLordofBeasts ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Barbatos ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BarbedDevilHamatula ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BarbedRam ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarbtonguedWyvern ns1:hasAlignment ns1:neutralEvil .\n\nns1:Baregara ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Barghest ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Baric ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarizouAssassinDemonCR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Barometz ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarracudaLarge ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarracudaMedium ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarracudaSmall ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarrierBreakerTroop ns1:hasAlignment ns1:neutralEvil .\n\nns1:BarrowRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarrowWight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Basidirond ns1:hasAlignment ns1:trueNeutral .\n\nns1:Basilisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Basilosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:BastionArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:BatMobat ns1:hasAlignment ns1:trueNeutral .\n\nns1:BatPlagueSwarmMR ns1:hasAlignment ns1:neutralEvil .\n\nns1:BatSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:BattleEmu ns1:hasAlignment ns1:trueNeutral .\n\nns1:BattleImp ns1:hasAlignment ns1:chaoticGood .\n\nns1:Baykok ns1:hasAlignment ns1:neutralEvil .\n\nns1:BeardedDevilBarbazu ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BeastDemonChaaor ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BeastDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:BeastmasterTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Bebilith ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Bedlam ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BeeMan ns1:hasAlignment ns1:neutralEvil .\n\nns1:BeetleGiantStag ns1:hasAlignment ns1:trueNeutral .\n\nns1:BegedhiParasite ns1:hasAlignment ns1:neutralEvil .\n\nns1:Beheaded ns1:hasAlignment ns1:neutralEvil .\n\nns1:BehemothGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:BehemothHippopotamus ns1:hasAlignment ns1:trueNeutral .\n\nns1:BehemothPudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:Behimiron ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Behir ns1:hasAlignment ns1:trueNeutral .\n\nns1:BeingofIb ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Belabra ns1:hasAlignment ns1:trueNeutral .\n\nns1:BelchingGiantBeheadedCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:BelchingMedusaHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:BelchingSeveredHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:Belial ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BelierDevilBdellavritra ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Belker ns1:hasAlignment ns1:neutralEvil .\n\nns1:BellyborerBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Belostomatid ns1:hasAlignment ns1:trueNeutral .\n\nns1:BeluiriTheTemptress ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Berbalang ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Bezravnis ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Bhole ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BholeHatchling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Bhuta ns1:hasAlignment ns1:neutralEvil .\n\nns1:Bibliodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Biclops ns1:hasAlignment ns1:trueNeutral .\n\nns1:Biddlytree ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Biddlywink ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BiddlywinkChrysalis ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Biggin ns1:hasAlignment ns1:trueNeutral .\n\nns1:Biloko ns1:hasAlignment ns1:neutralEvil .\n\nns1:Biofreezer ns1:hasAlignment ns1:chaoticGood .\n\nns1:BishaGaTsuku ns1:hasAlignment ns1:neutralEvil .\n\nns1:BishopAgathion ns1:hasAlignment ns1:neutralGood .\n\nns1:BisonCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:BlackBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:BlackButterfly ns1:hasAlignment ns1:chaoticGood .\n\nns1:BlackGoat ns1:hasAlignment ns1:neutralEvil .\n\nns1:BlackJinni ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BlackMagga ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BlackPudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:BlackScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:BlackShuck ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BlackSpotUrchin ns1:hasAlignment ns1:neutralEvil .\n\nns1:BlackWorm ns1:hasAlignment ns1:neutralEvil .\n\nns1:BlackwispEgret ns1:hasAlignment ns1:trueNeutral .\n\nns1:BlastShadow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BleedingHorrorMinotaur ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BlightedFeySatyr ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Blightrat ns1:hasAlignment ns1:neutralEvil .\n\nns1:Blightspawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Blindheim ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BlinkDog ns1:hasAlignment ns1:lawfulGood .\n\nns1:Blodeuwedd ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Blodeuweddqueen ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BloodAlgaeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodBramble ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodBush ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodCaterpillar ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodHag ns1:hasAlignment ns1:neutralEvil .\n\nns1:BloodKaktos ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BloodLily ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodMaize ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodOrc ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BloodOrchid ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BloodPudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodQueen ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BloodReaverDevilGaruginCR ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BloodWeird ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BloodWight ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bloodbrush ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodhazeMosquitoSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodplateBurster ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bloodsuckle ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodyBones ns1:hasAlignment ns1:neutralEvil .\n\nns1:BloodySkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:BlueRingedOctopus ns1:hasAlignment ns1:trueNeutral .\n\nns1:BlueWhale ns1:hasAlignment ns1:trueNeutral .\n\nns1:BluetipEurypterid ns1:hasAlignment ns1:trueNeutral .\n\nns1:Boalisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Boar ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoarDireDaeodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bodak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Bodythief ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BogBeast ns1:hasAlignment ns1:trueNeutral .\n\nns1:BogCreeper ns1:hasAlignment ns1:trueNeutral .\n\nns1:BogMummy ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BogNixie ns1:hasAlignment ns1:neutralEvil .\n\nns1:BogScum ns1:hasAlignment ns1:trueNeutral .\n\nns1:BogStrider ns1:hasAlignment ns1:trueNeutral .\n\nns1:BogStriderSeerQueen ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bogeyman ns1:hasAlignment ns1:neutralEvil .\n\nns1:Boggard ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Boggart ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Boggle ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Bogwid ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Bogwiggle ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Boilborn ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoneCobbler ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BoneCollective ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BoneCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoneCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoneDevilOsyluth ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BoneGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoneReaperReflection ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoneShip ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BonepowderGhoul ns1:hasAlignment ns1:neutralEvil .\n\nns1:Bonesnapper ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bonestorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Bonesucker ns1:hasAlignment ns1:neutralEvil .\n\nns1:Bonethorn ns1:hasAlignment ns1:trueNeutral .\n\nns1:BonewroughtWillow ns1:hasAlignment ns1:trueNeutral .\n\nns1:BookGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoreWormMonarch ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoreWormSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:BorealAnnisHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BorealManticore ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BorealWolf ns1:hasAlignment ns1:trueNeutral .\n\nns1:Boroboroton ns1:hasAlignment ns1:neutralEvil .\n\nns1:Boruta ns1:hasAlignment ns1:trueNeutral .\n\nns1:BotflySwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:BottledArmada ns1:hasAlignment ns1:trueNeutral .\n\nns1:Brachiosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrainMole ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrainMoleMonarch ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrainOoze ns1:hasAlignment ns1:neutralEvil .\n\nns1:BrainRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bralani ns1:hasAlignment ns1:chaoticGood .\n\nns1:Bramblelash ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrassDragonGreatWyrm ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonJuvenile ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonMatureAdult ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonOld ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonVeryOld ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonVeryYoung ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonWyrm ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonWyrmling ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonYoungAdult ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrassJuggernaut ns1:hasAlignment ns1:trueNeutral .\n\nns1:Brethedan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Brijidine ns1:hasAlignment ns1:chaoticGood .\n\nns1:Brimorak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BrimstoneOoze ns1:hasAlignment ns1:neutralEvil .\n\nns1:BrineDragonAncient ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonGreatWyrm ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonJuvenile ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonMatureAdult ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonOld ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonVeryOld ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonVeryYoung ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonWyrm ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonWyrmling ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonYoungAdult ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineSeaSerpent ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BrineZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Brinedragonadult ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BringDragonYoung ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BristleBoar ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrokenChild ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BrokenSoulLillend ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Brontotherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:BronzeDragonGreatWyrm ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonJuvenile ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonMatureAdult ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonOld ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonVeryOld ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonVeryYoung ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonWyrm ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonWyrmling ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonYoungAdult ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:BronzeSentinel ns1:hasAlignment ns1:trueNeutral .\n\nns1:Broodiken ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrownBearorGrizzlyKodiakRussianBrown ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrownPudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:Brownie ns1:hasAlignment ns1:trueNeutral .\n\nns1:Brume ns1:hasAlignment ns1:neutralEvil .\n\nns1:BrushThylacine ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrutalisDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BruteDemonBalban ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BruteWight ns1:hasAlignment ns1:trueNeutral .\n\nns1:Brykolakas ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Buckawn ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bugbear ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BugbearEchohusk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Buggane ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Bukavac ns1:hasAlignment ns1:neutralEvil .\n\nns1:Bulabar ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Bulette ns1:hasAlignment ns1:trueNeutral .\n\nns1:BullShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bunyip ns1:hasAlignment ns1:trueNeutral .\n\nns1:Buraq ns1:hasAlignment ns1:neutralGood .\n\nns1:Burleev ns1:hasAlignment ns1:trueNeutral .\n\nns1:BurningChild ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BurningDervish ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BurningGiantBeheaded ns1:hasAlignment ns1:neutralEvil .\n\nns1:BurningMedusaHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:BurningSeveredHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:Burrowling ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Burstigeit ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bushyasta ns1:hasAlignment ns1:neutralEvil .\n\nns1:Byakhee ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Bythos ns1:hasAlignment ns1:trueNeutral .\n\nns1:CAVEGIANT ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CHALKYDRI ns1:hasAlignment ns1:neutralGood .\n\nns1:CLOCKWORKSCOUT ns1:hasAlignment ns1:trueNeutral .\n\nns1:CRABMAN ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaasimolarFormerPresidentofHell ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Cacodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:CactusLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cadaver ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CadaverLord ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CairnLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CaizelDeposedQueenofSuccubi ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Calathgar ns1:hasAlignment ns1:trueNeutral .\n\nns1:Calikang ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:CallerinDarkness ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CalligraphyWyrm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Calpina ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Cambion ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Camel ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cameroceras ns1:hasAlignment ns1:trueNeutral .\n\nns1:CandleCorpse ns1:hasAlignment ns1:trueNeutral .\n\nns1:CandlestoneCourtier ns1:hasAlignment ns1:neutralEvil .\n\nns1:CannibalChild ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CannonGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:CanopyCreeper ns1:hasAlignment ns1:trueNeutral .\n\nns1:CanopyTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Cantor ns1:hasAlignment ns1:lawfulEvil .\n\nns1:CapacitorOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Capramace ns1:hasAlignment ns1:trueNeutral .\n\nns1:Carbuncle ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarbuncleChampion ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarbuncleCompanion ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarbuncleHero ns1:hasAlignment ns1:trueNeutral .\n\nns1:CardinalMartyr ns1:hasAlignment ns1:lawfulGood .\n\nns1:CarnivorousBlob ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarnivorousCrystal ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarrionBeast ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CarrionBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarrionClaw ns1:hasAlignment ns1:neutralEvil .\n\nns1:CarrionCreeper ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarrionGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarrionGolemMount ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarrionGolemstandin ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarrionMoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Carrionstorm ns1:hasAlignment ns1:neutralEvil .\n\nns1:CaryatidColumn ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaryatidGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cassisian ns1:hasAlignment ns1:neutralGood .\n\nns1:Castellan ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Cat ns1:hasAlignment ns1:trueNeutral .\n\nns1:CatLordPantherForm ns1:hasAlignment ns1:trueNeutral .\n\nns1:CatSith ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Cataboligne ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Caterprism ns1:hasAlignment ns1:trueNeutral .\n\nns1:Caterwaul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Catfolk ns1:hasAlignment ns1:neutralGood .\n\nns1:Catoblepas ns1:hasAlignment ns1:trueNeutral .\n\nns1:Catrina ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cauchemar ns1:hasAlignment ns1:trueNeutral .\n\nns1:Caulborn ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaulbornThoughtkeeper ns1:hasAlignment ns1:trueNeutral .\n\nns1:CauldronBloom ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveBlight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CaveCricket ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveFisher ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CaveLeech ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveMoray ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CavelightMoss ns1:hasAlignment ns1:trueNeutral .\n\nns1:CavernLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cayhound ns1:hasAlignment ns1:chaoticGood .\n\nns1:Caypup ns1:hasAlignment ns1:chaoticGood .\n\nns1:Cecaelia ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Celedeen ns1:hasAlignment ns1:chaoticGood .\n\nns1:Celedon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Centaur ns1:hasAlignment ns1:trueNeutral .\n\nns1:CentipedeGiantWhiptail ns1:hasAlignment ns1:trueNeutral .\n\nns1:CentipedeGreatForest ns1:hasAlignment ns1:trueNeutral .\n\nns1:CentipedeHissing ns1:hasAlignment ns1:trueNeutral .\n\nns1:CentipedeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:CentipedeTitan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cephalophore ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ceratioidi ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ceratosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cerberi ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Cerberus ns1:hasAlignment ns1:neutralEvil .\n\nns1:CerberusWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:CerebralStalker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CerebricCyst ns1:hasAlignment ns1:neutralEvil .\n\nns1:CerebricFungus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ceru ns1:hasAlignment ns1:neutralGood .\n\nns1:Cervapral ns1:hasAlignment ns1:neutralGood .\n\nns1:Cervinal ns1:hasAlignment ns1:neutralGood .\n\nns1:CervineProtector ns1:hasAlignment ns1:lawfulGood .\n\nns1:Cerynitis ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cetaceal ns1:hasAlignment ns1:neutralGood .\n\nns1:Cetus ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Ceustodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:ChagBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:ChainWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chalicotherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chalkost ns1:hasAlignment ns1:lawfulGood .\n\nns1:ChampionAutomaton ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ChampionofPeace ns1:hasAlignment ns1:neutralGood .\n\nns1:ChanequeMR ns1:hasAlignment ns1:neutralEvil .\n\nns1:Changeling ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ChaosBeast ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ChaosDemonChoronzon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CharauKa ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Charda ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ChariotBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:CharnelColossus ns1:hasAlignment ns1:neutralEvil .\n\nns1:CharnelGod ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CharnelWhisperer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Charon ns1:hasAlignment ns1:neutralEvil .\n\nns1:CharonBoatmanofthelowerplanesCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:Charonodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Charybdis ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Chavazvug ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Cheetah ns1:hasAlignment ns1:trueNeutral .\n\nns1:CheitanDjinni ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CheitanJanni ns1:hasAlignment ns1:neutralEvil .\n\nns1:Chelarac ns1:hasAlignment ns1:neutralEvil .\n\nns1:ChelaracBroodling ns1:hasAlignment ns1:neutralEvil .\n\nns1:Chelicerae ns1:hasAlignment ns1:neutralEvil .\n\nns1:Chelonidal ns1:hasAlignment ns1:neutralGood .\n\nns1:Chemosit ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chernobue ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Cherufe ns1:hasAlignment ns1:neutralEvil .\n\nns1:Cherum ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chickcharney ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chicken ns1:hasAlignment ns1:trueNeutral .\n\nns1:ChickenCoop ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chikfari ns1:hasAlignment ns1:trueNeutral .\n\nns1:ChildoftheBriar ns1:hasAlignment ns1:neutralEvil .\n\nns1:Chimera ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Chimpanzee ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chiropteal ns1:hasAlignment ns1:neutralGood .\n\nns1:Chitikin ns1:hasAlignment ns1:trueNeutral .\n\nns1:Choker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ChokerBrute ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CholericOozeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:ChonChon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ChonChonSwarm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Choral ns1:hasAlignment ns1:neutralGood .\n\nns1:ChortDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Choxani ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ChrestomathCaulborn ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chronogeist ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Chrystone ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chupacabra ns1:hasAlignment ns1:trueNeutral .\n\nns1:ChurchGrim ns1:hasAlignment ns1:lawfulGood .\n\nns1:Churr ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chuspiki ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Chuul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ChuulLesser ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Chyzaedu ns1:hasAlignment ns1:lawfulEvil .\n\nns1:CicadaSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cikavak ns1:hasAlignment ns1:trueNeutral .\n\nns1:CinderGhoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CinderWolf ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cinderghost ns1:hasAlignment ns1:neutralEvil .\n\nns1:Cipactli ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ClackingSkullSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:ClamGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:Clamor ns1:hasAlignment ns1:trueNeutral .\n\nns1:Clawbat ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClawedKadian ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ClayGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:CliffGiant ns1:hasAlignment ns1:neutralGood .\n\nns1:Cloaker ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ClockworkAdvancedBronzeGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkAngel ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkAssassin ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkBrainGear ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkDrone ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkExcavator ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkFamiliar ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkFiend ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkGoblin ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkGoliath ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkGuardian ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkGunslinger ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkHound ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkHuntsman ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkLeviathan ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkMage ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkMyrmidon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkNautiloid ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkOverseer ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkParasite ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkPriest ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkReliquary ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ClockworkServant ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkSoldier ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkSongbird ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkSpy ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkSteed ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkTitan ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkWarrior ns1:hasAlignment ns1:trueNeutral .\n\nns1:CloudDragonAncient ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonGreatWyrm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonJuvenile ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonMatureAdult ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonOld ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonVeryOld ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonVeryYoung ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonWyrm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonWyrmling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonYoung ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonYoungAdult ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudGiantSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:ClowderofCats ns1:hasAlignment ns1:trueNeutral .\n\nns1:CobraBackInphidian ns1:hasAlignment ns1:neutralEvil .\n\nns1:CobraFlower ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cockatrice ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cockroach ns1:hasAlignment ns1:trueNeutral .\n\nns1:CockroachGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:CockroachSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:CodexArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:CofferCorpse ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CoffinAnemone ns1:hasAlignment ns1:trueNeutral .\n\nns1:ColdMutatedOgreSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:ColdRider ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ColdsnapBasilisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Colliatur ns1:hasAlignment ns1:neutralGood .\n\nns1:ColossalAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:ColourOutofSpace ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Coloxus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CombatTrainedWolliped ns1:hasAlignment ns1:trueNeutral .\n\nns1:Combusted ns1:hasAlignment ns1:neutralEvil .\n\nns1:CommandoConstruct ns1:hasAlignment ns1:trueNeutral .\n\nns1:CommonBat ns1:hasAlignment ns1:trueNeutral .\n\nns1:CommonDrow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CommonEurypterid ns1:hasAlignment ns1:trueNeutral .\n\nns1:CommonInphidian ns1:hasAlignment ns1:neutralEvil .\n\nns1:CommonMite ns1:hasAlignment ns1:lawfulEvil .\n\nns1:CommonTimeElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ComozantWyrd ns1:hasAlignment ns1:trueNeutral .\n\nns1:Compsognathus ns1:hasAlignment ns1:trueNeutral .\n\nns1:ConfoundingBandersnatch ns1:hasAlignment ns1:trueNeutral .\n\nns1:ConquerorWorm ns1:hasAlignment ns1:neutralEvil .\n\nns1:ConstrictorSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:Contemplative ns1:hasAlignment ns1:trueNeutral .\n\nns1:ContractDevilPhistophilus ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Cooshee ns1:hasAlignment ns1:trueNeutral .\n\nns1:CopperDragonGreatWyrm ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonJuvenile ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonMatureAdult ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonOld ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonVeryOld ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonVeryYoung ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonWyrm ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonWyrmling ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonYoungAdult ns1:hasAlignment ns1:chaoticGood .\n\nns1:Copsewight ns1:hasAlignment ns1:neutralEvil .\n\nns1:CoralCapuchin ns1:hasAlignment ns1:trueNeutral .\n\nns1:CoralDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:CoralGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:CorpseCandle ns1:hasAlignment ns1:neutralEvil .\n\nns1:CorpseLotus ns1:hasAlignment ns1:trueNeutral .\n\nns1:CorpseOrgy ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CorpseRook ns1:hasAlignment ns1:trueNeutral .\n\nns1:CorpsefeasterOtyugh ns1:hasAlignment ns1:trueNeutral .\n\nns1:Corpsespinner ns1:hasAlignment ns1:trueNeutral .\n\nns1:CorpsewaterBogMummy ns1:hasAlignment ns1:lawfulEvil .\n\nns1:CorpulentGhoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Couatl ns1:hasAlignment ns1:lawfulGood .\n\nns1:CovenOctopus ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:CovenOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrabCoconut ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrabGreatReef ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrabHermitGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:CracklingSkullSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:CragMan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CrawlingHand ns1:hasAlignment ns1:neutralEvil .\n\nns1:CrawlingHandGiant ns1:hasAlignment ns1:neutralEvil .\n\nns1:CreamfootFennec ns1:hasAlignment ns1:trueNeutral .\n\nns1:CreeperIvy ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrimsonBasilisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrimsonDeath ns1:hasAlignment ns1:neutralEvil .\n\nns1:CrimsonJellyfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrimsonWhale ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrimsonWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Criosphinx ns1:hasAlignment ns1:trueNeutral .\n\nns1:Crocodile ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrocodileDire ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrocodileZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:CroneQueen ns1:hasAlignment ns1:neutralEvil .\n\nns1:Crucidaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:CrucifixionSpirit ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Cryohydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:CryptFlower ns1:hasAlignment ns1:trueNeutral .\n\nns1:CryptThing ns1:hasAlignment ns1:neutralEvil .\n\nns1:Cryptguard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Crysmal ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrystalDragonGreatWyrm ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonJuvenile ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonMatureAdult ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonOld ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonVeryOld ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonVeryYoung ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonWyrm ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonWyrmling ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonYoungAdult ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrystalOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrystallineHorror ns1:hasAlignment ns1:neutralEvil .\n\nns1:Crystallis ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cuero ns1:hasAlignment ns1:trueNeutral .\n\nns1:CultistTroop ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CursedBeast ns1:hasAlignment ns1:neutralEvil .\n\nns1:CursedKing ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CutlassSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cyclops ns1:hasAlignment ns1:neutralEvil .\n\nns1:Cynosoma ns1:hasAlignment ns1:chaoticGood .\n\nns1:Cyphergull ns1:hasAlignment ns1:trueNeutral .\n\nns1:CystTrinityHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Cythnigot ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Cytillipede ns1:hasAlignment ns1:trueNeutral .\n\nns1:Daggocrustler ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dagon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DagonDemonPrinceoftheSea ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Dahzagan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Daitengu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dakon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Dallo ns1:hasAlignment ns1:trueNeutral .\n\nns1:DamnationBook ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Damned ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DanavaMR ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:DancerInphidian ns1:hasAlignment ns1:neutralEvil .\n\nns1:Dandasuka ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DanseMacabre ns1:hasAlignment ns1:neutralEvil .\n\nns1:Danthienne ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Dapsara ns1:hasAlignment ns1:neutralGood .\n\nns1:DarakhulOgre ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DarkAngel ns1:hasAlignment ns1:neutralEvil .\n\nns1:DarkCaller ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DarkCreeper ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DarkDancer ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DarkEmpath ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DarkIceGrig ns1:hasAlignment ns1:neutralGood .\n\nns1:DarkMatterEntropicOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:DarkScionDwarf ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DarkSlayer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DarkStalker ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DarkYoungofShubNiggurath ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Darkling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Darkmantle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Darnoc ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DaughterofShubNiggurath ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DaughteroftheDead ns1:hasAlignment ns1:neutralEvil .\n\nns1:DeadfallScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:DeadlyMantis ns1:hasAlignment ns1:trueNeutral .\n\nns1:DeathButterflySwarm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeathCoach ns1:hasAlignment ns1:neutralEvil .\n\nns1:DeathDog ns1:hasAlignment ns1:neutralEvil .\n\nns1:DeathWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Deathhand ns1:hasAlignment ns1:neutralEvil .\n\nns1:DeathleechHornedDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DeathlessSorcerer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeathsHeadJellyfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:Deathsnatcher ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeathtrapOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Deathweb ns1:hasAlignment ns1:trueNeutral .\n\nns1:DebasedAsrai ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DebasedNixie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Decapus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeepBadger ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeepHunterSeaSerpent ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:DeepMerfolk ns1:hasAlignment ns1:trueNeutral .\n\nns1:DeepNaga ns1:hasAlignment ns1:neutralEvil .\n\nns1:DeepOne ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeepOneHybrid ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeepOneScion ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeepSeaSerpent ns1:hasAlignment ns1:trueNeutral .\n\nns1:DeepSingerWhale ns1:hasAlignment ns1:trueNeutral .\n\nns1:DeepWalker ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DeepsightGogglesSymbiont ns1:hasAlignment ns1:trueNeutral .\n\nns1:Deer ns1:hasAlignment ns1:trueNeutral .\n\nns1:DefenderGlobe ns1:hasAlignment ns1:trueNeutral .\n\nns1:DegenerateOgre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DegenerateSerpentfolk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Deinochos ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Deinonychus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Deinosuchus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Deinotherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:Delgeth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Delver ns1:hasAlignment ns1:trueNeutral .\n\nns1:Demammoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:DemiLich ns1:hasAlignment ns1:neutralEvil .\n\nns1:Demilich ns1:hasAlignment ns1:neutralEvil .\n\nns1:Demiurge ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DemonStone ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DemonicDeadfallScorpion ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DemonicKnight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DemonicMohrg ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DemorielTwiceExiledSeductress ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DenizenofLeng ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DerakniLocustDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Derghodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Derhii ns1:hasAlignment ns1:trueNeutral .\n\nns1:Derro ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DerroFetalSavant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DerroMagister ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DesertBlight ns1:hasAlignment ns1:neutralEvil .\n\nns1:DesertDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:DesertGiant ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:DespicableSnowman ns1:hasAlignment ns1:neutralEvil .\n\nns1:Destrachan ns1:hasAlignment ns1:neutralEvil .\n\nns1:DevastatorMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DevilDog ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DevilMonkey ns1:hasAlignment ns1:trueNeutral .\n\nns1:DevilSteed ns1:hasAlignment ns1:neutralEvil .\n\nns1:Devilfish ns1:hasAlignment ns1:neutralEvil .\n\nns1:Devourer ns1:hasAlignment ns1:neutralEvil .\n\nns1:DevouringMist ns1:hasAlignment ns1:neutralEvil .\n\nns1:Dhampir ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Dhole ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DholeHatchling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DiamondSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Diatryma ns1:hasAlignment ns1:trueNeutral .\n\nns1:Digester ns1:hasAlignment ns1:trueNeutral .\n\nns1:Digmaul ns1:hasAlignment ns1:trueNeutral .\n\nns1:DimensionWalker ns1:hasAlignment ns1:neutralEvil .\n\nns1:DimensionalShambler ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Dimetrodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dimorphodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Diplodocus ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireApeGigantopithecus ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireBadger ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireBarracuda ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireBat ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireBison ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireCorby ns1:hasAlignment ns1:neutralEvil .\n\nns1:DireCorgi ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireElectricEel ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireFlytrap ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireGhoulWolf ns1:hasAlignment ns1:neutralEvil .\n\nns1:DireGoat ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireGrasshopperMouse ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireHippopotamusBehemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireHyena ns1:hasAlignment ns1:trueNeutral .\n\nns1:DirePolarBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:DirePorcupine ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireRacoon ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireRam ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireRatCompanionLevel ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireShadowRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireSharkMegalodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireSloth ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireSmilodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireWeasel ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireWolf ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireWolfwere ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DireWolverine ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireorCaveBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:DiseasedRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Disenchanter ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dispater ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DivineGuardianHydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:Djinni ns1:hasAlignment ns1:chaoticGood .\n\nns1:Dlurgraven ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dodo ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dog ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dogmole ns1:hasAlignment ns1:trueNeutral .\n\nns1:DogmoleJuggernaut ns1:hasAlignment ns1:trueNeutral .\n\nns1:DollDevilArusities ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Dolphin ns1:hasAlignment ns1:trueNeutral .\n\nns1:DomesticatedorWildWolliped ns1:hasAlignment ns1:trueNeutral .\n\nns1:DominationDevilGladiatrix ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Domovoi ns1:hasAlignment ns1:chaoticGood .\n\nns1:DonkeyRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Donratty ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Doombat ns1:hasAlignment ns1:neutralEvil .\n\nns1:Doorwarden ns1:hasAlignment ns1:trueNeutral .\n\nns1:Doppeldrek ns1:hasAlignment ns1:trueNeutral .\n\nns1:Doppelrat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Doru ns1:hasAlignment ns1:neutralEvil .\n\nns1:Dorvae ns1:hasAlignment ns1:neutralEvil .\n\nns1:DosojinKami ns1:hasAlignment ns1:neutralGood .\n\nns1:Dossenus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Draaki ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dracolisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Draconal ns1:hasAlignment ns1:neutralGood .\n\nns1:Draconid ns1:hasAlignment ns1:trueNeutral .\n\nns1:DraftHeavyHorse ns1:hasAlignment ns1:trueNeutral .\n\nns1:Draghul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DragonHorse ns1:hasAlignment ns1:neutralGood .\n\nns1:DragonTurtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dragonfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:DragonflyGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:DragonflyGiantNymph ns1:hasAlignment ns1:trueNeutral .\n\nns1:DragonhideGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dragonkin ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:DragonleafTreepp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dragonne ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dragonnel ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dragonship ns1:hasAlignment ns1:trueNeutral .\n\nns1:DrakainiaMR ns1:hasAlignment ns1:neutralEvil .\n\nns1:Drakauthix ns1:hasAlignment ns1:trueNeutral .\n\nns1:Draug ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Draugr ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DreadCorby ns1:hasAlignment ns1:neutralEvil .\n\nns1:DreadWraith ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DreadZombieAasimarWarrior ns1:hasAlignment ns1:trueNeutral .\n\nns1:DreamEater ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DreamImpCompanion ns1:hasAlignment ns1:neutralGood .\n\nns1:DreamImpCousin ns1:hasAlignment ns1:neutralGood .\n\nns1:DreamImpHero ns1:hasAlignment ns1:neutralGood .\n\nns1:DreamSpectre ns1:hasAlignment ns1:neutralEvil .\n\nns1:DreamSpectreNightmareCreature ns1:hasAlignment ns1:neutralEvil .\n\nns1:DreamSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:DreamVestigeMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DreamthiefHag ns1:hasAlignment ns1:neutralEvil .\n\nns1:Drekavac ns1:hasAlignment ns1:neutralEvil .\n\nns1:Dretch ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DrochaSwarm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DrowNoble ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DrownedMaiden ns1:hasAlignment ns1:neutralEvil .\n\nns1:DrowningDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Dryad ns1:hasAlignment ns1:chaoticGood .\n\nns1:Duergar ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DuergarTyrant ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Dullahan ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DunPudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:Duneshaker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dunkleosteus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Duppy ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DuskKamadan ns1:hasAlignment ns1:neutralEvil .\n\nns1:Duskwalker ns1:hasAlignment ns1:trueNeutral .\n\nns1:DustDigger ns1:hasAlignment ns1:trueNeutral .\n\nns1:DustGhoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DustMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dvorovoi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DwarfCaiman ns1:hasAlignment ns1:trueNeutral .\n\nns1:DweomerCap ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dweomercat ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DweomercatCub ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Dwiergeth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Dybbuk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Dyme ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Dziriak ns1:hasAlignment ns1:trueNeutral .\n\nns1:D\u00f8delig ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Eagle ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthElementalBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthElementalChampion ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthElementalConstruct ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthElementalSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthVeela ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthWysp ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthYaiOni ns1:hasAlignment ns1:neutralEvil .\n\nns1:EarthenSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Earthfiend ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EarthkingKaiju ns1:hasAlignment ns1:neutralGood .\n\nns1:Eblis ns1:hasAlignment ns1:neutralEvil .\n\nns1:EbonOoze ns1:hasAlignment ns1:neutralEvil .\n\nns1:EbonyGelatinousCube ns1:hasAlignment ns1:trueNeutral .\n\nns1:Echeneis ns1:hasAlignment ns1:trueNeutral .\n\nns1:EclipseGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ecorche ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EcstasyFeeder ns1:hasAlignment ns1:neutralEvil .\n\nns1:EctoplasmghostOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:EctoplasmicHuman ns1:hasAlignment ns1:trueNeutral .\n\nns1:Edimmu ns1:hasAlignment ns1:trueNeutral .\n\nns1:EelHound ns1:hasAlignment ns1:trueNeutral .\n\nns1:Efreeti ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EfreetiJanissary ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Egophage ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Egregore ns1:hasAlignment ns1:trueNeutral .\n\nns1:Einherji ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:EirisaiAncestor ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:EirisaiGreater ns1:hasAlignment ns1:trueNeutral .\n\nns1:EirisaiLesser ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:EirisaiMaster ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:EirisaiMedial ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Elasmosarus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Elasmotherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElasmotheriumGiantWoolyRhinoCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Elawah ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ElderAcidQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderAetherElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderAirElemental ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ElderColdironElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderDeepOne ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ElderEarthElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderFireElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderIceElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderLightningElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderMagmaElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderMudElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderNegativeEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderNirento ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderObsidianQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderPositiveEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderPsionicElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderThing ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ElderWaterElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderWitchlight ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderWorg ns1:hasAlignment ns1:neutralEvil .\n\nns1:ElderWyrm ns1:hasAlignment ns1:trueNeutral .\n\nns1:EldritchSteamMephit ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ElectricCube ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElectricEel ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElectricFroghemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElementalAirDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElementalDrake ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ElementalEarthDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElementalFireDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElementalWaterDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Elephant ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElephantSeal ns1:hasAlignment ns1:trueNeutral .\n\nns1:EliteShadowMastiff ns1:hasAlignment ns1:neutralEvil .\n\nns1:Elk ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElohimMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElusaHound ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElysianTitan ns1:hasAlignment ns1:chaoticGood .\n\nns1:EmbalmingGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:EmberWeaver ns1:hasAlignment ns1:trueNeutral .\n\nns1:Embolotherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:EmeraldOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Emkrah ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EmotionOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:EmperorBird ns1:hasAlignment ns1:trueNeutral .\n\nns1:EmperorCobra ns1:hasAlignment ns1:trueNeutral .\n\nns1:EmperorKirin ns1:hasAlignment ns1:lawfulGood .\n\nns1:EmperorStag ns1:hasAlignment ns1:trueNeutral .\n\nns1:EmperorWalrus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Emperorofscales ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EmpressBoreWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Empusa ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Empyreal ns1:hasAlignment ns1:lawfulGood .\n\nns1:Empyrean ns1:hasAlignment ns1:neutralGood .\n\nns1:Emu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Encantado ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:EncephalonGorger ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EncephalonGorgerPsychic ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EnchanterHeron ns1:hasAlignment ns1:trueNeutral .\n\nns1:EnergizedIceGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:EnergyProtectionSymbiont ns1:hasAlignment ns1:trueNeutral .\n\nns1:Enisysian ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EnlightenedConstructClockworkSoldier ns1:hasAlignment ns1:neutralEvil .\n\nns1:EnlightenedContemplative ns1:hasAlignment ns1:trueNeutral .\n\nns1:EnormousReefclaw ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:EnslavedSpawn ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EntropicOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:EnvironmentalSuitSymbiont ns1:hasAlignment ns1:trueNeutral .\n\nns1:Enzyme ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ercinee ns1:hasAlignment ns1:trueNeutral .\n\nns1:EremiteKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EremiteSymbiont ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EremiteWizard ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ErinatGremlin ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Erlking ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Erodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Escorite ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Esipil ns1:hasAlignment ns1:neutralEvil .\n\nns1:Esobok ns1:hasAlignment ns1:trueNeutral .\n\nns1:EtherDrake ns1:hasAlignment ns1:trueNeutral .\n\nns1:EtherealFilcher ns1:hasAlignment ns1:trueNeutral .\n\nns1:EtherealGraveyardTool ns1:hasAlignment ns1:trueNeutral .\n\nns1:EtherealMarauder ns1:hasAlignment ns1:trueNeutral .\n\nns1:EtherealRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:EthericJelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:Etheroot ns1:hasAlignment ns1:trueNeutral .\n\nns1:Etiainen ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Etioling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Ettercap ns1:hasAlignment ns1:neutralEvil .\n\nns1:Euryale ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EvilEye ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ExecutionerDevilMunagola ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ExecutionersHood ns1:hasAlignment ns1:trueNeutral .\n\nns1:ExiledShade ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ExoskeletonGiantCockroach ns1:hasAlignment ns1:neutralEvil .\n\nns1:ExoskeletonGiantStagBeetle ns1:hasAlignment ns1:neutralEvil .\n\nns1:ExoskeletonTitanCentipede ns1:hasAlignment ns1:neutralEvil .\n\nns1:ExsanguinatorDaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Exscinder ns1:hasAlignment ns1:lawfulGood .\n\nns1:EyeEater ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EyeKiller ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EyeSentinel ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EyeoftheDeep ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EyeoftheWatcher ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FacelessDemonGallu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FacelessDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FacelessFleshGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:FacelessHulkUgoroth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FacelessStalkerUgothol ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FacelessWhale ns1:hasAlignment ns1:trueNeutral .\n\nns1:Fachen ns1:hasAlignment ns1:neutralEvil .\n\nns1:FadingFox ns1:hasAlignment ns1:trueNeutral .\n\nns1:FaerieDragonDracoFraudatioMinimus ns1:hasAlignment ns1:chaoticGood .\n\nns1:FaerieMount ns1:hasAlignment ns1:trueNeutral .\n\nns1:FaerieSeer ns1:hasAlignment ns1:trueNeutral .\n\nns1:Faeriedragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:FailedApotheosisMimic ns1:hasAlignment ns1:neutralEvil .\n\nns1:Fallen ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FalseSpiderPedipalp ns1:hasAlignment ns1:trueNeutral .\n\nns1:FalseSpiderSolifugid ns1:hasAlignment ns1:trueNeutral .\n\nns1:FamiliarAutomaton ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FangedSeaSerpent ns1:hasAlignment ns1:trueNeutral .\n\nns1:FastZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Fastachee ns1:hasAlignment ns1:neutralGood .\n\nns1:Faun ns1:hasAlignment ns1:chaoticGood .\n\nns1:FearEater ns1:hasAlignment ns1:neutralEvil .\n\nns1:FearGuard ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Feargaunt ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FeliusDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Fellforged ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FellnightSpriggan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Fellsig ns1:hasAlignment ns1:neutralEvil .\n\nns1:FenMauler ns1:hasAlignment ns1:neutralEvil .\n\nns1:FenWitch ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FeralHogTroop ns1:hasAlignment ns1:trueNeutral .\n\nns1:FeralTitanLord ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:FerrousGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:FesteringSpirit ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Festrog ns1:hasAlignment ns1:neutralEvil .\n\nns1:Fetch ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FetchlingKayal ns1:hasAlignment ns1:trueNeutral .\n\nns1:FetidSporeMound ns1:hasAlignment ns1:trueNeutral .\n\nns1:FetidStray ns1:hasAlignment ns1:neutralEvil .\n\nns1:Fext ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FeyGiantToad ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:FeyWolverine ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Feyling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:FeywardTree ns1:hasAlignment ns1:trueNeutral .\n\nns1:FiendInfusedStoneGolem ns1:hasAlignment ns1:neutralEvil .\n\nns1:FiendishHeavyWarHorse ns1:hasAlignment ns1:neutralEvil .\n\nns1:FieryCorpseOrgy ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Firbolg ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireBirdCompanion ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireCrabGreater ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireCrabLesser ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireDrake ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireElementalConstruct ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireFish ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireGiant ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FireInfusedTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FireLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireNymph ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:FirePhantom ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FireSalamander ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireVampire ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FireVeela ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireWhale ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireWysp ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireYai ns1:hasAlignment ns1:neutralEvil .\n\nns1:Firebird ns1:hasAlignment ns1:neutralGood .\n\nns1:Firefiend ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FirefootFennec ns1:hasAlignment ns1:trueNeutral .\n\nns1:FjordLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FlagstoneGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlailSnail ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlailSnailFrogGodGames ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlameDrake ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FlameSpawnedTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FlamebrotherSalamander ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FlamingSkull ns1:hasAlignment ns1:neutralEvil .\n\nns1:FlappingHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:FlashBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlayerDevilMarzach ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FleaGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:FleshColossusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:FleshGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:FleshGolemHound ns1:hasAlignment ns1:trueNeutral .\n\nns1:FleshdollRogue ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Fleshdreg ns1:hasAlignment ns1:neutralEvil .\n\nns1:FleshdregSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:FlightPack ns1:hasAlignment ns1:trueNeutral .\n\nns1:FloatingEye ns1:hasAlignment ns1:trueNeutral .\n\nns1:FloodTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FloodslainArsinoitherium ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FloodslainOrc ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FlotsamTerror ns1:hasAlignment ns1:neutralEvil .\n\nns1:FloweringLattice ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlueHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Flumph ns1:hasAlignment ns1:lawfulGood .\n\nns1:Fluxwraith ns1:hasAlignment ns1:neutralEvil .\n\nns1:FlyGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlyingFox ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlyingPolyp ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FlyingSquirrel ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlytrapLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:Fogwarden ns1:hasAlignment ns1:neutralEvil .\n\nns1:FomorianTitanMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FooDog ns1:hasAlignment ns1:neutralGood .\n\nns1:ForestBlight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ForestDrake ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ForestGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ForestersBane ns1:hasAlignment ns1:trueNeutral .\n\nns1:ForgeSpurned ns1:hasAlignment ns1:neutralEvil .\n\nns1:ForgefiendScanderig ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ForgottenOne ns1:hasAlignment ns1:trueNeutral .\n\nns1:ForkedCat ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ForkedTailWyvern ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Forlarren ns1:hasAlignment ns1:neutralEvil .\n\nns1:FormianHiveQueen ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormianMyrmarch ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormianQueen ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormianRoyalGuard ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormianTaskmaster ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormianWarrior ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormianWorker ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormlessSpawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FortunesellerGoblin ns1:hasAlignment ns1:trueNeutral .\n\nns1:Fossegrim ns1:hasAlignment ns1:neutralEvil .\n\nns1:FossilGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:FourArmedGargoyle ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FourArmedMudraSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:FourArmedSahuaginMutant ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Fox ns1:hasAlignment ns1:trueNeutral .\n\nns1:Foxwere ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FrazUrbluuDemonPrinceofDeception ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FreezingFlow ns1:hasAlignment ns1:trueNeutral .\n\nns1:FreshwaterMerrow ns1:hasAlignment ns1:neutralEvil .\n\nns1:FrogDemonGreruor ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FrogFather ns1:hasAlignment ns1:trueNeutral .\n\nns1:FrogGiantDire ns1:hasAlignment ns1:trueNeutral .\n\nns1:FrogPoisonous ns1:hasAlignment ns1:trueNeutral .\n\nns1:Froghemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:FrostCube ns1:hasAlignment ns1:trueNeutral .\n\nns1:FrostDrake ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FrostGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FrostMan ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FrostMiteSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:FrostWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:FrostdeathDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:FrostfallenMammoth ns1:hasAlignment ns1:neutralEvil .\n\nns1:FrostyChiseler ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FrumiousBandersnatch ns1:hasAlignment ns1:trueNeutral .\n\nns1:FukujinKami ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Fuldrex ns1:hasAlignment ns1:neutralEvil .\n\nns1:Fulgati ns1:hasAlignment ns1:trueNeutral .\n\nns1:Funayurei ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FungalCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:FungalLizardfolk ns1:hasAlignment ns1:trueNeutral .\n\nns1:FungalNymph ns1:hasAlignment ns1:chaoticGood .\n\nns1:Fungiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:Funglet ns1:hasAlignment ns1:neutralGood .\n\nns1:Fungoid ns1:hasAlignment ns1:neutralEvil .\n\nns1:FungusGargoyle ns1:hasAlignment ns1:trueNeutral .\n\nns1:FungusLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:FungusMan ns1:hasAlignment ns1:trueNeutral .\n\nns1:FungusManKing ns1:hasAlignment ns1:trueNeutral .\n\nns1:FungusQueen ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FungusWeird ns1:hasAlignment ns1:trueNeutral .\n\nns1:Furcifer ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:FurnaceGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:FutureYithian ns1:hasAlignment ns1:neutralGood .\n\nns1:Fye ns1:hasAlignment ns1:trueNeutral .\n\nns1:Fyr ns1:hasAlignment ns1:trueNeutral .\n\nns1:GIANTWATERBEETLE ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Gaki ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gallerok ns1:hasAlignment ns1:trueNeutral .\n\nns1:GalluWarmongerDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Galvo ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gambado ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Gancanagh ns1:hasAlignment ns1:chaoticGood .\n\nns1:Ganzi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Gar ns1:hasAlignment ns1:trueNeutral .\n\nns1:GardenOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:GareLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GargantuanAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:GargantuanMonstrousSeaWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gargiya ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gargoyle ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GargoyleBrute ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GargoyleGuardian ns1:hasAlignment ns1:trueNeutral .\n\nns1:Garipan ns1:hasAlignment ns1:neutralEvil .\n\nns1:Garmunchi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Garuda ns1:hasAlignment ns1:chaoticGood .\n\nns1:Gashadokurou ns1:hasAlignment ns1:neutralEvil .\n\nns1:GateArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:Gathlain ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GatorGhoul ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gearghost ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Gearsman ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gegenees ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Geier ns1:hasAlignment ns1:trueNeutral .\n\nns1:Geist ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GelatinousCube ns1:hasAlignment ns1:trueNeutral .\n\nns1:GelatinousGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:GelatinousOrb ns1:hasAlignment ns1:trueNeutral .\n\nns1:GemCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:GemstoneGargoyle ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GeneralofVengeance ns1:hasAlignment ns1:lawfulGood .\n\nns1:Genghryl ns1:hasAlignment ns1:trueNeutral .\n\nns1:Genthodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Geon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GeruzouSlimeDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Geryon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GetofIblis ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GhaddarDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ghalzarokh ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ghast ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ghawwas ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gholdako ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ghole ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ghonhatine ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ghoran ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ghorazagh ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ghost ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ghoublin ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ghoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GhoulAvernal ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GhoulDireWolf ns1:hasAlignment ns1:neutralEvil .\n\nns1:GhoulHoundCompanion ns1:hasAlignment ns1:neutralEvil .\n\nns1:GhoulHoundHero ns1:hasAlignment ns1:neutralEvil .\n\nns1:GhoulStirge ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GhoulWolf ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ghul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GiantAbyssalDireFrog ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GiantAdultAntLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAdvancedDireBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAmoeba ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAnaconda ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAntDrone ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAntLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAntQueen ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAntSoldier ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAntSporeZombie ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GiantAntWorker ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAssassinBug ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAssassinSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBarracuda ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBee ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBeheaded ns1:hasAlignment ns1:neutralEvil .\n\nns1:GiantBelostomatid ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBlackWidowSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBlisterBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBlowfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBogTurtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBombardierBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBoringBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBotfly ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBumblebee ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBumblebeeQueen ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBumblebeeWorker ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantCaribe ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantCentipede ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantChameleon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantCicada ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantCockroachExoskeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:GiantConstrictorSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantCrabSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantDeathwatchBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantDemonGnoll ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantDireFrog ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantDragonflyXPNMediumverminInitSensesdarkvisionftPerceptionDEFENSEACtouchflatfootedDexnaturalhpdFortRefWillImmunevermintraitsOFFENSESpeedftflyftperfectMeleebitedTACTICSGiantdragonfliesareveryaggressiveandhuntwarmbloodedcreaturesfearlesslyattackinguntileithertheyortheirpreyaredeadSTATISTICSStrDexConIntWisChaBaseAtkCMBCMDvstripSkillsFly ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantEagle ns1:hasAlignment ns1:neutralGood .\n\nns1:GiantElectricCatfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantEmperorScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantFalcon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantFlea ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantFly ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantFlytrap ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantFrilledLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantFrog ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantGar ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantGecko ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantGroundCricket ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantGroundWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantHamster ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantHellgrammite ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantHissingCockroach ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantHornet ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantHorsefly ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantIsopod ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantKhopeshScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantLakeOctopus ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantLeech ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantLegwaterSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantLocust ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMaggot ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMantisCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMantisShrimp ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMarmoset ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMiningBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMonstrousCrayfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMorayEel ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMosquito ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMotleyCuttlefish ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMuckdweller ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantOctopus ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantOwl ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:GiantPhantomArmor ns1:hasAlignment ns1:neutralEvil .\n\nns1:GiantPike ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantPorcupine ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantQueenBee ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantRaven ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantRhinocerosBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantRotGrub ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSawtoothedBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantScarab ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSeaAnemone ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSeaSlug ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSeaSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSeahorse ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSkateSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSkunk ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSlicerBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSlug ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSnappingTurtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSolifugid ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantStagBeetleExoskeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:GiantStarfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantStargazer ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantStirge ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSundew ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTarantulaSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTardigrade ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTermite ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTick ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTigerBarb ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantToad ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTortoise ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTubeWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantVulture ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantWalkingStick ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantWaterStrider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantWeasel ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantYellowjacket ns1:hasAlignment ns1:trueNeutral .\n\nns1:Giantwingedchupacabra ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GibberingAbomination ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GibberingMouther ns1:hasAlignment ns1:trueNeutral .\n\nns1:GibberingOrb ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GibrilethDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Giganotosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:GigasClam ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GildedDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GildedSeaSerpent ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gillman ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ginever ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Giraffe ns1:hasAlignment ns1:trueNeutral .\n\nns1:Girallon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Girtablilu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gitwerc ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Glabrezu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GlacialOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:GlacierToad ns1:hasAlignment ns1:trueNeutral .\n\nns1:Glaciergeist ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GladiatorRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:GlaistigMR ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GlassGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:GlassUrchin ns1:hasAlignment ns1:trueNeutral .\n\nns1:GlassWyrm ns1:hasAlignment ns1:trueNeutral .\n\nns1:GlidingTurtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Glimmerhollow ns1:hasAlignment ns1:trueNeutral .\n\nns1:Globster ns1:hasAlignment ns1:trueNeutral .\n\nns1:GlomerayDaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:GloomCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gloomwing ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gluttongrass ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gnarlwood ns1:hasAlignment ns1:neutralEvil .\n\nns1:GnasherLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gnoll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GnollWhelp ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GnophKeh ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Gnophkeh ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gnorri ns1:hasAlignment ns1:trueNeutral .\n\nns1:Goat ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoatDemonMehrim ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Goblin ns1:hasAlignment ns1:neutralEvil .\n\nns1:GoblinDog ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoblinNaga ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GoblinSnake ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GoblinTroop ns1:hasAlignment ns1:neutralEvil .\n\nns1:Goemul ns1:hasAlignment ns1:neutralGood .\n\nns1:Goezspall ns1:hasAlignment ns1:trueNeutral .\n\nns1:GohlHydraCloud ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GoldDragonJuvenile ns1:hasAlignment ns1:lawfulGood .\n\nns1:GoldDragonMatureAdult ns1:hasAlignment ns1:lawfulGood .\n\nns1:GoldDragonOld ns1:hasAlignment ns1:lawfulGood .\n\nns1:GoldDragonVeryOld ns1:hasAlignment ns1:lawfulGood .\n\nns1:GoldDragonWyrm ns1:hasAlignment ns1:lawfulGood .\n\nns1:GoldDragonYoungAdult ns1:hasAlignment ns1:lawfulGood .\n\nns1:GoldGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoldenCat ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoldenCatDescendant ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoldenColossusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoldenScarabSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoldenSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:GolemCarrionweaponized ns1:hasAlignment ns1:trueNeutral .\n\nns1:GolemTreasure ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoliathFrog ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoliathSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoliathStagBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gongorinan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GongorinanQlippoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Gorbel ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gorgimera ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gorgon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gorgoni ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gorgoros ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GorillaBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:GorsonTheBloodDuke ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Gorynych ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GourdLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gowrow ns1:hasAlignment ns1:trueNeutral .\n\nns1:GrabbingGiantBeheaded ns1:hasAlignment ns1:neutralEvil .\n\nns1:GrabbingMedusaHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:GrabbingSeveredHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:GrachukkClanMaster ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GraeaeMR ns1:hasAlignment ns1:neutralEvil .\n\nns1:GrandfatherofFlowers ns1:hasAlignment ns1:neutralEvil .\n\nns1:Grangeri ns1:hasAlignment ns1:trueNeutral .\n\nns1:GrapplingClaw ns1:hasAlignment ns1:trueNeutral .\n\nns1:Grassling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Grauladon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GraveLynx ns1:hasAlignment ns1:neutralEvil .\n\nns1:GraveRisen ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GraveSage ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Gravebound ns1:hasAlignment ns1:neutralEvil .\n\nns1:GravenGuardian ns1:hasAlignment ns1:trueNeutral .\n\nns1:Graveshell ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gravesludge ns1:hasAlignment ns1:neutralEvil .\n\nns1:GravestoneDryad ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gray ns1:hasAlignment ns1:neutralEvil .\n\nns1:GrayApeDecurion ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:GrayApeLegionnaire ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:GrayApePirateKing ns1:hasAlignment ns1:trueNeutral .\n\nns1:GrayGoo ns1:hasAlignment ns1:trueNeutral .\n\nns1:GrayNisp ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GrayOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:GrayRender ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatAssassinBug ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatCaretaker ns1:hasAlignment ns1:neutralGood .\n\nns1:GreatCyclops ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreatDiademUrchin ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatGatorGhoul ns1:hasAlignment ns1:neutralEvil .\n\nns1:GreatGhul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreatHornedOwl ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatSeaAnemone ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatWhiteShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatWhiteWhale ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatWyrmBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreatWyrmBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GreatWyrmDungeonDragonAKAGargaxtheMightyMasteroftheDungeonDragons ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatWyrmForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreatWyrmGoldDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:GreatWyrmGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GreatWyrmRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreatWyrmRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GreatWyrmSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:GreatWyrmSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatWyrmWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreaterAcidQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterAetherElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterAirElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterBarghest ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GreaterBasilisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterBoneneedle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterCeustodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:GreaterColdIronElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterEarthElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterFireElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterGelidBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterGravityElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterIceElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterLightningElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterMagmaElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterMedusa ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GreaterMudElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterNegativeEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterNelbarzoth ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GreaterObsidianQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterOozeDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreaterPositiveEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterPsionicElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterPubo ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterShadowCR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreaterShedu ns1:hasAlignment ns1:lawfulGood .\n\nns1:GreaterShieldWarden ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:GreaterVerdurousOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterWaterElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterYamabushiTengu ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:GreatwyrmUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Greatwyrmclouddragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreenGuardianCR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreenHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreenMan ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreenstingScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gregole ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Gremlin ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GremlinBatspawnCR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GremlinLightningspawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GremlinNuglub ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GremlinPugwampi ns1:hasAlignment ns1:neutralEvil .\n\nns1:GremlinSpiderspawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GremlinVexgit ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GrenadierTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GrendelMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Greymalkin ns1:hasAlignment ns1:neutralEvil .\n\nns1:Grick ns1:hasAlignment ns1:trueNeutral .\n\nns1:Griefgall ns1:hasAlignment ns1:neutralEvil .\n\nns1:Griffon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Grig ns1:hasAlignment ns1:neutralGood .\n\nns1:GrigSwarm ns1:hasAlignment ns1:neutralGood .\n\nns1:Grigori ns1:hasAlignment ns1:trueNeutral .\n\nns1:Grikkitog ns1:hasAlignment ns1:neutralEvil .\n\nns1:GrimReaper ns1:hasAlignment ns1:neutralEvil .\n\nns1:Grimlock ns1:hasAlignment ns1:neutralEvil .\n\nns1:Grimm ns1:hasAlignment ns1:neutralEvil .\n\nns1:Grimple ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Grimslake ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Grimstalker ns1:hasAlignment ns1:neutralEvil .\n\nns1:Grindylow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Grioth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Grippli ns1:hasAlignment ns1:trueNeutral .\n\nns1:GristlyDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GrizzlyBearRug ns1:hasAlignment ns1:trueNeutral .\n\nns1:GroaningSpirit ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Grodair ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GrogrisantMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Grokosh ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gronk ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Grootslang ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Grothlut ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GroundWaspSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:GroveGuardian ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GruffLanternGoat ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Gryph ns1:hasAlignment ns1:neutralEvil .\n\nns1:GuardianDaemon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GuardianDoll ns1:hasAlignment ns1:neutralEvil .\n\nns1:GuardianDragonMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:GuardianPhantomArmor ns1:hasAlignment ns1:neutralEvil .\n\nns1:GuardianScroll ns1:hasAlignment ns1:trueNeutral .\n\nns1:GuardianSpirit ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GuardianoftheTower ns1:hasAlignment ns1:trueNeutral .\n\nns1:Guecubu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Gug ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GugSavant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GulperEel ns1:hasAlignment ns1:trueNeutral .\n\nns1:GunpowderOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:GurgistMortic ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gutslug ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gutted ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GyeongsaWarpStorm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Gylptodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gynosphinx ns1:hasAlignment ns1:trueNeutral .\n\nns1:G\u00f8gelid ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:HYDRODAEMON ns1:hasAlignment ns1:neutralEvil .\n\nns1:Hadhayosh ns1:hasAlignment ns1:trueNeutral .\n\nns1:HagEyeOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:HalaDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HalfCelestialUnicorn ns1:hasAlignment ns1:trueNeutral .\n\nns1:HalfFiendDryad ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HalfFiendMinotaur ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HalfOgre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Halsora ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hamadryad ns1:hasAlignment ns1:chaoticGood .\n\nns1:HammerheadShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:HandOfTheInheritor ns1:hasAlignment ns1:lawfulGood .\n\nns1:HandmaidenDevilGylou ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HangmanTree ns1:hasAlignment ns1:neutralEvil .\n\nns1:Haniver ns1:hasAlignment ns1:trueNeutral .\n\nns1:HarbingerArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:HarbingerDaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:HarbingerofBrokenDealsFinePrintandUnfairBargains ns1:hasAlignment ns1:neutralEvil .\n\nns1:Harionago ns1:hasAlignment ns1:neutralEvil .\n\nns1:Harpy ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Harridan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HarvestHaunt ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Hastur ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HatethrallDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Haunt ns1:hasAlignment ns1:trueNeutral .\n\nns1:HauntedChain ns1:hasAlignment ns1:trueNeutral .\n\nns1:HauntedConstructScarecrow ns1:hasAlignment ns1:neutralEvil .\n\nns1:Havero ns1:hasAlignment ns1:neutralEvil .\n\nns1:HaveroTentacle ns1:hasAlignment ns1:neutralEvil .\n\nns1:HawanarGenie ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Hawk ns1:hasAlignment ns1:trueNeutral .\n\nns1:HeadedCryohydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:HeadedHydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:HeadedPryohydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:HeadedPyrohydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:HeadmansScythe ns1:hasAlignment ns1:trueNeutral .\n\nns1:HeartrotTree ns1:hasAlignment ns1:neutralEvil .\n\nns1:Hedgehog ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hegessik ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Heikegani ns1:hasAlignment ns1:neutralEvil .\n\nns1:HekatonkheiresTitan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HelBehir ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hela ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HelicoprionShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Helixmothlarva ns1:hasAlignment ns1:trueNeutral .\n\nns1:HellEngineAdamantineGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:HellHound ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HellMoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hellcat ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Hellcrown ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HellfireIgnis ns1:hasAlignment ns1:neutralEvil .\n\nns1:HellionRevenant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HellstokerDevilMarnasoth ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HellwaspSwarm ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HeraldofArmageddon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:HeraldofDreams ns1:hasAlignment ns1:chaoticGood .\n\nns1:HeraldofFreedom ns1:hasAlignment ns1:chaoticGood .\n\nns1:HeraldofFreedomandJustice ns1:hasAlignment ns1:chaoticGood .\n\nns1:HeraldofHell ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HeraldofRunes ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HeraldoftheDemonQueen ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HeraldofthePirateQueen ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:HereciteofAsmodeus ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HerensugueDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HeresyDevilAyngavhaul ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Hetkoshu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hezrou ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hidebehind ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hieracosphinx ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HighGirallon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HighPriestofShubNiggurath ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HighVeinar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:HillGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hippocampus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hippogriff ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hippopotamus ns1:hasAlignment ns1:trueNeutral .\n\nns1:HiveBrute ns1:hasAlignment ns1:neutralEvil .\n\nns1:HiveLarvaSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:HiveMindBeetleSwarm ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:HiveQueen ns1:hasAlignment ns1:neutralEvil .\n\nns1:HiveWarrior ns1:hasAlignment ns1:neutralEvil .\n\nns1:HivemindRatSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:HoarSpirit ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HobbeHound ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hobgoblin ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HobgoblinPhalanxTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HobgoblinTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Hobkins ns1:hasAlignment ns1:neutralEvil .\n\nns1:Hodag ns1:hasAlignment ns1:trueNeutral .\n\nns1:HollowHelm ns1:hasAlignment ns1:neutralEvil .\n\nns1:HollowSerpent ns1:hasAlignment ns1:neutralEvil .\n\nns1:HomotheriumSmilodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Homunculus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hondra ns1:hasAlignment ns1:trueNeutral .\n\nns1:HookfangWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:HordeRiot ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Horla ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HornCaterpillar ns1:hasAlignment ns1:trueNeutral .\n\nns1:HornedDemonKalavakus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HornedDevilCornugon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HornedLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Horse ns1:hasAlignment ns1:trueNeutral .\n\nns1:HostDevilMagaav ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HoundArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:HoundofTindalos ns1:hasAlignment ns1:neutralEvil .\n\nns1:HouseCentipede ns1:hasAlignment ns1:trueNeutral .\n\nns1:Howler ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hoyrall ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Huecuva ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HugeAcidQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeAetherElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeAirElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeColdironElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeEarthElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeFireElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeGravityElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeIceElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeLightningElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeMagmaElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeMonstrousSeaWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeMudElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeNegativeEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeObsidianQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugePositiveEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugePsionicElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeWaterElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Huggermugger ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Huldra ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:HumanJujuzombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:HumanMeatPuppetCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:HumanScholarBrainCylinder ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Humbaba ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Hundun ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hungerer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HungryFlesh ns1:hasAlignment ns1:trueNeutral .\n\nns1:HungryFog ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hunted ns1:hasAlignment ns1:neutralEvil .\n\nns1:HunterUrchin ns1:hasAlignment ns1:trueNeutral .\n\nns1:HuntingHorror ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hupia ns1:hasAlignment ns1:neutralEvil .\n\nns1:Hutijin ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Hyaenodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hyakume ns1:hasAlignment ns1:neutralEvil .\n\nns1:Hyaleth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hydraggon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hydrodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Hydrus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hyena ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hykariut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Hypnalis ns1:hasAlignment ns1:trueNeutral .\n\nns1:Iathavos ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IbShade ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ibshaunet ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:IceDevilGelugon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IceDrake ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IceGnomeBarbegaziCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:IceGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:IceKratah ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IceLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IceMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:IceTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IceYai ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Icegaunt ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ichkoh ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ichthyocentaur ns1:hasAlignment ns1:trueNeutral .\n\nns1:IdOozeCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Idun ns1:hasAlignment ns1:neutralGood .\n\nns1:Ifrit ns1:hasAlignment ns1:trueNeutral .\n\nns1:Iguanodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ijiraq ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:IkuTurso ns1:hasAlignment ns1:neutralEvil .\n\nns1:Illureshi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ImenteshProtean ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Imjarvi ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ImmatureNorn ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ImmenseMandragora ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ImmenseTortoise ns1:hasAlignment ns1:trueNeutral .\n\nns1:ImmolationDevilPuragaus ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ImmortalIchor ns1:hasAlignment ns1:neutralEvil .\n\nns1:Imp ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Impariut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ImperialGhoul ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ImplacableStalker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Impundulu ns1:hasAlignment ns1:neutralEvil .\n\nns1:Incubus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Incutilis ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IncutilisLord ns1:hasAlignment ns1:neutralEvil .\n\nns1:InevitableAevarutMR ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Infantis ns1:hasAlignment ns1:neutralEvil .\n\nns1:Infernor ns1:hasAlignment ns1:chaoticEvil .\n\nns1:InkDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IntellectDevourer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:InterlocutorKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IntermediateNelbarzoth ns1:hasAlignment ns1:lawfulGood .\n\nns1:InubrixGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:InvertedGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:InvisibleStalker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Iophanite ns1:hasAlignment ns1:lawfulGood .\n\nns1:IounGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:IounWyrd ns1:hasAlignment ns1:trueNeutral .\n\nns1:IrefulHellion ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Irii ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Irlgaunt ns1:hasAlignment ns1:neutralEvil .\n\nns1:IrminsulMR ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Irnakurse ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IronCobra ns1:hasAlignment ns1:trueNeutral .\n\nns1:IronColossusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:IronGhoul ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IronGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:IronGolemArcher ns1:hasAlignment ns1:trueNeutral .\n\nns1:IronMagehunterTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IronMaidenGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:IronRiderTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IronSiegeAlchemistTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IronWight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Isitoq ns1:hasAlignment ns1:neutralEvil .\n\nns1:Isonade ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IsphAunVuln ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ivoyro ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Izfiitar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:JaNoiOni ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Jabberwock ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JackOLantern ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jackal ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jackalwere ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JackinIronsGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JackoLantern ns1:hasAlignment ns1:neutralEvil .\n\nns1:Jaculi ns1:hasAlignment ns1:trueNeutral .\n\nns1:JadeColossuspp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jadeling ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jaguar ns1:hasAlignment ns1:trueNeutral .\n\nns1:Janni ns1:hasAlignment ns1:trueNeutral .\n\nns1:JanniCaptain ns1:hasAlignment ns1:lawfulEvil .\n\nns1:JellyfishGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:JellyfishSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jerboa ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jesulan ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Jherikite ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JigsawShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jinmenju ns1:hasAlignment ns1:trueNeutral .\n\nns1:JinnWizard ns1:hasAlignment ns1:neutralEvil .\n\nns1:Jinushigami ns1:hasAlignment ns1:trueNeutral .\n\nns1:JinxCatCompanion ns1:hasAlignment ns1:trueNeutral .\n\nns1:JitterboneMortic ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Jorogumo ns1:hasAlignment ns1:neutralEvil .\n\nns1:JotunbloodHillGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JotundTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Jotunnboar ns1:hasAlignment ns1:trueNeutral .\n\nns1:JoyfulThing ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Jubear ns1:hasAlignment ns1:trueNeutral .\n\nns1:JubilexTheFacelessLord ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JubilexTouchedMarshJelly ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JubjubBird ns1:hasAlignment ns1:trueNeutral .\n\nns1:JudgementDevilAshmede ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Juggerloathe ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Juggernaut ns1:hasAlignment ns1:trueNeutral .\n\nns1:JulunggaliMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:JungleDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:JungleGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:JungleGrick ns1:hasAlignment ns1:trueNeutral .\n\nns1:JunkGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:JupiterBloodsucker ns1:hasAlignment ns1:trueNeutral .\n\nns1:JuvenileBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JuvenileBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:JuvenileForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JuvenileGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:JuvenileRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JuvenileRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:JuvenileSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:JuvenileSeps ns1:hasAlignment ns1:trueNeutral .\n\nns1:JuvenileSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:JuvenileSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:JuvenileUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:JuvenileWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Kabandha ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Kaenju ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kaicharek ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kakapo ns1:hasAlignment ns1:trueNeutral .\n\nns1:KakuenTaka ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Kamaitachi ns1:hasAlignment ns1:chaoticEvil .\n\nns1:KamiShikigami ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:KaminariKami ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kampfult ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kangaroo ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kapoacinth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Kappa ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kapre ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kaprosuchus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Karek ns1:hasAlignment ns1:trueNeutral .\n\nns1:Karkadann ns1:hasAlignment ns1:trueNeutral .\n\nns1:Karkinoi ns1:hasAlignment ns1:chaoticEvil .\n\nns1:KarkinoiBroodSwarm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Karumzek ns1:hasAlignment ns1:neutralEvil .\n\nns1:KarzSlug ns1:hasAlignment ns1:trueNeutral .\n\nns1:KarzSlugQueen ns1:hasAlignment ns1:trueNeutral .\n\nns1:KasaObake ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kasatha ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Kastamut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Kathlin ns1:hasAlignment ns1:neutralGood .\n\nns1:KawaAkago ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kech ns1:hasAlignment ns1:neutralEvil .\n\nns1:KeeperoftheYellowSign ns1:hasAlignment ns1:chaoticEvil .\n\nns1:KelpDevil ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kelpie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kentrosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:KerePsychopomp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ketesthius ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Keulia ns1:hasAlignment ns1:trueNeutral .\n\nns1:Khaei ns1:hasAlignment ns1:trueNeutral .\n\nns1:Khala ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Khardajeen ns1:hasAlignment ns1:neutralEvil .\n\nns1:Khargra ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kigyo ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Kijimuna ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kikimora ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kikituk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kilblain ns1:hasAlignment ns1:neutralEvil .\n\nns1:KillerFrog ns1:hasAlignment ns1:trueNeutral .\n\nns1:KillerSeahorse ns1:hasAlignment ns1:trueNeutral .\n\nns1:Killmoulis ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kimenhul ns1:hasAlignment ns1:neutralEvil .\n\nns1:KingCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:KingRagworm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kirin ns1:hasAlignment ns1:lawfulGood .\n\nns1:KithangianBeastDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Kitsune ns1:hasAlignment ns1:trueNeutral .\n\nns1:KnightAnt ns1:hasAlignment ns1:trueNeutral .\n\nns1:KnightoftheGateUniqueAdvancedDevourer ns1:hasAlignment ns1:neutralEvil .\n\nns1:Koala ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kobold ns1:hasAlignment ns1:lawfulEvil .\n\nns1:KoboldZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kodama ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kolyarut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Kongamato ns1:hasAlignment ns1:trueNeutral .\n\nns1:KorirKokembe ns1:hasAlignment ns1:trueNeutral .\n\nns1:Korkcitura ns1:hasAlignment ns1:neutralEvil .\n\nns1:Korred ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:KostchtchieDemonPrinceofWrath ns1:hasAlignment ns1:chaoticEvil .\n\nns1:KotoFurunishi ns1:hasAlignment ns1:neutralGood .\n\nns1:Kraidyl ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kraken ns1:hasAlignment ns1:neutralEvil .\n\nns1:Krampus ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kratah ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Krenshar ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kronosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:KuahLij ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Kuchrima ns1:hasAlignment ns1:chaoticEvil .\n\nns1:KudzuTheEverblight ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kurobozu ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Kuru ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Kuwa ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Kyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:KytonDemagogue ns1:hasAlignment ns1:lawfulEvil .\n\nns1:LabyrinthMinotaur ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LacedonAquaticGhoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lacridaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:LakeTroll ns1:hasAlignment ns1:neutralEvil .\n\nns1:Lamhigyn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lamia ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LamiaMatriarch ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lammasu ns1:hasAlignment ns1:lawfulGood .\n\nns1:Lampad ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Lampadarius ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Lamprey ns1:hasAlignment ns1:trueNeutral .\n\nns1:LandLamprey ns1:hasAlignment ns1:trueNeutral .\n\nns1:LandwalkerShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:LanternArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:LanternGoat ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Larabay ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:LargeAcidQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeAetherElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeAirElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeColdIronElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeEarthElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeFireElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeGravityElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeIceElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeLightningElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeLightningQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeMagmaElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeMonstrousSeaWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeMudElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeNegativeEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeObsidianQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargePositiveEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargePsionicElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeStingray ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeWaterElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Larva ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LarvalChuul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LarvalSlimeCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:LarvalStarspawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lashunta ns1:hasAlignment ns1:neutralGood .\n\nns1:Laurapathis ns1:hasAlignment ns1:lawfulEvil .\n\nns1:LavaChild ns1:hasAlignment ns1:trueNeutral .\n\nns1:LavaDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:LavaWeird ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lawgiver ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:LeadCladWyvern ns1:hasAlignment ns1:trueNeutral .\n\nns1:LeadGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:LeadSkeleton ns1:hasAlignment ns1:trueNeutral .\n\nns1:LeafLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:LeafRay ns1:hasAlignment ns1:trueNeutral .\n\nns1:LeananSidheMR ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:LeechSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Leechroot ns1:hasAlignment ns1:neutralEvil .\n\nns1:LegendaryChimera ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LegionArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:Lejnth ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Lemkin ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Lemming ns1:hasAlignment ns1:trueNeutral .\n\nns1:Lemure ns1:hasAlignment ns1:lawfulEvil .\n\nns1:LengGhoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LengHound ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LengSpider ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Leonal ns1:hasAlignment ns1:neutralGood .\n\nns1:Leopard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Leprechaun ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:LesserBandersnatch ns1:hasAlignment ns1:trueNeutral .\n\nns1:LesserBoneneedle ns1:hasAlignment ns1:trueNeutral .\n\nns1:LesserCeustodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:LesserDeath ns1:hasAlignment ns1:neutralEvil .\n\nns1:LesserGelidBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:LesserGibberingOrb ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LesserHostDevilGaav ns1:hasAlignment ns1:lawfulEvil .\n\nns1:LesserJabberwock ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LesserNecrophidius ns1:hasAlignment ns1:trueNeutral .\n\nns1:LesserOozeDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LesserPubo ns1:hasAlignment ns1:trueNeutral .\n\nns1:LesserShadow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LesserShieldWarden ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Leucrotta ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Leukodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Leviathan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Lhaksharut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:LibitinariiKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:LibreumGolem ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:LichNewt ns1:hasAlignment ns1:trueNeutral .\n\nns1:LichPsychic ns1:hasAlignment ns1:lawfulEvil .\n\nns1:LichShade ns1:hasAlignment ns1:neutralEvil .\n\nns1:LichenLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:LifeleecherMortic ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lifesuit ns1:hasAlignment ns1:trueNeutral .\n\nns1:LightRidingHorse ns1:hasAlignment ns1:trueNeutral .\n\nns1:LightningCatChampion ns1:hasAlignment ns1:trueNeutral .\n\nns1:LightningCatCompanion ns1:hasAlignment ns1:trueNeutral .\n\nns1:LightningCatHero ns1:hasAlignment ns1:trueNeutral .\n\nns1:LightningMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:LightningTreantppCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:LightningWeird ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lilin ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Lilith ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Lilitu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LiminalSprite ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:LinnormCrag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lion ns1:hasAlignment ns1:trueNeutral .\n\nns1:LionAlebrije ns1:hasAlignment ns1:trueNeutral .\n\nns1:LionBeastofChaos ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Lionwere ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lipika ns1:hasAlignment ns1:trueNeutral .\n\nns1:Litanu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Livestone ns1:hasAlignment ns1:trueNeutral .\n\nns1:LivingArmor ns1:hasAlignment ns1:trueNeutral .\n\nns1:LivingDoldrums ns1:hasAlignment ns1:neutralEvil .\n\nns1:LivingLake ns1:hasAlignment ns1:trueNeutral .\n\nns1:LivingMirage ns1:hasAlignment ns1:trueNeutral .\n\nns1:LivingRune ns1:hasAlignment ns1:neutralEvil .\n\nns1:LivingTopiary ns1:hasAlignment ns1:trueNeutral .\n\nns1:LivingWall ns1:hasAlignment ns1:trueNeutral .\n\nns1:Lizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:LizardKing ns1:hasAlignment ns1:trueNeutral .\n\nns1:Lizardfolk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Llama ns1:hasAlignment ns1:trueNeutral .\n\nns1:Llorona ns1:hasAlignment ns1:neutralEvil .\n\nns1:Locathah ns1:hasAlignment ns1:trueNeutral .\n\nns1:LocustPlagueSwarmMR ns1:hasAlignment ns1:neutralEvil .\n\nns1:LocustSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:LordSunWarrior ns1:hasAlignment ns1:lawfulGood .\n\nns1:Lorelei ns1:hasAlignment ns1:neutralEvil .\n\nns1:LotusLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:LotusTree ns1:hasAlignment ns1:trueNeutral .\n\nns1:Lovelorn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lukwata ns1:hasAlignment ns1:trueNeutral .\n\nns1:Luma ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Lunarma ns1:hasAlignment ns1:trueNeutral .\n\nns1:LurkerAbove ns1:hasAlignment ns1:trueNeutral .\n\nns1:LurkerInTheCrypt ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LurkerinLight ns1:hasAlignment ns1:neutralEvil .\n\nns1:Lusca ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lustspawn ns1:hasAlignment ns1:neutralEvil .\n\nns1:Lynx ns1:hasAlignment ns1:trueNeutral .\n\nns1:Lythic ns1:hasAlignment ns1:trueNeutral .\n\nns1:MOUSELORDMOUSEFORM ns1:hasAlignment ns1:trueNeutral .\n\nns1:MachineSoldier ns1:hasAlignment ns1:trueNeutral .\n\nns1:MadnessSlug ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MadnessSlugAlternateForm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Maenad ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MaenadDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Maftet ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagebaneGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagicbaneBandersnatch ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagmaDragonGreatWyrm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonJuvenile ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonMatureAdult ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonOld ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonVeryOld ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonVeryYoung ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonWyrm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonWyrmling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonYoungAdult ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaElementalRamCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagmaMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagmaOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagmaRoc ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Magmin ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Magmoid ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagnesiumGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagnesiumSpirit ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Maharaja ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MaharishiManu ns1:hasAlignment ns1:lawfulGood .\n\nns1:MakaraVahana ns1:hasAlignment ns1:trueNeutral .\n\nns1:Malboro ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Malenti ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Mammon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Mammoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:MammothFlea ns1:hasAlignment ns1:trueNeutral .\n\nns1:ManEatingRam ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Manananggal ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mandragora ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MandragoraSwarm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mandrill ns1:hasAlignment ns1:trueNeutral .\n\nns1:ManimalTriceratops ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Manitou ns1:hasAlignment ns1:neutralGood .\n\nns1:MannequinRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mannstirge ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MantaRay ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mantari ns1:hasAlignment ns1:neutralEvil .\n\nns1:Mantidrake ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Manu ns1:hasAlignment ns1:lawfulGood .\n\nns1:MaphistalSecondofOrcus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mapinguari ns1:hasAlignment ns1:trueNeutral .\n\nns1:Marai ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Marathoner ns1:hasAlignment ns1:trueNeutral .\n\nns1:MarbleSentinel ns1:hasAlignment ns1:trueNeutral .\n\nns1:MarbleSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:Margay ns1:hasAlignment ns1:trueNeutral .\n\nns1:Margoyle ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MaridGenie ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Marilith ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MarineCrocodile ns1:hasAlignment ns1:trueNeutral .\n\nns1:MarrowstoneGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MarshGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MarshJelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:Marut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:MaskGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MaskedOkkator ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MasterAutomaton ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Mastodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:MatureAdultBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MatureAdultBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MatureAdultForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MatureAdultGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MatureAdultRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MatureAdultRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MatureAdultSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:MatureAdultSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:MatureAdultSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:MatureAdultWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MatureAdultclouddragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:MatureDarkYoung ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MatureSlimeCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:MatureadultUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Mawler ns1:hasAlignment ns1:neutralEvil .\n\nns1:MechanicalViper ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumAcidQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumAetherElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumAirElemental ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MediumAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumBarracuda ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumEarthElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumFireCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumFireElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumGravityElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumIceElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumLightningElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumLightningQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumMagmaElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumMonstrousSeaWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumMudElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumNegativeEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumObsidianQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumPositiveEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumPsionicElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:MediumSlimeMold ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumStingray ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumWaterElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mediumcoldironelemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Medusa ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MedusaAnimusShade ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MedusaHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:Meerkat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Megalania ns1:hasAlignment ns1:trueNeutral .\n\nns1:Megaloceros ns1:hasAlignment ns1:trueNeutral .\n\nns1:MegaponAnt ns1:hasAlignment ns1:trueNeutral .\n\nns1:Megaprimatus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Megaraptor ns1:hasAlignment ns1:trueNeutral .\n\nns1:Megatherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:Melacage ns1:hasAlignment ns1:neutralEvil .\n\nns1:Meladaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:MelancholicOozeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:MemitimPsychopomp ns1:hasAlignment ns1:trueNeutral .\n\nns1:MemoryChild ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mephistopheles ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Mercane ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:MercuryOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Merfolk ns1:hasAlignment ns1:trueNeutral .\n\nns1:MerfolkCavalier ns1:hasAlignment ns1:trueNeutral .\n\nns1:MerfolkCavalierAlurian ns1:hasAlignment ns1:trueNeutral .\n\nns1:MetalSlime ns1:hasAlignment ns1:trueNeutral .\n\nns1:MetallicGorgimera ns1:hasAlignment ns1:trueNeutral .\n\nns1:MetallicOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mezlan ns1:hasAlignment ns1:trueNeutral .\n\nns1:MiGo ns1:hasAlignment ns1:neutralEvil .\n\nns1:MidnightPeddler ns1:hasAlignment ns1:trueNeutral .\n\nns1:MightyCyclops ns1:hasAlignment ns1:neutralEvil .\n\nns1:Mihstu ns1:hasAlignment ns1:neutralEvil .\n\nns1:Mimi ns1:hasAlignment ns1:trueNeutral .\n\nns1:MimicOoze ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MindslaverMold ns1:hasAlignment ns1:neutralEvil .\n\nns1:MindstabFungus ns1:hasAlignment ns1:trueNeutral .\n\nns1:MinorReaper ns1:hasAlignment ns1:neutralEvil .\n\nns1:MinotaurElder ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MireBrute ns1:hasAlignment ns1:neutralEvil .\n\nns1:MireNettle ns1:hasAlignment ns1:trueNeutral .\n\nns1:MirrorSerpent ns1:hasAlignment ns1:trueNeutral .\n\nns1:MissingLynx ns1:hasAlignment ns1:trueNeutral .\n\nns1:MistDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:Mite ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MithralGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MixCouatl ns1:hasAlignment ns1:chaoticGood .\n\nns1:Mnemor ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Mngwa ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Moa ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mobat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mobogo ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mockingfey ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Mogaru ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Mohrg ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MokeleMbembe ns1:hasAlignment ns1:trueNeutral .\n\nns1:Moldwretch ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mole ns1:hasAlignment ns1:trueNeutral .\n\nns1:Moloch ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MomeRath ns1:hasAlignment ns1:trueNeutral .\n\nns1:Monaciello ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MonadicDeva ns1:hasAlignment ns1:neutralGood .\n\nns1:MongrelCaveGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mongrelman ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:MonitorLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Monkey ns1:hasAlignment ns1:trueNeutral .\n\nns1:MonkeyGoblin ns1:hasAlignment ns1:neutralEvil .\n\nns1:MonkeySwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:MonstrousCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:MonstrousJellyfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:MonstrousLobster ns1:hasAlignment ns1:trueNeutral .\n\nns1:Montaphant ns1:hasAlignment ns1:trueNeutral .\n\nns1:MoonBeast ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MoonDog ns1:hasAlignment ns1:neutralGood .\n\nns1:MoonGiant ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:MoonHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Moonbeast ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Moonflower ns1:hasAlignment ns1:trueNeutral .\n\nns1:Moonpriest ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Moose ns1:hasAlignment ns1:trueNeutral .\n\nns1:Morbai ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mordnaissant ns1:hasAlignment ns1:neutralEvil .\n\nns1:Morgodea ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Morlock ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MorlockSwarmerTroop ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Morrigna ns1:hasAlignment ns1:trueNeutral .\n\nns1:MortuaryCyclone ns1:hasAlignment ns1:trueNeutral .\n\nns1:MosaicTileGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MosquitoSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:MossMonster ns1:hasAlignment ns1:neutralEvil .\n\nns1:MossTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mosslord ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MotherofOblivion ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MothersMaw ns1:hasAlignment ns1:neutralEvil .\n\nns1:Mothman ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MountainAurochs ns1:hasAlignment ns1:trueNeutral .\n\nns1:MountainBlight ns1:hasAlignment ns1:neutralEvil .\n\nns1:MountainGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MountainLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:MovanicDeva ns1:hasAlignment ns1:neutralGood .\n\nns1:MuSpore ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Muckdweller ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mudbog ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mudlord ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mudman ns1:hasAlignment ns1:trueNeutral .\n\nns1:Muhuru ns1:hasAlignment ns1:trueNeutral .\n\nns1:Muldnal ns1:hasAlignment ns1:neutralGood .\n\nns1:MultiplyingTRexSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:MummifiedBaboon ns1:hasAlignment ns1:neutralEvil .\n\nns1:MummifiedCrocodile ns1:hasAlignment ns1:trueNeutral .\n\nns1:MummifiedElephant ns1:hasAlignment ns1:trueNeutral .\n\nns1:MummifiedGynosphinx ns1:hasAlignment ns1:neutralEvil .\n\nns1:MummifiedHippopotamus ns1:hasAlignment ns1:neutralEvil .\n\nns1:Mummy ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MummyLord ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MummyOfTheDeep ns1:hasAlignment ns1:neutralEvil .\n\nns1:Munavri ns1:hasAlignment ns1:chaoticGood .\n\nns1:Murajau ns1:hasAlignment ns1:neutralGood .\n\nns1:MurderBorn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MurderCrow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MurderofCrows ns1:hasAlignment ns1:trueNeutral .\n\nns1:Muse ns1:hasAlignment ns1:chaoticGood .\n\nns1:MushroomGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MustardJelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mutah ns1:hasAlignment ns1:trueNeutral .\n\nns1:MutantOrc ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MutantOtyughtentacledMutant ns1:hasAlignment ns1:trueNeutral .\n\nns1:MutatedTurtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:MuteHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mutilated ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Myceloid ns1:hasAlignment ns1:neutralEvil .\n\nns1:MyrmecoleonMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Myrmidon ns1:hasAlignment ns1:trueNeutral .\n\nns1:MythicNelbarzothMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MythicalLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:MythosGhast ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MythosGhoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MythosSatyr ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nabasu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:NabasuDemonling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:NabasuMature ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nachzehrer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nagaji ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Naiad ns1:hasAlignment ns1:neutralGood .\n\nns1:Najikai ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Nalfeshnee ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Narwhal ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nazalor ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:NecroPede ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Necrocraft ns1:hasAlignment ns1:neutralEvil .\n\nns1:NecromancerofLeng ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Necrophidius ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nekomata ns1:hasAlignment ns1:neutralEvil .\n\nns1:NemesisDevilAdvodaza ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Nemhain ns1:hasAlignment ns1:neutralEvil .\n\nns1:Neothelid ns1:hasAlignment ns1:chaoticEvil .\n\nns1:NeothelidOverlord ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Neozecktole ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nependis ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nephilim ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nereid ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:NerizoDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:NessianWarhoundCR ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Netherspark ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ngoga ns1:hasAlignment ns1:trueNeutral .\n\nns1:NightAdderInphidian ns1:hasAlignment ns1:neutralEvil .\n\nns1:NightHag ns1:hasAlignment ns1:neutralEvil .\n\nns1:NightWyvern ns1:hasAlignment ns1:trueNeutral .\n\nns1:NightbringerApe ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nightcaller ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nightcrawler ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nightgaunt ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Nightmare ns1:hasAlignment ns1:neutralEvil .\n\nns1:NightmareArtist ns1:hasAlignment ns1:neutralEvil .\n\nns1:NightmareEttercap ns1:hasAlignment ns1:neutralEvil .\n\nns1:NightmareMount ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nightskitter ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nightwalker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nightwave ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nightwing ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nikaramsa ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Nilith ns1:hasAlignment ns1:neutralEvil .\n\nns1:Niln ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ningen ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ningyo ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nirento ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nisid ns1:hasAlignment ns1:chaoticGood .\n\nns1:Nixie ns1:hasAlignment ns1:trueNeutral .\n\nns1:NobleDjinniVizier ns1:hasAlignment ns1:chaoticGood .\n\nns1:NobleEfreet ns1:hasAlignment ns1:lawfulEvil .\n\nns1:NobleSalamander ns1:hasAlignment ns1:chaoticEvil .\n\nns1:NobleTimeElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nochlean ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nocticula ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nogitsune ns1:hasAlignment ns1:neutralEvil .\n\nns1:NoqualGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Norn ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Nosferatu ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nosoi ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nothosaur ns1:hasAlignment ns1:trueNeutral .\n\nns1:Novenarut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Nuckalavee ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nuckelavee ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nucol ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nue ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nulmind ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nuno ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nupperibo ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Nycar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Nymph ns1:hasAlignment ns1:chaoticGood .\n\nns1:NymphWaterStrider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nyogoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:NysrockDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Oakman ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:OaurOoung ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Obcisidaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Oblivion ns1:hasAlignment ns1:neutralEvil .\n\nns1:ObsidianGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:ObsidianMinotaur ns1:hasAlignment ns1:trueNeutral .\n\nns1:OceanGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OceanLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:Oceanid ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:OchreEurypterid ns1:hasAlignment ns1:trueNeutral .\n\nns1:OchreJelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:OctopodMechanicDrone ns1:hasAlignment ns1:trueNeutral .\n\nns1:Octopus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ofalth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ogre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreBoss ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreBrute ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreDestroyer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreGlutton ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreHunter ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreKing ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreMage ns1:hasAlignment ns1:lawfulEvil .\n\nns1:OgreMancatcher ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgrePriest ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:OgreStalker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgrekinHalfOgre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ogren ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ogrillon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ohancanu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OilShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:OitosKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:OkkatorAssassin ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OldBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OldBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:OldGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:OldRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OldRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:OldSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:OldSilverDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:OldSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:OldSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:OldWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Olethrodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Olethros ns1:hasAlignment ns1:trueNeutral .\n\nns1:Oliphantpp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Olkhia ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ollph\u00e9ist ns1:hasAlignment ns1:trueNeutral .\n\nns1:Oma ns1:hasAlignment ns1:trueNeutral .\n\nns1:Omnipath ns1:hasAlignment ns1:lawfulEvil .\n\nns1:OmoxDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OnwuAzu ns1:hasAlignment ns1:trueNeutral .\n\nns1:OnyxDeer ns1:hasAlignment ns1:trueNeutral .\n\nns1:OnyxScourge ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Oolioddroo ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OozeGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:OozeMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:OozingOtyugh ns1:hasAlignment ns1:trueNeutral .\n\nns1:OphiduanAnguineumCaste ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OphiduanHominisCaste ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OphiduanSemiferumCaste ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OphiotaurusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Orangutan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Orca ns1:hasAlignment ns1:trueNeutral .\n\nns1:OrcishWarclops ns1:hasAlignment ns1:trueNeutral .\n\nns1:OrcusDemonPrinceoftheUndead ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Oread ns1:hasAlignment ns1:trueNeutral .\n\nns1:Orog ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Oronci ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Orsatka ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Orsheval ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Orzar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Oshageros ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Osteon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ostiarius ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ostovite ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ostrich ns1:hasAlignment ns1:trueNeutral .\n\nns1:Othaos ns1:hasAlignment ns1:trueNeutral .\n\nns1:Otyugh ns1:hasAlignment ns1:trueNeutral .\n\nns1:OtyughMeatPuppet ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ourdivar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Ouroboros ns1:hasAlignment ns1:trueNeutral .\n\nns1:OuterAbominationTheSecondStage ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OuterMutantPriest ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:OutlawTroop ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Ovinnik ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Owb ns1:hasAlignment ns1:neutralEvil .\n\nns1:Owl ns1:hasAlignment ns1:trueNeutral .\n\nns1:Owlbear ns1:hasAlignment ns1:trueNeutral .\n\nns1:OwlbearSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:Owlephant ns1:hasAlignment ns1:trueNeutral .\n\nns1:Owlwere ns1:hasAlignment ns1:chaoticEvil .\n\nns1:PISCODAEMON ns1:hasAlignment ns1:neutralEvil .\n\nns1:Pachycephalosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Paguroida ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:PaigoelDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Painajai ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Pairaka ns1:hasAlignment ns1:neutralEvil .\n\nns1:Pakalchi ns1:hasAlignment ns1:neutralEvil .\n\nns1:PaleStranger ns1:hasAlignment ns1:neutralEvil .\n\nns1:PaleoskeletonTriceratops ns1:hasAlignment ns1:trueNeutral .\n\nns1:PallidAngel ns1:hasAlignment ns1:neutralEvil .\n\nns1:Panda ns1:hasAlignment ns1:trueNeutral .\n\nns1:Panotti ns1:hasAlignment ns1:neutralGood .\n\nns1:Papinijuwari ns1:hasAlignment ns1:neutralEvil .\n\nns1:Papinu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Paracletus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Parasaurolophus ns1:hasAlignment ns1:trueNeutral .\n\nns1:ParasiteMystic ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Pard ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Parrot ns1:hasAlignment ns1:trueNeutral .\n\nns1:PashaNobleShaitan ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:PastYithian ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Pavbagha ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Pazuzu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:PazuzuDemonPrinceofAir ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Peafowl ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pech ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pegasus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pelagastr ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:PelagastrProtean ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:PelagosSeaSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Peluda ns1:hasAlignment ns1:neutralEvil .\n\nns1:Pendula ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Pengizu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Penguin ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pepfralcon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Peri ns1:hasAlignment ns1:neutralGood .\n\nns1:PersonificationOfFury ns1:hasAlignment ns1:trueNeutral .\n\nns1:Peryton ns1:hasAlignment ns1:chaoticEvil .\n\nns1:PestDrakeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pestie ns1:hasAlignment ns1:trueNeutral .\n\nns1:PestilenziDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:PetitionerHumanCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Petrifern ns1:hasAlignment ns1:trueNeutral .\n\nns1:PetrifiedMaiden ns1:hasAlignment ns1:neutralEvil .\n\nns1:Petrous ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Peuchen ns1:hasAlignment ns1:neutralEvil .\n\nns1:Phantasm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:PhantomFungus ns1:hasAlignment ns1:trueNeutral .\n\nns1:PhantomLancer ns1:hasAlignment ns1:neutralEvil .\n\nns1:PhantomStalker ns1:hasAlignment ns1:trueNeutral .\n\nns1:PharaonicGuardian ns1:hasAlignment ns1:lawfulEvil .\n\nns1:PhaseFlea ns1:hasAlignment ns1:trueNeutral .\n\nns1:PhaseSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Phasm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Phasma ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Phasmadaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:PhlegmaticOozeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Phlogiston ns1:hasAlignment ns1:trueNeutral .\n\nns1:Phoenix ns1:hasAlignment ns1:neutralGood .\n\nns1:Phooka ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Phoso ns1:hasAlignment ns1:trueNeutral .\n\nns1:PhrenicScourge ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Phycomid ns1:hasAlignment ns1:trueNeutral .\n\nns1:PickledPunk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Pipefox ns1:hasAlignment ns1:trueNeutral .\n\nns1:PiranhaMature ns1:hasAlignment ns1:trueNeutral .\n\nns1:PiranhaSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Piscodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:PitBoar ns1:hasAlignment ns1:trueNeutral .\n\nns1:PitFiend ns1:hasAlignment ns1:lawfulEvil .\n\nns1:PitHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Pixie ns1:hasAlignment ns1:neutralGood .\n\nns1:PixieCircle ns1:hasAlignment ns1:trueNeutral .\n\nns1:PlagueGiant ns1:hasAlignment ns1:neutralEvil .\n\nns1:PlagueLocustSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:PlagueZombie ns1:hasAlignment ns1:trueNeutral .\n\nns1:PlaguebearerOtyugh ns1:hasAlignment ns1:trueNeutral .\n\nns1:PlaguedHorse ns1:hasAlignment ns1:neutralEvil .\n\nns1:Planetar ns1:hasAlignment ns1:neutralGood .\n\nns1:Plankta ns1:hasAlignment ns1:neutralEvil .\n\nns1:PlantImbuedApe ns1:hasAlignment ns1:neutralGood .\n\nns1:Plantoid ns1:hasAlignment ns1:trueNeutral .\n\nns1:PlantoidServitor ns1:hasAlignment ns1:trueNeutral .\n\nns1:PlasmaOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Platypus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pleroma ns1:hasAlignment ns1:trueNeutral .\n\nns1:Plesiosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Plizeazoth ns1:hasAlignment ns1:neutralEvil .\n\nns1:PodCannon ns1:hasAlignment ns1:trueNeutral .\n\nns1:PoisonFrog ns1:hasAlignment ns1:trueNeutral .\n\nns1:PoisonGauntlet ns1:hasAlignment ns1:trueNeutral .\n\nns1:PoisonousFrog ns1:hasAlignment ns1:trueNeutral .\n\nns1:PoisonousFrogSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:PoisonousManticore ns1:hasAlignment ns1:lawfulEvil .\n\nns1:PolarBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:PolarKamadan ns1:hasAlignment ns1:neutralEvil .\n\nns1:PolarWhaler ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:PolarWhalerSimulacrum ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Polevik ns1:hasAlignment ns1:neutralEvil .\n\nns1:Polong ns1:hasAlignment ns1:neutralEvil .\n\nns1:Poltergeist ns1:hasAlignment ns1:lawfulEvil .\n\nns1:PondDrinker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pony ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pooka ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Popobala ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Popoto ns1:hasAlignment ns1:trueNeutral .\n\nns1:PoppyLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:Poracha ns1:hasAlignment ns1:trueNeutral .\n\nns1:Porcupine ns1:hasAlignment ns1:trueNeutral .\n\nns1:PortunusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Possessor ns1:hasAlignment ns1:lawfulEvil .\n\nns1:PranaGhost ns1:hasAlignment ns1:neutralGood .\n\nns1:PreceptorArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:PretenderDevilDissimulare ns1:hasAlignment ns1:lawfulEvil .\n\nns1:PrideLordAgathion ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:PrismDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ProcyalAgathion ns1:hasAlignment ns1:neutralGood .\n\nns1:Proscriber ns1:hasAlignment ns1:trueNeutral .\n\nns1:ProteanKeketar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ProteanNaunet ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ProteanVoidworm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Protector ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ProtoShoggoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Prydanu ns1:hasAlignment ns1:chaoticGood .\n\nns1:Pseudodragon ns1:hasAlignment ns1:neutralGood .\n\nns1:Pseudosphinx ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pseudowyvern ns1:hasAlignment ns1:trueNeutral .\n\nns1:PsionicAlMiraj ns1:hasAlignment ns1:trueNeutral .\n\nns1:Psiwyrm ns1:hasAlignment ns1:neutralEvil .\n\nns1:Psoglav ns1:hasAlignment ns1:chaoticEvil .\n\nns1:PsycheSerpent ns1:hasAlignment ns1:trueNeutral .\n\nns1:Psychemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Psychepore ns1:hasAlignment ns1:trueNeutral .\n\nns1:PsychicStalker ns1:hasAlignment ns1:neutralEvil .\n\nns1:PsychicWard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Psychlown ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Psychofant ns1:hasAlignment ns1:trueNeutral .\n\nns1:PsychoplasmicBehir ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ptarmigan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pteranodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pufferfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:Puffin ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pukwudgie ns1:hasAlignment ns1:neutralEvil .\n\nns1:PumpkinGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:PurpleWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Purrodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:PutridOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:PygmyGnoll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Pyrausta ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Pyrogeist ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Pyrolisk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Qallupilluk ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Qolok ns1:hasAlignment ns1:neutralEvil .\n\nns1:QuantiumGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Quantum ns1:hasAlignment ns1:trueNeutral .\n\nns1:Quasit ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Quatoid ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:QueenThermite ns1:hasAlignment ns1:trueNeutral .\n\nns1:Quelaunt ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Quetzalcoatlus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Quickling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Quickwood ns1:hasAlignment ns1:trueNeutral .\n\nns1:QuintessenceGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Quipper ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rabbit ns1:hasAlignment ns1:trueNeutral .\n\nns1:Raccoon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Racoon ns1:hasAlignment ns1:trueNeutral .\n\nns1:RadiantEssence ns1:hasAlignment ns1:neutralGood .\n\nns1:Raelis ns1:hasAlignment ns1:chaoticGood .\n\nns1:RageDemonAeshma ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RagebornGnoll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ragewight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Raggoth ns1:hasAlignment ns1:neutralEvil .\n\nns1:RagingRubble ns1:hasAlignment ns1:trueNeutral .\n\nns1:Raiju ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:RajputAmbari ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RakasaBatu ns1:hasAlignment ns1:trueNeutral .\n\nns1:RakklethornToad ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rakshasa ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Raktavarna ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ram ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ramidreju ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rast ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rat ns1:hasAlignment ns1:trueNeutral .\n\nns1:RatKing ns1:hasAlignment ns1:trueNeutral .\n\nns1:RatOgre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RatPlagueSwarmMR ns1:hasAlignment ns1:lawfulEvil .\n\nns1:RatSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ratfolk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ratling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RattlerInphidian ns1:hasAlignment ns1:neutralEvil .\n\nns1:RavagerSpawnCrawlerForm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Raven ns1:hasAlignment ns1:trueNeutral .\n\nns1:RavenSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:RavenousGnoll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RavenousTumbleweed ns1:hasAlignment ns1:trueNeutral .\n\nns1:RavenousUrchinSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:RavenousWendigo ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Rawbones ns1:hasAlignment ns1:neutralEvil .\n\nns1:Rawhead ns1:hasAlignment ns1:neutralEvil .\n\nns1:RazorAngler ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:RazorBoar ns1:hasAlignment ns1:trueNeutral .\n\nns1:RazorFern ns1:hasAlignment ns1:trueNeutral .\n\nns1:Razormouth ns1:hasAlignment ns1:trueNeutral .\n\nns1:RecycledGearsman ns1:hasAlignment ns1:trueNeutral .\n\nns1:RedJester ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:RedPanda ns1:hasAlignment ns1:trueNeutral .\n\nns1:RedReaver ns1:hasAlignment ns1:trueNeutral .\n\nns1:RedWraith ns1:hasAlignment ns1:neutralEvil .\n\nns1:RedWyrmRavener ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Redcap ns1:hasAlignment ns1:neutralEvil .\n\nns1:Redkind ns1:hasAlignment ns1:neutralEvil .\n\nns1:Reefclaw ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Reigon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Reindeer ns1:hasAlignment ns1:trueNeutral .\n\nns1:ReliquaryGuardian ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Remacera ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Renzer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RepairRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:Reptial ns1:hasAlignment ns1:neutralGood .\n\nns1:Reptoid ns1:hasAlignment ns1:lawfulEvil .\n\nns1:RequiemBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:RetchHound ns1:hasAlignment ns1:neutralEvil .\n\nns1:Retriever ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Rhamphorhynchus ns1:hasAlignment ns1:trueNeutral .\n\nns1:RhanTegoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Rhinoceros ns1:hasAlignment ns1:trueNeutral .\n\nns1:RhinocerosWoolly ns1:hasAlignment ns1:trueNeutral .\n\nns1:RhuChalik ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RidingDog ns1:hasAlignment ns1:trueNeutral .\n\nns1:RiftFlumph ns1:hasAlignment ns1:chaoticGood .\n\nns1:Riftcreeper ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RimefireEidolon ns1:hasAlignment ns1:chaoticGood .\n\nns1:Ringhorn ns1:hasAlignment ns1:trueNeutral .\n\nns1:Riotblood ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RipperDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RiptideHorror ns1:hasAlignment ns1:lawfulEvil .\n\nns1:RisenWitch ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RishiManu ns1:hasAlignment ns1:lawfulGood .\n\nns1:RiverDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:RiverElk ns1:hasAlignment ns1:trueNeutral .\n\nns1:RiverGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RiverTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RiverswellSpirit ns1:hasAlignment ns1:neutralEvil .\n\nns1:RobotGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Roc ns1:hasAlignment ns1:trueNeutral .\n\nns1:RockCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:RockReptile ns1:hasAlignment ns1:trueNeutral .\n\nns1:RockTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RockTuatara ns1:hasAlignment ns1:trueNeutral .\n\nns1:RoilingOil ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rokurokubi ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Rokyamut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Ronus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Roofgarden ns1:hasAlignment ns1:trueNeutral .\n\nns1:RopeDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:RopeGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Roper ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Rorkoun ns1:hasAlignment ns1:neutralEvil .\n\nns1:Roseling ns1:hasAlignment ns1:neutralGood .\n\nns1:RotGrubSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rougarou ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:RoyalTimeElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rufidier ns1:hasAlignment ns1:neutralEvil .\n\nns1:Rukh ns1:hasAlignment ns1:trueNeutral .\n\nns1:RuneGiant ns1:hasAlignment ns1:lawfulEvil .\n\nns1:RuneGuardian ns1:hasAlignment ns1:trueNeutral .\n\nns1:RunewarpedGoblin ns1:hasAlignment ns1:neutralEvil .\n\nns1:Rusalka ns1:hasAlignment ns1:neutralEvil .\n\nns1:RussetMold ns1:hasAlignment ns1:trueNeutral .\n\nns1:RustLord ns1:hasAlignment ns1:trueNeutral .\n\nns1:RustMiteSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:RustMonster ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ryven ns1:hasAlignment ns1:trueNeutral .\n\nns1:SANDGIANT ns1:hasAlignment ns1:neutralEvil .\n\nns1:SabbatPrancer ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Sabosan ns1:hasAlignment ns1:neutralEvil .\n\nns1:Sacristan ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Sagari ns1:hasAlignment ns1:neutralEvil .\n\nns1:Saguaroi ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sahuagin ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Salamander ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SaltDrake ns1:hasAlignment ns1:trueNeutral .\n\nns1:SaltMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:SaltWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:SaltwaterCrocodile ns1:hasAlignment ns1:trueNeutral .\n\nns1:SaltwaterMerrow ns1:hasAlignment ns1:neutralEvil .\n\nns1:Samsaran ns1:hasAlignment ns1:trueNeutral .\n\nns1:SandGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:SandHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SandKraken ns1:hasAlignment ns1:trueNeutral .\n\nns1:SandScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:SandStalker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sandling ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sandman ns1:hasAlignment ns1:neutralEvil .\n\nns1:Sangoi ns1:hasAlignment ns1:neutralEvil .\n\nns1:Sangudaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:SanguineOozeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:SapphireJellyfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:SapphireOoze ns1:hasAlignment ns1:chaoticGood .\n\nns1:Sarcovalt ns1:hasAlignment ns1:neutralEvil .\n\nns1:Sard ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SargassumFiend ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sasquatch ns1:hasAlignment ns1:trueNeutral .\n\nns1:Satyr ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SaumenKar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Saurian ns1:hasAlignment ns1:trueNeutral .\n\nns1:SavageGreenHorde ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SawdustSlough ns1:hasAlignment ns1:trueNeutral .\n\nns1:SawlegLocust ns1:hasAlignment ns1:trueNeutral .\n\nns1:Saxra ns1:hasAlignment ns1:neutralEvil .\n\nns1:Sayona ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ScaldingMinotaur ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ScarabBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScarabSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Scarecrow ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScarletSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScarletSpiderSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScarletWalker ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ScavengerWormCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sceaduinar ns1:hasAlignment ns1:neutralEvil .\n\nns1:Sceazir ns1:hasAlignment ns1:neutralEvil .\n\nns1:Schir ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Scitalis ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScorpionDemonGharros ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ScorpionSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Scorpionfolk ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ScragAquaticTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Scraghound ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScrapyardRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScreamingDevilkin ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ScreamingGiantBeheadedCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:ScreamingMedusaHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:ScreamingSeveredHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:ScreamingSeveredSkull ns1:hasAlignment ns1:neutralEvil .\n\nns1:ScreamingSkull ns1:hasAlignment ns1:trueNeutral .\n\nns1:Scylla ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ScytheHorn ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScytheTree ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SeaCat ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:SeaGiant ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SeaHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SeaLinnorm ns1:hasAlignment ns1:neutralEvil .\n\nns1:SeaLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaScourge ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaSerpent ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaSphereBlubble ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaSpider ns1:hasAlignment ns1:neutralEvil .\n\nns1:Seal ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaweedLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaweedSiren ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SecurityMannequin ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Seilenos ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Selkie ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SentientWaxGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:SentinelHut ns1:hasAlignment ns1:trueNeutral .\n\nns1:SepiaSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sepid ns1:hasAlignment ns1:neutralEvil .\n\nns1:Seps ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sepsidaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Seraptis ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SerpentAlchemist ns1:hasAlignment ns1:neutralEvil .\n\nns1:SerpentDemonMallor ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Serpentfolk ns1:hasAlignment ns1:neutralEvil .\n\nns1:SerpentfolkReclaimer ns1:hasAlignment ns1:neutralEvil .\n\nns1:Serpopard ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ServitoroftheOuterGods ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Seugathi ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SeugathiSavant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SewerBlight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SewerOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:SewerTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Sha ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Shabti ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ShachathDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Shadow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShadowAngel ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ShadowAnimalLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShadowCollector ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ShadowDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShadowDrake ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShadowFern ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShadowGiant ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ShadowHunter ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShadowHunterHatchling ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShadowMastiff ns1:hasAlignment ns1:neutralEvil .\n\nns1:ShadowRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShadowRatSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:ShadowRoper ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShadowWolf ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Shae ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShaggyDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShahzadaNobleMarid ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Shalkeshka ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShamblingMound ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shampe ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Shantak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShardSlag ns1:hasAlignment ns1:trueNeutral .\n\nns1:SharkEatingCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:SharpshooterAutomaton ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Shasalqu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shedu ns1:hasAlignment ns1:lawfulGood .\n\nns1:Sheep ns1:hasAlignment ns1:trueNeutral .\n\nns1:SheetFungus ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShemhazianDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShenMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shenzuzhou ns1:hasAlignment ns1:neutralEvil .\n\nns1:Shikigami ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShimmerwingDragonfly ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shinigami ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ShiningSentinel ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShipSentinel ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShipbreakerSeaSerpent ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ShipinaBottle ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShipwreckerCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shira ns1:hasAlignment ns1:neutralEvil .\n\nns1:Shobhad ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShockerLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shoggoth ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Shoggti ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShokiPsychopomp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shotalashu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shredskin ns1:hasAlignment ns1:neutralEvil .\n\nns1:Shrieker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shriezyx ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShrineBlessedBurningSkeletons ns1:hasAlignment ns1:neutralEvil .\n\nns1:Shrroth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Shulsaga ns1:hasAlignment ns1:trueNeutral .\n\nns1:Siabrae ns1:hasAlignment ns1:neutralEvil .\n\nns1:SiegeOwlbear ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sigbin ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Silid ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Silvanshee ns1:hasAlignment ns1:neutralGood .\n\nns1:SilverBells ns1:hasAlignment ns1:trueNeutral .\n\nns1:SilverDragonGreatWyrm ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonJuvenile ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonMatureAdult ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonVeryOld ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonVeryYoung ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonWyrm ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonWyrmling ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonYoungAdult ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverbloodWerewolfHumanForm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Simurgh ns1:hasAlignment ns1:neutralGood .\n\nns1:SinSeeker ns1:hasAlignment ns1:trueNeutral .\n\nns1:SinbornDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SingingShrieker ns1:hasAlignment ns1:trueNeutral .\n\nns1:SinspawnEnvy ns1:hasAlignment ns1:neutralEvil .\n\nns1:SinspawnGluttony ns1:hasAlignment ns1:neutralEvil .\n\nns1:SinspawnGreedspawn ns1:hasAlignment ns1:neutralEvil .\n\nns1:SinspawnPride ns1:hasAlignment ns1:neutralEvil .\n\nns1:SinspawnSloth ns1:hasAlignment ns1:neutralEvil .\n\nns1:SinspawnWrath ns1:hasAlignment ns1:neutralEvil .\n\nns1:SireDevilPatraavex ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Siren ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SirensBedAnemone ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sirrush ns1:hasAlignment ns1:neutralGood .\n\nns1:Sishkanset ns1:hasAlignment ns1:neutralEvil .\n\nns1:Siyokoy ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkateSpiderSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Skaveling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SkeletalArcher ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkeletalChampion ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkeletalChampionArcherCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkeletalMage ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkeletalMount ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkeletonHostCorpse ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkeletonReindeer ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkildpadderGiantTortoiseBullette ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkinStealer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SkinStitcher ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Skincrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkincrawlerDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Skinstitch ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkirmishersTroop ns1:hasAlignment ns1:chaoticGood .\n\nns1:SkitterRat ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Skitterdark ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Skittergoat ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkrikNettle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Skrimsl ns1:hasAlignment ns1:trueNeutral .\n\nns1:Skua ns1:hasAlignment ns1:trueNeutral .\n\nns1:Skulk ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SkullRipper ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SkullSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkullSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:Skullcruncher ns1:hasAlignment ns1:neutralEvil .\n\nns1:Skulleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkumUlatKini ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Skunk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Skvader ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkyDreamer ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlaadLordOfEntropy ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SlaadLordOfTheInsane ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SlagGiant ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:SlagWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Slaughterford ns1:hasAlignment ns1:neutralEvil .\n\nns1:SleepingWillow ns1:hasAlignment ns1:neutralEvil .\n\nns1:SleeykOwlbear ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sleipnir ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlicerBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlimeDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SlimeInfectedBasilisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlimeMold ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlimyDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SlimyHagfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:Slinker ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SlitheringPit ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlitheringTracker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Slorath ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Sloth ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlothSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlothViper ns1:hasAlignment ns1:trueNeutral .\n\nns1:Slugspawn ns1:hasAlignment ns1:trueNeutral .\n\nns1:Slurk ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallAcidQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallAetherElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallAirElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallBarracuda ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallColdironelemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallEarthElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallFireCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallFireElemental ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SmallGravityElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallIceElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallLightningElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallLightningQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallMagmaElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallMonstrousSeaWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallMudElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallNegativeenergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallObsidianQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallPositiveEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallPsionicElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallStingray ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallUnfetteredEidolon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SmallWaterElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmilodonSaberToothedCat ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmokeDragonDracoFumoSuffaco ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmokeGiant ns1:hasAlignment ns1:neutralEvil .\n\nns1:SmokeMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmokeSentinel ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Smokeshade ns1:hasAlignment ns1:neutralEvil .\n\nns1:SnailFlail ns1:hasAlignment ns1:trueNeutral .\n\nns1:SnakeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Snallygaster ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SnapdragonLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:SnapjawHomunculus ns1:hasAlignment ns1:neutralEvil .\n\nns1:SnappingTurtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Snark ns1:hasAlignment ns1:trueNeutral .\n\nns1:SnowGiant ns1:hasAlignment ns1:neutralEvil .\n\nns1:SnowLeopard ns1:hasAlignment ns1:trueNeutral .\n\nns1:SnowRoc ns1:hasAlignment ns1:trueNeutral .\n\nns1:Snowcloak ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Snowking ns1:hasAlignment ns1:neutralEvil .\n\nns1:SoddenDraugerTroop ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SoddenDraugrTroop ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Solar ns1:hasAlignment ns1:neutralGood .\n\nns1:SolarPitriAgnishvattaMR ns1:hasAlignment ns1:lawfulGood .\n\nns1:SoldierThermite ns1:hasAlignment ns1:trueNeutral .\n\nns1:Somalcygot ns1:hasAlignment ns1:neutralEvil .\n\nns1:Somlum ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SonechardGeneralofOrcus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SonicKratah ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Soucouyant ns1:hasAlignment ns1:neutralEvil .\n\nns1:SoulEater ns1:hasAlignment ns1:neutralEvil .\n\nns1:SoulNibbler ns1:hasAlignment ns1:trueNeutral .\n\nns1:SoulReaper ns1:hasAlignment ns1:neutralEvil .\n\nns1:SoulboundAnnihilatorRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:SoulboundDoll ns1:hasAlignment ns1:trueNeutral .\n\nns1:SoulboundMannequin ns1:hasAlignment ns1:trueNeutral .\n\nns1:SoulboundShell ns1:hasAlignment ns1:trueNeutral .\n\nns1:SoullessDestroyer ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Soulsliver ns1:hasAlignment ns1:neutralEvil .\n\nns1:Spartolos ns1:hasAlignment ns1:neutralEvil .\n\nns1:SpawningCanker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SpawnofYogSothoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SpearUrchin ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpectralRockTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Spectre ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SpellgorgedZombie ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpellscarredFext ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SphinxColossusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpiderCollective ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpiderEater ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpiderSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpikestoneGuardian ns1:hasAlignment ns1:trueNeutral .\n\nns1:Spindler ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SpineDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Spinosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpinyEurypterid ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpinyStarfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpireDrake ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SpiritOni ns1:hasAlignment ns1:neutralEvil .\n\nns1:SpiritofAbandon ns1:hasAlignment ns1:neutralGood .\n\nns1:SpiteSpitter ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SpittingCobra ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpittingEurypterid ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpittingSeaSerpent ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SplinterDrake ns1:hasAlignment ns1:trueNeutral .\n\nns1:SporeRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Spriggan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SpringHeeledJack ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Sprite ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SpyglassArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:SquamousDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Squealer ns1:hasAlignment ns1:trueNeutral .\n\nns1:Squid ns1:hasAlignment ns1:trueNeutral .\n\nns1:SquidGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:Squirrel ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stag ns1:hasAlignment ns1:trueNeutral .\n\nns1:StagArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:StalkBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:StalkerAutomaton ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:StandardShieldWarden ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:StarDrake ns1:hasAlignment ns1:trueNeutral .\n\nns1:StarMonarch ns1:hasAlignment ns1:chaoticGood .\n\nns1:StarSpawnofCthulhu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:StarVampire ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Starspawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SteamBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:SteamMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:SteamPoweredClockworkDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stegaloviper ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stegocentipede ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stegosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:StenchKow ns1:hasAlignment ns1:trueNeutral .\n\nns1:StewardOfTheSkein ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sthenno ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Stingray ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stirge ns1:hasAlignment ns1:trueNeutral .\n\nns1:StirgeDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:StirgeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneColossusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneGuardianGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneMaiden ns1:hasAlignment ns1:trueNeutral .\n\nns1:StonePudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneRoper ns1:hasAlignment ns1:chaoticEvil .\n\nns1:StoneSalveshapedFiendishEnhancedBlackPudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneTreant ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneTroglodyte ns1:hasAlignment ns1:chaoticEvil .\n\nns1:StormGiant ns1:hasAlignment ns1:chaoticGood .\n\nns1:StormGiantZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:StormHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Stormghost ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Stormwarden ns1:hasAlignment ns1:neutralEvil .\n\nns1:StrangleWeed ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stranglereed ns1:hasAlignment ns1:trueNeutral .\n\nns1:StringyDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Strix ns1:hasAlignment ns1:trueNeutral .\n\nns1:StrokeLad ns1:hasAlignment ns1:neutralEvil .\n\nns1:StumbleFish ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stunjelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:StygianLeviathan ns1:hasAlignment ns1:neutralEvil .\n\nns1:StygianTurtleShark ns1:hasAlignment ns1:neutralEvil .\n\nns1:Stygira ns1:hasAlignment ns1:lawfulEvil .\n\nns1:StymphalianBird ns1:hasAlignment ns1:trueNeutral .\n\nns1:StymphalidesSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stymphalidies ns1:hasAlignment ns1:trueNeutral .\n\nns1:Styracosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Su ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Succubus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Sudoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Suffragan ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SuijinKami ns1:hasAlignment ns1:trueNeutral .\n\nns1:Suli ns1:hasAlignment ns1:trueNeutral .\n\nns1:SummonedAurochs ns1:hasAlignment ns1:trueNeutral .\n\nns1:SummonedGorilla ns1:hasAlignment ns1:trueNeutral .\n\nns1:SummonedWolf ns1:hasAlignment ns1:trueNeutral .\n\nns1:SumpSteward ns1:hasAlignment ns1:trueNeutral .\n\nns1:SunGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SunflowerLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sunlord ns1:hasAlignment ns1:neutralGood .\n\nns1:Suspiridaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:SutureVine ns1:hasAlignment ns1:trueNeutral .\n\nns1:Suzalisk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Svartalfar ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Svirfneblin ns1:hasAlignment ns1:trueNeutral .\n\nns1:SvirfneblinRidingSlug ns1:hasAlignment ns1:neutralGood .\n\nns1:Swaithe ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SwampBarracuda ns1:hasAlignment ns1:trueNeutral .\n\nns1:SwampBlight ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SwampMummy ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SwampTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SwanMaiden ns1:hasAlignment ns1:chaoticGood .\n\nns1:SwarmDemonDaraka ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SwitchbackJackal ns1:hasAlignment ns1:trueNeutral .\n\nns1:Swordfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sylph ns1:hasAlignment ns1:trueNeutral .\n\nns1:Synesis ns1:hasAlignment ns1:trueNeutral .\n\nns1:Synevite ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Syricta ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Syrinx ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Szaboan ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Szuriel ns1:hasAlignment ns1:neutralEvil .\n\nns1:TShann ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tabaxi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Tadhemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Taer ns1:hasAlignment ns1:trueNeutral .\n\nns1:TaigaGiant ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TaigaLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TailessCragLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TallowGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tangtal ns1:hasAlignment ns1:neutralEvil .\n\nns1:Taniniver ns1:hasAlignment ns1:neutralEvil .\n\nns1:Taniwha ns1:hasAlignment ns1:chaoticGood .\n\nns1:Tanuki ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TarJelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:TarantulaTree ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Targotha ns1:hasAlignment ns1:trueNeutral .\n\nns1:TarnLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TarrasqueB ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TarryDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TarryDemodandCR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tarsier ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tataka ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Tatzlwyrm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tauhoti ns1:hasAlignment ns1:trueNeutral .\n\nns1:TaviMongooseFolk ns1:hasAlignment ns1:trueNeutral .\n\nns1:TawilAtumr ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TaxidermicGrizzlyBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tazelwurm ns1:hasAlignment ns1:trueNeutral .\n\nns1:TchoTcho ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tearjerker ns1:hasAlignment ns1:trueNeutral .\n\nns1:TearofBurningFlame ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Telgrodradt ns1:hasAlignment ns1:neutralEvil .\n\nns1:Temerdaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:TempestBehemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:TemporalCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tendriculos ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tendrul ns1:hasAlignment ns1:trueNeutral .\n\nns1:TenebrousBlight ns1:hasAlignment ns1:trueNeutral .\n\nns1:TenebrousPurpleWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:TenebrousWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tengu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tenome ns1:hasAlignment ns1:neutralEvil .\n\nns1:TentacledHorror ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tentamort ns1:hasAlignment ns1:trueNeutral .\n\nns1:TermagantKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:TermiteSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:TerracottaArcher ns1:hasAlignment ns1:trueNeutral .\n\nns1:TerracottaHorseman ns1:hasAlignment ns1:trueNeutral .\n\nns1:TerracottaSoldier ns1:hasAlignment ns1:trueNeutral .\n\nns1:Terraformer ns1:hasAlignment ns1:trueNeutral .\n\nns1:TerrorBird ns1:hasAlignment ns1:trueNeutral .\n\nns1:TerrorWolf ns1:hasAlignment ns1:neutralEvil .\n\nns1:Terrorized ns1:hasAlignment ns1:neutralEvil .\n\nns1:TestudoTroops ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Tether ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Tetrolimulus ns1:hasAlignment ns1:neutralEvil .\n\nns1:ThalassicBehemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thanadaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:ThanatosFey ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ThanatoticTitan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Thancrus ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Thawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheBlackRider ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:TheDesire ns1:hasAlignment ns1:neutralEvil .\n\nns1:TheEndSinger ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheFatherofAllLinnorms ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheFirebleeder ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheFirstBlade ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TheFuriesErinyes ns1:hasAlignment ns1:lawfulEvil .\n\nns1:TheGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:TheGrandDefender ns1:hasAlignment ns1:lawfulGood .\n\nns1:TheGrimWhiteStag ns1:hasAlignment ns1:lawfulGood .\n\nns1:TheHeraldofPassion ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TheHobblingHookClawedApparatus ns1:hasAlignment ns1:trueNeutral .\n\nns1:TheHornedLord ns1:hasAlignment ns1:chaoticGood .\n\nns1:TheInfernalDuke ns1:hasAlignment ns1:lawfulEvil .\n\nns1:TheMantisGod ns1:hasAlignment ns1:lawfulEvil .\n\nns1:TheOinodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:TheOldMan ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ThePrinceinChains ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ThePrinceofHell ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheRavagerCrawlerForm ns1:hasAlignment ns1:trueNeutral .\n\nns1:TheRedRider ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:TheScarecrow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheSpiritOfAdoration ns1:hasAlignment ns1:neutralGood .\n\nns1:TheStabbingBeast ns1:hasAlignment ns1:neutralEvil .\n\nns1:TheSunlord ns1:hasAlignment ns1:neutralGood .\n\nns1:TheThirdStageOuterSpawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheWaterLizard ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TheWhiteRider ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Theletos ns1:hasAlignment ns1:trueNeutral .\n\nns1:Therizinosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thessalgorgon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thessalhydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thessalisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThinMan ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Thognorok ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Thoqqua ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThornDog ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thorny ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThornyAdvancedTyrannosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThoughtEater ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThrallofYogSothoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Thrasfyr ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ThriaeConstructor ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThriaeDancer ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ThriaeQueen ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ThriaeSeer ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ThriaeSoldier ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Thrush ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thulgant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ThunderBeast ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThunderBehemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thunderbird ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thundershrike ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thuskchoon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Thylacine ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thyrlien ns1:hasAlignment ns1:chaoticGood .\n\nns1:Tiberolith ns1:hasAlignment ns1:trueNeutral .\n\nns1:TickSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:TidepoolDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Tidewretch ns1:hasAlignment ns1:neutralEvil .\n\nns1:Tiger ns1:hasAlignment ns1:trueNeutral .\n\nns1:TigerFish ns1:hasAlignment ns1:trueNeutral .\n\nns1:TigerShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tigrilla ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tikbalang ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tilket ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TimberWight ns1:hasAlignment ns1:lawfulEvil .\n\nns1:TimeFlayer ns1:hasAlignment ns1:neutralEvil .\n\nns1:Tintargurill ns1:hasAlignment ns1:trueNeutral .\n\nns1:TinyAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:TinyMonstrousSeaWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:TitanCentipedeExoskeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:Titanboar ns1:hasAlignment ns1:trueNeutral .\n\nns1:TitanicAdultBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TitanicWhipSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Titanoboa ns1:hasAlignment ns1:trueNeutral .\n\nns1:Titivilus ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Tixitog ns1:hasAlignment ns1:neutralEvil .\n\nns1:Tiyanak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tizheruk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tlalusk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Toad ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tobongo ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tojanida ns1:hasAlignment ns1:trueNeutral .\n\nns1:TombGiant ns1:hasAlignment ns1:neutralEvil .\n\nns1:TombstoneFairy ns1:hasAlignment ns1:neutralEvil .\n\nns1:TomeofHorrors ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tonberry ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ToothFairy ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ToothFairyMonarch ns1:hasAlignment ns1:neutralEvil .\n\nns1:Tophet ns1:hasAlignment ns1:trueNeutral .\n\nns1:TorLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TormentorofSoulsTormentorDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:TorturerRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:Toshigami ns1:hasAlignment ns1:neutralGood .\n\nns1:TotemGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Totenmaske ns1:hasAlignment ns1:neutralEvil .\n\nns1:Trailgaunt ns1:hasAlignment ns1:neutralEvil .\n\nns1:Transposer ns1:hasAlignment ns1:trueNeutral .\n\nns1:Trapper ns1:hasAlignment ns1:trueNeutral .\n\nns1:Treant ns1:hasAlignment ns1:neutralGood .\n\nns1:Trelmarixian ns1:hasAlignment ns1:neutralEvil .\n\nns1:TrenchMist ns1:hasAlignment ns1:neutralEvil .\n\nns1:TriFlowerFrond ns1:hasAlignment ns1:trueNeutral .\n\nns1:TriTongueHorror ns1:hasAlignment ns1:trueNeutral .\n\nns1:Triaxian ns1:hasAlignment ns1:trueNeutral .\n\nns1:TribalProtector ns1:hasAlignment ns1:neutralGood .\n\nns1:Triceratops ns1:hasAlignment ns1:trueNeutral .\n\nns1:Trilobite ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tripurasura ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Triton ns1:hasAlignment ns1:neutralGood .\n\nns1:Troblin ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Troggle ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TroggleRaider ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Troglodyte ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Troll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollAcolyte ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollBerserker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollBrute ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollElderMatron ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollFury ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollMonarch ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollMountain ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TrollRender ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollRipper ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:TrollWarden ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Trollhound ns1:hasAlignment ns1:trueNeutral .\n\nns1:Trollkin ns1:hasAlignment ns1:trueNeutral .\n\nns1:Troodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Trox ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TrumpetArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:TrumpeterSwan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tsaalgrend ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tsathar ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TsatharScourge ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TsathoggaTheFrogGod ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tuatara ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tullimonstrum ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tumblespark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tunche ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TunnelBrute ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TunnelWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tupilaq ns1:hasAlignment ns1:trueNeutral .\n\nns1:Turtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Turul ns1:hasAlignment ns1:trueNeutral .\n\nns1:Twigjack ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TwilightPitriBarhisad ns1:hasAlignment ns1:lawfulGood .\n\nns1:TwoHeadedTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TwoheadedWinterWorg ns1:hasAlignment ns1:neutralEvil .\n\nns1:Tychilarius ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tylosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tyngderkraften ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Tyrannosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:TyrantJellyMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tzitzimitl ns1:hasAlignment ns1:neutralEvil .\n\nns1:UbashkiSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ubue ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:UdaeusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:UgashIram ns1:hasAlignment ns1:neutralEvil .\n\nns1:Uintatherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:Uinuja ns1:hasAlignment ns1:chaoticGood .\n\nns1:Ujaheim ns1:hasAlignment ns1:trueNeutral .\n\nns1:Uldraaghu ns1:hasAlignment ns1:lawfulEvil .\n\nns1:UltharChampion ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:UltimaWeapon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:UmbralDragonGreatWyrm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonJuvenile ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonMatureAdult ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonOld ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonVeryOld ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonVeryYoung ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonWyrm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonWyrmling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonYoungAdult ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralEyeKiller ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralShepherd ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Umbralobe ns1:hasAlignment ns1:neutralEvil .\n\nns1:UnchosenGnoll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UndeadEmu ns1:hasAlignment ns1:neutralEvil .\n\nns1:UndeadNingyo ns1:hasAlignment ns1:neutralEvil .\n\nns1:UndeadOoze ns1:hasAlignment ns1:neutralEvil .\n\nns1:UndeadWarlord ns1:hasAlignment ns1:trueNeutral .\n\nns1:UnderworldBatSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Undigested ns1:hasAlignment ns1:neutralEvil .\n\nns1:UndigestedSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:Undine ns1:hasAlignment ns1:trueNeutral .\n\nns1:UnfetteredEidolon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:UnfetteredPhantom ns1:hasAlignment ns1:trueNeutral .\n\nns1:UnhallowedGreaterShadow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UnhallowedMohrg ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UnhallowedMummy ns1:hasAlignment ns1:lawfulEvil .\n\nns1:UnhallowedZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Unicorn ns1:hasAlignment ns1:chaoticGood .\n\nns1:Uniila ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Unrisen ns1:hasAlignment ns1:neutralEvil .\n\nns1:UnseelieShadowMastiff ns1:hasAlignment ns1:neutralEvil .\n\nns1:Upasunda ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Uraeus ns1:hasAlignment ns1:lawfulGood .\n\nns1:Urannag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Urdefhan ns1:hasAlignment ns1:neutralEvil .\n\nns1:Urhag ns1:hasAlignment ns1:neutralEvil .\n\nns1:Urrk ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ursikka ns1:hasAlignment ns1:trueNeutral .\n\nns1:Urskan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ushabti ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Utukku ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Valharut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Valkyrie ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Vamore ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Vampire ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VampireRose ns1:hasAlignment ns1:trueNeutral .\n\nns1:VampireSpawn ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VampireSquid ns1:hasAlignment ns1:trueNeutral .\n\nns1:VampiricMist ns1:hasAlignment ns1:neutralEvil .\n\nns1:VampiricOoze ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vanara ns1:hasAlignment ns1:lawfulGood .\n\nns1:Vanth ns1:hasAlignment ns1:trueNeutral .\n\nns1:VaporDireRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:VaporWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vargouille ns1:hasAlignment ns1:neutralEvil .\n\nns1:VariantAllip ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VariantAtticWhisperer ns1:hasAlignment ns1:trueNeutral .\n\nns1:Varklops ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VaultBuilderMR ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:VaultGiant ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VaultKeeper ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Vavakia ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vayuphak ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ved ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vegepygmy ns1:hasAlignment ns1:trueNeutral .\n\nns1:VegepygmyBodyguard ns1:hasAlignment ns1:trueNeutral .\n\nns1:VegepygmyChief ns1:hasAlignment ns1:trueNeutral .\n\nns1:VegepygmyCommoner ns1:hasAlignment ns1:trueNeutral .\n\nns1:VegepygmyGuard ns1:hasAlignment ns1:trueNeutral .\n\nns1:VegepygmySubchief ns1:hasAlignment ns1:trueNeutral .\n\nns1:VegepygmyWorker ns1:hasAlignment ns1:trueNeutral .\n\nns1:VeiledMaster ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Veinar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Veldenar ns1:hasAlignment ns1:trueNeutral .\n\nns1:Velociraptor ns1:hasAlignment ns1:trueNeutral .\n\nns1:VelvetAntSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vemerak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vendenopterix ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Venedaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:VenomDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VenomousSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:VenomousSnakeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Venomroach ns1:hasAlignment ns1:trueNeutral .\n\nns1:VeparDukeofDagon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Veranallia ns1:hasAlignment ns1:chaoticGood .\n\nns1:VeranalliaAzata ns1:hasAlignment ns1:chaoticGood .\n\nns1:VerdurousOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:VerminLord ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vermlek ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryOldBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryOldBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VeryOldCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:VeryOldGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VeryOldRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryOldRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:VeryOldSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:VeryOldSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:VeryOldWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryYoungBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryYoungBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VeryYoungForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryYoungGoldDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:VeryYoungGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VeryYoungRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryYoungRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:VeryYoungSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:VeryYoungSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:VeryYoungSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:VeryYoungUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VeryYoungWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryoldForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryoldSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:VescavorQueen ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vespergaunt ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vestraadi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Vidre ns1:hasAlignment ns1:trueNeutral .\n\nns1:ViduusPsychopomp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vilderavn ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vilkacis ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vilsteth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vilstrak ns1:hasAlignment ns1:neutralEvil .\n\nns1:VioletFungus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Viper ns1:hasAlignment ns1:trueNeutral .\n\nns1:ViperVine ns1:hasAlignment ns1:trueNeutral .\n\nns1:ViridiumGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vishap ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vishkanya ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vodyanoi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:VoidYai ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VoidZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:VoidstickZombie ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VolcanoGiant ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Volt ns1:hasAlignment ns1:trueNeutral .\n\nns1:VoltGhost ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Voltleech ns1:hasAlignment ns1:neutralEvil .\n\nns1:Voonith ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Vorgozen ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Vorin ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vorvorak ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vouivre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vrock ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vrolikai ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vrykolakas ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vukodlak ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vulchling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vulnudaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vulpinal ns1:hasAlignment ns1:neutralGood .\n\nns1:Vulture ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vvor ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vydrarch ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Wakandagi ns1:hasAlignment ns1:neutralGood .\n\nns1:Wallaby ns1:hasAlignment ns1:trueNeutral .\n\nns1:Walrus ns1:hasAlignment ns1:trueNeutral .\n\nns1:WandWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:WangLiang ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WarBringerGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WarBull ns1:hasAlignment ns1:trueNeutral .\n\nns1:WarPony ns1:hasAlignment ns1:trueNeutral .\n\nns1:Warcat ns1:hasAlignment ns1:trueNeutral .\n\nns1:WardenJackSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:WarmazeDisciplesTroop ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Warmonger ns1:hasAlignment ns1:trueNeutral .\n\nns1:WarmongerDevilLevaloch ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WarmongerWasp ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WarpedOne ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WarpglassOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Warsworn ns1:hasAlignment ns1:neutralEvil .\n\nns1:WaspDemonMezzalorn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WaspSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Waspite ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Watcher ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:WaterElementalConstruct ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaterLeaper ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WaterMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaterOrm ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaterStriderSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaterVeela ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaterWeird ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WaterWraith ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WaterWysp ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaterYai ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Waterfiend ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WaxGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaxworkHuman ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wayang ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Weasel ns1:hasAlignment ns1:trueNeutral .\n\nns1:Weedwhip ns1:hasAlignment ns1:trueNeutral .\n\nns1:WellLurker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wendigo ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WerebatHumanForm ns1:hasAlignment ns1:neutralEvil .\n\nns1:WereboarHumanForm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WerecrocodileHumanForm ns1:hasAlignment ns1:neutralEvil .\n\nns1:WeremantisHumanForm ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WereraptorHumanForm ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:WereraptorHybridForm ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:WereratHumanForm ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WeresharkHumanForm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WerespiderHumanForm ns1:hasAlignment ns1:neutralEvil .\n\nns1:WeretigerHumanForm ns1:hasAlignment ns1:neutralEvil .\n\nns1:WerewaspElfForm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WerewolfHumanFormCR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Whale ns1:hasAlignment ns1:trueNeutral .\n\nns1:WhalerJellyfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:WhipJelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:WhiptailDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Whirlmaw ns1:hasAlignment ns1:trueNeutral .\n\nns1:WhisperVulture ns1:hasAlignment ns1:trueNeutral .\n\nns1:Whisperer ns1:hasAlignment ns1:neutralEvil .\n\nns1:WhisperscaleHunter ns1:hasAlignment ns1:neutralEvil .\n\nns1:WhitePudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:Whyrlish ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wickerman ns1:hasAlignment ns1:trueNeutral .\n\nns1:WidowCreeper ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wight ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WightAdultRedDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WightMinotaur ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WightMonk ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Wihsaak ns1:hasAlignment ns1:neutralEvil .\n\nns1:Wikkawak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WildDreamImpCompanion ns1:hasAlignment ns1:neutralGood .\n\nns1:WildDreamImpHero ns1:hasAlignment ns1:neutralGood .\n\nns1:WildHuntArcher ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WildHuntHorse ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WildHuntHound ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WildHuntMonarch ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WildHuntScout ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WilloWisp ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WillowDusk ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WindWalker ns1:hasAlignment ns1:trueNeutral .\n\nns1:WindWalkerWendigo ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WindYai ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Winterwight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Wisagatcak ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WitchDollGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:WitchTree ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Witchcrow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Witchfire ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Witherstench ns1:hasAlignment ns1:trueNeutral .\n\nns1:Witherweed ns1:hasAlignment ns1:trueNeutral .\n\nns1:WizardsShackle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Woghemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wolf ns1:hasAlignment ns1:trueNeutral .\n\nns1:WolfInSheepsClothing ns1:hasAlignment ns1:trueNeutral .\n\nns1:WolfSpider ns1:hasAlignment ns1:neutralEvil .\n\nns1:WolfinSheepsClothing ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wolliped ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wolpertinger ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wolverine ns1:hasAlignment ns1:trueNeutral .\n\nns1:WoodColossusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:WoodGiant ns1:hasAlignment ns1:chaoticGood .\n\nns1:WoodGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Woodwose ns1:hasAlignment ns1:neutralEvil .\n\nns1:WoollyRhinoceros ns1:hasAlignment ns1:trueNeutral .\n\nns1:Worg ns1:hasAlignment ns1:neutralEvil .\n\nns1:WorkWraith ns1:hasAlignment ns1:neutralEvil .\n\nns1:WorkerThermite ns1:hasAlignment ns1:trueNeutral .\n\nns1:WorldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WormThatWalksHuman ns1:hasAlignment ns1:neutralEvil .\n\nns1:WormthatWalksLocustVariant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Woundwyrm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Wrackworm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Wraith ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WrathBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:WrathDragonDracoSanctusBenevolentia ns1:hasAlignment ns1:neutralGood .\n\nns1:WrathplatedClockworkMage ns1:hasAlignment ns1:trueNeutral .\n\nns1:WyrmBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WyrmForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WyrmRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WyrmSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:WyrmSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:WyrmWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmlingBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmlingBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WyrmlingForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmlingGoldDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:WyrmlingGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WyrmlingRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmlingRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WyrmlingSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:WyrmlingSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:WyrmlingSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:WyrmlingUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WyrmlingWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Wyrmwraith ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Wyrwood ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wyvaran ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Wyvern ns1:hasAlignment ns1:trueNeutral .\n\nns1:Xacarba ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Xanthos ns1:hasAlignment ns1:trueNeutral .\n\nns1:Xaphan ns1:hasAlignment ns1:lawfulEvil .\n\nns1:XenarthIchorShark ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Xenopterid ns1:hasAlignment ns1:trueNeutral .\n\nns1:Xiao ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Xill ns1:hasAlignment ns1:lawfulEvil .\n\nns1:XillMatriarch ns1:hasAlignment ns1:lawfulEvil .\n\nns1:XillixLesserNelbarzoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ximtal ns1:hasAlignment ns1:neutralEvil .\n\nns1:XiuhCouatl ns1:hasAlignment ns1:neutralGood .\n\nns1:Xocothian ns1:hasAlignment ns1:trueNeutral .\n\nns1:Xocouatl ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Xorn ns1:hasAlignment ns1:trueNeutral .\n\nns1:Xtabay ns1:hasAlignment ns1:trueNeutral .\n\nns1:Xulgath ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Yaddithian ns1:hasAlignment ns1:trueNeutral .\n\nns1:Yaenit ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YamabushiTengu ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Yamah ns1:hasAlignment ns1:chaoticGood .\n\nns1:Yamaraj ns1:hasAlignment ns1:trueNeutral .\n\nns1:Yangethe ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Yaoguai ns1:hasAlignment ns1:trueNeutral .\n\nns1:Yarthoon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:YellowMuskCreeper ns1:hasAlignment ns1:trueNeutral .\n\nns1:YellowMuskZombie ns1:hasAlignment ns1:trueNeutral .\n\nns1:YethHound ns1:hasAlignment ns1:neutralEvil .\n\nns1:Yeti ns1:hasAlignment ns1:trueNeutral .\n\nns1:Yhohm ns1:hasAlignment ns1:neutralGood .\n\nns1:Yig ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Yithian ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:YithianElder ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Ymir ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Yothga ns1:hasAlignment ns1:neutralEvil .\n\nns1:YoungAdultBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungAdultBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:YoungAdultGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:YoungAdultRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungAdultRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:YoungAdultSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:YoungAdultSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:YoungAdultSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungAdultWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungApocalypseDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:YoungAstralDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungBlissDragon ns1:hasAlignment ns1:neutralGood .\n\nns1:YoungBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:YoungBrassDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:YoungCaveDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:YoungCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungCopperDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:YoungCrystalDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:YoungDreamDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungEdictDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:YoungEthericDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungGoldDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:YoungGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:YoungLunarDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:YoungMagmaDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:YoungMistDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungNightmareDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:YoungOccultDragon ns1:hasAlignment ns1:neutralGood .\n\nns1:YoungRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:YoungSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:YoungSilverDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:YoungSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:YoungSolarDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:YoungSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungTimeDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungUmbralDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:YoungVoidDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:YoungVortexDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:YoungWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungadultForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ypotryll ns1:hasAlignment ns1:trueNeutral .\n\nns1:Yrthak ns1:hasAlignment ns1:trueNeutral .\n\nns1:Yukionna ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Yurei ns1:hasAlignment ns1:neutralEvil .\n\nns1:Zalyakavat ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Zaramuun ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Zarxorin ns1:hasAlignment ns1:trueNeutral .\n\nns1:ZealotWraith ns1:hasAlignment ns1:neutralEvil .\n\nns1:Zelekhut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Zentragt ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Zeuglodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ZhenWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Zhyen ns1:hasAlignment ns1:trueNeutral .\n\nns1:Zohanil ns1:hasAlignment ns1:neutralEvil .\n\nns1:Zolavoi ns1:hasAlignment ns1:trueNeutral .\n\nns1:Zombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:ZombieHandservant ns1:hasAlignment ns1:neutralEvil .\n\nns1:ZombieHillGiant ns1:hasAlignment ns1:neutralEvil .\n\nns1:ZombieHorde ns1:hasAlignment ns1:neutralEvil .\n\nns1:ZombieWolf ns1:hasAlignment ns1:neutralEvil .\n\nns1:Zomok ns1:hasAlignment ns1:trueNeutral .\n\nns1:Zoog ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Zuishin ns1:hasAlignment ns1:lawfulGood .\n\nns1:Zuvembie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Zvucni ns1:hasAlignment ns1:neutralGood .\n\nns1:Zwerc ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:aasimar ns1:hasAlignment ns1:neutralGood .\n\nns1:caypup ns1:hasAlignment ns1:chaoticGood .\n\nns1:earthElementalHero ns1:hasAlignment ns1:trueNeutral .\n\nns1:greatwyrmSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:hangedman ns1:hasAlignment ns1:chaoticEvil .\n\nns1:headedPyrohydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:helixmothmature ns1:hasAlignment ns1:trueNeutral .\n\nns1:heraldoftsathogga ns1:hasAlignment ns1:chaoticEvil .\n\nns1:hoarfox ns1:hasAlignment ns1:trueNeutral .\n\nns1:juvenileCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:oldForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:oldUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:oldclouddragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:theFirebleeder ns1:hasAlignment ns1:chaoticEvil .\n\nns1:theMonarchWorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:veryYoungCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:veryoldUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:witchwyrd ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:wyrmSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:wyrmUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:wyrmclouddragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:wyrmlingCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:youngAdultCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:youngadultUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "subgraph",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:12.142763",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:48:52.785492",
        "Please generate a SPARQL query for the given RDF graph and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what is the most common alignment type\n\ngraph:\n```turtle\nl...```"
      ],
      [
        "response",
        "2024-05-13T13:48:57.293196",
        "```sparql\nSELECT ?alignment (COUNT(?alignment) AS ?count)\nWHERE {\n    ?s ns1:alignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1\n```"
      ],
      [
        "prompt",
        "2024-05-13T13:48:57.344013",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T13:49:01.872827",
        "```sparql\nSELECT ?alignment (COUNT(?alignment) AS ?count)\nWHERE {\n    ?character ns1:alignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1\n```"
      ],
      [
        "prompt",
        "2024-05-13T13:49:01.934182",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T13:49:04.928246",
        "```sparql\nSELECT ?alignment (COUNT(?character) AS ?count)\nWHERE {\n  ?character ns1:alignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:49:14.806758",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubgraph",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 703,
      "actualSize": 682
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary019",
        "sparql": "PREFIX ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#>\n\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+PREFIX ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#>\n+\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ns1:cold .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:aasimar"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary019",
        "sparql": "PREFIX ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#>\n\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+PREFIX ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#>\n+\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ns1:cold .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:aasimar"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary019",
      "question": "what creatures do have cold resist",
      "refSparql": "SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }",
      "refResultSet": [
        "ns1:aasimar"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:aasimar ns1:hasResists ns1:cold .\n\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "subgraph",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:03.757947",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:49:14.806766",
        "Please generate a SPARQL query for the given RDF graph and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what creatures do have cold resist\n\ngraph:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:aasimar ns1:hasResists ns1:cold .\n\n```"
      ],
      [
        "response",
        "2024-05-13T13:49:18.564705",
        "```sparql\nPREFIX ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#>\n\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:49:28.646638",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubgraph",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 799,
      "actualSize": 1094
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:alignment \"chaotic good\" .\n  FILTER NOT EXISTS {\n    ?creature ns1:speaks \"draconic\" .\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:alignment \"chaotic good\" .\n+  FILTER NOT EXISTS {\n+    ?creature ns1:speaks \"draconic\" .\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:alignment \"chaotic good\".\n  MINUS {\n    ?creature ns1:speaks \"draconic\".\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:alignment \"chaotic good\".\n+  MINUS {\n+    ?creature ns1:speaks \"draconic\".\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:alignment \"chaotic good\" .\n  FILTER NOT EXISTS {\n    ?creature ns1:speaks \"draconic\" .\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:alignment \"chaotic good\" .\n+  FILTER NOT EXISTS {\n+    ?creature ns1:speaks \"draconic\" .\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:alignment \"chaotic good\" .\n  FILTER NOT EXISTS {\n    ?creature ns1:speaks \"draconic\" .\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:alignment \"chaotic good\" .\n+  FILTER NOT EXISTS {\n+    ?creature ns1:speaks \"draconic\" .\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary001",
      "question": "which creatures not speaking draconic language do have chaotic good alignment",
      "refSparql": "SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }",
      "refResultSet": [
        "ns1:Anhana",
        "ns1:Ataxian",
        "ns1:Azruverda",
        "ns1:BattleImp",
        "ns1:Biofreezer",
        "ns1:BlackButterfly",
        "ns1:Cayhound",
        "ns1:Caypup",
        "ns1:Celedeen",
        "ns1:Cynosoma",
        "ns1:Djinni",
        "ns1:Domovoi",
        "ns1:Dryad",
        "ns1:ElysianTitan",
        "ns1:Faun",
        "ns1:FungalNymph",
        "ns1:Gancanagh",
        "ns1:Garuda",
        "ns1:Hamadryad",
        "ns1:HeraldofDreams",
        "ns1:Munavri",
        "ns1:Muse",
        "ns1:Nisid",
        "ns1:NobleDjinniVizier",
        "ns1:Nymph",
        "ns1:RiftFlumph",
        "ns1:RimefireEidolon",
        "ns1:SapphireOoze",
        "ns1:SkirmishersTroop",
        "ns1:StarMonarch",
        "ns1:SwanMaiden",
        "ns1:Taniwha",
        "ns1:Unicorn",
        "ns1:WoodGiant",
        "ns1:caypup"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:AdultBrassDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AdultCopperDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AdultCrystalDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AdultSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AncientBrassDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AncientCopperDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AncientCrystalDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:AncientSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Androsphinx ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Anhana ns1:hasAlignment ns1:chaoticGood .\n\nns1:Ataxian ns1:hasAlignment ns1:chaoticGood .\n\nns1:AuwazCouatl ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Azruverda ns1:hasAlignment ns1:chaoticGood .\n\nns1:BattleImp ns1:hasAlignment ns1:chaoticGood .\n\nns1:Biofreezer ns1:hasAlignment ns1:chaoticGood .\n\nns1:BlackButterfly ns1:hasAlignment ns1:chaoticGood .\n\nns1:Bralani ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonGreatWyrm ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonJuvenile ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonMatureAdult ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonOld ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonVeryOld ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonVeryYoung ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonWyrm ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonWyrmling ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:BrassDragonYoungAdult ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Brijidine ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Cayhound ns1:hasAlignment ns1:chaoticGood .\n\nns1:Caypup ns1:hasAlignment ns1:chaoticGood .\n\nns1:Celedeen ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonGreatWyrm ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonJuvenile ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonMatureAdult ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonOld ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonVeryOld ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonVeryYoung ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonWyrm ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonWyrmling ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CopperDragonYoungAdult ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonGreatWyrm ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonJuvenile ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonMatureAdult ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonOld ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonVeryOld ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonVeryYoung ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonWyrm ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonWyrmling ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:CrystalDragonYoungAdult ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Cynosoma ns1:hasAlignment ns1:chaoticGood .\n\nns1:Djinni ns1:hasAlignment ns1:chaoticGood .\n\nns1:Domovoi ns1:hasAlignment ns1:chaoticGood .\n\nns1:Dryad ns1:hasAlignment ns1:chaoticGood .\n\nns1:ElysianTitan ns1:hasAlignment ns1:chaoticGood .\n\nns1:FaerieDragonDracoFraudatioMinimus ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Faeriedragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Faun ns1:hasAlignment ns1:chaoticGood .\n\nns1:FungalNymph ns1:hasAlignment ns1:chaoticGood .\n\nns1:Gancanagh ns1:hasAlignment ns1:chaoticGood .\n\nns1:Garuda ns1:hasAlignment ns1:chaoticGood .\n\nns1:Hamadryad ns1:hasAlignment ns1:chaoticGood .\n\nns1:HeraldofDreams ns1:hasAlignment ns1:chaoticGood .\n\nns1:HeraldofFreedom ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:HeraldofFreedomandJustice ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:JuvenileSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:MatureAdultSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:MixCouatl ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Munavri ns1:hasAlignment ns1:chaoticGood .\n\nns1:Muse ns1:hasAlignment ns1:chaoticGood .\n\nns1:Nisid ns1:hasAlignment ns1:chaoticGood .\n\nns1:NobleDjinniVizier ns1:hasAlignment ns1:chaoticGood .\n\nns1:Nymph ns1:hasAlignment ns1:chaoticGood .\n\nns1:OldSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Prydanu ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Raelis ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:RiftFlumph ns1:hasAlignment ns1:chaoticGood .\n\nns1:RimefireEidolon ns1:hasAlignment ns1:chaoticGood .\n\nns1:SapphireOoze ns1:hasAlignment ns1:chaoticGood .\n\nns1:SkirmishersTroop ns1:hasAlignment ns1:chaoticGood .\n\nns1:StarMonarch ns1:hasAlignment ns1:chaoticGood .\n\nns1:StormGiant ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:SwanMaiden ns1:hasAlignment ns1:chaoticGood .\n\nns1:Taniwha ns1:hasAlignment ns1:chaoticGood .\n\nns1:TheHornedLord ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Thyrlien ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Uinuja ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Unicorn ns1:hasAlignment ns1:chaoticGood .\n\nns1:Veranallia ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:VeranalliaAzata ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:VeryYoungSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:VeryoldSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:WoodGiant ns1:hasAlignment ns1:chaoticGood .\n\nns1:WyrmlingSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:Yamah ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:YoungAdultSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:YoungBrassDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:YoungCopperDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:YoungCrystalDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:YoungSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:caypup ns1:hasAlignment ns1:chaoticGood .\n\nns1:greatwyrmSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\nns1:wyrmSeaDragon ns1:hasAlignment ns1:chaoticGood ;\n    ns1:hasLanguages ns1:DraconicL .\n\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "subgraph",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:08.812746",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:49:28.646646",
        "Please generate a SPARQL query for the given RDF graph and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:which creatures not speaking draconic language do have chaotic good alignment\n\ngraph:\n```turtle\nn...```"
      ],
      [
        "response",
        "2024-05-13T13:49:31.919743",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:alignment \"chaotic good\" .\n  FILTER NOT EXISTS {\n    ?creature ns1:speaks \"draconic\" .\n  }\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T13:49:31.967714",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T13:49:34.907091",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:alignment \"chaotic good\".\n  MINUS {\n    ?creature ns1:speaks \"draconic\".\n  }\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T13:49:34.950340",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T13:49:37.459384",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:alignment \"chaotic good\" .\n  FILTER NOT EXISTS {\n    ?creature ns1:speaks \"draconic\" .\n  }\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:49:46.926072",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubgraph",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 1470,
      "actualSize": 1006
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) AS ?count)\nWHERE {\n  ?creature ns1:hasLanguages ns1:TreantL .\n  OPTIONAL { ?creature ns1:hasAlignment ?alignment }\n  FILTER(?alignment != ns1:trueNeutral || !BOUND(?alignment))\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) AS ?count)\n+WHERE {\n+  ?creature ns1:hasLanguages ns1:TreantL .\n+  OPTIONAL { ?creature ns1:hasAlignment ?alignment }\n+  FILTER(?alignment != ns1:trueNeutral || !BOUND(?alignment))\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 0.6666666666666666,
        "sparqlIrisF1measure": 0.8,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 0.6666666666666666,
        "sparqlIrisSuffixF1measure": 0.8,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "4"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) AS ?count)\nWHERE {\n  ?creature ns1:hasLanguages ns1:TreantL .\n  OPTIONAL { ?creature ns1:hasAlignment ?alignment }\n  FILTER(?alignment != ns1:trueNeutral || !BOUND(?alignment))\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) AS ?count)\n+WHERE {\n+  ?creature ns1:hasLanguages ns1:TreantL .\n+  OPTIONAL { ?creature ns1:hasAlignment ?alignment }\n+  FILTER(?alignment != ns1:trueNeutral || !BOUND(?alignment))\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 0.6666666666666666,
        "sparqlIrisF1measure": 0.8,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 0.6666666666666666,
        "sparqlIrisSuffixF1measure": 0.8,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "4"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary005",
      "question": "how many creatures with non-neutral alignment do speak treant language",
      "refSparql": "SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }",
      "refResultSet": [
        "4"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:ArcticDruid ns1:hasLanguages ns1:TreantL .\n\nns1:Goemul ns1:hasLanguages ns1:TreantL .\n\nns1:ScytheTree ns1:hasLanguages ns1:TreantL .\n\nns1:Tobongo ns1:hasAlignment ns1:trueNeutral ;\n    ns1:hasLanguages ns1:TreantL .\n\nns1:Treant ns1:hasLanguages ns1:TreantL .\n\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "subgraph",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:04.252296",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:49:46.926080",
        "Please generate a SPARQL query for the given RDF graph and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:how many creatures with non-neutral alignment do speak treant language\n\ngraph:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:ArcticDruid ns1:hasLanguages ns1:TreantL .\n\nns1:Goemul ns1:hasLanguages ns1:TreantL .\n\nns1:ScytheTree ns1:hasLanguages ns1:TreantL .\n\nns1:Tobongo ns1:hasAlignment ns1:trueNeutral ;\n    ns1:hasLanguages ns1:TreantL .\n\nns1:Treant ns1:hasLanguages ns1:TreantL .\n\n```"
      ],
      [
        "response",
        "2024-05-13T13:49:51.178368",
        "```sparql\nSELECT (COUNT(?creature) AS ?count)\nWHERE {\n  ?creature ns1:hasLanguages ns1:TreantL .\n  OPTIONAL { ?creature ns1:hasAlignment ?alignment }\n  FILTER(?alignment != ns1:trueNeutral || !BOUND(?alignment))\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:50:01.077926",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubgraph",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 1116,
      "actualSize": 904
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ns1:aasimar ns1:canSpell ?spell .\n  ns1:caypup ns1:canSpell ?spell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ns1:aasimar ns1:canSpell ?spell .\n+  ns1:caypup ns1:canSpell ?spell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:stabilize"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ns1:aasimar ns1:canSpell ?spell .\n  ns1:caypup ns1:canSpell ?spell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ns1:aasimar ns1:canSpell ?spell .\n+  ns1:caypup ns1:canSpell ?spell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:stabilize"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary007",
      "question": "what spells Aasimar and Caypup do have in common",
      "refSparql": "SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }",
      "refResultSet": [
        "ns1:stabilize"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:aasimar ns1:canSpell ns1:bless,\n        ns1:command,\n        ns1:daylight,\n        ns1:detectMagic,\n        ns1:guidance,\n        ns1:protectionFromEvil,\n        ns1:stabilize .\n\nns1:caypup ns1:canSpell ns1:dimensionDoor,\n        ns1:knock,\n        ns1:openClose,\n        ns1:stabilize .\n\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "subgraph",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:02.888247",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:50:01.077939",
        "Please generate a SPARQL query for the given RDF graph and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what spells Aasimar and Caypup do have in common\n\ngraph:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:aasimar ns1:canSpell ns1:bless,\n        ns1:command,\n        ns1:daylight,\n        ns1:detectMagic,\n        ns1:guidance,\n        ns1:protectionFromEvil,\n        ns1:stabilize .\n\nns1:caypup ns1:canSpell ns1:dimensionDoor,\n        ns1:knock,\n        ns1:openClose,\n        ns1:stabilize .\n\n```"
      ],
      [
        "response",
        "2024-05-13T13:50:03.966173",
        "```sparql\nSELECT ?spell\nWHERE {\n  ns1:aasimar ns1:canSpell ?spell .\n  ns1:caypup ns1:canSpell ?spell .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:50:15.153502",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubgraph",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 579,
      "actualSize": 582
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "precision": 0.5,
        "recall": 1.0
      },
      "mean": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "precision": 0.5,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignment (COUNT(?alignment) AS ?count)\nWHERE {\n  ?character ns1:hasAlignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignment (COUNT(?alignment) AS ?count)\n+WHERE {\n+  ?character ns1:hasAlignment ?alignment .\n+}\n+GROUP BY ?alignment\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 2,
        "answerSet": [
          "1762",
          "ns1:trueNeutral"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignment (COUNT(?alignment) AS ?count)\nWHERE {\n  ?character ns1:hasAlignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignment (COUNT(?alignment) AS ?count)\n+WHERE {\n+  ?character ns1:hasAlignment ?alignment .\n+}\n+GROUP BY ?alignment\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 2,
        "answerSet": [
          "1762",
          "ns1:trueNeutral"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary011",
      "question": "what is the most common alignment type",
      "refSparql": "SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1",
      "refResultSet": [
        "ns1:trueNeutral"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1: ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aasimar ns1:hasAlignment ns1:neutralGood .\n\nns1:Aatheriexa ns1:hasAlignment ns1:neutralEvil .\n\nns1:Abaia ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aballonian ns1:hasAlignment ns1:trueNeutral .\n\nns1:AbandonedArmory ns1:hasAlignment ns1:neutralEvil .\n\nns1:AbasheenGenie ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aberrant ns1:hasAlignment ns1:neutralEvil .\n\nns1:Abhominal ns1:hasAlignment ns1:neutralEvil .\n\nns1:Aboleth ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Abrikandilu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AbyssGigas ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AbyssalBasilisk ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AbyssalCustodian ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AbyssalHarvester ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AbyssalLarva ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AbyssalWolf ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AccompliceDevilHesperian ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AccuserDevilZebub ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Achaierai ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AcidNaga ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AdamantineCobra ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdamantineGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdamantineWaspSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdaptiveOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Adaro ns1:hasAlignment ns1:neutralEvil .\n\nns1:Addanc ns1:hasAlignment ns1:neutralEvil .\n\nns1:AddictionDevilAtropocustra ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Addu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Adherer ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Adhukait ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Adlet ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AdolescentDarkYoung ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdultApocalypseDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdultAstralDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdultBlissDragon ns1:hasAlignment ns1:neutralGood .\n\nns1:AdultBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AdultBrassDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AdultBronzeDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:AdultCaveDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdultCloudDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AdultCopperDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AdultCrystalDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AdultDarkYoung ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdultDreamDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultEdictDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AdultEthericDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdultGoldDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:AdultGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AdultLunarDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AdultMagmaDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AdultMistDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultMithralDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultNightmareDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdultOccultDragon ns1:hasAlignment ns1:neutralGood .\n\nns1:AdultRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdultRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AdultSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AdultSilverDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:AdultSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:AdultSolarDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AdultSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultTimeDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdultUmbralDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdultUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AdultVoidDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdultVortexDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AdultWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedAnimateDream ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedBulette ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedDraugr ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedEttercap ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedFrostWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedGiantFlytrap ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedGiantScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedHangmanTree ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedHorse ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedInvisibleStalker ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedLengSpider ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedLeukodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedLightningTreantppCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedMegaraptorSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedMummy ns1:hasAlignment ns1:trueNeutral .\n\nns1:AdvancedNightmare ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedNightwing ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedOgre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedTroglodyte ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedUnhallowedBodak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AdvancedUnhallowedTotenmaske ns1:hasAlignment ns1:neutralEvil .\n\nns1:AdvancedWoodGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aequoreal ns1:hasAlignment ns1:neutralGood .\n\nns1:AerialServant ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aerialservant ns1:hasAlignment ns1:trueNeutral .\n\nns1:AetherWysp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Afanc ns1:hasAlignment ns1:neutralEvil .\n\nns1:Aghash ns1:hasAlignment ns1:neutralEvil .\n\nns1:Aghasura ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Agnoia ns1:hasAlignment ns1:trueNeutral .\n\nns1:Agogwe ns1:hasAlignment ns1:trueNeutral .\n\nns1:Agorth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Agrawgh ns1:hasAlignment ns1:trueNeutral .\n\nns1:Agyra ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Ahkhat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ahlinni ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Ahmuuth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ahool ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ahooling ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ahuizotl ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ailuro ns1:hasAlignment ns1:trueNeutral .\n\nns1:AirElementalConstruct ns1:hasAlignment ns1:trueNeutral .\n\nns1:AirMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:AirShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:AirVeela ns1:hasAlignment ns1:trueNeutral .\n\nns1:AirWysp ns1:hasAlignment ns1:trueNeutral .\n\nns1:AirsuitSymbiontCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:AizskartzAsteroid ns1:hasAlignment ns1:neutralEvil .\n\nns1:Akaname ns1:hasAlignment ns1:trueNeutral .\n\nns1:Akaruzug ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Akata ns1:hasAlignment ns1:trueNeutral .\n\nns1:Akhana ns1:hasAlignment ns1:trueNeutral .\n\nns1:Akhlut ns1:hasAlignment ns1:trueNeutral .\n\nns1:Akizendri ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Akvan ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ala ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Alastor ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AlbinoCaveSolifugid ns1:hasAlignment ns1:trueNeutral .\n\nns1:AlbinoCaveSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:AlchemicAmoeba ns1:hasAlignment ns1:trueNeutral .\n\nns1:AlchemicalGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Algea ns1:hasAlignment ns1:trueNeutral .\n\nns1:Algoid ns1:hasAlignment ns1:trueNeutral .\n\nns1:Alligator ns1:hasAlignment ns1:trueNeutral .\n\nns1:Allip ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Allosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Almiraj ns1:hasAlignment ns1:trueNeutral .\n\nns1:Alp ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Alpluachra ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Alraune ns1:hasAlignment ns1:neutralEvil .\n\nns1:Alseid ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AluDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Aluum ns1:hasAlignment ns1:trueNeutral .\n\nns1:AmaimonDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Amalgamation ns1:hasAlignment ns1:trueNeutral .\n\nns1:Amanusya ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Amargasaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Amarok ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AmberOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ambergrim ns1:hasAlignment ns1:trueNeutral .\n\nns1:AmoebaSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Amon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Amphiptere ns1:hasAlignment ns1:trueNeutral .\n\nns1:Amphisbaena ns1:hasAlignment ns1:trueNeutral .\n\nns1:AmphisbaenaBasilisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:AmphisbaenaEncephalonGorger ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AncestralDragonTurtle ns1:hasAlignment ns1:neutralGood .\n\nns1:AncestralGorgon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientApocalypseDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AncientAstralDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AncientBlissDragon ns1:hasAlignment ns1:neutralGood .\n\nns1:AncientBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AncientBlueDragonRavener ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AncientBrassDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AncientCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientCopperDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AncientCrystalDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AncientDreamDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientEdictDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AncientEthericDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AncientGoldDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:AncientGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AncientGreenDragonRavener ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AncientLunarDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AncientMagmaDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AncientMistDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientMithralDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientNightmareDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AncientOccultDragon ns1:hasAlignment ns1:neutralGood .\n\nns1:AncientRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AncientRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AncientSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:AncientSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:AncientSolarDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AncientSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientTimeDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:AncientUmbralDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AncientUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AncientVoidDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AncientVortexDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AncientWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Andrenjinyi ns1:hasAlignment ns1:trueNeutral .\n\nns1:Android ns1:hasAlignment ns1:trueNeutral .\n\nns1:Androsphinx ns1:hasAlignment ns1:chaoticGood .\n\nns1:Anemos ns1:hasAlignment ns1:trueNeutral .\n\nns1:AngelicGuardian ns1:hasAlignment ns1:trueNeutral .\n\nns1:Anghenfil ns1:hasAlignment ns1:trueNeutral .\n\nns1:AngheuvoreMortic ns1:hasAlignment ns1:neutralEvil .\n\nns1:AngustidenShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Anhana ns1:hasAlignment ns1:chaoticGood .\n\nns1:AnimateAria ns1:hasAlignment ns1:trueNeutral .\n\nns1:AnimateDream ns1:hasAlignment ns1:neutralEvil .\n\nns1:AnimateHair ns1:hasAlignment ns1:neutralEvil .\n\nns1:AnimatedJackOLantern ns1:hasAlignment ns1:trueNeutral .\n\nns1:AnimatedManacles ns1:hasAlignment ns1:trueNeutral .\n\nns1:AnimatedShrineStone ns1:hasAlignment ns1:trueNeutral .\n\nns1:AnimatedStraitjacket ns1:hasAlignment ns1:trueNeutral .\n\nns1:Anisydaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ankheg ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ankhrav ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ankou ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ankylosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Annihilator ns1:hasAlignment ns1:trueNeutral .\n\nns1:AnnisHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AnnisHagAlterEgo ns1:hasAlignment ns1:trueNeutral .\n\nns1:AntLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:Antelope ns1:hasAlignment ns1:trueNeutral .\n\nns1:AnunnakiMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aoandon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Apallie ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aphorite ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ApkalluMR ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ApocalypseHorse ns1:hasAlignment ns1:neutralEvil .\n\nns1:ApocalypseLocustMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ApocalypseZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Apollyon ns1:hasAlignment ns1:neutralEvil .\n\nns1:ApostasyWraith ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ApostateDevilDeimavigga ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ApostleKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Apparition ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Aptom ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AquaticWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Arach ns1:hasAlignment ns1:neutralEvil .\n\nns1:ArachnidRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aranea ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aravax ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Arbiter ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Arcadex ns1:hasAlignment ns1:neutralEvil .\n\nns1:Arcanoplasm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Arcanotheign ns1:hasAlignment ns1:trueNeutral .\n\nns1:Archaeopteryx ns1:hasAlignment ns1:trueNeutral .\n\nns1:Archelon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArcherBush ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArcherfishGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArchonShield ns1:hasAlignment ns1:lawfulGood .\n\nns1:ArchonStar ns1:hasAlignment ns1:lawfulGood .\n\nns1:ArcticDruid ns1:hasAlignment ns1:neutralEvil .\n\nns1:ArcticHare ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArcticTern ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArgentWarden ns1:hasAlignment ns1:lawfulGood .\n\nns1:Argorth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ArgorthCinderscourge ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ArgusMR ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Armadillo ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArmoredClayGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:ArmoredOgreSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:ArmyAntSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Arrowhawk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Arsinoitherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:Asakku ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ascomoid ns1:hasAlignment ns1:trueNeutral .\n\nns1:AshGiant ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AshHag ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Asp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Asrai ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AssassinRingSymbiont ns1:hasAlignment ns1:trueNeutral .\n\nns1:AssassinVine ns1:hasAlignment ns1:trueNeutral .\n\nns1:Asswere ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Astradaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:AstralDeva ns1:hasAlignment ns1:neutralGood .\n\nns1:AstralLeviathan ns1:hasAlignment ns1:trueNeutral .\n\nns1:AstralShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Asurendra ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AtamahutaOni ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ataxian ns1:hasAlignment ns1:chaoticGood .\n\nns1:Athach ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Atomie ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:AtticWhisperer ns1:hasAlignment ns1:neutralEvil .\n\nns1:Atuikakura ns1:hasAlignment ns1:trueNeutral .\n\nns1:Augnagar ns1:hasAlignment ns1:chaoticEvil .\n\nns1:AugurKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Aurochs ns1:hasAlignment ns1:trueNeutral .\n\nns1:Aurosrath ns1:hasAlignment ns1:neutralEvil .\n\nns1:Aurspeily ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Aurumvorax ns1:hasAlignment ns1:trueNeutral .\n\nns1:AutomataDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AutumnDeath ns1:hasAlignment ns1:neutralEvil .\n\nns1:AuwazCouatl ns1:hasAlignment ns1:chaoticGood .\n\nns1:Avatarana ns1:hasAlignment ns1:lawfulEvil .\n\nns1:AvatarofAlkumuoto ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Avoral ns1:hasAlignment ns1:neutralGood .\n\nns1:AwakenedDemilich ns1:hasAlignment ns1:neutralEvil .\n\nns1:AxeBeak ns1:hasAlignment ns1:trueNeutral .\n\nns1:AxialMonitor ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Axiomite ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AxiomiteGraveknight ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Azer ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:AzizouPainDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Azruverda ns1:hasAlignment ns1:chaoticGood .\n\nns1:Azuretzi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BLOODHAWK ns1:hasAlignment ns1:trueNeutral .\n\nns1:Baal ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Baalzebul ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BaaphelDukeofHell ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Babau ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Babbler ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Baboon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bacallia ns1:hasAlignment ns1:trueNeutral .\n\nns1:Baccae ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BadWolfMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Badger ns1:hasAlignment ns1:trueNeutral .\n\nns1:Baetriov ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Bagiennik ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Bakekujira ns1:hasAlignment ns1:neutralEvil .\n\nns1:Baku ns1:hasAlignment ns1:trueNeutral .\n\nns1:BakuDreamweaver ns1:hasAlignment ns1:trueNeutral .\n\nns1:Balisse ns1:hasAlignment ns1:neutralGood .\n\nns1:BalisseAngel ns1:hasAlignment ns1:neutralGood .\n\nns1:Balor ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BalorLord ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Baluchitherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:Banderlog ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bandersnatch ns1:hasAlignment ns1:trueNeutral .\n\nns1:Banelight ns1:hasAlignment ns1:neutralEvil .\n\nns1:Banshee ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BaobhanSith ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Baphomet ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BaphometDemonLordofBeasts ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Barbatos ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BarbedDevilHamatula ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BarbedRam ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarbtonguedWyvern ns1:hasAlignment ns1:neutralEvil .\n\nns1:Baregara ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Barghest ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Baric ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarizouAssassinDemonCR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Barometz ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarracudaLarge ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarracudaMedium ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarracudaSmall ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarrierBreakerTroop ns1:hasAlignment ns1:neutralEvil .\n\nns1:BarrowRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:BarrowWight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Basidirond ns1:hasAlignment ns1:trueNeutral .\n\nns1:Basilisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Basilosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:BastionArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:BatMobat ns1:hasAlignment ns1:trueNeutral .\n\nns1:BatPlagueSwarmMR ns1:hasAlignment ns1:neutralEvil .\n\nns1:BatSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:BattleEmu ns1:hasAlignment ns1:trueNeutral .\n\nns1:BattleImp ns1:hasAlignment ns1:chaoticGood .\n\nns1:Baykok ns1:hasAlignment ns1:neutralEvil .\n\nns1:BeardedDevilBarbazu ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BeastDemonChaaor ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BeastDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:BeastmasterTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Bebilith ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Bedlam ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BeeMan ns1:hasAlignment ns1:neutralEvil .\n\nns1:BeetleGiantStag ns1:hasAlignment ns1:trueNeutral .\n\nns1:BegedhiParasite ns1:hasAlignment ns1:neutralEvil .\n\nns1:Beheaded ns1:hasAlignment ns1:neutralEvil .\n\nns1:BehemothGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:BehemothHippopotamus ns1:hasAlignment ns1:trueNeutral .\n\nns1:BehemothPudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:Behimiron ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Behir ns1:hasAlignment ns1:trueNeutral .\n\nns1:BeingofIb ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Belabra ns1:hasAlignment ns1:trueNeutral .\n\nns1:BelchingGiantBeheadedCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:BelchingMedusaHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:BelchingSeveredHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:Belial ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BelierDevilBdellavritra ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Belker ns1:hasAlignment ns1:neutralEvil .\n\nns1:BellyborerBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Belostomatid ns1:hasAlignment ns1:trueNeutral .\n\nns1:BeluiriTheTemptress ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Berbalang ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Bezravnis ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Bhole ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BholeHatchling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Bhuta ns1:hasAlignment ns1:neutralEvil .\n\nns1:Bibliodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Biclops ns1:hasAlignment ns1:trueNeutral .\n\nns1:Biddlytree ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Biddlywink ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BiddlywinkChrysalis ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Biggin ns1:hasAlignment ns1:trueNeutral .\n\nns1:Biloko ns1:hasAlignment ns1:neutralEvil .\n\nns1:Biofreezer ns1:hasAlignment ns1:chaoticGood .\n\nns1:BishaGaTsuku ns1:hasAlignment ns1:neutralEvil .\n\nns1:BishopAgathion ns1:hasAlignment ns1:neutralGood .\n\nns1:BisonCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:BlackBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:BlackButterfly ns1:hasAlignment ns1:chaoticGood .\n\nns1:BlackGoat ns1:hasAlignment ns1:neutralEvil .\n\nns1:BlackJinni ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BlackMagga ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BlackPudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:BlackScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:BlackShuck ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BlackSpotUrchin ns1:hasAlignment ns1:neutralEvil .\n\nns1:BlackWorm ns1:hasAlignment ns1:neutralEvil .\n\nns1:BlackwispEgret ns1:hasAlignment ns1:trueNeutral .\n\nns1:BlastShadow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BleedingHorrorMinotaur ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BlightedFeySatyr ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Blightrat ns1:hasAlignment ns1:neutralEvil .\n\nns1:Blightspawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Blindheim ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BlinkDog ns1:hasAlignment ns1:lawfulGood .\n\nns1:Blodeuwedd ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Blodeuweddqueen ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BloodAlgaeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodBramble ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodBush ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodCaterpillar ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodHag ns1:hasAlignment ns1:neutralEvil .\n\nns1:BloodKaktos ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BloodLily ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodMaize ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodOrc ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BloodOrchid ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BloodPudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodQueen ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BloodReaverDevilGaruginCR ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BloodWeird ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BloodWight ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bloodbrush ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodhazeMosquitoSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodplateBurster ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bloodsuckle ns1:hasAlignment ns1:trueNeutral .\n\nns1:BloodyBones ns1:hasAlignment ns1:neutralEvil .\n\nns1:BloodySkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:BlueRingedOctopus ns1:hasAlignment ns1:trueNeutral .\n\nns1:BlueWhale ns1:hasAlignment ns1:trueNeutral .\n\nns1:BluetipEurypterid ns1:hasAlignment ns1:trueNeutral .\n\nns1:Boalisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Boar ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoarDireDaeodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bodak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Bodythief ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BogBeast ns1:hasAlignment ns1:trueNeutral .\n\nns1:BogCreeper ns1:hasAlignment ns1:trueNeutral .\n\nns1:BogMummy ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BogNixie ns1:hasAlignment ns1:neutralEvil .\n\nns1:BogScum ns1:hasAlignment ns1:trueNeutral .\n\nns1:BogStrider ns1:hasAlignment ns1:trueNeutral .\n\nns1:BogStriderSeerQueen ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bogeyman ns1:hasAlignment ns1:neutralEvil .\n\nns1:Boggard ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Boggart ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Boggle ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Bogwid ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Bogwiggle ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Boilborn ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoneCobbler ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BoneCollective ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BoneCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoneCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoneDevilOsyluth ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BoneGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoneReaperReflection ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoneShip ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BonepowderGhoul ns1:hasAlignment ns1:neutralEvil .\n\nns1:Bonesnapper ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bonestorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Bonesucker ns1:hasAlignment ns1:neutralEvil .\n\nns1:Bonethorn ns1:hasAlignment ns1:trueNeutral .\n\nns1:BonewroughtWillow ns1:hasAlignment ns1:trueNeutral .\n\nns1:BookGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoreWormMonarch ns1:hasAlignment ns1:trueNeutral .\n\nns1:BoreWormSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:BorealAnnisHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BorealManticore ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BorealWolf ns1:hasAlignment ns1:trueNeutral .\n\nns1:Boroboroton ns1:hasAlignment ns1:neutralEvil .\n\nns1:Boruta ns1:hasAlignment ns1:trueNeutral .\n\nns1:BotflySwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:BottledArmada ns1:hasAlignment ns1:trueNeutral .\n\nns1:Brachiosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrainMole ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrainMoleMonarch ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrainOoze ns1:hasAlignment ns1:neutralEvil .\n\nns1:BrainRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bralani ns1:hasAlignment ns1:chaoticGood .\n\nns1:Bramblelash ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrassDragonGreatWyrm ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonJuvenile ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonMatureAdult ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonOld ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonVeryOld ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonVeryYoung ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonWyrm ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonWyrmling ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassDragonYoungAdult ns1:hasAlignment ns1:chaoticGood .\n\nns1:BrassGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrassJuggernaut ns1:hasAlignment ns1:trueNeutral .\n\nns1:Brethedan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Brijidine ns1:hasAlignment ns1:chaoticGood .\n\nns1:Brimorak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BrimstoneOoze ns1:hasAlignment ns1:neutralEvil .\n\nns1:BrineDragonAncient ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonGreatWyrm ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonJuvenile ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonMatureAdult ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonOld ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonVeryOld ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonVeryYoung ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonWyrm ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonWyrmling ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineDragonYoungAdult ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BrineSeaSerpent ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BrineZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Brinedragonadult ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BringDragonYoung ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:BristleBoar ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrokenChild ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BrokenSoulLillend ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Brontotherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:BronzeDragonGreatWyrm ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonJuvenile ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonMatureAdult ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonOld ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonVeryOld ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonVeryYoung ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonWyrm ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonWyrmling ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeDragonYoungAdult ns1:hasAlignment ns1:lawfulGood .\n\nns1:BronzeGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:BronzeSentinel ns1:hasAlignment ns1:trueNeutral .\n\nns1:Broodiken ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrownBearorGrizzlyKodiakRussianBrown ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrownPudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:Brownie ns1:hasAlignment ns1:trueNeutral .\n\nns1:Brume ns1:hasAlignment ns1:neutralEvil .\n\nns1:BrushThylacine ns1:hasAlignment ns1:trueNeutral .\n\nns1:BrutalisDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BruteDemonBalban ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BruteWight ns1:hasAlignment ns1:trueNeutral .\n\nns1:Brykolakas ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Buckawn ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bugbear ns1:hasAlignment ns1:chaoticEvil .\n\nns1:BugbearEchohusk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Buggane ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Bukavac ns1:hasAlignment ns1:neutralEvil .\n\nns1:Bulabar ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Bulette ns1:hasAlignment ns1:trueNeutral .\n\nns1:BullShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bunyip ns1:hasAlignment ns1:trueNeutral .\n\nns1:Buraq ns1:hasAlignment ns1:neutralGood .\n\nns1:Burleev ns1:hasAlignment ns1:trueNeutral .\n\nns1:BurningChild ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:BurningDervish ns1:hasAlignment ns1:lawfulEvil .\n\nns1:BurningGiantBeheaded ns1:hasAlignment ns1:neutralEvil .\n\nns1:BurningMedusaHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:BurningSeveredHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:Burrowling ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Burstigeit ns1:hasAlignment ns1:trueNeutral .\n\nns1:Bushyasta ns1:hasAlignment ns1:neutralEvil .\n\nns1:Byakhee ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Bythos ns1:hasAlignment ns1:trueNeutral .\n\nns1:CAVEGIANT ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CHALKYDRI ns1:hasAlignment ns1:neutralGood .\n\nns1:CLOCKWORKSCOUT ns1:hasAlignment ns1:trueNeutral .\n\nns1:CRABMAN ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaasimolarFormerPresidentofHell ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Cacodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:CactusLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cadaver ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CadaverLord ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CairnLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CaizelDeposedQueenofSuccubi ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Calathgar ns1:hasAlignment ns1:trueNeutral .\n\nns1:Calikang ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:CallerinDarkness ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CalligraphyWyrm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Calpina ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Cambion ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Camel ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cameroceras ns1:hasAlignment ns1:trueNeutral .\n\nns1:CandleCorpse ns1:hasAlignment ns1:trueNeutral .\n\nns1:CandlestoneCourtier ns1:hasAlignment ns1:neutralEvil .\n\nns1:CannibalChild ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CannonGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:CanopyCreeper ns1:hasAlignment ns1:trueNeutral .\n\nns1:CanopyTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Cantor ns1:hasAlignment ns1:lawfulEvil .\n\nns1:CapacitorOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Capramace ns1:hasAlignment ns1:trueNeutral .\n\nns1:Carbuncle ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarbuncleChampion ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarbuncleCompanion ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarbuncleHero ns1:hasAlignment ns1:trueNeutral .\n\nns1:CardinalMartyr ns1:hasAlignment ns1:lawfulGood .\n\nns1:CarnivorousBlob ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarnivorousCrystal ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarrionBeast ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CarrionBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarrionClaw ns1:hasAlignment ns1:neutralEvil .\n\nns1:CarrionCreeper ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarrionGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarrionGolemMount ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarrionGolemstandin ns1:hasAlignment ns1:trueNeutral .\n\nns1:CarrionMoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Carrionstorm ns1:hasAlignment ns1:neutralEvil .\n\nns1:CaryatidColumn ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaryatidGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cassisian ns1:hasAlignment ns1:neutralGood .\n\nns1:Castellan ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Cat ns1:hasAlignment ns1:trueNeutral .\n\nns1:CatLordPantherForm ns1:hasAlignment ns1:trueNeutral .\n\nns1:CatSith ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Cataboligne ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Caterprism ns1:hasAlignment ns1:trueNeutral .\n\nns1:Caterwaul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Catfolk ns1:hasAlignment ns1:neutralGood .\n\nns1:Catoblepas ns1:hasAlignment ns1:trueNeutral .\n\nns1:Catrina ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cauchemar ns1:hasAlignment ns1:trueNeutral .\n\nns1:Caulborn ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaulbornThoughtkeeper ns1:hasAlignment ns1:trueNeutral .\n\nns1:CauldronBloom ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveBlight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CaveCricket ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveFisher ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CaveLeech ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveMoray ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:CaveTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CavelightMoss ns1:hasAlignment ns1:trueNeutral .\n\nns1:CavernLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cayhound ns1:hasAlignment ns1:chaoticGood .\n\nns1:Caypup ns1:hasAlignment ns1:chaoticGood .\n\nns1:Cecaelia ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Celedeen ns1:hasAlignment ns1:chaoticGood .\n\nns1:Celedon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Centaur ns1:hasAlignment ns1:trueNeutral .\n\nns1:CentipedeGiantWhiptail ns1:hasAlignment ns1:trueNeutral .\n\nns1:CentipedeGreatForest ns1:hasAlignment ns1:trueNeutral .\n\nns1:CentipedeHissing ns1:hasAlignment ns1:trueNeutral .\n\nns1:CentipedeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:CentipedeTitan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cephalophore ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ceratioidi ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ceratosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cerberi ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Cerberus ns1:hasAlignment ns1:neutralEvil .\n\nns1:CerberusWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:CerebralStalker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CerebricCyst ns1:hasAlignment ns1:neutralEvil .\n\nns1:CerebricFungus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ceru ns1:hasAlignment ns1:neutralGood .\n\nns1:Cervapral ns1:hasAlignment ns1:neutralGood .\n\nns1:Cervinal ns1:hasAlignment ns1:neutralGood .\n\nns1:CervineProtector ns1:hasAlignment ns1:lawfulGood .\n\nns1:Cerynitis ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cetaceal ns1:hasAlignment ns1:neutralGood .\n\nns1:Cetus ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Ceustodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:ChagBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:ChainWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chalicotherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chalkost ns1:hasAlignment ns1:lawfulGood .\n\nns1:ChampionAutomaton ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ChampionofPeace ns1:hasAlignment ns1:neutralGood .\n\nns1:ChanequeMR ns1:hasAlignment ns1:neutralEvil .\n\nns1:Changeling ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ChaosBeast ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ChaosDemonChoronzon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CharauKa ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Charda ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ChariotBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:CharnelColossus ns1:hasAlignment ns1:neutralEvil .\n\nns1:CharnelGod ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CharnelWhisperer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Charon ns1:hasAlignment ns1:neutralEvil .\n\nns1:CharonBoatmanofthelowerplanesCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:Charonodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Charybdis ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Chavazvug ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Cheetah ns1:hasAlignment ns1:trueNeutral .\n\nns1:CheitanDjinni ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CheitanJanni ns1:hasAlignment ns1:neutralEvil .\n\nns1:Chelarac ns1:hasAlignment ns1:neutralEvil .\n\nns1:ChelaracBroodling ns1:hasAlignment ns1:neutralEvil .\n\nns1:Chelicerae ns1:hasAlignment ns1:neutralEvil .\n\nns1:Chelonidal ns1:hasAlignment ns1:neutralGood .\n\nns1:Chemosit ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chernobue ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Cherufe ns1:hasAlignment ns1:neutralEvil .\n\nns1:Cherum ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chickcharney ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chicken ns1:hasAlignment ns1:trueNeutral .\n\nns1:ChickenCoop ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chikfari ns1:hasAlignment ns1:trueNeutral .\n\nns1:ChildoftheBriar ns1:hasAlignment ns1:neutralEvil .\n\nns1:Chimera ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Chimpanzee ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chiropteal ns1:hasAlignment ns1:neutralGood .\n\nns1:Chitikin ns1:hasAlignment ns1:trueNeutral .\n\nns1:Choker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ChokerBrute ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CholericOozeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:ChonChon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ChonChonSwarm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Choral ns1:hasAlignment ns1:neutralGood .\n\nns1:ChortDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Choxani ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ChrestomathCaulborn ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chronogeist ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Chrystone ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chupacabra ns1:hasAlignment ns1:trueNeutral .\n\nns1:ChurchGrim ns1:hasAlignment ns1:lawfulGood .\n\nns1:Churr ns1:hasAlignment ns1:trueNeutral .\n\nns1:Chuspiki ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Chuul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ChuulLesser ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Chyzaedu ns1:hasAlignment ns1:lawfulEvil .\n\nns1:CicadaSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cikavak ns1:hasAlignment ns1:trueNeutral .\n\nns1:CinderGhoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CinderWolf ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cinderghost ns1:hasAlignment ns1:neutralEvil .\n\nns1:Cipactli ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ClackingSkullSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:ClamGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:Clamor ns1:hasAlignment ns1:trueNeutral .\n\nns1:Clawbat ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClawedKadian ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ClayGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:CliffGiant ns1:hasAlignment ns1:neutralGood .\n\nns1:Cloaker ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ClockworkAdvancedBronzeGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkAngel ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkAssassin ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkBrainGear ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkDrone ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkExcavator ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkFamiliar ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkFiend ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkGoblin ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkGoliath ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkGuardian ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkGunslinger ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkHound ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkHuntsman ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkLeviathan ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkMage ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkMyrmidon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkNautiloid ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkOverseer ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkParasite ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkPriest ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkReliquary ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ClockworkServant ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkSoldier ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkSongbird ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkSpy ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkSteed ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkTitan ns1:hasAlignment ns1:trueNeutral .\n\nns1:ClockworkWarrior ns1:hasAlignment ns1:trueNeutral .\n\nns1:CloudDragonAncient ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonGreatWyrm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonJuvenile ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonMatureAdult ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonOld ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonVeryOld ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonVeryYoung ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonWyrm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonWyrmling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonYoung ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudDragonYoungAdult ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:CloudGiantSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:ClowderofCats ns1:hasAlignment ns1:trueNeutral .\n\nns1:CobraBackInphidian ns1:hasAlignment ns1:neutralEvil .\n\nns1:CobraFlower ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cockatrice ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cockroach ns1:hasAlignment ns1:trueNeutral .\n\nns1:CockroachGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:CockroachSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:CodexArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:CofferCorpse ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CoffinAnemone ns1:hasAlignment ns1:trueNeutral .\n\nns1:ColdMutatedOgreSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:ColdRider ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ColdsnapBasilisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Colliatur ns1:hasAlignment ns1:neutralGood .\n\nns1:ColossalAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:ColourOutofSpace ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Coloxus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CombatTrainedWolliped ns1:hasAlignment ns1:trueNeutral .\n\nns1:Combusted ns1:hasAlignment ns1:neutralEvil .\n\nns1:CommandoConstruct ns1:hasAlignment ns1:trueNeutral .\n\nns1:CommonBat ns1:hasAlignment ns1:trueNeutral .\n\nns1:CommonDrow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CommonEurypterid ns1:hasAlignment ns1:trueNeutral .\n\nns1:CommonInphidian ns1:hasAlignment ns1:neutralEvil .\n\nns1:CommonMite ns1:hasAlignment ns1:lawfulEvil .\n\nns1:CommonTimeElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ComozantWyrd ns1:hasAlignment ns1:trueNeutral .\n\nns1:Compsognathus ns1:hasAlignment ns1:trueNeutral .\n\nns1:ConfoundingBandersnatch ns1:hasAlignment ns1:trueNeutral .\n\nns1:ConquerorWorm ns1:hasAlignment ns1:neutralEvil .\n\nns1:ConstrictorSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:Contemplative ns1:hasAlignment ns1:trueNeutral .\n\nns1:ContractDevilPhistophilus ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Cooshee ns1:hasAlignment ns1:trueNeutral .\n\nns1:CopperDragonGreatWyrm ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonJuvenile ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonMatureAdult ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonOld ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonVeryOld ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonVeryYoung ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonWyrm ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonWyrmling ns1:hasAlignment ns1:chaoticGood .\n\nns1:CopperDragonYoungAdult ns1:hasAlignment ns1:chaoticGood .\n\nns1:Copsewight ns1:hasAlignment ns1:neutralEvil .\n\nns1:CoralCapuchin ns1:hasAlignment ns1:trueNeutral .\n\nns1:CoralDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:CoralGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:CorpseCandle ns1:hasAlignment ns1:neutralEvil .\n\nns1:CorpseLotus ns1:hasAlignment ns1:trueNeutral .\n\nns1:CorpseOrgy ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CorpseRook ns1:hasAlignment ns1:trueNeutral .\n\nns1:CorpsefeasterOtyugh ns1:hasAlignment ns1:trueNeutral .\n\nns1:Corpsespinner ns1:hasAlignment ns1:trueNeutral .\n\nns1:CorpsewaterBogMummy ns1:hasAlignment ns1:lawfulEvil .\n\nns1:CorpulentGhoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Couatl ns1:hasAlignment ns1:lawfulGood .\n\nns1:CovenOctopus ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:CovenOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrabCoconut ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrabGreatReef ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrabHermitGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:CracklingSkullSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:CragMan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CrawlingHand ns1:hasAlignment ns1:neutralEvil .\n\nns1:CrawlingHandGiant ns1:hasAlignment ns1:neutralEvil .\n\nns1:CreamfootFennec ns1:hasAlignment ns1:trueNeutral .\n\nns1:CreeperIvy ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrimsonBasilisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrimsonDeath ns1:hasAlignment ns1:neutralEvil .\n\nns1:CrimsonJellyfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrimsonWhale ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrimsonWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Criosphinx ns1:hasAlignment ns1:trueNeutral .\n\nns1:Crocodile ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrocodileDire ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrocodileZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:CroneQueen ns1:hasAlignment ns1:neutralEvil .\n\nns1:Crucidaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:CrucifixionSpirit ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Cryohydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:CryptFlower ns1:hasAlignment ns1:trueNeutral .\n\nns1:CryptThing ns1:hasAlignment ns1:neutralEvil .\n\nns1:Cryptguard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Crysmal ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrystalDragonGreatWyrm ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonJuvenile ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonMatureAdult ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonOld ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonVeryOld ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonVeryYoung ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonWyrm ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonWyrmling ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalDragonYoungAdult ns1:hasAlignment ns1:chaoticGood .\n\nns1:CrystalGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrystalOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:CrystallineHorror ns1:hasAlignment ns1:neutralEvil .\n\nns1:Crystallis ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cuero ns1:hasAlignment ns1:trueNeutral .\n\nns1:CultistTroop ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CursedBeast ns1:hasAlignment ns1:neutralEvil .\n\nns1:CursedKing ns1:hasAlignment ns1:chaoticEvil .\n\nns1:CutlassSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Cyclops ns1:hasAlignment ns1:neutralEvil .\n\nns1:Cynosoma ns1:hasAlignment ns1:chaoticGood .\n\nns1:Cyphergull ns1:hasAlignment ns1:trueNeutral .\n\nns1:CystTrinityHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Cythnigot ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Cytillipede ns1:hasAlignment ns1:trueNeutral .\n\nns1:Daggocrustler ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dagon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DagonDemonPrinceoftheSea ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Dahzagan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Daitengu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dakon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Dallo ns1:hasAlignment ns1:trueNeutral .\n\nns1:DamnationBook ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Damned ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DanavaMR ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:DancerInphidian ns1:hasAlignment ns1:neutralEvil .\n\nns1:Dandasuka ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DanseMacabre ns1:hasAlignment ns1:neutralEvil .\n\nns1:Danthienne ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Dapsara ns1:hasAlignment ns1:neutralGood .\n\nns1:DarakhulOgre ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DarkAngel ns1:hasAlignment ns1:neutralEvil .\n\nns1:DarkCaller ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DarkCreeper ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DarkDancer ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DarkEmpath ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DarkIceGrig ns1:hasAlignment ns1:neutralGood .\n\nns1:DarkMatterEntropicOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:DarkScionDwarf ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DarkSlayer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DarkStalker ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DarkYoungofShubNiggurath ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Darkling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Darkmantle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Darnoc ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DaughterofShubNiggurath ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DaughteroftheDead ns1:hasAlignment ns1:neutralEvil .\n\nns1:DeadfallScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:DeadlyMantis ns1:hasAlignment ns1:trueNeutral .\n\nns1:DeathButterflySwarm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeathCoach ns1:hasAlignment ns1:neutralEvil .\n\nns1:DeathDog ns1:hasAlignment ns1:neutralEvil .\n\nns1:DeathWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Deathhand ns1:hasAlignment ns1:neutralEvil .\n\nns1:DeathleechHornedDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DeathlessSorcerer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeathsHeadJellyfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:Deathsnatcher ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeathtrapOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Deathweb ns1:hasAlignment ns1:trueNeutral .\n\nns1:DebasedAsrai ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DebasedNixie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Decapus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeepBadger ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeepHunterSeaSerpent ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:DeepMerfolk ns1:hasAlignment ns1:trueNeutral .\n\nns1:DeepNaga ns1:hasAlignment ns1:neutralEvil .\n\nns1:DeepOne ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeepOneHybrid ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeepOneScion ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DeepSeaSerpent ns1:hasAlignment ns1:trueNeutral .\n\nns1:DeepSingerWhale ns1:hasAlignment ns1:trueNeutral .\n\nns1:DeepWalker ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DeepsightGogglesSymbiont ns1:hasAlignment ns1:trueNeutral .\n\nns1:Deer ns1:hasAlignment ns1:trueNeutral .\n\nns1:DefenderGlobe ns1:hasAlignment ns1:trueNeutral .\n\nns1:DegenerateOgre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DegenerateSerpentfolk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Deinochos ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Deinonychus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Deinosuchus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Deinotherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:Delgeth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Delver ns1:hasAlignment ns1:trueNeutral .\n\nns1:Demammoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:DemiLich ns1:hasAlignment ns1:neutralEvil .\n\nns1:Demilich ns1:hasAlignment ns1:neutralEvil .\n\nns1:Demiurge ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DemonStone ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DemonicDeadfallScorpion ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DemonicKnight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DemonicMohrg ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DemorielTwiceExiledSeductress ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DenizenofLeng ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DerakniLocustDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Derghodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Derhii ns1:hasAlignment ns1:trueNeutral .\n\nns1:Derro ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DerroFetalSavant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DerroMagister ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DesertBlight ns1:hasAlignment ns1:neutralEvil .\n\nns1:DesertDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:DesertGiant ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:DespicableSnowman ns1:hasAlignment ns1:neutralEvil .\n\nns1:Destrachan ns1:hasAlignment ns1:neutralEvil .\n\nns1:DevastatorMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DevilDog ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DevilMonkey ns1:hasAlignment ns1:trueNeutral .\n\nns1:DevilSteed ns1:hasAlignment ns1:neutralEvil .\n\nns1:Devilfish ns1:hasAlignment ns1:neutralEvil .\n\nns1:Devourer ns1:hasAlignment ns1:neutralEvil .\n\nns1:DevouringMist ns1:hasAlignment ns1:neutralEvil .\n\nns1:Dhampir ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Dhole ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DholeHatchling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DiamondSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Diatryma ns1:hasAlignment ns1:trueNeutral .\n\nns1:Digester ns1:hasAlignment ns1:trueNeutral .\n\nns1:Digmaul ns1:hasAlignment ns1:trueNeutral .\n\nns1:DimensionWalker ns1:hasAlignment ns1:neutralEvil .\n\nns1:DimensionalShambler ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Dimetrodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dimorphodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Diplodocus ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireApeGigantopithecus ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireBadger ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireBarracuda ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireBat ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireBison ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireCorby ns1:hasAlignment ns1:neutralEvil .\n\nns1:DireCorgi ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireElectricEel ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireFlytrap ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireGhoulWolf ns1:hasAlignment ns1:neutralEvil .\n\nns1:DireGoat ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireGrasshopperMouse ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireHippopotamusBehemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireHyena ns1:hasAlignment ns1:trueNeutral .\n\nns1:DirePolarBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:DirePorcupine ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireRacoon ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireRam ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireRatCompanionLevel ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireShadowRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireSharkMegalodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireSloth ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireSmilodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireWeasel ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireWolf ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireWolfwere ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DireWolverine ns1:hasAlignment ns1:trueNeutral .\n\nns1:DireorCaveBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:DiseasedRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Disenchanter ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dispater ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DivineGuardianHydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:Djinni ns1:hasAlignment ns1:chaoticGood .\n\nns1:Dlurgraven ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dodo ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dog ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dogmole ns1:hasAlignment ns1:trueNeutral .\n\nns1:DogmoleJuggernaut ns1:hasAlignment ns1:trueNeutral .\n\nns1:DollDevilArusities ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Dolphin ns1:hasAlignment ns1:trueNeutral .\n\nns1:DomesticatedorWildWolliped ns1:hasAlignment ns1:trueNeutral .\n\nns1:DominationDevilGladiatrix ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Domovoi ns1:hasAlignment ns1:chaoticGood .\n\nns1:DonkeyRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Donratty ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Doombat ns1:hasAlignment ns1:neutralEvil .\n\nns1:Doorwarden ns1:hasAlignment ns1:trueNeutral .\n\nns1:Doppeldrek ns1:hasAlignment ns1:trueNeutral .\n\nns1:Doppelrat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Doru ns1:hasAlignment ns1:neutralEvil .\n\nns1:Dorvae ns1:hasAlignment ns1:neutralEvil .\n\nns1:DosojinKami ns1:hasAlignment ns1:neutralGood .\n\nns1:Dossenus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Draaki ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dracolisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Draconal ns1:hasAlignment ns1:neutralGood .\n\nns1:Draconid ns1:hasAlignment ns1:trueNeutral .\n\nns1:DraftHeavyHorse ns1:hasAlignment ns1:trueNeutral .\n\nns1:Draghul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DragonHorse ns1:hasAlignment ns1:neutralGood .\n\nns1:DragonTurtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dragonfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:DragonflyGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:DragonflyGiantNymph ns1:hasAlignment ns1:trueNeutral .\n\nns1:DragonhideGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dragonkin ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:DragonleafTreepp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dragonne ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dragonnel ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dragonship ns1:hasAlignment ns1:trueNeutral .\n\nns1:DrakainiaMR ns1:hasAlignment ns1:neutralEvil .\n\nns1:Drakauthix ns1:hasAlignment ns1:trueNeutral .\n\nns1:Draug ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Draugr ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DreadCorby ns1:hasAlignment ns1:neutralEvil .\n\nns1:DreadWraith ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DreadZombieAasimarWarrior ns1:hasAlignment ns1:trueNeutral .\n\nns1:DreamEater ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DreamImpCompanion ns1:hasAlignment ns1:neutralGood .\n\nns1:DreamImpCousin ns1:hasAlignment ns1:neutralGood .\n\nns1:DreamImpHero ns1:hasAlignment ns1:neutralGood .\n\nns1:DreamSpectre ns1:hasAlignment ns1:neutralEvil .\n\nns1:DreamSpectreNightmareCreature ns1:hasAlignment ns1:neutralEvil .\n\nns1:DreamSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:DreamVestigeMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DreamthiefHag ns1:hasAlignment ns1:neutralEvil .\n\nns1:Drekavac ns1:hasAlignment ns1:neutralEvil .\n\nns1:Dretch ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DrochaSwarm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DrowNoble ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DrownedMaiden ns1:hasAlignment ns1:neutralEvil .\n\nns1:DrowningDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Dryad ns1:hasAlignment ns1:chaoticGood .\n\nns1:Duergar ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DuergarTyrant ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Dullahan ns1:hasAlignment ns1:lawfulEvil .\n\nns1:DunPudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:Duneshaker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dunkleosteus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Duppy ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DuskKamadan ns1:hasAlignment ns1:neutralEvil .\n\nns1:Duskwalker ns1:hasAlignment ns1:trueNeutral .\n\nns1:DustDigger ns1:hasAlignment ns1:trueNeutral .\n\nns1:DustGhoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:DustMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dvorovoi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DwarfCaiman ns1:hasAlignment ns1:trueNeutral .\n\nns1:DweomerCap ns1:hasAlignment ns1:trueNeutral .\n\nns1:Dweomercat ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:DweomercatCub ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Dwiergeth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Dybbuk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Dyme ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Dziriak ns1:hasAlignment ns1:trueNeutral .\n\nns1:D\u00f8delig ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Eagle ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthElementalBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthElementalChampion ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthElementalConstruct ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthElementalSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthVeela ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthWysp ns1:hasAlignment ns1:trueNeutral .\n\nns1:EarthYaiOni ns1:hasAlignment ns1:neutralEvil .\n\nns1:EarthenSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Earthfiend ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EarthkingKaiju ns1:hasAlignment ns1:neutralGood .\n\nns1:Eblis ns1:hasAlignment ns1:neutralEvil .\n\nns1:EbonOoze ns1:hasAlignment ns1:neutralEvil .\n\nns1:EbonyGelatinousCube ns1:hasAlignment ns1:trueNeutral .\n\nns1:Echeneis ns1:hasAlignment ns1:trueNeutral .\n\nns1:EclipseGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ecorche ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EcstasyFeeder ns1:hasAlignment ns1:neutralEvil .\n\nns1:EctoplasmghostOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:EctoplasmicHuman ns1:hasAlignment ns1:trueNeutral .\n\nns1:Edimmu ns1:hasAlignment ns1:trueNeutral .\n\nns1:EelHound ns1:hasAlignment ns1:trueNeutral .\n\nns1:Efreeti ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EfreetiJanissary ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Egophage ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Egregore ns1:hasAlignment ns1:trueNeutral .\n\nns1:Einherji ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:EirisaiAncestor ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:EirisaiGreater ns1:hasAlignment ns1:trueNeutral .\n\nns1:EirisaiLesser ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:EirisaiMaster ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:EirisaiMedial ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Elasmosarus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Elasmotherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElasmotheriumGiantWoolyRhinoCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Elawah ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ElderAcidQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderAetherElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderAirElemental ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ElderColdironElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderDeepOne ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ElderEarthElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderFireElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderIceElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderLightningElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderMagmaElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderMudElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderNegativeEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderNirento ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderObsidianQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderPositiveEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderPsionicElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderThing ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ElderWaterElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderWitchlight ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElderWorg ns1:hasAlignment ns1:neutralEvil .\n\nns1:ElderWyrm ns1:hasAlignment ns1:trueNeutral .\n\nns1:EldritchSteamMephit ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ElectricCube ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElectricEel ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElectricFroghemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElementalAirDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElementalDrake ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ElementalEarthDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElementalFireDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElementalWaterDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Elephant ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElephantSeal ns1:hasAlignment ns1:trueNeutral .\n\nns1:EliteShadowMastiff ns1:hasAlignment ns1:neutralEvil .\n\nns1:Elk ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElohimMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElusaHound ns1:hasAlignment ns1:trueNeutral .\n\nns1:ElysianTitan ns1:hasAlignment ns1:chaoticGood .\n\nns1:EmbalmingGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:EmberWeaver ns1:hasAlignment ns1:trueNeutral .\n\nns1:Embolotherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:EmeraldOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Emkrah ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EmotionOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:EmperorBird ns1:hasAlignment ns1:trueNeutral .\n\nns1:EmperorCobra ns1:hasAlignment ns1:trueNeutral .\n\nns1:EmperorKirin ns1:hasAlignment ns1:lawfulGood .\n\nns1:EmperorStag ns1:hasAlignment ns1:trueNeutral .\n\nns1:EmperorWalrus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Emperorofscales ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EmpressBoreWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Empusa ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Empyreal ns1:hasAlignment ns1:lawfulGood .\n\nns1:Empyrean ns1:hasAlignment ns1:neutralGood .\n\nns1:Emu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Encantado ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:EncephalonGorger ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EncephalonGorgerPsychic ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EnchanterHeron ns1:hasAlignment ns1:trueNeutral .\n\nns1:EnergizedIceGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:EnergyProtectionSymbiont ns1:hasAlignment ns1:trueNeutral .\n\nns1:Enisysian ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EnlightenedConstructClockworkSoldier ns1:hasAlignment ns1:neutralEvil .\n\nns1:EnlightenedContemplative ns1:hasAlignment ns1:trueNeutral .\n\nns1:EnormousReefclaw ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:EnslavedSpawn ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EntropicOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:EnvironmentalSuitSymbiont ns1:hasAlignment ns1:trueNeutral .\n\nns1:Enzyme ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ercinee ns1:hasAlignment ns1:trueNeutral .\n\nns1:EremiteKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EremiteSymbiont ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EremiteWizard ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ErinatGremlin ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Erlking ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Erodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Escorite ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Esipil ns1:hasAlignment ns1:neutralEvil .\n\nns1:Esobok ns1:hasAlignment ns1:trueNeutral .\n\nns1:EtherDrake ns1:hasAlignment ns1:trueNeutral .\n\nns1:EtherealFilcher ns1:hasAlignment ns1:trueNeutral .\n\nns1:EtherealGraveyardTool ns1:hasAlignment ns1:trueNeutral .\n\nns1:EtherealMarauder ns1:hasAlignment ns1:trueNeutral .\n\nns1:EtherealRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:EthericJelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:Etheroot ns1:hasAlignment ns1:trueNeutral .\n\nns1:Etiainen ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Etioling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Ettercap ns1:hasAlignment ns1:neutralEvil .\n\nns1:Euryale ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EvilEye ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ExecutionerDevilMunagola ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ExecutionersHood ns1:hasAlignment ns1:trueNeutral .\n\nns1:ExiledShade ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ExoskeletonGiantCockroach ns1:hasAlignment ns1:neutralEvil .\n\nns1:ExoskeletonGiantStagBeetle ns1:hasAlignment ns1:neutralEvil .\n\nns1:ExoskeletonTitanCentipede ns1:hasAlignment ns1:neutralEvil .\n\nns1:ExsanguinatorDaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Exscinder ns1:hasAlignment ns1:lawfulGood .\n\nns1:EyeEater ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EyeKiller ns1:hasAlignment ns1:chaoticEvil .\n\nns1:EyeSentinel ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EyeoftheDeep ns1:hasAlignment ns1:lawfulEvil .\n\nns1:EyeoftheWatcher ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FacelessDemonGallu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FacelessDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FacelessFleshGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:FacelessHulkUgoroth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FacelessStalkerUgothol ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FacelessWhale ns1:hasAlignment ns1:trueNeutral .\n\nns1:Fachen ns1:hasAlignment ns1:neutralEvil .\n\nns1:FadingFox ns1:hasAlignment ns1:trueNeutral .\n\nns1:FaerieDragonDracoFraudatioMinimus ns1:hasAlignment ns1:chaoticGood .\n\nns1:FaerieMount ns1:hasAlignment ns1:trueNeutral .\n\nns1:FaerieSeer ns1:hasAlignment ns1:trueNeutral .\n\nns1:Faeriedragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:FailedApotheosisMimic ns1:hasAlignment ns1:neutralEvil .\n\nns1:Fallen ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FalseSpiderPedipalp ns1:hasAlignment ns1:trueNeutral .\n\nns1:FalseSpiderSolifugid ns1:hasAlignment ns1:trueNeutral .\n\nns1:FamiliarAutomaton ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FangedSeaSerpent ns1:hasAlignment ns1:trueNeutral .\n\nns1:FastZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Fastachee ns1:hasAlignment ns1:neutralGood .\n\nns1:Faun ns1:hasAlignment ns1:chaoticGood .\n\nns1:FearEater ns1:hasAlignment ns1:neutralEvil .\n\nns1:FearGuard ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Feargaunt ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FeliusDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Fellforged ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FellnightSpriggan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Fellsig ns1:hasAlignment ns1:neutralEvil .\n\nns1:FenMauler ns1:hasAlignment ns1:neutralEvil .\n\nns1:FenWitch ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FeralHogTroop ns1:hasAlignment ns1:trueNeutral .\n\nns1:FeralTitanLord ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:FerrousGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:FesteringSpirit ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Festrog ns1:hasAlignment ns1:neutralEvil .\n\nns1:Fetch ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FetchlingKayal ns1:hasAlignment ns1:trueNeutral .\n\nns1:FetidSporeMound ns1:hasAlignment ns1:trueNeutral .\n\nns1:FetidStray ns1:hasAlignment ns1:neutralEvil .\n\nns1:Fext ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FeyGiantToad ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:FeyWolverine ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Feyling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:FeywardTree ns1:hasAlignment ns1:trueNeutral .\n\nns1:FiendInfusedStoneGolem ns1:hasAlignment ns1:neutralEvil .\n\nns1:FiendishHeavyWarHorse ns1:hasAlignment ns1:neutralEvil .\n\nns1:FieryCorpseOrgy ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Firbolg ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireBirdCompanion ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireCrabGreater ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireCrabLesser ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireDrake ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireElementalConstruct ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireFish ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireGiant ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FireInfusedTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FireLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireNymph ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:FirePhantom ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FireSalamander ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireVampire ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FireVeela ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireWhale ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireWysp ns1:hasAlignment ns1:trueNeutral .\n\nns1:FireYai ns1:hasAlignment ns1:neutralEvil .\n\nns1:Firebird ns1:hasAlignment ns1:neutralGood .\n\nns1:Firefiend ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FirefootFennec ns1:hasAlignment ns1:trueNeutral .\n\nns1:FjordLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FlagstoneGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlailSnail ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlailSnailFrogGodGames ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlameDrake ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FlameSpawnedTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FlamebrotherSalamander ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FlamingSkull ns1:hasAlignment ns1:neutralEvil .\n\nns1:FlappingHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:FlashBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlayerDevilMarzach ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FleaGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:FleshColossusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:FleshGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:FleshGolemHound ns1:hasAlignment ns1:trueNeutral .\n\nns1:FleshdollRogue ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Fleshdreg ns1:hasAlignment ns1:neutralEvil .\n\nns1:FleshdregSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:FlightPack ns1:hasAlignment ns1:trueNeutral .\n\nns1:FloatingEye ns1:hasAlignment ns1:trueNeutral .\n\nns1:FloodTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FloodslainArsinoitherium ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FloodslainOrc ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FlotsamTerror ns1:hasAlignment ns1:neutralEvil .\n\nns1:FloweringLattice ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlueHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Flumph ns1:hasAlignment ns1:lawfulGood .\n\nns1:Fluxwraith ns1:hasAlignment ns1:neutralEvil .\n\nns1:FlyGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlyingFox ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlyingPolyp ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FlyingSquirrel ns1:hasAlignment ns1:trueNeutral .\n\nns1:FlytrapLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:Fogwarden ns1:hasAlignment ns1:neutralEvil .\n\nns1:FomorianTitanMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FooDog ns1:hasAlignment ns1:neutralGood .\n\nns1:ForestBlight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ForestDrake ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ForestGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ForestersBane ns1:hasAlignment ns1:trueNeutral .\n\nns1:ForgeSpurned ns1:hasAlignment ns1:neutralEvil .\n\nns1:ForgefiendScanderig ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ForgottenOne ns1:hasAlignment ns1:trueNeutral .\n\nns1:ForkedCat ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ForkedTailWyvern ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Forlarren ns1:hasAlignment ns1:neutralEvil .\n\nns1:FormianHiveQueen ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormianMyrmarch ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormianQueen ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormianRoyalGuard ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormianTaskmaster ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormianWarrior ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormianWorker ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:FormlessSpawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FortunesellerGoblin ns1:hasAlignment ns1:trueNeutral .\n\nns1:Fossegrim ns1:hasAlignment ns1:neutralEvil .\n\nns1:FossilGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:FourArmedGargoyle ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FourArmedMudraSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:FourArmedSahuaginMutant ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Fox ns1:hasAlignment ns1:trueNeutral .\n\nns1:Foxwere ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FrazUrbluuDemonPrinceofDeception ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FreezingFlow ns1:hasAlignment ns1:trueNeutral .\n\nns1:FreshwaterMerrow ns1:hasAlignment ns1:neutralEvil .\n\nns1:FrogDemonGreruor ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FrogFather ns1:hasAlignment ns1:trueNeutral .\n\nns1:FrogGiantDire ns1:hasAlignment ns1:trueNeutral .\n\nns1:FrogPoisonous ns1:hasAlignment ns1:trueNeutral .\n\nns1:Froghemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:FrostCube ns1:hasAlignment ns1:trueNeutral .\n\nns1:FrostDrake ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FrostGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FrostMan ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FrostMiteSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:FrostWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:FrostdeathDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:FrostfallenMammoth ns1:hasAlignment ns1:neutralEvil .\n\nns1:FrostyChiseler ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FrumiousBandersnatch ns1:hasAlignment ns1:trueNeutral .\n\nns1:FukujinKami ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Fuldrex ns1:hasAlignment ns1:neutralEvil .\n\nns1:Fulgati ns1:hasAlignment ns1:trueNeutral .\n\nns1:Funayurei ns1:hasAlignment ns1:lawfulEvil .\n\nns1:FungalCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:FungalLizardfolk ns1:hasAlignment ns1:trueNeutral .\n\nns1:FungalNymph ns1:hasAlignment ns1:chaoticGood .\n\nns1:Fungiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:Funglet ns1:hasAlignment ns1:neutralGood .\n\nns1:Fungoid ns1:hasAlignment ns1:neutralEvil .\n\nns1:FungusGargoyle ns1:hasAlignment ns1:trueNeutral .\n\nns1:FungusLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:FungusMan ns1:hasAlignment ns1:trueNeutral .\n\nns1:FungusManKing ns1:hasAlignment ns1:trueNeutral .\n\nns1:FungusQueen ns1:hasAlignment ns1:chaoticEvil .\n\nns1:FungusWeird ns1:hasAlignment ns1:trueNeutral .\n\nns1:Furcifer ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:FurnaceGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:FutureYithian ns1:hasAlignment ns1:neutralGood .\n\nns1:Fye ns1:hasAlignment ns1:trueNeutral .\n\nns1:Fyr ns1:hasAlignment ns1:trueNeutral .\n\nns1:GIANTWATERBEETLE ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Gaki ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gallerok ns1:hasAlignment ns1:trueNeutral .\n\nns1:GalluWarmongerDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Galvo ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gambado ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Gancanagh ns1:hasAlignment ns1:chaoticGood .\n\nns1:Ganzi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Gar ns1:hasAlignment ns1:trueNeutral .\n\nns1:GardenOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:GareLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GargantuanAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:GargantuanMonstrousSeaWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gargiya ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gargoyle ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GargoyleBrute ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GargoyleGuardian ns1:hasAlignment ns1:trueNeutral .\n\nns1:Garipan ns1:hasAlignment ns1:neutralEvil .\n\nns1:Garmunchi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Garuda ns1:hasAlignment ns1:chaoticGood .\n\nns1:Gashadokurou ns1:hasAlignment ns1:neutralEvil .\n\nns1:GateArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:Gathlain ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GatorGhoul ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gearghost ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Gearsman ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gegenees ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Geier ns1:hasAlignment ns1:trueNeutral .\n\nns1:Geist ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GelatinousCube ns1:hasAlignment ns1:trueNeutral .\n\nns1:GelatinousGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:GelatinousOrb ns1:hasAlignment ns1:trueNeutral .\n\nns1:GemCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:GemstoneGargoyle ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GeneralofVengeance ns1:hasAlignment ns1:lawfulGood .\n\nns1:Genghryl ns1:hasAlignment ns1:trueNeutral .\n\nns1:Genthodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Geon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GeruzouSlimeDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Geryon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GetofIblis ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GhaddarDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ghalzarokh ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ghast ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ghawwas ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gholdako ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ghole ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ghonhatine ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ghoran ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ghorazagh ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ghost ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ghoublin ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ghoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GhoulAvernal ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GhoulDireWolf ns1:hasAlignment ns1:neutralEvil .\n\nns1:GhoulHoundCompanion ns1:hasAlignment ns1:neutralEvil .\n\nns1:GhoulHoundHero ns1:hasAlignment ns1:neutralEvil .\n\nns1:GhoulStirge ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GhoulWolf ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ghul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GiantAbyssalDireFrog ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GiantAdultAntLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAdvancedDireBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAmoeba ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAnaconda ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAntDrone ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAntLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAntQueen ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAntSoldier ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAntSporeZombie ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GiantAntWorker ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAssassinBug ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantAssassinSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBarracuda ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBee ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBeheaded ns1:hasAlignment ns1:neutralEvil .\n\nns1:GiantBelostomatid ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBlackWidowSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBlisterBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBlowfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBogTurtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBombardierBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBoringBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBotfly ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBumblebee ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBumblebeeQueen ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantBumblebeeWorker ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantCaribe ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantCentipede ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantChameleon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantCicada ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantCockroachExoskeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:GiantConstrictorSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantCrabSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantDeathwatchBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantDemonGnoll ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantDireFrog ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantDragonflyXPNMediumverminInitSensesdarkvisionftPerceptionDEFENSEACtouchflatfootedDexnaturalhpdFortRefWillImmunevermintraitsOFFENSESpeedftflyftperfectMeleebitedTACTICSGiantdragonfliesareveryaggressiveandhuntwarmbloodedcreaturesfearlesslyattackinguntileithertheyortheirpreyaredeadSTATISTICSStrDexConIntWisChaBaseAtkCMBCMDvstripSkillsFly ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantEagle ns1:hasAlignment ns1:neutralGood .\n\nns1:GiantElectricCatfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantEmperorScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantFalcon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantFlea ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantFly ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantFlytrap ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantFrilledLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantFrog ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantGar ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantGecko ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantGroundCricket ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantGroundWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantHamster ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantHellgrammite ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantHissingCockroach ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantHornet ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantHorsefly ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantIsopod ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantKhopeshScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantLakeOctopus ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantLeech ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantLegwaterSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantLocust ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMaggot ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMantisCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMantisShrimp ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMarmoset ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMiningBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMonstrousCrayfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMorayEel ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMosquito ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMotleyCuttlefish ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantMuckdweller ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantOctopus ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantOwl ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:GiantPhantomArmor ns1:hasAlignment ns1:neutralEvil .\n\nns1:GiantPike ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantPorcupine ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantQueenBee ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantRaven ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantRhinocerosBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantRotGrub ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSawtoothedBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantScarab ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSeaAnemone ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSeaSlug ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSeaSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSeahorse ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSkateSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSkunk ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSlicerBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSlug ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSnappingTurtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSolifugid ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantStagBeetleExoskeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:GiantStarfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantStargazer ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantStirge ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantSundew ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTarantulaSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTardigrade ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTermite ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTick ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTigerBarb ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantToad ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTortoise ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantTubeWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantVulture ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantWalkingStick ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantWaterStrider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantWeasel ns1:hasAlignment ns1:trueNeutral .\n\nns1:GiantYellowjacket ns1:hasAlignment ns1:trueNeutral .\n\nns1:Giantwingedchupacabra ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GibberingAbomination ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GibberingMouther ns1:hasAlignment ns1:trueNeutral .\n\nns1:GibberingOrb ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GibrilethDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Giganotosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:GigasClam ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GildedDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GildedSeaSerpent ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gillman ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ginever ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Giraffe ns1:hasAlignment ns1:trueNeutral .\n\nns1:Girallon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Girtablilu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gitwerc ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Glabrezu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GlacialOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:GlacierToad ns1:hasAlignment ns1:trueNeutral .\n\nns1:Glaciergeist ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GladiatorRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:GlaistigMR ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GlassGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:GlassUrchin ns1:hasAlignment ns1:trueNeutral .\n\nns1:GlassWyrm ns1:hasAlignment ns1:trueNeutral .\n\nns1:GlidingTurtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Glimmerhollow ns1:hasAlignment ns1:trueNeutral .\n\nns1:Globster ns1:hasAlignment ns1:trueNeutral .\n\nns1:GlomerayDaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:GloomCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gloomwing ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gluttongrass ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gnarlwood ns1:hasAlignment ns1:neutralEvil .\n\nns1:GnasherLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gnoll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GnollWhelp ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GnophKeh ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Gnophkeh ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gnorri ns1:hasAlignment ns1:trueNeutral .\n\nns1:Goat ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoatDemonMehrim ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Goblin ns1:hasAlignment ns1:neutralEvil .\n\nns1:GoblinDog ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoblinNaga ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GoblinSnake ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GoblinTroop ns1:hasAlignment ns1:neutralEvil .\n\nns1:Goemul ns1:hasAlignment ns1:neutralGood .\n\nns1:Goezspall ns1:hasAlignment ns1:trueNeutral .\n\nns1:GohlHydraCloud ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GoldDragonJuvenile ns1:hasAlignment ns1:lawfulGood .\n\nns1:GoldDragonMatureAdult ns1:hasAlignment ns1:lawfulGood .\n\nns1:GoldDragonOld ns1:hasAlignment ns1:lawfulGood .\n\nns1:GoldDragonVeryOld ns1:hasAlignment ns1:lawfulGood .\n\nns1:GoldDragonWyrm ns1:hasAlignment ns1:lawfulGood .\n\nns1:GoldDragonYoungAdult ns1:hasAlignment ns1:lawfulGood .\n\nns1:GoldGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoldenCat ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoldenCatDescendant ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoldenColossusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoldenScarabSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoldenSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:GolemCarrionweaponized ns1:hasAlignment ns1:trueNeutral .\n\nns1:GolemTreasure ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoliathFrog ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoliathSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:GoliathStagBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gongorinan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GongorinanQlippoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Gorbel ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gorgimera ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gorgon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gorgoni ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gorgoros ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GorillaBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:GorsonTheBloodDuke ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Gorynych ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GourdLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gowrow ns1:hasAlignment ns1:trueNeutral .\n\nns1:GrabbingGiantBeheaded ns1:hasAlignment ns1:neutralEvil .\n\nns1:GrabbingMedusaHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:GrabbingSeveredHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:GrachukkClanMaster ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GraeaeMR ns1:hasAlignment ns1:neutralEvil .\n\nns1:GrandfatherofFlowers ns1:hasAlignment ns1:neutralEvil .\n\nns1:Grangeri ns1:hasAlignment ns1:trueNeutral .\n\nns1:GrapplingClaw ns1:hasAlignment ns1:trueNeutral .\n\nns1:Grassling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Grauladon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GraveLynx ns1:hasAlignment ns1:neutralEvil .\n\nns1:GraveRisen ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GraveSage ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Gravebound ns1:hasAlignment ns1:neutralEvil .\n\nns1:GravenGuardian ns1:hasAlignment ns1:trueNeutral .\n\nns1:Graveshell ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gravesludge ns1:hasAlignment ns1:neutralEvil .\n\nns1:GravestoneDryad ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gray ns1:hasAlignment ns1:neutralEvil .\n\nns1:GrayApeDecurion ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:GrayApeLegionnaire ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:GrayApePirateKing ns1:hasAlignment ns1:trueNeutral .\n\nns1:GrayGoo ns1:hasAlignment ns1:trueNeutral .\n\nns1:GrayNisp ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GrayOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:GrayRender ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatAssassinBug ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatCaretaker ns1:hasAlignment ns1:neutralGood .\n\nns1:GreatCyclops ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreatDiademUrchin ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatGatorGhoul ns1:hasAlignment ns1:neutralEvil .\n\nns1:GreatGhul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreatHornedOwl ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatSeaAnemone ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatWhiteShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatWhiteWhale ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatWyrmBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreatWyrmBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GreatWyrmDungeonDragonAKAGargaxtheMightyMasteroftheDungeonDragons ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatWyrmForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreatWyrmGoldDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:GreatWyrmGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GreatWyrmRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreatWyrmRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GreatWyrmSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:GreatWyrmSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreatWyrmWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreaterAcidQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterAetherElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterAirElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterBarghest ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GreaterBasilisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterBoneneedle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterCeustodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:GreaterColdIronElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterEarthElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterFireElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterGelidBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterGravityElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterIceElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterLightningElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterMagmaElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterMedusa ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GreaterMudElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterNegativeEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterNelbarzoth ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GreaterObsidianQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterOozeDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreaterPositiveEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterPsionicElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterPubo ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterShadowCR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreaterShedu ns1:hasAlignment ns1:lawfulGood .\n\nns1:GreaterShieldWarden ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:GreaterVerdurousOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterWaterElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreaterYamabushiTengu ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:GreatwyrmUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Greatwyrmclouddragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreenGuardianCR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreenHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GreenMan ns1:hasAlignment ns1:trueNeutral .\n\nns1:GreenstingScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gregole ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Gremlin ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GremlinBatspawnCR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GremlinLightningspawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GremlinNuglub ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GremlinPugwampi ns1:hasAlignment ns1:neutralEvil .\n\nns1:GremlinSpiderspawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GremlinVexgit ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GrenadierTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GrendelMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Greymalkin ns1:hasAlignment ns1:neutralEvil .\n\nns1:Grick ns1:hasAlignment ns1:trueNeutral .\n\nns1:Griefgall ns1:hasAlignment ns1:neutralEvil .\n\nns1:Griffon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Grig ns1:hasAlignment ns1:neutralGood .\n\nns1:GrigSwarm ns1:hasAlignment ns1:neutralGood .\n\nns1:Grigori ns1:hasAlignment ns1:trueNeutral .\n\nns1:Grikkitog ns1:hasAlignment ns1:neutralEvil .\n\nns1:GrimReaper ns1:hasAlignment ns1:neutralEvil .\n\nns1:Grimlock ns1:hasAlignment ns1:neutralEvil .\n\nns1:Grimm ns1:hasAlignment ns1:neutralEvil .\n\nns1:Grimple ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Grimslake ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Grimstalker ns1:hasAlignment ns1:neutralEvil .\n\nns1:Grindylow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Grioth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Grippli ns1:hasAlignment ns1:trueNeutral .\n\nns1:GristlyDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GrizzlyBearRug ns1:hasAlignment ns1:trueNeutral .\n\nns1:GroaningSpirit ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Grodair ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GrogrisantMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Grokosh ns1:hasAlignment ns1:neutralEvil .\n\nns1:Gronk ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Grootslang ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Grothlut ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GroundWaspSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:GroveGuardian ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:GruffLanternGoat ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Gryph ns1:hasAlignment ns1:neutralEvil .\n\nns1:GuardianDaemon ns1:hasAlignment ns1:trueNeutral .\n\nns1:GuardianDoll ns1:hasAlignment ns1:neutralEvil .\n\nns1:GuardianDragonMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:GuardianPhantomArmor ns1:hasAlignment ns1:neutralEvil .\n\nns1:GuardianScroll ns1:hasAlignment ns1:trueNeutral .\n\nns1:GuardianSpirit ns1:hasAlignment ns1:lawfulEvil .\n\nns1:GuardianoftheTower ns1:hasAlignment ns1:trueNeutral .\n\nns1:Guecubu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Gug ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GugSavant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GulperEel ns1:hasAlignment ns1:trueNeutral .\n\nns1:GunpowderOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:GurgistMortic ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gutslug ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gutted ns1:hasAlignment ns1:chaoticEvil .\n\nns1:GyeongsaWarpStorm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Gylptodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Gynosphinx ns1:hasAlignment ns1:trueNeutral .\n\nns1:G\u00f8gelid ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:HYDRODAEMON ns1:hasAlignment ns1:neutralEvil .\n\nns1:Hadhayosh ns1:hasAlignment ns1:trueNeutral .\n\nns1:HagEyeOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:HalaDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HalfCelestialUnicorn ns1:hasAlignment ns1:trueNeutral .\n\nns1:HalfFiendDryad ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HalfFiendMinotaur ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HalfOgre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Halsora ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hamadryad ns1:hasAlignment ns1:chaoticGood .\n\nns1:HammerheadShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:HandOfTheInheritor ns1:hasAlignment ns1:lawfulGood .\n\nns1:HandmaidenDevilGylou ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HangmanTree ns1:hasAlignment ns1:neutralEvil .\n\nns1:Haniver ns1:hasAlignment ns1:trueNeutral .\n\nns1:HarbingerArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:HarbingerDaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:HarbingerofBrokenDealsFinePrintandUnfairBargains ns1:hasAlignment ns1:neutralEvil .\n\nns1:Harionago ns1:hasAlignment ns1:neutralEvil .\n\nns1:Harpy ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Harridan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HarvestHaunt ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Hastur ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HatethrallDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Haunt ns1:hasAlignment ns1:trueNeutral .\n\nns1:HauntedChain ns1:hasAlignment ns1:trueNeutral .\n\nns1:HauntedConstructScarecrow ns1:hasAlignment ns1:neutralEvil .\n\nns1:Havero ns1:hasAlignment ns1:neutralEvil .\n\nns1:HaveroTentacle ns1:hasAlignment ns1:neutralEvil .\n\nns1:HawanarGenie ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Hawk ns1:hasAlignment ns1:trueNeutral .\n\nns1:HeadedCryohydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:HeadedHydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:HeadedPryohydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:HeadedPyrohydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:HeadmansScythe ns1:hasAlignment ns1:trueNeutral .\n\nns1:HeartrotTree ns1:hasAlignment ns1:neutralEvil .\n\nns1:Hedgehog ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hegessik ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Heikegani ns1:hasAlignment ns1:neutralEvil .\n\nns1:HekatonkheiresTitan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HelBehir ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hela ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HelicoprionShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Helixmothlarva ns1:hasAlignment ns1:trueNeutral .\n\nns1:HellEngineAdamantineGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:HellHound ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HellMoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hellcat ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Hellcrown ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HellfireIgnis ns1:hasAlignment ns1:neutralEvil .\n\nns1:HellionRevenant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HellstokerDevilMarnasoth ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HellwaspSwarm ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HeraldofArmageddon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:HeraldofDreams ns1:hasAlignment ns1:chaoticGood .\n\nns1:HeraldofFreedom ns1:hasAlignment ns1:chaoticGood .\n\nns1:HeraldofFreedomandJustice ns1:hasAlignment ns1:chaoticGood .\n\nns1:HeraldofHell ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HeraldofRunes ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HeraldoftheDemonQueen ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HeraldofthePirateQueen ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:HereciteofAsmodeus ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HerensugueDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HeresyDevilAyngavhaul ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Hetkoshu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hezrou ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hidebehind ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hieracosphinx ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HighGirallon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HighPriestofShubNiggurath ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HighVeinar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:HillGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hippocampus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hippogriff ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hippopotamus ns1:hasAlignment ns1:trueNeutral .\n\nns1:HiveBrute ns1:hasAlignment ns1:neutralEvil .\n\nns1:HiveLarvaSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:HiveMindBeetleSwarm ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:HiveQueen ns1:hasAlignment ns1:neutralEvil .\n\nns1:HiveWarrior ns1:hasAlignment ns1:neutralEvil .\n\nns1:HivemindRatSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:HoarSpirit ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HobbeHound ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hobgoblin ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HobgoblinPhalanxTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HobgoblinTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Hobkins ns1:hasAlignment ns1:neutralEvil .\n\nns1:Hodag ns1:hasAlignment ns1:trueNeutral .\n\nns1:HollowHelm ns1:hasAlignment ns1:neutralEvil .\n\nns1:HollowSerpent ns1:hasAlignment ns1:neutralEvil .\n\nns1:HomotheriumSmilodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Homunculus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hondra ns1:hasAlignment ns1:trueNeutral .\n\nns1:HookfangWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:HordeRiot ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Horla ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HornCaterpillar ns1:hasAlignment ns1:trueNeutral .\n\nns1:HornedDemonKalavakus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HornedDevilCornugon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HornedLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Horse ns1:hasAlignment ns1:trueNeutral .\n\nns1:HostDevilMagaav ns1:hasAlignment ns1:lawfulEvil .\n\nns1:HoundArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:HoundofTindalos ns1:hasAlignment ns1:neutralEvil .\n\nns1:HouseCentipede ns1:hasAlignment ns1:trueNeutral .\n\nns1:Howler ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hoyrall ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Huecuva ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HugeAcidQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeAetherElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeAirElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeColdironElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeEarthElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeFireElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeGravityElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeIceElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeLightningElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeMagmaElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeMonstrousSeaWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeMudElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeNegativeEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeObsidianQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugePositiveEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugePsionicElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:HugeWaterElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Huggermugger ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Huldra ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:HumanJujuzombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:HumanMeatPuppetCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:HumanScholarBrainCylinder ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Humbaba ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Hundun ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hungerer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:HungryFlesh ns1:hasAlignment ns1:trueNeutral .\n\nns1:HungryFog ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hunted ns1:hasAlignment ns1:neutralEvil .\n\nns1:HunterUrchin ns1:hasAlignment ns1:trueNeutral .\n\nns1:HuntingHorror ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hupia ns1:hasAlignment ns1:neutralEvil .\n\nns1:Hutijin ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Hyaenodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hyakume ns1:hasAlignment ns1:neutralEvil .\n\nns1:Hyaleth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hydraggon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Hydrodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Hydrus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hyena ns1:hasAlignment ns1:trueNeutral .\n\nns1:Hykariut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Hypnalis ns1:hasAlignment ns1:trueNeutral .\n\nns1:Iathavos ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IbShade ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ibshaunet ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:IceDevilGelugon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IceDrake ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IceGnomeBarbegaziCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:IceGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:IceKratah ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IceLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IceMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:IceTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IceYai ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Icegaunt ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ichkoh ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ichthyocentaur ns1:hasAlignment ns1:trueNeutral .\n\nns1:IdOozeCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Idun ns1:hasAlignment ns1:neutralGood .\n\nns1:Ifrit ns1:hasAlignment ns1:trueNeutral .\n\nns1:Iguanodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ijiraq ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:IkuTurso ns1:hasAlignment ns1:neutralEvil .\n\nns1:Illureshi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ImenteshProtean ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Imjarvi ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ImmatureNorn ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ImmenseMandragora ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ImmenseTortoise ns1:hasAlignment ns1:trueNeutral .\n\nns1:ImmolationDevilPuragaus ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ImmortalIchor ns1:hasAlignment ns1:neutralEvil .\n\nns1:Imp ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Impariut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ImperialGhoul ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ImplacableStalker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Impundulu ns1:hasAlignment ns1:neutralEvil .\n\nns1:Incubus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Incutilis ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IncutilisLord ns1:hasAlignment ns1:neutralEvil .\n\nns1:InevitableAevarutMR ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Infantis ns1:hasAlignment ns1:neutralEvil .\n\nns1:Infernor ns1:hasAlignment ns1:chaoticEvil .\n\nns1:InkDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IntellectDevourer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:InterlocutorKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IntermediateNelbarzoth ns1:hasAlignment ns1:lawfulGood .\n\nns1:InubrixGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:InvertedGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:InvisibleStalker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Iophanite ns1:hasAlignment ns1:lawfulGood .\n\nns1:IounGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:IounWyrd ns1:hasAlignment ns1:trueNeutral .\n\nns1:IrefulHellion ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Irii ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Irlgaunt ns1:hasAlignment ns1:neutralEvil .\n\nns1:IrminsulMR ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Irnakurse ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IronCobra ns1:hasAlignment ns1:trueNeutral .\n\nns1:IronColossusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:IronGhoul ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IronGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:IronGolemArcher ns1:hasAlignment ns1:trueNeutral .\n\nns1:IronMagehunterTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IronMaidenGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:IronRiderTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IronSiegeAlchemistTroop ns1:hasAlignment ns1:lawfulEvil .\n\nns1:IronWight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Isitoq ns1:hasAlignment ns1:neutralEvil .\n\nns1:Isonade ns1:hasAlignment ns1:chaoticEvil .\n\nns1:IsphAunVuln ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ivoyro ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Izfiitar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:JaNoiOni ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Jabberwock ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JackOLantern ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jackal ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jackalwere ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JackinIronsGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JackoLantern ns1:hasAlignment ns1:neutralEvil .\n\nns1:Jaculi ns1:hasAlignment ns1:trueNeutral .\n\nns1:JadeColossuspp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jadeling ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jaguar ns1:hasAlignment ns1:trueNeutral .\n\nns1:Janni ns1:hasAlignment ns1:trueNeutral .\n\nns1:JanniCaptain ns1:hasAlignment ns1:lawfulEvil .\n\nns1:JellyfishGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:JellyfishSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jerboa ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jesulan ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Jherikite ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JigsawShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Jinmenju ns1:hasAlignment ns1:trueNeutral .\n\nns1:JinnWizard ns1:hasAlignment ns1:neutralEvil .\n\nns1:Jinushigami ns1:hasAlignment ns1:trueNeutral .\n\nns1:JinxCatCompanion ns1:hasAlignment ns1:trueNeutral .\n\nns1:JitterboneMortic ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Jorogumo ns1:hasAlignment ns1:neutralEvil .\n\nns1:JotunbloodHillGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JotundTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Jotunnboar ns1:hasAlignment ns1:trueNeutral .\n\nns1:JoyfulThing ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Jubear ns1:hasAlignment ns1:trueNeutral .\n\nns1:JubilexTheFacelessLord ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JubilexTouchedMarshJelly ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JubjubBird ns1:hasAlignment ns1:trueNeutral .\n\nns1:JudgementDevilAshmede ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Juggerloathe ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Juggernaut ns1:hasAlignment ns1:trueNeutral .\n\nns1:JulunggaliMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:JungleDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:JungleGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:JungleGrick ns1:hasAlignment ns1:trueNeutral .\n\nns1:JunkGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:JupiterBloodsucker ns1:hasAlignment ns1:trueNeutral .\n\nns1:JuvenileBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JuvenileBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:JuvenileForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JuvenileGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:JuvenileRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:JuvenileRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:JuvenileSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:JuvenileSeps ns1:hasAlignment ns1:trueNeutral .\n\nns1:JuvenileSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:JuvenileSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:JuvenileUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:JuvenileWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Kabandha ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Kaenju ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kaicharek ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kakapo ns1:hasAlignment ns1:trueNeutral .\n\nns1:KakuenTaka ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Kamaitachi ns1:hasAlignment ns1:chaoticEvil .\n\nns1:KamiShikigami ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:KaminariKami ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kampfult ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kangaroo ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kapoacinth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Kappa ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kapre ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kaprosuchus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Karek ns1:hasAlignment ns1:trueNeutral .\n\nns1:Karkadann ns1:hasAlignment ns1:trueNeutral .\n\nns1:Karkinoi ns1:hasAlignment ns1:chaoticEvil .\n\nns1:KarkinoiBroodSwarm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Karumzek ns1:hasAlignment ns1:neutralEvil .\n\nns1:KarzSlug ns1:hasAlignment ns1:trueNeutral .\n\nns1:KarzSlugQueen ns1:hasAlignment ns1:trueNeutral .\n\nns1:KasaObake ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kasatha ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Kastamut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Kathlin ns1:hasAlignment ns1:neutralGood .\n\nns1:KawaAkago ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kech ns1:hasAlignment ns1:neutralEvil .\n\nns1:KeeperoftheYellowSign ns1:hasAlignment ns1:chaoticEvil .\n\nns1:KelpDevil ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kelpie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kentrosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:KerePsychopomp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ketesthius ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Keulia ns1:hasAlignment ns1:trueNeutral .\n\nns1:Khaei ns1:hasAlignment ns1:trueNeutral .\n\nns1:Khala ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Khardajeen ns1:hasAlignment ns1:neutralEvil .\n\nns1:Khargra ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kigyo ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Kijimuna ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kikimora ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kikituk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kilblain ns1:hasAlignment ns1:neutralEvil .\n\nns1:KillerFrog ns1:hasAlignment ns1:trueNeutral .\n\nns1:KillerSeahorse ns1:hasAlignment ns1:trueNeutral .\n\nns1:Killmoulis ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Kimenhul ns1:hasAlignment ns1:neutralEvil .\n\nns1:KingCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:KingRagworm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kirin ns1:hasAlignment ns1:lawfulGood .\n\nns1:KithangianBeastDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Kitsune ns1:hasAlignment ns1:trueNeutral .\n\nns1:KnightAnt ns1:hasAlignment ns1:trueNeutral .\n\nns1:KnightoftheGateUniqueAdvancedDevourer ns1:hasAlignment ns1:neutralEvil .\n\nns1:Koala ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kobold ns1:hasAlignment ns1:lawfulEvil .\n\nns1:KoboldZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kodama ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kolyarut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Kongamato ns1:hasAlignment ns1:trueNeutral .\n\nns1:KorirKokembe ns1:hasAlignment ns1:trueNeutral .\n\nns1:Korkcitura ns1:hasAlignment ns1:neutralEvil .\n\nns1:Korred ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:KostchtchieDemonPrinceofWrath ns1:hasAlignment ns1:chaoticEvil .\n\nns1:KotoFurunishi ns1:hasAlignment ns1:neutralGood .\n\nns1:Kraidyl ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kraken ns1:hasAlignment ns1:neutralEvil .\n\nns1:Krampus ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kratah ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Krenshar ns1:hasAlignment ns1:trueNeutral .\n\nns1:Kronosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:KuahLij ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Kuchrima ns1:hasAlignment ns1:chaoticEvil .\n\nns1:KudzuTheEverblight ns1:hasAlignment ns1:neutralEvil .\n\nns1:Kurobozu ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Kuru ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Kuwa ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Kyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:KytonDemagogue ns1:hasAlignment ns1:lawfulEvil .\n\nns1:LabyrinthMinotaur ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LacedonAquaticGhoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lacridaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:LakeTroll ns1:hasAlignment ns1:neutralEvil .\n\nns1:Lamhigyn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lamia ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LamiaMatriarch ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lammasu ns1:hasAlignment ns1:lawfulGood .\n\nns1:Lampad ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Lampadarius ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Lamprey ns1:hasAlignment ns1:trueNeutral .\n\nns1:LandLamprey ns1:hasAlignment ns1:trueNeutral .\n\nns1:LandwalkerShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:LanternArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:LanternGoat ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Larabay ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:LargeAcidQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeAetherElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeAirElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeColdIronElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeEarthElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeFireElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeGravityElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeIceElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeLightningElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeLightningQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeMagmaElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeMonstrousSeaWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeMudElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeNegativeEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeObsidianQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargePositiveEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargePsionicElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeStingray ns1:hasAlignment ns1:trueNeutral .\n\nns1:LargeWaterElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Larva ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LarvalChuul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LarvalSlimeCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:LarvalStarspawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lashunta ns1:hasAlignment ns1:neutralGood .\n\nns1:Laurapathis ns1:hasAlignment ns1:lawfulEvil .\n\nns1:LavaChild ns1:hasAlignment ns1:trueNeutral .\n\nns1:LavaDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:LavaWeird ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lawgiver ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:LeadCladWyvern ns1:hasAlignment ns1:trueNeutral .\n\nns1:LeadGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:LeadSkeleton ns1:hasAlignment ns1:trueNeutral .\n\nns1:LeafLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:LeafRay ns1:hasAlignment ns1:trueNeutral .\n\nns1:LeananSidheMR ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:LeechSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Leechroot ns1:hasAlignment ns1:neutralEvil .\n\nns1:LegendaryChimera ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LegionArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:Lejnth ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Lemkin ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Lemming ns1:hasAlignment ns1:trueNeutral .\n\nns1:Lemure ns1:hasAlignment ns1:lawfulEvil .\n\nns1:LengGhoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LengHound ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LengSpider ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Leonal ns1:hasAlignment ns1:neutralGood .\n\nns1:Leopard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Leprechaun ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:LesserBandersnatch ns1:hasAlignment ns1:trueNeutral .\n\nns1:LesserBoneneedle ns1:hasAlignment ns1:trueNeutral .\n\nns1:LesserCeustodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:LesserDeath ns1:hasAlignment ns1:neutralEvil .\n\nns1:LesserGelidBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:LesserGibberingOrb ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LesserHostDevilGaav ns1:hasAlignment ns1:lawfulEvil .\n\nns1:LesserJabberwock ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LesserNecrophidius ns1:hasAlignment ns1:trueNeutral .\n\nns1:LesserOozeDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LesserPubo ns1:hasAlignment ns1:trueNeutral .\n\nns1:LesserShadow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LesserShieldWarden ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Leucrotta ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Leukodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Leviathan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Lhaksharut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:LibitinariiKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:LibreumGolem ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:LichNewt ns1:hasAlignment ns1:trueNeutral .\n\nns1:LichPsychic ns1:hasAlignment ns1:lawfulEvil .\n\nns1:LichShade ns1:hasAlignment ns1:neutralEvil .\n\nns1:LichenLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:LifeleecherMortic ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lifesuit ns1:hasAlignment ns1:trueNeutral .\n\nns1:LightRidingHorse ns1:hasAlignment ns1:trueNeutral .\n\nns1:LightningCatChampion ns1:hasAlignment ns1:trueNeutral .\n\nns1:LightningCatCompanion ns1:hasAlignment ns1:trueNeutral .\n\nns1:LightningCatHero ns1:hasAlignment ns1:trueNeutral .\n\nns1:LightningMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:LightningTreantppCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:LightningWeird ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lilin ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Lilith ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Lilitu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LiminalSprite ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:LinnormCrag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lion ns1:hasAlignment ns1:trueNeutral .\n\nns1:LionAlebrije ns1:hasAlignment ns1:trueNeutral .\n\nns1:LionBeastofChaos ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Lionwere ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lipika ns1:hasAlignment ns1:trueNeutral .\n\nns1:Litanu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Livestone ns1:hasAlignment ns1:trueNeutral .\n\nns1:LivingArmor ns1:hasAlignment ns1:trueNeutral .\n\nns1:LivingDoldrums ns1:hasAlignment ns1:neutralEvil .\n\nns1:LivingLake ns1:hasAlignment ns1:trueNeutral .\n\nns1:LivingMirage ns1:hasAlignment ns1:trueNeutral .\n\nns1:LivingRune ns1:hasAlignment ns1:neutralEvil .\n\nns1:LivingTopiary ns1:hasAlignment ns1:trueNeutral .\n\nns1:LivingWall ns1:hasAlignment ns1:trueNeutral .\n\nns1:Lizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:LizardKing ns1:hasAlignment ns1:trueNeutral .\n\nns1:Lizardfolk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Llama ns1:hasAlignment ns1:trueNeutral .\n\nns1:Llorona ns1:hasAlignment ns1:neutralEvil .\n\nns1:Locathah ns1:hasAlignment ns1:trueNeutral .\n\nns1:LocustPlagueSwarmMR ns1:hasAlignment ns1:neutralEvil .\n\nns1:LocustSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:LordSunWarrior ns1:hasAlignment ns1:lawfulGood .\n\nns1:Lorelei ns1:hasAlignment ns1:neutralEvil .\n\nns1:LotusLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:LotusTree ns1:hasAlignment ns1:trueNeutral .\n\nns1:Lovelorn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lukwata ns1:hasAlignment ns1:trueNeutral .\n\nns1:Luma ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Lunarma ns1:hasAlignment ns1:trueNeutral .\n\nns1:LurkerAbove ns1:hasAlignment ns1:trueNeutral .\n\nns1:LurkerInTheCrypt ns1:hasAlignment ns1:chaoticEvil .\n\nns1:LurkerinLight ns1:hasAlignment ns1:neutralEvil .\n\nns1:Lusca ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Lustspawn ns1:hasAlignment ns1:neutralEvil .\n\nns1:Lynx ns1:hasAlignment ns1:trueNeutral .\n\nns1:Lythic ns1:hasAlignment ns1:trueNeutral .\n\nns1:MOUSELORDMOUSEFORM ns1:hasAlignment ns1:trueNeutral .\n\nns1:MachineSoldier ns1:hasAlignment ns1:trueNeutral .\n\nns1:MadnessSlug ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MadnessSlugAlternateForm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Maenad ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MaenadDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Maftet ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagebaneGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagicbaneBandersnatch ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagmaDragonGreatWyrm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonJuvenile ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonMatureAdult ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonOld ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonVeryOld ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonVeryYoung ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonWyrm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonWyrmling ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaDragonYoungAdult ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MagmaElementalRamCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagmaMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagmaOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagmaRoc ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Magmin ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Magmoid ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagnesiumGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MagnesiumSpirit ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Maharaja ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MaharishiManu ns1:hasAlignment ns1:lawfulGood .\n\nns1:MakaraVahana ns1:hasAlignment ns1:trueNeutral .\n\nns1:Malboro ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Malenti ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Mammon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Mammoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:MammothFlea ns1:hasAlignment ns1:trueNeutral .\n\nns1:ManEatingRam ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Manananggal ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mandragora ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MandragoraSwarm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mandrill ns1:hasAlignment ns1:trueNeutral .\n\nns1:ManimalTriceratops ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Manitou ns1:hasAlignment ns1:neutralGood .\n\nns1:MannequinRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mannstirge ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MantaRay ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mantari ns1:hasAlignment ns1:neutralEvil .\n\nns1:Mantidrake ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Manu ns1:hasAlignment ns1:lawfulGood .\n\nns1:MaphistalSecondofOrcus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mapinguari ns1:hasAlignment ns1:trueNeutral .\n\nns1:Marai ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Marathoner ns1:hasAlignment ns1:trueNeutral .\n\nns1:MarbleSentinel ns1:hasAlignment ns1:trueNeutral .\n\nns1:MarbleSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:Margay ns1:hasAlignment ns1:trueNeutral .\n\nns1:Margoyle ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MaridGenie ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Marilith ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MarineCrocodile ns1:hasAlignment ns1:trueNeutral .\n\nns1:MarrowstoneGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MarshGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MarshJelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:Marut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:MaskGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MaskedOkkator ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MasterAutomaton ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Mastodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:MatureAdultBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MatureAdultBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MatureAdultForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MatureAdultGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MatureAdultRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MatureAdultRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MatureAdultSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:MatureAdultSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:MatureAdultSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:MatureAdultWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MatureAdultclouddragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:MatureDarkYoung ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MatureSlimeCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:MatureadultUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Mawler ns1:hasAlignment ns1:neutralEvil .\n\nns1:MechanicalViper ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumAcidQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumAetherElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumAirElemental ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MediumAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumBarracuda ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumEarthElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumFireCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumFireElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumGravityElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumIceElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumLightningElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumLightningQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumMagmaElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumMonstrousSeaWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumMudElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumNegativeEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumObsidianQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumPositiveEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumPsionicElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:MediumSlimeMold ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumStingray ns1:hasAlignment ns1:trueNeutral .\n\nns1:MediumWaterElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mediumcoldironelemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Medusa ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MedusaAnimusShade ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MedusaHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:Meerkat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Megalania ns1:hasAlignment ns1:trueNeutral .\n\nns1:Megaloceros ns1:hasAlignment ns1:trueNeutral .\n\nns1:MegaponAnt ns1:hasAlignment ns1:trueNeutral .\n\nns1:Megaprimatus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Megaraptor ns1:hasAlignment ns1:trueNeutral .\n\nns1:Megatherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:Melacage ns1:hasAlignment ns1:neutralEvil .\n\nns1:Meladaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:MelancholicOozeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:MemitimPsychopomp ns1:hasAlignment ns1:trueNeutral .\n\nns1:MemoryChild ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mephistopheles ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Mercane ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:MercuryOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Merfolk ns1:hasAlignment ns1:trueNeutral .\n\nns1:MerfolkCavalier ns1:hasAlignment ns1:trueNeutral .\n\nns1:MerfolkCavalierAlurian ns1:hasAlignment ns1:trueNeutral .\n\nns1:MetalSlime ns1:hasAlignment ns1:trueNeutral .\n\nns1:MetallicGorgimera ns1:hasAlignment ns1:trueNeutral .\n\nns1:MetallicOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mezlan ns1:hasAlignment ns1:trueNeutral .\n\nns1:MiGo ns1:hasAlignment ns1:neutralEvil .\n\nns1:MidnightPeddler ns1:hasAlignment ns1:trueNeutral .\n\nns1:MightyCyclops ns1:hasAlignment ns1:neutralEvil .\n\nns1:Mihstu ns1:hasAlignment ns1:neutralEvil .\n\nns1:Mimi ns1:hasAlignment ns1:trueNeutral .\n\nns1:MimicOoze ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MindslaverMold ns1:hasAlignment ns1:neutralEvil .\n\nns1:MindstabFungus ns1:hasAlignment ns1:trueNeutral .\n\nns1:MinorReaper ns1:hasAlignment ns1:neutralEvil .\n\nns1:MinotaurElder ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MireBrute ns1:hasAlignment ns1:neutralEvil .\n\nns1:MireNettle ns1:hasAlignment ns1:trueNeutral .\n\nns1:MirrorSerpent ns1:hasAlignment ns1:trueNeutral .\n\nns1:MissingLynx ns1:hasAlignment ns1:trueNeutral .\n\nns1:MistDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:Mite ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MithralGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MixCouatl ns1:hasAlignment ns1:chaoticGood .\n\nns1:Mnemor ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Mngwa ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Moa ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mobat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mobogo ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mockingfey ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Mogaru ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Mohrg ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MokeleMbembe ns1:hasAlignment ns1:trueNeutral .\n\nns1:Moldwretch ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mole ns1:hasAlignment ns1:trueNeutral .\n\nns1:Moloch ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MomeRath ns1:hasAlignment ns1:trueNeutral .\n\nns1:Monaciello ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MonadicDeva ns1:hasAlignment ns1:neutralGood .\n\nns1:MongrelCaveGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mongrelman ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:MonitorLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Monkey ns1:hasAlignment ns1:trueNeutral .\n\nns1:MonkeyGoblin ns1:hasAlignment ns1:neutralEvil .\n\nns1:MonkeySwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:MonstrousCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:MonstrousJellyfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:MonstrousLobster ns1:hasAlignment ns1:trueNeutral .\n\nns1:Montaphant ns1:hasAlignment ns1:trueNeutral .\n\nns1:MoonBeast ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MoonDog ns1:hasAlignment ns1:neutralGood .\n\nns1:MoonGiant ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:MoonHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Moonbeast ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Moonflower ns1:hasAlignment ns1:trueNeutral .\n\nns1:Moonpriest ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Moose ns1:hasAlignment ns1:trueNeutral .\n\nns1:Morbai ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mordnaissant ns1:hasAlignment ns1:neutralEvil .\n\nns1:Morgodea ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Morlock ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MorlockSwarmerTroop ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Morrigna ns1:hasAlignment ns1:trueNeutral .\n\nns1:MortuaryCyclone ns1:hasAlignment ns1:trueNeutral .\n\nns1:MosaicTileGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MosquitoSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:MossMonster ns1:hasAlignment ns1:neutralEvil .\n\nns1:MossTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mosslord ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MotherofOblivion ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MothersMaw ns1:hasAlignment ns1:neutralEvil .\n\nns1:Mothman ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MountainAurochs ns1:hasAlignment ns1:trueNeutral .\n\nns1:MountainBlight ns1:hasAlignment ns1:neutralEvil .\n\nns1:MountainGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MountainLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:MovanicDeva ns1:hasAlignment ns1:neutralGood .\n\nns1:MuSpore ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Muckdweller ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mudbog ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mudlord ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mudman ns1:hasAlignment ns1:trueNeutral .\n\nns1:Muhuru ns1:hasAlignment ns1:trueNeutral .\n\nns1:Muldnal ns1:hasAlignment ns1:neutralGood .\n\nns1:MultiplyingTRexSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:MummifiedBaboon ns1:hasAlignment ns1:neutralEvil .\n\nns1:MummifiedCrocodile ns1:hasAlignment ns1:trueNeutral .\n\nns1:MummifiedElephant ns1:hasAlignment ns1:trueNeutral .\n\nns1:MummifiedGynosphinx ns1:hasAlignment ns1:neutralEvil .\n\nns1:MummifiedHippopotamus ns1:hasAlignment ns1:neutralEvil .\n\nns1:Mummy ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MummyLord ns1:hasAlignment ns1:lawfulEvil .\n\nns1:MummyOfTheDeep ns1:hasAlignment ns1:neutralEvil .\n\nns1:Munavri ns1:hasAlignment ns1:chaoticGood .\n\nns1:Murajau ns1:hasAlignment ns1:neutralGood .\n\nns1:MurderBorn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MurderCrow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MurderofCrows ns1:hasAlignment ns1:trueNeutral .\n\nns1:Muse ns1:hasAlignment ns1:chaoticGood .\n\nns1:MushroomGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:MustardJelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:Mutah ns1:hasAlignment ns1:trueNeutral .\n\nns1:MutantOrc ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MutantOtyughtentacledMutant ns1:hasAlignment ns1:trueNeutral .\n\nns1:MutatedTurtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:MuteHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Mutilated ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Myceloid ns1:hasAlignment ns1:neutralEvil .\n\nns1:MyrmecoleonMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Myrmidon ns1:hasAlignment ns1:trueNeutral .\n\nns1:MythicNelbarzothMR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MythicalLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:MythosGhast ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:MythosGhoul ns1:hasAlignment ns1:chaoticEvil .\n\nns1:MythosSatyr ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nabasu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:NabasuDemonling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:NabasuMature ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nachzehrer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nagaji ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Naiad ns1:hasAlignment ns1:neutralGood .\n\nns1:Najikai ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Nalfeshnee ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Narwhal ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nazalor ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:NecroPede ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Necrocraft ns1:hasAlignment ns1:neutralEvil .\n\nns1:NecromancerofLeng ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Necrophidius ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nekomata ns1:hasAlignment ns1:neutralEvil .\n\nns1:NemesisDevilAdvodaza ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Nemhain ns1:hasAlignment ns1:neutralEvil .\n\nns1:Neothelid ns1:hasAlignment ns1:chaoticEvil .\n\nns1:NeothelidOverlord ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Neozecktole ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nependis ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nephilim ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nereid ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:NerizoDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:NessianWarhoundCR ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Netherspark ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ngoga ns1:hasAlignment ns1:trueNeutral .\n\nns1:NightAdderInphidian ns1:hasAlignment ns1:neutralEvil .\n\nns1:NightHag ns1:hasAlignment ns1:neutralEvil .\n\nns1:NightWyvern ns1:hasAlignment ns1:trueNeutral .\n\nns1:NightbringerApe ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nightcaller ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nightcrawler ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nightgaunt ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Nightmare ns1:hasAlignment ns1:neutralEvil .\n\nns1:NightmareArtist ns1:hasAlignment ns1:neutralEvil .\n\nns1:NightmareEttercap ns1:hasAlignment ns1:neutralEvil .\n\nns1:NightmareMount ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nightskitter ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nightwalker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nightwave ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nightwing ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nikaramsa ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Nilith ns1:hasAlignment ns1:neutralEvil .\n\nns1:Niln ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ningen ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ningyo ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nirento ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nisid ns1:hasAlignment ns1:chaoticGood .\n\nns1:Nixie ns1:hasAlignment ns1:trueNeutral .\n\nns1:NobleDjinniVizier ns1:hasAlignment ns1:chaoticGood .\n\nns1:NobleEfreet ns1:hasAlignment ns1:lawfulEvil .\n\nns1:NobleSalamander ns1:hasAlignment ns1:chaoticEvil .\n\nns1:NobleTimeElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nochlean ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nocticula ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nogitsune ns1:hasAlignment ns1:neutralEvil .\n\nns1:NoqualGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Norn ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Nosferatu ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nosoi ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nothosaur ns1:hasAlignment ns1:trueNeutral .\n\nns1:Novenarut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Nuckalavee ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Nuckelavee ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nucol ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nue ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nulmind ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nuno ns1:hasAlignment ns1:neutralEvil .\n\nns1:Nupperibo ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Nycar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Nymph ns1:hasAlignment ns1:chaoticGood .\n\nns1:NymphWaterStrider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Nyogoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:NysrockDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Oakman ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:OaurOoung ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Obcisidaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Oblivion ns1:hasAlignment ns1:neutralEvil .\n\nns1:ObsidianGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:ObsidianMinotaur ns1:hasAlignment ns1:trueNeutral .\n\nns1:OceanGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OceanLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:Oceanid ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:OchreEurypterid ns1:hasAlignment ns1:trueNeutral .\n\nns1:OchreJelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:OctopodMechanicDrone ns1:hasAlignment ns1:trueNeutral .\n\nns1:Octopus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ofalth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ogre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreBoss ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreBrute ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreDestroyer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreGlutton ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreHunter ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreKing ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreMage ns1:hasAlignment ns1:lawfulEvil .\n\nns1:OgreMancatcher ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgrePriest ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgreSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:OgreStalker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OgrekinHalfOgre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ogren ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ogrillon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ohancanu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OilShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:OitosKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:OkkatorAssassin ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OldBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OldBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:OldGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:OldRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OldRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:OldSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:OldSilverDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:OldSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:OldSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:OldWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Olethrodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Olethros ns1:hasAlignment ns1:trueNeutral .\n\nns1:Oliphantpp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Olkhia ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ollph\u00e9ist ns1:hasAlignment ns1:trueNeutral .\n\nns1:Oma ns1:hasAlignment ns1:trueNeutral .\n\nns1:Omnipath ns1:hasAlignment ns1:lawfulEvil .\n\nns1:OmoxDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OnwuAzu ns1:hasAlignment ns1:trueNeutral .\n\nns1:OnyxDeer ns1:hasAlignment ns1:trueNeutral .\n\nns1:OnyxScourge ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Oolioddroo ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OozeGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:OozeMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:OozingOtyugh ns1:hasAlignment ns1:trueNeutral .\n\nns1:OphiduanAnguineumCaste ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OphiduanHominisCaste ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OphiduanSemiferumCaste ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OphiotaurusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Orangutan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Orca ns1:hasAlignment ns1:trueNeutral .\n\nns1:OrcishWarclops ns1:hasAlignment ns1:trueNeutral .\n\nns1:OrcusDemonPrinceoftheUndead ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Oread ns1:hasAlignment ns1:trueNeutral .\n\nns1:Orog ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Oronci ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Orsatka ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Orsheval ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Orzar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Oshageros ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Osteon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ostiarius ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ostovite ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ostrich ns1:hasAlignment ns1:trueNeutral .\n\nns1:Othaos ns1:hasAlignment ns1:trueNeutral .\n\nns1:Otyugh ns1:hasAlignment ns1:trueNeutral .\n\nns1:OtyughMeatPuppet ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ourdivar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Ouroboros ns1:hasAlignment ns1:trueNeutral .\n\nns1:OuterAbominationTheSecondStage ns1:hasAlignment ns1:chaoticEvil .\n\nns1:OuterMutantPriest ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:OutlawTroop ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Ovinnik ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Owb ns1:hasAlignment ns1:neutralEvil .\n\nns1:Owl ns1:hasAlignment ns1:trueNeutral .\n\nns1:Owlbear ns1:hasAlignment ns1:trueNeutral .\n\nns1:OwlbearSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:Owlephant ns1:hasAlignment ns1:trueNeutral .\n\nns1:Owlwere ns1:hasAlignment ns1:chaoticEvil .\n\nns1:PISCODAEMON ns1:hasAlignment ns1:neutralEvil .\n\nns1:Pachycephalosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Paguroida ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:PaigoelDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Painajai ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Pairaka ns1:hasAlignment ns1:neutralEvil .\n\nns1:Pakalchi ns1:hasAlignment ns1:neutralEvil .\n\nns1:PaleStranger ns1:hasAlignment ns1:neutralEvil .\n\nns1:PaleoskeletonTriceratops ns1:hasAlignment ns1:trueNeutral .\n\nns1:PallidAngel ns1:hasAlignment ns1:neutralEvil .\n\nns1:Panda ns1:hasAlignment ns1:trueNeutral .\n\nns1:Panotti ns1:hasAlignment ns1:neutralGood .\n\nns1:Papinijuwari ns1:hasAlignment ns1:neutralEvil .\n\nns1:Papinu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Paracletus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Parasaurolophus ns1:hasAlignment ns1:trueNeutral .\n\nns1:ParasiteMystic ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Pard ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Parrot ns1:hasAlignment ns1:trueNeutral .\n\nns1:PashaNobleShaitan ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:PastYithian ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Pavbagha ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Pazuzu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:PazuzuDemonPrinceofAir ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Peafowl ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pech ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pegasus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pelagastr ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:PelagastrProtean ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:PelagosSeaSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Peluda ns1:hasAlignment ns1:neutralEvil .\n\nns1:Pendula ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Pengizu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Penguin ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pepfralcon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Peri ns1:hasAlignment ns1:neutralGood .\n\nns1:PersonificationOfFury ns1:hasAlignment ns1:trueNeutral .\n\nns1:Peryton ns1:hasAlignment ns1:chaoticEvil .\n\nns1:PestDrakeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pestie ns1:hasAlignment ns1:trueNeutral .\n\nns1:PestilenziDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:PetitionerHumanCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Petrifern ns1:hasAlignment ns1:trueNeutral .\n\nns1:PetrifiedMaiden ns1:hasAlignment ns1:neutralEvil .\n\nns1:Petrous ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Peuchen ns1:hasAlignment ns1:neutralEvil .\n\nns1:Phantasm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:PhantomFungus ns1:hasAlignment ns1:trueNeutral .\n\nns1:PhantomLancer ns1:hasAlignment ns1:neutralEvil .\n\nns1:PhantomStalker ns1:hasAlignment ns1:trueNeutral .\n\nns1:PharaonicGuardian ns1:hasAlignment ns1:lawfulEvil .\n\nns1:PhaseFlea ns1:hasAlignment ns1:trueNeutral .\n\nns1:PhaseSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Phasm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Phasma ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Phasmadaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:PhlegmaticOozeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Phlogiston ns1:hasAlignment ns1:trueNeutral .\n\nns1:Phoenix ns1:hasAlignment ns1:neutralGood .\n\nns1:Phooka ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Phoso ns1:hasAlignment ns1:trueNeutral .\n\nns1:PhrenicScourge ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Phycomid ns1:hasAlignment ns1:trueNeutral .\n\nns1:PickledPunk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Pipefox ns1:hasAlignment ns1:trueNeutral .\n\nns1:PiranhaMature ns1:hasAlignment ns1:trueNeutral .\n\nns1:PiranhaSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Piscodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:PitBoar ns1:hasAlignment ns1:trueNeutral .\n\nns1:PitFiend ns1:hasAlignment ns1:lawfulEvil .\n\nns1:PitHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Pixie ns1:hasAlignment ns1:neutralGood .\n\nns1:PixieCircle ns1:hasAlignment ns1:trueNeutral .\n\nns1:PlagueGiant ns1:hasAlignment ns1:neutralEvil .\n\nns1:PlagueLocustSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:PlagueZombie ns1:hasAlignment ns1:trueNeutral .\n\nns1:PlaguebearerOtyugh ns1:hasAlignment ns1:trueNeutral .\n\nns1:PlaguedHorse ns1:hasAlignment ns1:neutralEvil .\n\nns1:Planetar ns1:hasAlignment ns1:neutralGood .\n\nns1:Plankta ns1:hasAlignment ns1:neutralEvil .\n\nns1:PlantImbuedApe ns1:hasAlignment ns1:neutralGood .\n\nns1:Plantoid ns1:hasAlignment ns1:trueNeutral .\n\nns1:PlantoidServitor ns1:hasAlignment ns1:trueNeutral .\n\nns1:PlasmaOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Platypus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pleroma ns1:hasAlignment ns1:trueNeutral .\n\nns1:Plesiosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Plizeazoth ns1:hasAlignment ns1:neutralEvil .\n\nns1:PodCannon ns1:hasAlignment ns1:trueNeutral .\n\nns1:PoisonFrog ns1:hasAlignment ns1:trueNeutral .\n\nns1:PoisonGauntlet ns1:hasAlignment ns1:trueNeutral .\n\nns1:PoisonousFrog ns1:hasAlignment ns1:trueNeutral .\n\nns1:PoisonousFrogSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:PoisonousManticore ns1:hasAlignment ns1:lawfulEvil .\n\nns1:PolarBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:PolarKamadan ns1:hasAlignment ns1:neutralEvil .\n\nns1:PolarWhaler ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:PolarWhalerSimulacrum ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Polevik ns1:hasAlignment ns1:neutralEvil .\n\nns1:Polong ns1:hasAlignment ns1:neutralEvil .\n\nns1:Poltergeist ns1:hasAlignment ns1:lawfulEvil .\n\nns1:PondDrinker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pony ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pooka ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Popobala ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Popoto ns1:hasAlignment ns1:trueNeutral .\n\nns1:PoppyLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:Poracha ns1:hasAlignment ns1:trueNeutral .\n\nns1:Porcupine ns1:hasAlignment ns1:trueNeutral .\n\nns1:PortunusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Possessor ns1:hasAlignment ns1:lawfulEvil .\n\nns1:PranaGhost ns1:hasAlignment ns1:neutralGood .\n\nns1:PreceptorArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:PretenderDevilDissimulare ns1:hasAlignment ns1:lawfulEvil .\n\nns1:PrideLordAgathion ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:PrismDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ProcyalAgathion ns1:hasAlignment ns1:neutralGood .\n\nns1:Proscriber ns1:hasAlignment ns1:trueNeutral .\n\nns1:ProteanKeketar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ProteanNaunet ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ProteanVoidworm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Protector ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ProtoShoggoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Prydanu ns1:hasAlignment ns1:chaoticGood .\n\nns1:Pseudodragon ns1:hasAlignment ns1:neutralGood .\n\nns1:Pseudosphinx ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pseudowyvern ns1:hasAlignment ns1:trueNeutral .\n\nns1:PsionicAlMiraj ns1:hasAlignment ns1:trueNeutral .\n\nns1:Psiwyrm ns1:hasAlignment ns1:neutralEvil .\n\nns1:Psoglav ns1:hasAlignment ns1:chaoticEvil .\n\nns1:PsycheSerpent ns1:hasAlignment ns1:trueNeutral .\n\nns1:Psychemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Psychepore ns1:hasAlignment ns1:trueNeutral .\n\nns1:PsychicStalker ns1:hasAlignment ns1:neutralEvil .\n\nns1:PsychicWard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Psychlown ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Psychofant ns1:hasAlignment ns1:trueNeutral .\n\nns1:PsychoplasmicBehir ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ptarmigan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pteranodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pufferfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:Puffin ns1:hasAlignment ns1:trueNeutral .\n\nns1:Pukwudgie ns1:hasAlignment ns1:neutralEvil .\n\nns1:PumpkinGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:PurpleWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Purrodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:PutridOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:PygmyGnoll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Pyrausta ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Pyrogeist ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Pyrolisk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Qallupilluk ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Qolok ns1:hasAlignment ns1:neutralEvil .\n\nns1:QuantiumGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Quantum ns1:hasAlignment ns1:trueNeutral .\n\nns1:Quasit ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Quatoid ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:QueenThermite ns1:hasAlignment ns1:trueNeutral .\n\nns1:Quelaunt ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Quetzalcoatlus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Quickling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Quickwood ns1:hasAlignment ns1:trueNeutral .\n\nns1:QuintessenceGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Quipper ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rabbit ns1:hasAlignment ns1:trueNeutral .\n\nns1:Raccoon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Racoon ns1:hasAlignment ns1:trueNeutral .\n\nns1:RadiantEssence ns1:hasAlignment ns1:neutralGood .\n\nns1:Raelis ns1:hasAlignment ns1:chaoticGood .\n\nns1:RageDemonAeshma ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RagebornGnoll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ragewight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Raggoth ns1:hasAlignment ns1:neutralEvil .\n\nns1:RagingRubble ns1:hasAlignment ns1:trueNeutral .\n\nns1:Raiju ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:RajputAmbari ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RakasaBatu ns1:hasAlignment ns1:trueNeutral .\n\nns1:RakklethornToad ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rakshasa ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Raktavarna ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ram ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ramidreju ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rast ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rat ns1:hasAlignment ns1:trueNeutral .\n\nns1:RatKing ns1:hasAlignment ns1:trueNeutral .\n\nns1:RatOgre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RatPlagueSwarmMR ns1:hasAlignment ns1:lawfulEvil .\n\nns1:RatSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ratfolk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ratling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RattlerInphidian ns1:hasAlignment ns1:neutralEvil .\n\nns1:RavagerSpawnCrawlerForm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Raven ns1:hasAlignment ns1:trueNeutral .\n\nns1:RavenSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:RavenousGnoll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RavenousTumbleweed ns1:hasAlignment ns1:trueNeutral .\n\nns1:RavenousUrchinSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:RavenousWendigo ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Rawbones ns1:hasAlignment ns1:neutralEvil .\n\nns1:Rawhead ns1:hasAlignment ns1:neutralEvil .\n\nns1:RazorAngler ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:RazorBoar ns1:hasAlignment ns1:trueNeutral .\n\nns1:RazorFern ns1:hasAlignment ns1:trueNeutral .\n\nns1:Razormouth ns1:hasAlignment ns1:trueNeutral .\n\nns1:RecycledGearsman ns1:hasAlignment ns1:trueNeutral .\n\nns1:RedJester ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:RedPanda ns1:hasAlignment ns1:trueNeutral .\n\nns1:RedReaver ns1:hasAlignment ns1:trueNeutral .\n\nns1:RedWraith ns1:hasAlignment ns1:neutralEvil .\n\nns1:RedWyrmRavener ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Redcap ns1:hasAlignment ns1:neutralEvil .\n\nns1:Redkind ns1:hasAlignment ns1:neutralEvil .\n\nns1:Reefclaw ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Reigon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Reindeer ns1:hasAlignment ns1:trueNeutral .\n\nns1:ReliquaryGuardian ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Remacera ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Renzer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RepairRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:Reptial ns1:hasAlignment ns1:neutralGood .\n\nns1:Reptoid ns1:hasAlignment ns1:lawfulEvil .\n\nns1:RequiemBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:RetchHound ns1:hasAlignment ns1:neutralEvil .\n\nns1:Retriever ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Rhamphorhynchus ns1:hasAlignment ns1:trueNeutral .\n\nns1:RhanTegoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Rhinoceros ns1:hasAlignment ns1:trueNeutral .\n\nns1:RhinocerosWoolly ns1:hasAlignment ns1:trueNeutral .\n\nns1:RhuChalik ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RidingDog ns1:hasAlignment ns1:trueNeutral .\n\nns1:RiftFlumph ns1:hasAlignment ns1:chaoticGood .\n\nns1:Riftcreeper ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RimefireEidolon ns1:hasAlignment ns1:chaoticGood .\n\nns1:Ringhorn ns1:hasAlignment ns1:trueNeutral .\n\nns1:Riotblood ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RipperDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RiptideHorror ns1:hasAlignment ns1:lawfulEvil .\n\nns1:RisenWitch ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RishiManu ns1:hasAlignment ns1:lawfulGood .\n\nns1:RiverDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:RiverElk ns1:hasAlignment ns1:trueNeutral .\n\nns1:RiverGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RiverTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RiverswellSpirit ns1:hasAlignment ns1:neutralEvil .\n\nns1:RobotGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Roc ns1:hasAlignment ns1:trueNeutral .\n\nns1:RockCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:RockReptile ns1:hasAlignment ns1:trueNeutral .\n\nns1:RockTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:RockTuatara ns1:hasAlignment ns1:trueNeutral .\n\nns1:RoilingOil ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rokurokubi ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Rokyamut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Ronus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Roofgarden ns1:hasAlignment ns1:trueNeutral .\n\nns1:RopeDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:RopeGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Roper ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Rorkoun ns1:hasAlignment ns1:neutralEvil .\n\nns1:Roseling ns1:hasAlignment ns1:neutralGood .\n\nns1:RotGrubSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rougarou ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:RoyalTimeElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:Rufidier ns1:hasAlignment ns1:neutralEvil .\n\nns1:Rukh ns1:hasAlignment ns1:trueNeutral .\n\nns1:RuneGiant ns1:hasAlignment ns1:lawfulEvil .\n\nns1:RuneGuardian ns1:hasAlignment ns1:trueNeutral .\n\nns1:RunewarpedGoblin ns1:hasAlignment ns1:neutralEvil .\n\nns1:Rusalka ns1:hasAlignment ns1:neutralEvil .\n\nns1:RussetMold ns1:hasAlignment ns1:trueNeutral .\n\nns1:RustLord ns1:hasAlignment ns1:trueNeutral .\n\nns1:RustMiteSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:RustMonster ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ryven ns1:hasAlignment ns1:trueNeutral .\n\nns1:SANDGIANT ns1:hasAlignment ns1:neutralEvil .\n\nns1:SabbatPrancer ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Sabosan ns1:hasAlignment ns1:neutralEvil .\n\nns1:Sacristan ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Sagari ns1:hasAlignment ns1:neutralEvil .\n\nns1:Saguaroi ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sahuagin ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Salamander ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SaltDrake ns1:hasAlignment ns1:trueNeutral .\n\nns1:SaltMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:SaltWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:SaltwaterCrocodile ns1:hasAlignment ns1:trueNeutral .\n\nns1:SaltwaterMerrow ns1:hasAlignment ns1:neutralEvil .\n\nns1:Samsaran ns1:hasAlignment ns1:trueNeutral .\n\nns1:SandGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:SandHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SandKraken ns1:hasAlignment ns1:trueNeutral .\n\nns1:SandScorpion ns1:hasAlignment ns1:trueNeutral .\n\nns1:SandStalker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sandling ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sandman ns1:hasAlignment ns1:neutralEvil .\n\nns1:Sangoi ns1:hasAlignment ns1:neutralEvil .\n\nns1:Sangudaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:SanguineOozeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:SapphireJellyfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:SapphireOoze ns1:hasAlignment ns1:chaoticGood .\n\nns1:Sarcovalt ns1:hasAlignment ns1:neutralEvil .\n\nns1:Sard ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SargassumFiend ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sasquatch ns1:hasAlignment ns1:trueNeutral .\n\nns1:Satyr ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SaumenKar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Saurian ns1:hasAlignment ns1:trueNeutral .\n\nns1:SavageGreenHorde ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SawdustSlough ns1:hasAlignment ns1:trueNeutral .\n\nns1:SawlegLocust ns1:hasAlignment ns1:trueNeutral .\n\nns1:Saxra ns1:hasAlignment ns1:neutralEvil .\n\nns1:Sayona ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ScaldingMinotaur ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ScarabBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScarabSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Scarecrow ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScarletSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScarletSpiderSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScarletWalker ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ScavengerWormCR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sceaduinar ns1:hasAlignment ns1:neutralEvil .\n\nns1:Sceazir ns1:hasAlignment ns1:neutralEvil .\n\nns1:Schir ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Scitalis ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScorpionDemonGharros ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ScorpionSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Scorpionfolk ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ScragAquaticTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Scraghound ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScrapyardRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScreamingDevilkin ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ScreamingGiantBeheadedCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:ScreamingMedusaHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:ScreamingSeveredHead ns1:hasAlignment ns1:neutralEvil .\n\nns1:ScreamingSeveredSkull ns1:hasAlignment ns1:neutralEvil .\n\nns1:ScreamingSkull ns1:hasAlignment ns1:trueNeutral .\n\nns1:Scylla ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ScytheHorn ns1:hasAlignment ns1:trueNeutral .\n\nns1:ScytheTree ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SeaCat ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaDrake ns1:hasAlignment ns1:neutralEvil .\n\nns1:SeaGiant ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SeaHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SeaLinnorm ns1:hasAlignment ns1:neutralEvil .\n\nns1:SeaLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaScourge ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaSerpent ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaSphereBlubble ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaSpider ns1:hasAlignment ns1:neutralEvil .\n\nns1:Seal ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaweedLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:SeaweedSiren ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SecurityMannequin ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Seilenos ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Selkie ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SentientWaxGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:SentinelHut ns1:hasAlignment ns1:trueNeutral .\n\nns1:SepiaSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sepid ns1:hasAlignment ns1:neutralEvil .\n\nns1:Seps ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sepsidaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Seraptis ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SerpentAlchemist ns1:hasAlignment ns1:neutralEvil .\n\nns1:SerpentDemonMallor ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Serpentfolk ns1:hasAlignment ns1:neutralEvil .\n\nns1:SerpentfolkReclaimer ns1:hasAlignment ns1:neutralEvil .\n\nns1:Serpopard ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ServitoroftheOuterGods ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Seugathi ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SeugathiSavant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SewerBlight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SewerOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:SewerTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Sha ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Shabti ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ShachathDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Shadow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShadowAngel ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ShadowAnimalLion ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShadowCollector ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ShadowDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShadowDrake ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShadowFern ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShadowGiant ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ShadowHunter ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShadowHunterHatchling ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShadowMastiff ns1:hasAlignment ns1:neutralEvil .\n\nns1:ShadowRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShadowRatSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:ShadowRoper ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShadowWolf ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Shae ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShaggyDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShahzadaNobleMarid ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Shalkeshka ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShamblingMound ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shampe ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Shantak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShardSlag ns1:hasAlignment ns1:trueNeutral .\n\nns1:SharkEatingCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:SharpshooterAutomaton ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Shasalqu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shedu ns1:hasAlignment ns1:lawfulGood .\n\nns1:Sheep ns1:hasAlignment ns1:trueNeutral .\n\nns1:SheetFungus ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShemhazianDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShenMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shenzuzhou ns1:hasAlignment ns1:neutralEvil .\n\nns1:Shikigami ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShimmerwingDragonfly ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shinigami ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ShiningSentinel ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShipSentinel ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShipbreakerSeaSerpent ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:ShipinaBottle ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShipwreckerCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shira ns1:hasAlignment ns1:neutralEvil .\n\nns1:Shobhad ns1:hasAlignment ns1:trueNeutral .\n\nns1:ShockerLizard ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shoggoth ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Shoggti ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShokiPsychopomp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shotalashu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shredskin ns1:hasAlignment ns1:neutralEvil .\n\nns1:Shrieker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Shriezyx ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ShrineBlessedBurningSkeletons ns1:hasAlignment ns1:neutralEvil .\n\nns1:Shrroth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Shulsaga ns1:hasAlignment ns1:trueNeutral .\n\nns1:Siabrae ns1:hasAlignment ns1:neutralEvil .\n\nns1:SiegeOwlbear ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sigbin ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Silid ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Silvanshee ns1:hasAlignment ns1:neutralGood .\n\nns1:SilverBells ns1:hasAlignment ns1:trueNeutral .\n\nns1:SilverDragonGreatWyrm ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonJuvenile ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonMatureAdult ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonVeryOld ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonVeryYoung ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonWyrm ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonWyrmling ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverDragonYoungAdult ns1:hasAlignment ns1:lawfulGood .\n\nns1:SilverbloodWerewolfHumanForm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Simurgh ns1:hasAlignment ns1:neutralGood .\n\nns1:SinSeeker ns1:hasAlignment ns1:trueNeutral .\n\nns1:SinbornDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SingingShrieker ns1:hasAlignment ns1:trueNeutral .\n\nns1:SinspawnEnvy ns1:hasAlignment ns1:neutralEvil .\n\nns1:SinspawnGluttony ns1:hasAlignment ns1:neutralEvil .\n\nns1:SinspawnGreedspawn ns1:hasAlignment ns1:neutralEvil .\n\nns1:SinspawnPride ns1:hasAlignment ns1:neutralEvil .\n\nns1:SinspawnSloth ns1:hasAlignment ns1:neutralEvil .\n\nns1:SinspawnWrath ns1:hasAlignment ns1:neutralEvil .\n\nns1:SireDevilPatraavex ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Siren ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SirensBedAnemone ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sirrush ns1:hasAlignment ns1:neutralGood .\n\nns1:Sishkanset ns1:hasAlignment ns1:neutralEvil .\n\nns1:Siyokoy ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkateSpiderSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Skaveling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SkeletalArcher ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkeletalChampion ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkeletalChampionArcherCR ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkeletalMage ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkeletalMount ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkeletonHostCorpse ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkeletonReindeer ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkildpadderGiantTortoiseBullette ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkinStealer ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SkinStitcher ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Skincrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkincrawlerDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Skinstitch ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkirmishersTroop ns1:hasAlignment ns1:chaoticGood .\n\nns1:SkitterRat ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Skitterdark ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Skittergoat ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkrikNettle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Skrimsl ns1:hasAlignment ns1:trueNeutral .\n\nns1:Skua ns1:hasAlignment ns1:trueNeutral .\n\nns1:Skulk ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SkullRipper ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SkullSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkullSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:Skullcruncher ns1:hasAlignment ns1:neutralEvil .\n\nns1:Skulleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:SkumUlatKini ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Skunk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Skvader ns1:hasAlignment ns1:trueNeutral .\n\nns1:SkyDreamer ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlaadLordOfEntropy ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SlaadLordOfTheInsane ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SlagGiant ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:SlagWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Slaughterford ns1:hasAlignment ns1:neutralEvil .\n\nns1:SleepingWillow ns1:hasAlignment ns1:neutralEvil .\n\nns1:SleeykOwlbear ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sleipnir ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlicerBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlimeDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SlimeInfectedBasilisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlimeMold ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlimyDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SlimyHagfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:Slinker ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SlitheringPit ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlitheringTracker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Slorath ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Sloth ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlothSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:SlothViper ns1:hasAlignment ns1:trueNeutral .\n\nns1:Slugspawn ns1:hasAlignment ns1:trueNeutral .\n\nns1:Slurk ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallAcidQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallAetherElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallAirElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallBarracuda ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallColdironelemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallEarthElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallFireCrab ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallFireElemental ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SmallGravityElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallIceElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallLightningElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallLightningQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallMagmaElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallMonstrousSeaWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallMudElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallNegativeenergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallObsidianQuasiElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallPositiveEnergyElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallPsionicElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallStingray ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmallUnfetteredEidolon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SmallWaterElemental ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmilodonSaberToothedCat ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmokeDragonDracoFumoSuffaco ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmokeGiant ns1:hasAlignment ns1:neutralEvil .\n\nns1:SmokeMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:SmokeSentinel ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Smokeshade ns1:hasAlignment ns1:neutralEvil .\n\nns1:SnailFlail ns1:hasAlignment ns1:trueNeutral .\n\nns1:SnakeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Snallygaster ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SnapdragonLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:SnapjawHomunculus ns1:hasAlignment ns1:neutralEvil .\n\nns1:SnappingTurtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Snark ns1:hasAlignment ns1:trueNeutral .\n\nns1:SnowGiant ns1:hasAlignment ns1:neutralEvil .\n\nns1:SnowLeopard ns1:hasAlignment ns1:trueNeutral .\n\nns1:SnowRoc ns1:hasAlignment ns1:trueNeutral .\n\nns1:Snowcloak ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Snowking ns1:hasAlignment ns1:neutralEvil .\n\nns1:SoddenDraugerTroop ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SoddenDraugrTroop ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Solar ns1:hasAlignment ns1:neutralGood .\n\nns1:SolarPitriAgnishvattaMR ns1:hasAlignment ns1:lawfulGood .\n\nns1:SoldierThermite ns1:hasAlignment ns1:trueNeutral .\n\nns1:Somalcygot ns1:hasAlignment ns1:neutralEvil .\n\nns1:Somlum ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SonechardGeneralofOrcus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SonicKratah ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Soucouyant ns1:hasAlignment ns1:neutralEvil .\n\nns1:SoulEater ns1:hasAlignment ns1:neutralEvil .\n\nns1:SoulNibbler ns1:hasAlignment ns1:trueNeutral .\n\nns1:SoulReaper ns1:hasAlignment ns1:neutralEvil .\n\nns1:SoulboundAnnihilatorRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:SoulboundDoll ns1:hasAlignment ns1:trueNeutral .\n\nns1:SoulboundMannequin ns1:hasAlignment ns1:trueNeutral .\n\nns1:SoulboundShell ns1:hasAlignment ns1:trueNeutral .\n\nns1:SoullessDestroyer ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Soulsliver ns1:hasAlignment ns1:neutralEvil .\n\nns1:Spartolos ns1:hasAlignment ns1:neutralEvil .\n\nns1:SpawningCanker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SpawnofYogSothoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SpearUrchin ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpectralRockTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Spectre ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SpellgorgedZombie ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpellscarredFext ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SphinxColossusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpiderCollective ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpiderEater ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpiderSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpikestoneGuardian ns1:hasAlignment ns1:trueNeutral .\n\nns1:Spindler ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SpineDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Spinosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpinyEurypterid ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpinyStarfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpireDrake ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SpiritOni ns1:hasAlignment ns1:neutralEvil .\n\nns1:SpiritofAbandon ns1:hasAlignment ns1:neutralGood .\n\nns1:SpiteSpitter ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SpittingCobra ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpittingEurypterid ns1:hasAlignment ns1:trueNeutral .\n\nns1:SpittingSeaSerpent ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SplinterDrake ns1:hasAlignment ns1:trueNeutral .\n\nns1:SporeRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:Spriggan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SpringHeeledJack ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Sprite ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:SpyglassArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:SquamousDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Squealer ns1:hasAlignment ns1:trueNeutral .\n\nns1:Squid ns1:hasAlignment ns1:trueNeutral .\n\nns1:SquidGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:Squirrel ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stag ns1:hasAlignment ns1:trueNeutral .\n\nns1:StagArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:StalkBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:StalkerAutomaton ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:StandardShieldWarden ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:StarDrake ns1:hasAlignment ns1:trueNeutral .\n\nns1:StarMonarch ns1:hasAlignment ns1:chaoticGood .\n\nns1:StarSpawnofCthulhu ns1:hasAlignment ns1:chaoticEvil .\n\nns1:StarVampire ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Starspawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SteamBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:SteamMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:SteamPoweredClockworkDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stegaloviper ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stegocentipede ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stegosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:StenchKow ns1:hasAlignment ns1:trueNeutral .\n\nns1:StewardOfTheSkein ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sthenno ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Stingray ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stirge ns1:hasAlignment ns1:trueNeutral .\n\nns1:StirgeDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:StirgeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneColossusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneGiant ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneGuardianGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneMaiden ns1:hasAlignment ns1:trueNeutral .\n\nns1:StonePudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneRoper ns1:hasAlignment ns1:chaoticEvil .\n\nns1:StoneSalveshapedFiendishEnhancedBlackPudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneTreant ns1:hasAlignment ns1:trueNeutral .\n\nns1:StoneTroglodyte ns1:hasAlignment ns1:chaoticEvil .\n\nns1:StormGiant ns1:hasAlignment ns1:chaoticGood .\n\nns1:StormGiantZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:StormHag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Stormghost ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Stormwarden ns1:hasAlignment ns1:neutralEvil .\n\nns1:StrangleWeed ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stranglereed ns1:hasAlignment ns1:trueNeutral .\n\nns1:StringyDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Strix ns1:hasAlignment ns1:trueNeutral .\n\nns1:StrokeLad ns1:hasAlignment ns1:neutralEvil .\n\nns1:StumbleFish ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stunjelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:StygianLeviathan ns1:hasAlignment ns1:neutralEvil .\n\nns1:StygianTurtleShark ns1:hasAlignment ns1:neutralEvil .\n\nns1:Stygira ns1:hasAlignment ns1:lawfulEvil .\n\nns1:StymphalianBird ns1:hasAlignment ns1:trueNeutral .\n\nns1:StymphalidesSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Stymphalidies ns1:hasAlignment ns1:trueNeutral .\n\nns1:Styracosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Su ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Succubus ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Sudoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Suffragan ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SuijinKami ns1:hasAlignment ns1:trueNeutral .\n\nns1:Suli ns1:hasAlignment ns1:trueNeutral .\n\nns1:SummonedAurochs ns1:hasAlignment ns1:trueNeutral .\n\nns1:SummonedGorilla ns1:hasAlignment ns1:trueNeutral .\n\nns1:SummonedWolf ns1:hasAlignment ns1:trueNeutral .\n\nns1:SumpSteward ns1:hasAlignment ns1:trueNeutral .\n\nns1:SunGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SunflowerLeshy ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sunlord ns1:hasAlignment ns1:neutralGood .\n\nns1:Suspiridaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:SutureVine ns1:hasAlignment ns1:trueNeutral .\n\nns1:Suzalisk ns1:hasAlignment ns1:neutralEvil .\n\nns1:Svartalfar ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Svirfneblin ns1:hasAlignment ns1:trueNeutral .\n\nns1:SvirfneblinRidingSlug ns1:hasAlignment ns1:neutralGood .\n\nns1:Swaithe ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SwampBarracuda ns1:hasAlignment ns1:trueNeutral .\n\nns1:SwampBlight ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SwampMummy ns1:hasAlignment ns1:lawfulEvil .\n\nns1:SwampTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SwanMaiden ns1:hasAlignment ns1:chaoticGood .\n\nns1:SwarmDemonDaraka ns1:hasAlignment ns1:chaoticEvil .\n\nns1:SwitchbackJackal ns1:hasAlignment ns1:trueNeutral .\n\nns1:Swordfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:Sylph ns1:hasAlignment ns1:trueNeutral .\n\nns1:Synesis ns1:hasAlignment ns1:trueNeutral .\n\nns1:Synevite ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Syricta ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Syrinx ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Szaboan ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Szuriel ns1:hasAlignment ns1:neutralEvil .\n\nns1:TShann ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tabaxi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Tadhemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Taer ns1:hasAlignment ns1:trueNeutral .\n\nns1:TaigaGiant ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TaigaLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TailessCragLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TallowGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tangtal ns1:hasAlignment ns1:neutralEvil .\n\nns1:Taniniver ns1:hasAlignment ns1:neutralEvil .\n\nns1:Taniwha ns1:hasAlignment ns1:chaoticGood .\n\nns1:Tanuki ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TarJelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:TarantulaTree ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Targotha ns1:hasAlignment ns1:trueNeutral .\n\nns1:TarnLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TarrasqueB ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TarryDemodand ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TarryDemodandCR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tarsier ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tataka ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Tatzlwyrm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tauhoti ns1:hasAlignment ns1:trueNeutral .\n\nns1:TaviMongooseFolk ns1:hasAlignment ns1:trueNeutral .\n\nns1:TawilAtumr ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TaxidermicGrizzlyBear ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tazelwurm ns1:hasAlignment ns1:trueNeutral .\n\nns1:TchoTcho ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tearjerker ns1:hasAlignment ns1:trueNeutral .\n\nns1:TearofBurningFlame ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Telgrodradt ns1:hasAlignment ns1:neutralEvil .\n\nns1:Temerdaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:TempestBehemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:TemporalCrawler ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tendriculos ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tendrul ns1:hasAlignment ns1:trueNeutral .\n\nns1:TenebrousBlight ns1:hasAlignment ns1:trueNeutral .\n\nns1:TenebrousPurpleWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:TenebrousWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tengu ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tenome ns1:hasAlignment ns1:neutralEvil .\n\nns1:TentacledHorror ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tentamort ns1:hasAlignment ns1:trueNeutral .\n\nns1:TermagantKyton ns1:hasAlignment ns1:lawfulEvil .\n\nns1:TermiteSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:TerracottaArcher ns1:hasAlignment ns1:trueNeutral .\n\nns1:TerracottaHorseman ns1:hasAlignment ns1:trueNeutral .\n\nns1:TerracottaSoldier ns1:hasAlignment ns1:trueNeutral .\n\nns1:Terraformer ns1:hasAlignment ns1:trueNeutral .\n\nns1:TerrorBird ns1:hasAlignment ns1:trueNeutral .\n\nns1:TerrorWolf ns1:hasAlignment ns1:neutralEvil .\n\nns1:Terrorized ns1:hasAlignment ns1:neutralEvil .\n\nns1:TestudoTroops ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Tether ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Tetrolimulus ns1:hasAlignment ns1:neutralEvil .\n\nns1:ThalassicBehemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thanadaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:ThanatosFey ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ThanatoticTitan ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Thancrus ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Thawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheBlackRider ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:TheDesire ns1:hasAlignment ns1:neutralEvil .\n\nns1:TheEndSinger ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheFatherofAllLinnorms ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheFirebleeder ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheFirstBlade ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TheFuriesErinyes ns1:hasAlignment ns1:lawfulEvil .\n\nns1:TheGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:TheGrandDefender ns1:hasAlignment ns1:lawfulGood .\n\nns1:TheGrimWhiteStag ns1:hasAlignment ns1:lawfulGood .\n\nns1:TheHeraldofPassion ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TheHobblingHookClawedApparatus ns1:hasAlignment ns1:trueNeutral .\n\nns1:TheHornedLord ns1:hasAlignment ns1:chaoticGood .\n\nns1:TheInfernalDuke ns1:hasAlignment ns1:lawfulEvil .\n\nns1:TheMantisGod ns1:hasAlignment ns1:lawfulEvil .\n\nns1:TheOinodaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:TheOldMan ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ThePrinceinChains ns1:hasAlignment ns1:lawfulEvil .\n\nns1:ThePrinceofHell ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheRavagerCrawlerForm ns1:hasAlignment ns1:trueNeutral .\n\nns1:TheRedRider ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:TheScarecrow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheSpiritOfAdoration ns1:hasAlignment ns1:neutralGood .\n\nns1:TheStabbingBeast ns1:hasAlignment ns1:neutralEvil .\n\nns1:TheSunlord ns1:hasAlignment ns1:neutralGood .\n\nns1:TheThirdStageOuterSpawn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TheWaterLizard ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TheWhiteRider ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Theletos ns1:hasAlignment ns1:trueNeutral .\n\nns1:Therizinosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thessalgorgon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thessalhydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thessalisk ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThinMan ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Thognorok ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Thoqqua ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThornDog ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thorny ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThornyAdvancedTyrannosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThoughtEater ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThrallofYogSothoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Thrasfyr ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ThriaeConstructor ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThriaeDancer ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ThriaeQueen ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ThriaeSeer ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:ThriaeSoldier ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Thrush ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thulgant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ThunderBeast ns1:hasAlignment ns1:trueNeutral .\n\nns1:ThunderBehemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thunderbird ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thundershrike ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thuskchoon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Thylacine ns1:hasAlignment ns1:trueNeutral .\n\nns1:Thyrlien ns1:hasAlignment ns1:chaoticGood .\n\nns1:Tiberolith ns1:hasAlignment ns1:trueNeutral .\n\nns1:TickSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:TidepoolDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Tidewretch ns1:hasAlignment ns1:neutralEvil .\n\nns1:Tiger ns1:hasAlignment ns1:trueNeutral .\n\nns1:TigerFish ns1:hasAlignment ns1:trueNeutral .\n\nns1:TigerShark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tigrilla ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tikbalang ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tilket ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TimberWight ns1:hasAlignment ns1:lawfulEvil .\n\nns1:TimeFlayer ns1:hasAlignment ns1:neutralEvil .\n\nns1:Tintargurill ns1:hasAlignment ns1:trueNeutral .\n\nns1:TinyAnimatedObject ns1:hasAlignment ns1:trueNeutral .\n\nns1:TinyMonstrousSeaWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:TitanCentipedeExoskeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:Titanboar ns1:hasAlignment ns1:trueNeutral .\n\nns1:TitanicAdultBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TitanicWhipSpider ns1:hasAlignment ns1:trueNeutral .\n\nns1:Titanoboa ns1:hasAlignment ns1:trueNeutral .\n\nns1:Titivilus ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Tixitog ns1:hasAlignment ns1:neutralEvil .\n\nns1:Tiyanak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tizheruk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tlalusk ns1:hasAlignment ns1:trueNeutral .\n\nns1:Toad ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tobongo ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tojanida ns1:hasAlignment ns1:trueNeutral .\n\nns1:TombGiant ns1:hasAlignment ns1:neutralEvil .\n\nns1:TombstoneFairy ns1:hasAlignment ns1:neutralEvil .\n\nns1:TomeofHorrors ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tonberry ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ToothFairy ns1:hasAlignment ns1:chaoticEvil .\n\nns1:ToothFairyMonarch ns1:hasAlignment ns1:neutralEvil .\n\nns1:Tophet ns1:hasAlignment ns1:trueNeutral .\n\nns1:TorLinnorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TormentorofSoulsTormentorDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:TorturerRobot ns1:hasAlignment ns1:trueNeutral .\n\nns1:Toshigami ns1:hasAlignment ns1:neutralGood .\n\nns1:TotemGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Totenmaske ns1:hasAlignment ns1:neutralEvil .\n\nns1:Trailgaunt ns1:hasAlignment ns1:neutralEvil .\n\nns1:Transposer ns1:hasAlignment ns1:trueNeutral .\n\nns1:Trapper ns1:hasAlignment ns1:trueNeutral .\n\nns1:Treant ns1:hasAlignment ns1:neutralGood .\n\nns1:Trelmarixian ns1:hasAlignment ns1:neutralEvil .\n\nns1:TrenchMist ns1:hasAlignment ns1:neutralEvil .\n\nns1:TriFlowerFrond ns1:hasAlignment ns1:trueNeutral .\n\nns1:TriTongueHorror ns1:hasAlignment ns1:trueNeutral .\n\nns1:Triaxian ns1:hasAlignment ns1:trueNeutral .\n\nns1:TribalProtector ns1:hasAlignment ns1:neutralGood .\n\nns1:Triceratops ns1:hasAlignment ns1:trueNeutral .\n\nns1:Trilobite ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tripurasura ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Triton ns1:hasAlignment ns1:neutralGood .\n\nns1:Troblin ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Troggle ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TroggleRaider ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Troglodyte ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Troll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollAcolyte ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollBerserker ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollBrute ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollElderMatron ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollFury ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollMonarch ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollMountain ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TrollRender ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollRipper ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TrollSkeleton ns1:hasAlignment ns1:neutralEvil .\n\nns1:TrollWarden ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Trollhound ns1:hasAlignment ns1:trueNeutral .\n\nns1:Trollkin ns1:hasAlignment ns1:trueNeutral .\n\nns1:Troodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:Trox ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TrumpetArchon ns1:hasAlignment ns1:lawfulGood .\n\nns1:TrumpeterSwan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tsaalgrend ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tsathar ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TsatharScourge ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TsathoggaTheFrogGod ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tuatara ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tullimonstrum ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tumblespark ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tunche ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:TunnelBrute ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TunnelWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tupilaq ns1:hasAlignment ns1:trueNeutral .\n\nns1:Turtle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Turul ns1:hasAlignment ns1:trueNeutral .\n\nns1:Twigjack ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TwilightPitriBarhisad ns1:hasAlignment ns1:lawfulGood .\n\nns1:TwoHeadedTroll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:TwoheadedWinterWorg ns1:hasAlignment ns1:neutralEvil .\n\nns1:Tychilarius ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Tylosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tyngderkraften ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Tyrannosaurus ns1:hasAlignment ns1:trueNeutral .\n\nns1:TyrantJellyMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:Tzitzimitl ns1:hasAlignment ns1:neutralEvil .\n\nns1:UbashkiSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:Ubue ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:UdaeusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:UgashIram ns1:hasAlignment ns1:neutralEvil .\n\nns1:Uintatherium ns1:hasAlignment ns1:trueNeutral .\n\nns1:Uinuja ns1:hasAlignment ns1:chaoticGood .\n\nns1:Ujaheim ns1:hasAlignment ns1:trueNeutral .\n\nns1:Uldraaghu ns1:hasAlignment ns1:lawfulEvil .\n\nns1:UltharChampion ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:UltimaWeapon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:UmbralDragonGreatWyrm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonJuvenile ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonMatureAdult ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonOld ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonVeryOld ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonVeryYoung ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonWyrm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonWyrmling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralDragonYoungAdult ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralEyeKiller ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UmbralShepherd ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Umbralobe ns1:hasAlignment ns1:neutralEvil .\n\nns1:UnchosenGnoll ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UndeadEmu ns1:hasAlignment ns1:neutralEvil .\n\nns1:UndeadNingyo ns1:hasAlignment ns1:neutralEvil .\n\nns1:UndeadOoze ns1:hasAlignment ns1:neutralEvil .\n\nns1:UndeadWarlord ns1:hasAlignment ns1:trueNeutral .\n\nns1:UnderworldBatSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Undigested ns1:hasAlignment ns1:neutralEvil .\n\nns1:UndigestedSwarm ns1:hasAlignment ns1:neutralEvil .\n\nns1:Undine ns1:hasAlignment ns1:trueNeutral .\n\nns1:UnfetteredEidolon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:UnfetteredPhantom ns1:hasAlignment ns1:trueNeutral .\n\nns1:UnhallowedGreaterShadow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UnhallowedMohrg ns1:hasAlignment ns1:chaoticEvil .\n\nns1:UnhallowedMummy ns1:hasAlignment ns1:lawfulEvil .\n\nns1:UnhallowedZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Unicorn ns1:hasAlignment ns1:chaoticGood .\n\nns1:Uniila ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Unrisen ns1:hasAlignment ns1:neutralEvil .\n\nns1:UnseelieShadowMastiff ns1:hasAlignment ns1:neutralEvil .\n\nns1:Upasunda ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Uraeus ns1:hasAlignment ns1:lawfulGood .\n\nns1:Urannag ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Urdefhan ns1:hasAlignment ns1:neutralEvil .\n\nns1:Urhag ns1:hasAlignment ns1:neutralEvil .\n\nns1:Urrk ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ursikka ns1:hasAlignment ns1:trueNeutral .\n\nns1:Urskan ns1:hasAlignment ns1:trueNeutral .\n\nns1:Ushabti ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Utukku ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Valharut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Valkyrie ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Vamore ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Vampire ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VampireRose ns1:hasAlignment ns1:trueNeutral .\n\nns1:VampireSpawn ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VampireSquid ns1:hasAlignment ns1:trueNeutral .\n\nns1:VampiricMist ns1:hasAlignment ns1:neutralEvil .\n\nns1:VampiricOoze ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vanara ns1:hasAlignment ns1:lawfulGood .\n\nns1:Vanth ns1:hasAlignment ns1:trueNeutral .\n\nns1:VaporDireRat ns1:hasAlignment ns1:trueNeutral .\n\nns1:VaporWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vargouille ns1:hasAlignment ns1:neutralEvil .\n\nns1:VariantAllip ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VariantAtticWhisperer ns1:hasAlignment ns1:trueNeutral .\n\nns1:Varklops ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VaultBuilderMR ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:VaultGiant ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VaultKeeper ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Vavakia ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vayuphak ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Ved ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vegepygmy ns1:hasAlignment ns1:trueNeutral .\n\nns1:VegepygmyBodyguard ns1:hasAlignment ns1:trueNeutral .\n\nns1:VegepygmyChief ns1:hasAlignment ns1:trueNeutral .\n\nns1:VegepygmyCommoner ns1:hasAlignment ns1:trueNeutral .\n\nns1:VegepygmyGuard ns1:hasAlignment ns1:trueNeutral .\n\nns1:VegepygmySubchief ns1:hasAlignment ns1:trueNeutral .\n\nns1:VegepygmyWorker ns1:hasAlignment ns1:trueNeutral .\n\nns1:VeiledMaster ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Veinar ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Veldenar ns1:hasAlignment ns1:trueNeutral .\n\nns1:Velociraptor ns1:hasAlignment ns1:trueNeutral .\n\nns1:VelvetAntSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vemerak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vendenopterix ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Venedaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:VenomDemon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VenomousSnake ns1:hasAlignment ns1:trueNeutral .\n\nns1:VenomousSnakeSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Venomroach ns1:hasAlignment ns1:trueNeutral .\n\nns1:VeparDukeofDagon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Veranallia ns1:hasAlignment ns1:chaoticGood .\n\nns1:VeranalliaAzata ns1:hasAlignment ns1:chaoticGood .\n\nns1:VerdurousOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:VerminLord ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vermlek ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryOldBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryOldBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VeryOldCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:VeryOldGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VeryOldRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryOldRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:VeryOldSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:VeryOldSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:VeryOldWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryYoungBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryYoungBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VeryYoungForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryYoungGoldDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:VeryYoungGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VeryYoungRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryYoungRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:VeryYoungSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:VeryYoungSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:VeryYoungSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:VeryYoungUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VeryYoungWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryoldForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VeryoldSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:VescavorQueen ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vespergaunt ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vestraadi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Vidre ns1:hasAlignment ns1:trueNeutral .\n\nns1:ViduusPsychopomp ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vilderavn ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vilkacis ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vilsteth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vilstrak ns1:hasAlignment ns1:neutralEvil .\n\nns1:VioletFungus ns1:hasAlignment ns1:trueNeutral .\n\nns1:Viper ns1:hasAlignment ns1:trueNeutral .\n\nns1:ViperVine ns1:hasAlignment ns1:trueNeutral .\n\nns1:ViridiumGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vishap ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vishkanya ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vodyanoi ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:VoidYai ns1:hasAlignment ns1:lawfulEvil .\n\nns1:VoidZombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:VoidstickZombie ns1:hasAlignment ns1:chaoticEvil .\n\nns1:VolcanoGiant ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Volt ns1:hasAlignment ns1:trueNeutral .\n\nns1:VoltGhost ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Voltleech ns1:hasAlignment ns1:neutralEvil .\n\nns1:Voonith ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Vorgozen ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Vorin ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vorvorak ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vouivre ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vrock ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vrolikai ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vrykolakas ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vukodlak ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vulchling ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Vulnudaemon ns1:hasAlignment ns1:neutralEvil .\n\nns1:Vulpinal ns1:hasAlignment ns1:neutralGood .\n\nns1:Vulture ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vvor ns1:hasAlignment ns1:trueNeutral .\n\nns1:Vydrarch ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Wakandagi ns1:hasAlignment ns1:neutralGood .\n\nns1:Wallaby ns1:hasAlignment ns1:trueNeutral .\n\nns1:Walrus ns1:hasAlignment ns1:trueNeutral .\n\nns1:WandWasp ns1:hasAlignment ns1:trueNeutral .\n\nns1:WangLiang ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WarBringerGiant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WarBull ns1:hasAlignment ns1:trueNeutral .\n\nns1:WarPony ns1:hasAlignment ns1:trueNeutral .\n\nns1:Warcat ns1:hasAlignment ns1:trueNeutral .\n\nns1:WardenJackSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:WarmazeDisciplesTroop ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Warmonger ns1:hasAlignment ns1:trueNeutral .\n\nns1:WarmongerDevilLevaloch ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WarmongerWasp ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WarpedOne ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WarpglassOoze ns1:hasAlignment ns1:trueNeutral .\n\nns1:Warsworn ns1:hasAlignment ns1:neutralEvil .\n\nns1:WaspDemonMezzalorn ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WaspSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Waspite ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Watcher ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:WaterElementalConstruct ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaterLeaper ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WaterMephit ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaterOrm ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaterStriderSwarm ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaterVeela ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaterWeird ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WaterWraith ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WaterWysp ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaterYai ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Waterfiend ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WaxGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:WaxworkHuman ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wayang ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Weasel ns1:hasAlignment ns1:trueNeutral .\n\nns1:Weedwhip ns1:hasAlignment ns1:trueNeutral .\n\nns1:WellLurker ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wendigo ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WerebatHumanForm ns1:hasAlignment ns1:neutralEvil .\n\nns1:WereboarHumanForm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WerecrocodileHumanForm ns1:hasAlignment ns1:neutralEvil .\n\nns1:WeremantisHumanForm ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WereraptorHumanForm ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:WereraptorHybridForm ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:WereratHumanForm ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WeresharkHumanForm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WerespiderHumanForm ns1:hasAlignment ns1:neutralEvil .\n\nns1:WeretigerHumanForm ns1:hasAlignment ns1:neutralEvil .\n\nns1:WerewaspElfForm ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WerewolfHumanFormCR ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Whale ns1:hasAlignment ns1:trueNeutral .\n\nns1:WhalerJellyfish ns1:hasAlignment ns1:trueNeutral .\n\nns1:WhipJelly ns1:hasAlignment ns1:trueNeutral .\n\nns1:WhiptailDevil ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Whirlmaw ns1:hasAlignment ns1:trueNeutral .\n\nns1:WhisperVulture ns1:hasAlignment ns1:trueNeutral .\n\nns1:Whisperer ns1:hasAlignment ns1:neutralEvil .\n\nns1:WhisperscaleHunter ns1:hasAlignment ns1:neutralEvil .\n\nns1:WhitePudding ns1:hasAlignment ns1:trueNeutral .\n\nns1:Whyrlish ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wickerman ns1:hasAlignment ns1:trueNeutral .\n\nns1:WidowCreeper ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wight ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WightAdultRedDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WightMinotaur ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WightMonk ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Wihsaak ns1:hasAlignment ns1:neutralEvil .\n\nns1:Wikkawak ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WildDreamImpCompanion ns1:hasAlignment ns1:neutralGood .\n\nns1:WildDreamImpHero ns1:hasAlignment ns1:neutralGood .\n\nns1:WildHuntArcher ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WildHuntHorse ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WildHuntHound ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WildHuntMonarch ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WildHuntScout ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WilloWisp ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WillowDusk ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WindWalker ns1:hasAlignment ns1:trueNeutral .\n\nns1:WindWalkerWendigo ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WindYai ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Winterwight ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Wisagatcak ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WitchDollGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:WitchTree ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Witchcrow ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Witchfire ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Witherstench ns1:hasAlignment ns1:trueNeutral .\n\nns1:Witherweed ns1:hasAlignment ns1:trueNeutral .\n\nns1:WizardsShackle ns1:hasAlignment ns1:trueNeutral .\n\nns1:Woghemoth ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wolf ns1:hasAlignment ns1:trueNeutral .\n\nns1:WolfInSheepsClothing ns1:hasAlignment ns1:trueNeutral .\n\nns1:WolfSpider ns1:hasAlignment ns1:neutralEvil .\n\nns1:WolfinSheepsClothing ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wolliped ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wolpertinger ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wolverine ns1:hasAlignment ns1:trueNeutral .\n\nns1:WoodColossusMR ns1:hasAlignment ns1:trueNeutral .\n\nns1:WoodGiant ns1:hasAlignment ns1:chaoticGood .\n\nns1:WoodGolem ns1:hasAlignment ns1:trueNeutral .\n\nns1:Woodwose ns1:hasAlignment ns1:neutralEvil .\n\nns1:WoollyRhinoceros ns1:hasAlignment ns1:trueNeutral .\n\nns1:Worg ns1:hasAlignment ns1:neutralEvil .\n\nns1:WorkWraith ns1:hasAlignment ns1:neutralEvil .\n\nns1:WorkerThermite ns1:hasAlignment ns1:trueNeutral .\n\nns1:WorldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WormThatWalksHuman ns1:hasAlignment ns1:neutralEvil .\n\nns1:WormthatWalksLocustVariant ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Woundwyrm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Wrackworm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Wraith ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WrathBeetle ns1:hasAlignment ns1:trueNeutral .\n\nns1:WrathDragonDracoSanctusBenevolentia ns1:hasAlignment ns1:neutralGood .\n\nns1:WrathplatedClockworkMage ns1:hasAlignment ns1:trueNeutral .\n\nns1:WyrmBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WyrmForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WyrmRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WyrmSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:WyrmSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:WyrmWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmlingBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmlingBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WyrmlingForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmlingGoldDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:WyrmlingGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WyrmlingRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:WyrmlingRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:WyrmlingSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:WyrmlingSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:WyrmlingSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:WyrmlingUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:WyrmlingWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Wyrmwraith ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Wyrwood ns1:hasAlignment ns1:trueNeutral .\n\nns1:Wyvaran ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Wyvern ns1:hasAlignment ns1:trueNeutral .\n\nns1:Xacarba ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Xanthos ns1:hasAlignment ns1:trueNeutral .\n\nns1:Xaphan ns1:hasAlignment ns1:lawfulEvil .\n\nns1:XenarthIchorShark ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Xenopterid ns1:hasAlignment ns1:trueNeutral .\n\nns1:Xiao ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Xill ns1:hasAlignment ns1:lawfulEvil .\n\nns1:XillMatriarch ns1:hasAlignment ns1:lawfulEvil .\n\nns1:XillixLesserNelbarzoth ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ximtal ns1:hasAlignment ns1:neutralEvil .\n\nns1:XiuhCouatl ns1:hasAlignment ns1:neutralGood .\n\nns1:Xocothian ns1:hasAlignment ns1:trueNeutral .\n\nns1:Xocouatl ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Xorn ns1:hasAlignment ns1:trueNeutral .\n\nns1:Xtabay ns1:hasAlignment ns1:trueNeutral .\n\nns1:Xulgath ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Yaddithian ns1:hasAlignment ns1:trueNeutral .\n\nns1:Yaenit ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YamabushiTengu ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Yamah ns1:hasAlignment ns1:chaoticGood .\n\nns1:Yamaraj ns1:hasAlignment ns1:trueNeutral .\n\nns1:Yangethe ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Yaoguai ns1:hasAlignment ns1:trueNeutral .\n\nns1:Yarthoon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:YellowMuskCreeper ns1:hasAlignment ns1:trueNeutral .\n\nns1:YellowMuskZombie ns1:hasAlignment ns1:trueNeutral .\n\nns1:YethHound ns1:hasAlignment ns1:neutralEvil .\n\nns1:Yeti ns1:hasAlignment ns1:trueNeutral .\n\nns1:Yhohm ns1:hasAlignment ns1:neutralGood .\n\nns1:Yig ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Yithian ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:YithianElder ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Ymir ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Yothga ns1:hasAlignment ns1:neutralEvil .\n\nns1:YoungAdultBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungAdultBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:YoungAdultGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:YoungAdultRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungAdultRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:YoungAdultSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:YoungAdultSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:YoungAdultSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungAdultWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungApocalypseDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:YoungAstralDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungBlackDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungBlissDragon ns1:hasAlignment ns1:neutralGood .\n\nns1:YoungBlueDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:YoungBrassDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:YoungCaveDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:YoungCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungCopperDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:YoungCrystalDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:YoungDreamDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungEdictDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:YoungEthericDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungGoldDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:YoungGreenDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:YoungLunarDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:YoungMagmaDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:YoungMistDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungNightmareDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:YoungOccultDragon ns1:hasAlignment ns1:neutralGood .\n\nns1:YoungRedDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungRiverDragon ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:YoungSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:YoungSilverDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:YoungSkyDragon ns1:hasAlignment ns1:lawfulGood .\n\nns1:YoungSolarDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:YoungSovereignDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungTimeDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:YoungUmbralDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:YoungVoidDragon ns1:hasAlignment ns1:neutralEvil .\n\nns1:YoungVortexDragon ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:YoungWhiteDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:YoungadultForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Ypotryll ns1:hasAlignment ns1:trueNeutral .\n\nns1:Yrthak ns1:hasAlignment ns1:trueNeutral .\n\nns1:Yukionna ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Yurei ns1:hasAlignment ns1:neutralEvil .\n\nns1:Zalyakavat ns1:hasAlignment ns1:lawfulEvil .\n\nns1:Zaramuun ns1:hasAlignment ns1:chaoticEvil .\n\nns1:Zarxorin ns1:hasAlignment ns1:trueNeutral .\n\nns1:ZealotWraith ns1:hasAlignment ns1:neutralEvil .\n\nns1:Zelekhut ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:Zentragt ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Zeuglodon ns1:hasAlignment ns1:trueNeutral .\n\nns1:ZhenWorm ns1:hasAlignment ns1:trueNeutral .\n\nns1:Zhyen ns1:hasAlignment ns1:trueNeutral .\n\nns1:Zohanil ns1:hasAlignment ns1:neutralEvil .\n\nns1:Zolavoi ns1:hasAlignment ns1:trueNeutral .\n\nns1:Zombie ns1:hasAlignment ns1:neutralEvil .\n\nns1:ZombieHandservant ns1:hasAlignment ns1:neutralEvil .\n\nns1:ZombieHillGiant ns1:hasAlignment ns1:neutralEvil .\n\nns1:ZombieHorde ns1:hasAlignment ns1:neutralEvil .\n\nns1:ZombieWolf ns1:hasAlignment ns1:neutralEvil .\n\nns1:Zomok ns1:hasAlignment ns1:trueNeutral .\n\nns1:Zoog ns1:hasAlignment ns1:chaoticNeutral .\n\nns1:Zuishin ns1:hasAlignment ns1:lawfulGood .\n\nns1:Zuvembie ns1:hasAlignment ns1:neutralEvil .\n\nns1:Zvucni ns1:hasAlignment ns1:neutralGood .\n\nns1:Zwerc ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:aasimar ns1:hasAlignment ns1:neutralGood .\n\nns1:caypup ns1:hasAlignment ns1:chaoticGood .\n\nns1:earthElementalHero ns1:hasAlignment ns1:trueNeutral .\n\nns1:greatwyrmSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:hangedman ns1:hasAlignment ns1:chaoticEvil .\n\nns1:headedPyrohydra ns1:hasAlignment ns1:trueNeutral .\n\nns1:helixmothmature ns1:hasAlignment ns1:trueNeutral .\n\nns1:heraldoftsathogga ns1:hasAlignment ns1:chaoticEvil .\n\nns1:hoarfox ns1:hasAlignment ns1:trueNeutral .\n\nns1:juvenileCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:oldForestDragon ns1:hasAlignment ns1:chaoticEvil .\n\nns1:oldUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:oldclouddragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:theFirebleeder ns1:hasAlignment ns1:chaoticEvil .\n\nns1:theMonarchWorm ns1:hasAlignment ns1:chaoticEvil .\n\nns1:veryYoungCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:veryoldUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:witchwyrd ns1:hasAlignment ns1:lawfulNeutral .\n\nns1:wyrmSeaDragon ns1:hasAlignment ns1:chaoticGood .\n\nns1:wyrmUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\nns1:wyrmclouddragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:wyrmlingCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:youngAdultCloudDragon ns1:hasAlignment ns1:trueNeutral .\n\nns1:youngadultUnderworldDragon ns1:hasAlignment ns1:lawfulEvil .\n\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "subgraph",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:03.966712",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:50:15.153511",
        "Please generate a SPARQL query for the given RDF graph and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what is the most common alignment type\n\ngraph:\n```turtle\nl...```"
      ],
      [
        "response",
        "2024-05-13T13:50:19.120214",
        "```sparql\nSELECT ?alignment (COUNT(?alignment) AS ?count)\nWHERE {\n  ?character ns1:hasAlignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:50:29.345137",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubgraph",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 703,
      "actualSize": 682
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary019",
        "sparql": "PREFIX ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#>\n\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+PREFIX ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#>\n+\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ns1:cold .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:aasimar"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary019",
        "sparql": "PREFIX ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#>\n\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+PREFIX ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#>\n+\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ns1:cold .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:aasimar"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary019",
      "question": "what creatures do have cold resist",
      "refSparql": "SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }",
      "refResultSet": [
        "ns1:aasimar"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:aasimar ns1:hasResists ns1:cold .\n\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "subgraph",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:05.437184",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:50:29.345144",
        "Please generate a SPARQL query for the given RDF graph and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what creatures do have cold resist\n\ngraph:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n\nns1:aasimar ns1:hasResists ns1:cold .\n\n```"
      ],
      [
        "response",
        "2024-05-13T13:50:34.782321",
        "```sparql\nPREFIX ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#>\n\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:50:46.388017",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSchema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 7821,
      "actualSize": 8353
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n           ns1:hasAlignment ns1:ChaoticGood ;\n           ns1:hasLanguages ?language .\n  FILTER NOT EXISTS {\n    ?language ns1:spokenBy ns1:DraconicLanguage .\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,9 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature a ns1:Beast ;\n+           ns1:hasAlignment ns1:ChaoticGood ;\n+           ns1:hasLanguages ?language .\n+  FILTER NOT EXISTS {\n+    ?language ns1:spokenBy ns1:DraconicLanguage .\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.2857142857142857,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.36363636363636365,
        "sparqlIrisSuffixPrecision": 0.2857142857142857,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.36363636363636365,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n           ns1:hasAlignment ns1:ChaoticGood .\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages/ns1:spokenBy ns1:DraconicLanguage .\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature a ns1:Beast ;\n+           ns1:hasAlignment ns1:ChaoticGood .\n+  FILTER NOT EXISTS {\n+    ?creature ns1:hasLanguages/ns1:spokenBy ns1:DraconicLanguage .\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.2857142857142857,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.36363636363636365,
        "sparqlIrisSuffixPrecision": 0.2857142857142857,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.36363636363636365,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n           ns1:hasAlignment ns1:ChaoticGood .\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages ?language .\n    ?language ns1:spokenBy ns1:DraconicLanguage .\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,9 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature a ns1:Beast ;\n+           ns1:hasAlignment ns1:ChaoticGood .\n+  FILTER NOT EXISTS {\n+    ?creature ns1:hasLanguages ?language .\n+    ?language ns1:spokenBy ns1:DraconicLanguage .\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.2857142857142857,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.36363636363636365,
        "sparqlIrisSuffixPrecision": 0.2857142857142857,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.36363636363636365,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n           ns1:hasAlignment ns1:ChaoticGood .\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages ?language .\n    ?language ns1:spokenBy ns1:DraconicLanguage .\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,9 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature a ns1:Beast ;\n+           ns1:hasAlignment ns1:ChaoticGood .\n+  FILTER NOT EXISTS {\n+    ?creature ns1:hasLanguages ?language .\n+    ?language ns1:spokenBy ns1:DraconicLanguage .\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.2857142857142857,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.36363636363636365,
        "sparqlIrisSuffixPrecision": 0.2857142857142857,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.36363636363636365,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary001",
      "question": "which creatures not speaking draconic language do have chaotic good alignment",
      "refSparql": "SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }",
      "refResultSet": [
        "ns1:Anhana",
        "ns1:Ataxian",
        "ns1:Azruverda",
        "ns1:BattleImp",
        "ns1:Biofreezer",
        "ns1:BlackButterfly",
        "ns1:Cayhound",
        "ns1:Caypup",
        "ns1:Celedeen",
        "ns1:Cynosoma",
        "ns1:Djinni",
        "ns1:Domovoi",
        "ns1:Dryad",
        "ns1:ElysianTitan",
        "ns1:Faun",
        "ns1:FungalNymph",
        "ns1:Gancanagh",
        "ns1:Garuda",
        "ns1:Hamadryad",
        "ns1:HeraldofDreams",
        "ns1:Munavri",
        "ns1:Muse",
        "ns1:Nisid",
        "ns1:NobleDjinniVizier",
        "ns1:Nymph",
        "ns1:RiftFlumph",
        "ns1:RimefireEidolon",
        "ns1:SapphireOoze",
        "ns1:SkirmishersTroop",
        "ns1:StarMonarch",
        "ns1:SwanMaiden",
        "ns1:Taniwha",
        "ns1:Unicorn",
        "ns1:WoodGiant",
        "ns1:caypup"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "schema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:06.052815",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:50:46.388024",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:which creatures not speaking draconic language do have chaotic good alignment\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\nns1:ChaoticBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:EvilBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Familiar a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:GoodBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Healer a owl:Class ;\n    rdfs:subClassOf ns1:Caster .\n\nns1:LawfulBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:NeutralBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Spells a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:atk a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:canMelee a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canRanged a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:cha a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:cmb a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:cmd a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:con a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:dex a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:hasACValue a owl:AnnotationProperty .\n\nns1:hasACvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasCRValue a owl:AnnotationProperty .\n\nns1:hasCRvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:float .\n\nns1:hasEnvironment a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Environment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFeats a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Feats ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFlatFootedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasFortValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPvalue a owl:AnnotationProperty .\n\nns1:hasInitValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLevel a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasOrganization a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Organization ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasRefValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpecAbils a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:SpecialAbilities ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpeedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:hasTouchValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasTreasure a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Treasure ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasWillValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasXPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger .\n\nns1:int a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:spokenBy a owl:ObjectProperty ;\n    rdfs:domain ns1:Language ;\n    rdfs:range ns1:Beast .\n\nns1:str a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:wis a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:Alignment a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Caster a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Defence a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Environment a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Feats a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Organization a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Resists a owl:Class ;\n    rdfs:subClassOf ns1:Defence .\n\nns1:SpecialAbilities a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:Treasure a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Language a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Offense a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Ecology a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:base a owl:DatatypeProperty .\n\nns1:offValues a owl:DatatypeProperty .\n\nns1:statistics a owl:DatatypeProperty .\n\nns1:defValues a owl:DatatypeProperty .\n\nns1:beastProps a owl:ObjectProperty .\n\nns1:Beast a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\n```"
      ],
      [
        "response",
        "2024-05-13T13:50:48.891719",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n           ns1:hasAlignment ns1:ChaoticGood ;\n           ns1:hasLanguages ?language .\n  FILTER NOT EXISTS {\n    ?language ns1:spokenBy ns1:DraconicLanguage .\n  }\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T13:50:48.923193",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T13:50:50.544322",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n           ns1:hasAlignment ns1:ChaoticGood .\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages/ns1:spokenBy ns1:DraconicLanguage .\n  }\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T13:50:50.576675",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T13:50:52.440832",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n           ns1:hasAlignment ns1:ChaoticGood .\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages ?language .\n    ?language ns1:spokenBy ns1:DraconicLanguage .\n  }\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:51:02.029312",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSchema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 8153,
      "actualSize": 7745
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 0.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 0.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) as ?count)\nWHERE {\n    ?creature a ns1:Beast ;\n              ns1:hasAlignment ?alignment .\n    ?alignment rdfs:subClassOf ns1:Alignment ;\n              ns1:spokenBy ns1:TreantLanguage .\n    FILTER(?alignment != ns1:NeutralAlignment)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) as ?count)\n+WHERE {\n+    ?creature a ns1:Beast ;\n+              ns1:hasAlignment ?alignment .\n+    ?alignment rdfs:subClassOf ns1:Alignment ;\n+              ns1:spokenBy ns1:TreantLanguage .\n+    FILTER(?alignment != ns1:NeutralAlignment)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.125,
        "sparqlIrisRecall": 0.16666666666666666,
        "sparqlIrisF1measure": 0.14285714285714288,
        "sparqlIrisSuffixPrecision": 0.125,
        "sparqlIrisSuffixRecall": 0.16666666666666666,
        "sparqlIrisSuffixF1measure": 0.14285714285714288,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "0"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) as ?count)\nWHERE {\n    ?creature a ns1:Beast ;\n              ns1:hasAlignment ?alignment .\n    ?alignment rdfs:subClassOf ns1:Alignment ;\n              ns1:spokenBy ns1:TreantLanguage .\n    FILTER(?alignment != ns1:NeutralAlignment)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) as ?count)\n+WHERE {\n+    ?creature a ns1:Beast ;\n+              ns1:hasAlignment ?alignment .\n+    ?alignment rdfs:subClassOf ns1:Alignment ;\n+              ns1:spokenBy ns1:TreantLanguage .\n+    FILTER(?alignment != ns1:NeutralAlignment)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.125,
        "sparqlIrisRecall": 0.16666666666666666,
        "sparqlIrisF1measure": 0.14285714285714288,
        "sparqlIrisSuffixPrecision": 0.125,
        "sparqlIrisSuffixRecall": 0.16666666666666666,
        "sparqlIrisSuffixF1measure": 0.14285714285714288,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "0"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary005",
      "question": "how many creatures with non-neutral alignment do speak treant language",
      "refSparql": "SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }",
      "refResultSet": [
        "4"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "schema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:02.810966",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:51:02.029319",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:how many creatures with non-neutral alignment do speak treant language\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\nns1:ChaoticBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:EvilBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Familiar a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:GoodBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Healer a owl:Class ;\n    rdfs:subClassOf ns1:Caster .\n\nns1:LawfulBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:NeutralBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Spells a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:atk a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:canMelee a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canRanged a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:cha a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:cmb a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:cmd a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:con a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:dex a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:hasACValue a owl:AnnotationProperty .\n\nns1:hasACvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasCRValue a owl:AnnotationProperty .\n\nns1:hasCRvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:float .\n\nns1:hasEnvironment a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Environment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFeats a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Feats ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFlatFootedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasFortValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPvalue a owl:AnnotationProperty .\n\nns1:hasInitValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLevel a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasOrganization a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Organization ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasRefValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpecAbils a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:SpecialAbilities ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpeedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:hasTouchValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasTreasure a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Treasure ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasWillValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasXPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger .\n\nns1:int a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:spokenBy a owl:ObjectProperty ;\n    rdfs:domain ns1:Language ;\n    rdfs:range ns1:Beast .\n\nns1:str a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:wis a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:Alignment a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Caster a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Defence a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Environment a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Feats a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Organization a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Resists a owl:Class ;\n    rdfs:subClassOf ns1:Defence .\n\nns1:SpecialAbilities a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:Treasure a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Language a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Offense a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Ecology a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:base a owl:DatatypeProperty .\n\nns1:offValues a owl:DatatypeProperty .\n\nns1:statistics a owl:DatatypeProperty .\n\nns1:defValues a owl:DatatypeProperty .\n\nns1:beastProps a owl:ObjectProperty .\n\nns1:Beast a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\n```"
      ],
      [
        "response",
        "2024-05-13T13:51:04.840278",
        "```sparql\nSELECT (COUNT(?creature) as ?count)\nWHERE {\n    ?creature a ns1:Beast ;\n              ns1:hasAlignment ?alignment .\n    ?alignment rdfs:subClassOf ns1:Alignment ;\n              ns1:spokenBy ns1:TreantLanguage .\n    FILTER(?alignment != ns1:NeutralAlignment)\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:51:15.353957",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSchema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 7770,
      "actualSize": 7550
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.34545454545454546,
        "f1measure": 0.18181818181818182,
        "precision": 0.1,
        "recall": 1.0
      },
      "mean": {
        "combined": 0.34545454545454546,
        "f1measure": 0.18181818181818182,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.34545454545454546,
        "f1measure": 0.18181818181818182,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.34545454545454546,
        "f1measure": 0.1818181818181818,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.34545454545454546,
        "f1measure": 0.18181818181818182,
        "precision": 0.1,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ?aasimar ns1:canSpell ?spell.\n  ?caypup ns1:canSpell ?spell.\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ?aasimar ns1:canSpell ?spell.\n+  ?caypup ns1:canSpell ?spell.\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.5,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.5,
        "answerResultLength": 13,
        "answerSetSize": 10,
        "answerSet": [
          "ns1:bless",
          "ns1:command",
          "ns1:daylight",
          "ns1:detectMagic",
          "ns1:dimensionDoor",
          "ns1:guidance",
          "ns1:knock",
          "ns1:openClose",
          "ns1:protectionFromEvil",
          "ns1:stabilize"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ?aasimar ns1:canSpell ?spell.\n  ?caypup ns1:canSpell ?spell.\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ?aasimar ns1:canSpell ?spell.\n+  ?caypup ns1:canSpell ?spell.\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.5,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.5,
        "answerResultLength": 13,
        "answerSetSize": 10,
        "answerSet": [
          "ns1:bless",
          "ns1:command",
          "ns1:daylight",
          "ns1:detectMagic",
          "ns1:dimensionDoor",
          "ns1:guidance",
          "ns1:knock",
          "ns1:openClose",
          "ns1:protectionFromEvil",
          "ns1:stabilize"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary007",
      "question": "what spells Aasimar and Caypup do have in common",
      "refSparql": "SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }",
      "refResultSet": [
        "ns1:stabilize"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "schema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:01.817744",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:51:15.353964",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what spells Aasimar and Caypup do have in common\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\nns1:ChaoticBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:EvilBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Familiar a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:GoodBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Healer a owl:Class ;\n    rdfs:subClassOf ns1:Caster .\n\nns1:LawfulBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:NeutralBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Spells a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:atk a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:canMelee a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canRanged a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:cha a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:cmb a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:cmd a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:con a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:dex a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:hasACValue a owl:AnnotationProperty .\n\nns1:hasACvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasCRValue a owl:AnnotationProperty .\n\nns1:hasCRvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:float .\n\nns1:hasEnvironment a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Environment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFeats a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Feats ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFlatFootedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasFortValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPvalue a owl:AnnotationProperty .\n\nns1:hasInitValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLevel a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasOrganization a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Organization ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasRefValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpecAbils a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:SpecialAbilities ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpeedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:hasTouchValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasTreasure a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Treasure ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasWillValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasXPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger .\n\nns1:int a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:spokenBy a owl:ObjectProperty ;\n    rdfs:domain ns1:Language ;\n    rdfs:range ns1:Beast .\n\nns1:str a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:wis a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:Alignment a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Caster a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Defence a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Environment a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Feats a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Organization a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Resists a owl:Class ;\n    rdfs:subClassOf ns1:Defence .\n\nns1:SpecialAbilities a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:Treasure a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Language a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Offense a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Ecology a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:base a owl:DatatypeProperty .\n\nns1:offValues a owl:DatatypeProperty .\n\nns1:statistics a owl:DatatypeProperty .\n\nns1:defValues a owl:DatatypeProperty .\n\nns1:beastProps a owl:ObjectProperty .\n\nns1:Beast a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\n```"
      ],
      [
        "response",
        "2024-05-13T13:51:17.171701",
        "```sparql\nSELECT ?spell\nWHERE {\n  ?aasimar ns1:canSpell ?spell.\n  ?caypup ns1:canSpell ?spell.\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:51:27.793897",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSchema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 7601,
      "actualSize": 7616
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "precision": 0.5,
        "recall": 1.0
      },
      "mean": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "precision": 0.5,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignmentType (COUNT(?alignmentType) as ?count)\nWHERE {\n  ?beast ns1:hasAlignment ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignmentType (COUNT(?alignmentType) as ?count)\n+WHERE {\n+  ?beast ns1:hasAlignment ?alignmentType .\n+}\n+GROUP BY ?alignmentType\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 2,
        "answerSet": [
          "1762",
          "ns1:trueNeutral"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignmentType (COUNT(?alignmentType) as ?count)\nWHERE {\n  ?beast ns1:hasAlignment ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignmentType (COUNT(?alignmentType) as ?count)\n+WHERE {\n+  ?beast ns1:hasAlignment ?alignmentType .\n+}\n+GROUP BY ?alignmentType\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 2,
        "answerSet": [
          "1762",
          "ns1:trueNeutral"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary011",
      "question": "what is the most common alignment type",
      "refSparql": "SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1",
      "refResultSet": [
        "ns1:trueNeutral"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "schema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:02.093474",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:51:27.793904",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what is the most common alignment type\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\nns1:ChaoticBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:EvilBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Familiar a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:GoodBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Healer a owl:Class ;\n    rdfs:subClassOf ns1:Caster .\n\nns1:LawfulBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:NeutralBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Spells a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:atk a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:canMelee a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canRanged a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:cha a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:cmb a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:cmd a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:con a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:dex a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:hasACValue a owl:AnnotationProperty .\n\nns1:hasACvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasCRValue a owl:AnnotationProperty .\n\nns1:hasCRvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:float .\n\nns1:hasEnvironment a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Environment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFeats a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Feats ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFlatFootedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasFortValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPvalue a owl:AnnotationProperty .\n\nns1:hasInitValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLevel a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasOrganization a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Organization ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasRefValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpecAbils a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:SpecialAbilities ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpeedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:hasTouchValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasTreasure a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Treasure ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasWillValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasXPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger .\n\nns1:int a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:spokenBy a owl:ObjectProperty ;\n    rdfs:domain ns1:Language ;\n    rdfs:range ns1:Beast .\n\nns1:str a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:wis a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:Alignment a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Caster a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Defence a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Environment a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Feats a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Organization a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Resists a owl:Class ;\n    rdfs:subClassOf ns1:Defence .\n\nns1:SpecialAbilities a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:Treasure a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Language a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Offense a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Ecology a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:base a owl:DatatypeProperty .\n\nns1:offValues a owl:DatatypeProperty .\n\nns1:statistics a owl:DatatypeProperty .\n\nns1:defValues a owl:DatatypeProperty .\n\nns1:beastProps a owl:ObjectProperty .\n\nns1:Beast a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\n```"
      ],
      [
        "response",
        "2024-05-13T13:51:29.887371",
        "```sparql\nSELECT ?alignmentType (COUNT(?alignmentType) as ?count)\nWHERE {\n  ?beast ns1:hasAlignment ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:51:40.197713",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSchema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 7611,
      "actualSize": 7964
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n    ?creature ns1:hasResists ns1:ColdResist .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,4 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+    ?creature ns1:hasResists ns1:ColdResist .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.5,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.5,
        "sparqlIrisSuffixPrecision": 0.5,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.5,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n    ?creature a ns1:Beast ;\n              ns1:hasResists ns1:ColdResist .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+    ?creature a ns1:Beast ;\n+              ns1:hasResists ns1:ColdResist .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.25,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.25,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n    ?creature a ns1:Beast ;\n              ns1:hasResists ns1:ColdResistance .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+    ?creature a ns1:Beast ;\n+              ns1:hasResists ns1:ColdResistance .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.25,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.25,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n    ?creature a ns1:Beast ;\n              ns1:hasResists ns1:ColdResistance .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+    ?creature a ns1:Beast ;\n+              ns1:hasResists ns1:ColdResistance .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.25,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.25,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary019",
      "question": "what creatures do have cold resist",
      "refSparql": "SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }",
      "refResultSet": [
        "ns1:aasimar"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "schema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:04.329843",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:51:40.197721",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what creatures do have cold resist\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\nns1:ChaoticBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:EvilBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Familiar a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:GoodBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Healer a owl:Class ;\n    rdfs:subClassOf ns1:Caster .\n\nns1:LawfulBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:NeutralBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Spells a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:atk a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:canMelee a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canRanged a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:cha a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:cmb a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:cmd a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:con a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:dex a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:hasACValue a owl:AnnotationProperty .\n\nns1:hasACvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasCRValue a owl:AnnotationProperty .\n\nns1:hasCRvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:float .\n\nns1:hasEnvironment a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Environment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFeats a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Feats ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFlatFootedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasFortValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPvalue a owl:AnnotationProperty .\n\nns1:hasInitValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLevel a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasOrganization a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Organization ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasRefValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpecAbils a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:SpecialAbilities ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpeedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:hasTouchValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasTreasure a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Treasure ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasWillValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasXPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger .\n\nns1:int a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:spokenBy a owl:ObjectProperty ;\n    rdfs:domain ns1:Language ;\n    rdfs:range ns1:Beast .\n\nns1:str a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:wis a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:Alignment a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Caster a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Defence a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Environment a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Feats a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Organization a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Resists a owl:Class ;\n    rdfs:subClassOf ns1:Defence .\n\nns1:SpecialAbilities a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:Treasure a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Language a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Offense a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Ecology a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:base a owl:DatatypeProperty .\n\nns1:offValues a owl:DatatypeProperty .\n\nns1:statistics a owl:DatatypeProperty .\n\nns1:defValues a owl:DatatypeProperty .\n\nns1:beastProps a owl:ObjectProperty .\n\nns1:Beast a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\n```"
      ],
      [
        "response",
        "2024-05-13T13:51:41.939203",
        "```sparql\nSELECT ?creature\nWHERE {\n    ?creature ns1:hasResists ns1:ColdResist .\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T13:51:41.949754",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T13:51:43.294821",
        "```sparql\nSELECT ?creature\nWHERE {\n    ?creature a ns1:Beast ;\n              ns1:hasResists ns1:ColdResist .\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T13:51:43.312805",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T13:51:44.527556",
        "```sparql\nSELECT ?creature\nWHERE {\n    ?creature a ns1:Beast ;\n              ns1:hasResists ns1:ColdResistance .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:51:54.394594",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSchema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 7821,
      "actualSize": 8239
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n           ns1:hasAlignment ns1:ChaoticGood ;\n           FILTER NOT EXISTS { ?creature ns1:hasLanguages ns1:Draconic }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature a ns1:Beast ;\n+           ns1:hasAlignment ns1:ChaoticGood ;\n+           FILTER NOT EXISTS { ?creature ns1:hasLanguages ns1:Draconic }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.4,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.4,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n           ns1:hasAlignment ns1:ChaoticGood .\n  MINUS {\n    ?creature ns1:hasLanguages ns1:Draconic\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature a ns1:Beast ;\n+           ns1:hasAlignment ns1:ChaoticGood .\n+  MINUS {\n+    ?creature ns1:hasLanguages ns1:Draconic\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.4,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.4,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n           ns1:hasAlignment ns1:ChaoticGood .\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages/ns1:spokenBy ns1:Draconic\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature a ns1:Beast ;\n+           ns1:hasAlignment ns1:ChaoticGood .\n+  FILTER NOT EXISTS {\n+    ?creature ns1:hasLanguages/ns1:spokenBy ns1:Draconic\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.2857142857142857,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.36363636363636365,
        "sparqlIrisSuffixPrecision": 0.2857142857142857,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.36363636363636365,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n           ns1:hasAlignment ns1:ChaoticGood .\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages/ns1:spokenBy ns1:Draconic\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature a ns1:Beast ;\n+           ns1:hasAlignment ns1:ChaoticGood .\n+  FILTER NOT EXISTS {\n+    ?creature ns1:hasLanguages/ns1:spokenBy ns1:Draconic\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.2857142857142857,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.36363636363636365,
        "sparqlIrisSuffixPrecision": 0.2857142857142857,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.36363636363636365,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary001",
      "question": "which creatures not speaking draconic language do have chaotic good alignment",
      "refSparql": "SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }",
      "refResultSet": [
        "ns1:Anhana",
        "ns1:Ataxian",
        "ns1:Azruverda",
        "ns1:BattleImp",
        "ns1:Biofreezer",
        "ns1:BlackButterfly",
        "ns1:Cayhound",
        "ns1:Caypup",
        "ns1:Celedeen",
        "ns1:Cynosoma",
        "ns1:Djinni",
        "ns1:Domovoi",
        "ns1:Dryad",
        "ns1:ElysianTitan",
        "ns1:Faun",
        "ns1:FungalNymph",
        "ns1:Gancanagh",
        "ns1:Garuda",
        "ns1:Hamadryad",
        "ns1:HeraldofDreams",
        "ns1:Munavri",
        "ns1:Muse",
        "ns1:Nisid",
        "ns1:NobleDjinniVizier",
        "ns1:Nymph",
        "ns1:RiftFlumph",
        "ns1:RimefireEidolon",
        "ns1:SapphireOoze",
        "ns1:SkirmishersTroop",
        "ns1:StarMonarch",
        "ns1:SwanMaiden",
        "ns1:Taniwha",
        "ns1:Unicorn",
        "ns1:WoodGiant",
        "ns1:caypup"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "schema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:05.478890",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:51:54.394602",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:which creatures not speaking draconic language do have chaotic good alignment\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\nns1:ChaoticBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:EvilBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Familiar a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:GoodBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Healer a owl:Class ;\n    rdfs:subClassOf ns1:Caster .\n\nns1:LawfulBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:NeutralBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Spells a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:atk a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:canMelee a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canRanged a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:cha a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:cmb a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:cmd a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:con a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:dex a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:hasACValue a owl:AnnotationProperty .\n\nns1:hasACvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasCRValue a owl:AnnotationProperty .\n\nns1:hasCRvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:float .\n\nns1:hasEnvironment a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Environment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFeats a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Feats ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFlatFootedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasFortValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPvalue a owl:AnnotationProperty .\n\nns1:hasInitValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLevel a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasOrganization a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Organization ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasRefValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpecAbils a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:SpecialAbilities ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpeedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:hasTouchValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasTreasure a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Treasure ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasWillValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasXPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger .\n\nns1:int a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:spokenBy a owl:ObjectProperty ;\n    rdfs:domain ns1:Language ;\n    rdfs:range ns1:Beast .\n\nns1:str a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:wis a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:Alignment a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Caster a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Defence a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Environment a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Feats a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Organization a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Resists a owl:Class ;\n    rdfs:subClassOf ns1:Defence .\n\nns1:SpecialAbilities a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:Treasure a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Language a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Offense a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Ecology a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:base a owl:DatatypeProperty .\n\nns1:offValues a owl:DatatypeProperty .\n\nns1:statistics a owl:DatatypeProperty .\n\nns1:defValues a owl:DatatypeProperty .\n\nns1:beastProps a owl:ObjectProperty .\n\nns1:Beast a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\n```"
      ],
      [
        "response",
        "2024-05-13T13:51:56.249211",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n           ns1:hasAlignment ns1:ChaoticGood ;\n           FILTER NOT EXISTS { ?creature ns1:hasLanguages ns1:Draconic }\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T13:51:56.296976",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T13:51:58.029731",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n           ns1:hasAlignment ns1:ChaoticGood .\n  MINUS {\n    ?creature ns1:hasLanguages ns1:Draconic\n  }\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T13:51:58.049124",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T13:51:59.873484",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n           ns1:hasAlignment ns1:ChaoticGood .\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages/ns1:spokenBy ns1:Draconic\n  }\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:52:11.577663",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSchema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 8153,
      "actualSize": 7712
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 0.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 0.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) AS ?count)\nWHERE {\n  ?creature a ns1:Beast ;\n           ns1:hasAlignment ?alignment .\n  FILTER NOT EXISTS {\n    ?alignment rdfs:label \"neutral\" .\n  }\n  ?creature ns1:hasLanguages ns1:TreantLanguage .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,9 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) AS ?count)\n+WHERE {\n+  ?creature a ns1:Beast ;\n+           ns1:hasAlignment ?alignment .\n+  FILTER NOT EXISTS {\n+    ?alignment rdfs:label \"neutral\" .\n+  }\n+  ?creature ns1:hasLanguages ns1:TreantLanguage .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "0"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) AS ?count)\nWHERE {\n  ?creature a ns1:Beast ;\n           ns1:hasAlignment ?alignment .\n  FILTER NOT EXISTS {\n    ?alignment rdfs:label \"neutral\" .\n  }\n  ?creature ns1:hasLanguages ns1:TreantLanguage .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,9 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) AS ?count)\n+WHERE {\n+  ?creature a ns1:Beast ;\n+           ns1:hasAlignment ?alignment .\n+  FILTER NOT EXISTS {\n+    ?alignment rdfs:label \"neutral\" .\n+  }\n+  ?creature ns1:hasLanguages ns1:TreantLanguage .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "0"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary005",
      "question": "how many creatures with non-neutral alignment do speak treant language",
      "refSparql": "SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }",
      "refResultSet": [
        "4"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "schema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:02.680216",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:52:11.577670",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:how many creatures with non-neutral alignment do speak treant language\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\nns1:ChaoticBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:EvilBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Familiar a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:GoodBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Healer a owl:Class ;\n    rdfs:subClassOf ns1:Caster .\n\nns1:LawfulBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:NeutralBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Spells a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:atk a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:canMelee a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canRanged a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:cha a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:cmb a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:cmd a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:con a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:dex a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:hasACValue a owl:AnnotationProperty .\n\nns1:hasACvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasCRValue a owl:AnnotationProperty .\n\nns1:hasCRvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:float .\n\nns1:hasEnvironment a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Environment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFeats a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Feats ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFlatFootedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasFortValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPvalue a owl:AnnotationProperty .\n\nns1:hasInitValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLevel a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasOrganization a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Organization ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasRefValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpecAbils a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:SpecialAbilities ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpeedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:hasTouchValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasTreasure a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Treasure ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasWillValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasXPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger .\n\nns1:int a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:spokenBy a owl:ObjectProperty ;\n    rdfs:domain ns1:Language ;\n    rdfs:range ns1:Beast .\n\nns1:str a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:wis a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:Alignment a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Caster a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Defence a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Environment a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Feats a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Organization a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Resists a owl:Class ;\n    rdfs:subClassOf ns1:Defence .\n\nns1:SpecialAbilities a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:Treasure a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Language a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Offense a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Ecology a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:base a owl:DatatypeProperty .\n\nns1:offValues a owl:DatatypeProperty .\n\nns1:statistics a owl:DatatypeProperty .\n\nns1:defValues a owl:DatatypeProperty .\n\nns1:beastProps a owl:ObjectProperty .\n\nns1:Beast a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\n```"
      ],
      [
        "response",
        "2024-05-13T13:52:14.257879",
        "```sparql\nSELECT (COUNT(?creature) AS ?count)\nWHERE {\n  ?creature a ns1:Beast ;\n           ns1:hasAlignment ?alignment .\n  FILTER NOT EXISTS {\n    ?alignment rdfs:label \"neutral\" .\n  }\n  ?creature ns1:hasLanguages ns1:TreantLanguage .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:52:24.447680",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSchema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 7770,
      "actualSize": 8024
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ns1:Aasimar ns1:canSpell ?spell.\n  ns1:Caypup ns1:canSpell ?spell.\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ns1:Aasimar ns1:canSpell ?spell.\n+  ns1:Caypup ns1:canSpell ?spell.\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ?spell a ns1:Spells.\n  ns1:Aasimar ns1:canSpell ?spell.\n  ns1:Caypup ns1:canSpell ?spell.\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ?spell a ns1:Spells.\n+  ns1:Aasimar ns1:canSpell ?spell.\n+  ns1:Caypup ns1:canSpell ?spell.\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.2,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.25,
        "sparqlIrisSuffixPrecision": 0.2,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.25,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ns1:Aasimar ns1:canSpell ?spell.\n  FILTER EXISTS {\n    ns1:Caypup ns1:canSpell ?spell\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ns1:Aasimar ns1:canSpell ?spell.\n+  FILTER EXISTS {\n+    ns1:Caypup ns1:canSpell ?spell\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ns1:Aasimar ns1:canSpell ?spell.\n  FILTER EXISTS {\n    ns1:Caypup ns1:canSpell ?spell\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ns1:Aasimar ns1:canSpell ?spell.\n+  FILTER EXISTS {\n+    ns1:Caypup ns1:canSpell ?spell\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary007",
      "question": "what spells Aasimar and Caypup do have in common",
      "refSparql": "SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }",
      "refResultSet": [
        "ns1:stabilize"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "schema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:05.044124",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:52:24.447688",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what spells Aasimar and Caypup do have in common\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\nns1:ChaoticBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:EvilBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Familiar a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:GoodBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Healer a owl:Class ;\n    rdfs:subClassOf ns1:Caster .\n\nns1:LawfulBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:NeutralBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Spells a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:atk a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:canMelee a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canRanged a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:cha a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:cmb a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:cmd a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:con a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:dex a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:hasACValue a owl:AnnotationProperty .\n\nns1:hasACvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasCRValue a owl:AnnotationProperty .\n\nns1:hasCRvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:float .\n\nns1:hasEnvironment a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Environment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFeats a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Feats ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFlatFootedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasFortValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPvalue a owl:AnnotationProperty .\n\nns1:hasInitValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLevel a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasOrganization a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Organization ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasRefValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpecAbils a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:SpecialAbilities ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpeedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:hasTouchValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasTreasure a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Treasure ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasWillValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasXPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger .\n\nns1:int a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:spokenBy a owl:ObjectProperty ;\n    rdfs:domain ns1:Language ;\n    rdfs:range ns1:Beast .\n\nns1:str a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:wis a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:Alignment a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Caster a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Defence a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Environment a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Feats a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Organization a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Resists a owl:Class ;\n    rdfs:subClassOf ns1:Defence .\n\nns1:SpecialAbilities a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:Treasure a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Language a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Offense a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Ecology a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:base a owl:DatatypeProperty .\n\nns1:offValues a owl:DatatypeProperty .\n\nns1:statistics a owl:DatatypeProperty .\n\nns1:defValues a owl:DatatypeProperty .\n\nns1:beastProps a owl:ObjectProperty .\n\nns1:Beast a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\n```"
      ],
      [
        "response",
        "2024-05-13T13:52:26.055414",
        "```sparql\nSELECT ?spell\nWHERE {\n  ns1:Aasimar ns1:canSpell ?spell.\n  ns1:Caypup ns1:canSpell ?spell.\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T13:52:26.092228",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T13:52:27.671815",
        "```sparql\nSELECT ?spell\nWHERE {\n  ?spell a ns1:Spells.\n  ns1:Aasimar ns1:canSpell ?spell.\n  ns1:Caypup ns1:canSpell ?spell.\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T13:52:27.707175",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T13:52:29.491804",
        "```sparql\nSELECT ?spell\nWHERE {\n  ns1:Aasimar ns1:canSpell ?spell.\n  FILTER EXISTS {\n    ns1:Caypup ns1:canSpell ?spell\n  }\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:52:39.741227",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSchema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 7601,
      "actualSize": 7631
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "precision": 0.5,
        "recall": 1.0
      },
      "mean": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "precision": 0.5,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignmentType (COUNT(?beast) AS ?count)\nWHERE {\n  ?beast a ns1:Beast ;\n         ns1:hasAlignment ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignmentType (COUNT(?beast) AS ?count)\n+WHERE {\n+  ?beast a ns1:Beast ;\n+         ns1:hasAlignment ?alignmentType .\n+}\n+GROUP BY ?alignmentType\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 0.5,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 0.5,
        "answerResultLength": 1,
        "answerSetSize": 2,
        "answerSet": [
          "1762",
          "ns1:trueNeutral"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignmentType (COUNT(?beast) AS ?count)\nWHERE {\n  ?beast a ns1:Beast ;\n         ns1:hasAlignment ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignmentType (COUNT(?beast) AS ?count)\n+WHERE {\n+  ?beast a ns1:Beast ;\n+         ns1:hasAlignment ?alignmentType .\n+}\n+GROUP BY ?alignmentType\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 0.5,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 0.5,
        "answerResultLength": 1,
        "answerSetSize": 2,
        "answerSet": [
          "1762",
          "ns1:trueNeutral"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary011",
      "question": "what is the most common alignment type",
      "refSparql": "SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1",
      "refResultSet": [
        "ns1:trueNeutral"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "schema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:02.427957",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:52:39.741236",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what is the most common alignment type\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\nns1:ChaoticBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:EvilBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Familiar a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:GoodBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Healer a owl:Class ;\n    rdfs:subClassOf ns1:Caster .\n\nns1:LawfulBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:NeutralBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Spells a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:atk a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:canMelee a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canRanged a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:cha a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:cmb a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:cmd a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:con a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:dex a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:hasACValue a owl:AnnotationProperty .\n\nns1:hasACvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasCRValue a owl:AnnotationProperty .\n\nns1:hasCRvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:float .\n\nns1:hasEnvironment a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Environment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFeats a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Feats ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFlatFootedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasFortValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPvalue a owl:AnnotationProperty .\n\nns1:hasInitValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLevel a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasOrganization a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Organization ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasRefValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpecAbils a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:SpecialAbilities ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpeedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:hasTouchValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasTreasure a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Treasure ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasWillValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasXPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger .\n\nns1:int a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:spokenBy a owl:ObjectProperty ;\n    rdfs:domain ns1:Language ;\n    rdfs:range ns1:Beast .\n\nns1:str a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:wis a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:Alignment a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Caster a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Defence a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Environment a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Feats a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Organization a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Resists a owl:Class ;\n    rdfs:subClassOf ns1:Defence .\n\nns1:SpecialAbilities a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:Treasure a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Language a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Offense a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Ecology a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:base a owl:DatatypeProperty .\n\nns1:offValues a owl:DatatypeProperty .\n\nns1:statistics a owl:DatatypeProperty .\n\nns1:defValues a owl:DatatypeProperty .\n\nns1:beastProps a owl:ObjectProperty .\n\nns1:Beast a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\n```"
      ],
      [
        "response",
        "2024-05-13T13:52:42.169184",
        "```sparql\nSELECT ?alignmentType (COUNT(?beast) AS ?count)\nWHERE {\n  ?beast a ns1:Beast ;\n         ns1:hasAlignment ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:52:53.057310",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSchema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 7611,
      "actualSize": 7514
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,4 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ns1:cold .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:aasimar"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,4 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ns1:cold .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:aasimar"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary019",
      "question": "what creatures do have cold resist",
      "refSparql": "SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }",
      "refResultSet": [
        "ns1:aasimar"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "schema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:01.661173",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:52:53.057318",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what creatures do have cold resist\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\nns1:ChaoticBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:EvilBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Familiar a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:GoodBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Healer a owl:Class ;\n    rdfs:subClassOf ns1:Caster .\n\nns1:LawfulBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:NeutralBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Spells a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:atk a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:canMelee a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canRanged a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:cha a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:cmb a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:cmd a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:con a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:dex a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:hasACValue a owl:AnnotationProperty .\n\nns1:hasACvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasCRValue a owl:AnnotationProperty .\n\nns1:hasCRvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:float .\n\nns1:hasEnvironment a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Environment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFeats a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Feats ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFlatFootedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasFortValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPvalue a owl:AnnotationProperty .\n\nns1:hasInitValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLevel a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasOrganization a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Organization ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasRefValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpecAbils a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:SpecialAbilities ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpeedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:hasTouchValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasTreasure a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Treasure ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasWillValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasXPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger .\n\nns1:int a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:spokenBy a owl:ObjectProperty ;\n    rdfs:domain ns1:Language ;\n    rdfs:range ns1:Beast .\n\nns1:str a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:wis a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:Alignment a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Caster a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Defence a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Environment a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Feats a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Organization a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Resists a owl:Class ;\n    rdfs:subClassOf ns1:Defence .\n\nns1:SpecialAbilities a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:Treasure a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Language a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Offense a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Ecology a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:base a owl:DatatypeProperty .\n\nns1:offValues a owl:DatatypeProperty .\n\nns1:statistics a owl:DatatypeProperty .\n\nns1:defValues a owl:DatatypeProperty .\n\nns1:beastProps a owl:ObjectProperty .\n\nns1:Beast a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\n```"
      ],
      [
        "response",
        "2024-05-13T13:52:54.718483",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:53:05.760091",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSchema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 7821,
      "actualSize": 8521
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature rdf:type ns1:Beast .\n  ?creature ns1:hasAlignment ?alignment .\n  ?alignment rdfs:label \"chaotic good\"^^xsd:string .\n  OPTIONAL {?creature ns1:hasLanguages ?language .}\n  FILTER (!bound(?language) || ?language != ns1:Draconic)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature rdf:type ns1:Beast .\n+  ?creature ns1:hasAlignment ?alignment .\n+  ?alignment rdfs:label \"chaotic good\"^^xsd:string .\n+  OPTIONAL {?creature ns1:hasLanguages ?language .}\n+  FILTER (!bound(?language) || ?language != ns1:Draconic)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.2857142857142857,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.36363636363636365,
        "sparqlIrisSuffixPrecision": 0.2857142857142857,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.36363636363636365,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature rdf:type ns1:Beast .\n  ?creature ns1:hasAlignment ?alignment .\n  ?alignment rdfs:label \"Chaotic Good\"@en .\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages/ns1:spokenBy/ns1:Language ?language .\n    ?language rdfs:label \"Draconic\"@en .\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,10 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature rdf:type ns1:Beast .\n+  ?creature ns1:hasAlignment ?alignment .\n+  ?alignment rdfs:label \"Chaotic Good\"@en .\n+  FILTER NOT EXISTS {\n+    ?creature ns1:hasLanguages/ns1:spokenBy/ns1:Language ?language .\n+    ?language rdfs:label \"Draconic\"@en .\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.2857142857142857,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.36363636363636365,
        "sparqlIrisSuffixPrecision": 0.2857142857142857,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.36363636363636365,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature \nWHERE {\n  ?creature rdf:type ns1:Beast .\n  ?creature ns1:hasAlignment ?alignment .\n  ?alignment rdfs:label \"chaotic good\"@en .\n\n  MINUS {\n    ?creature ns1:hasLanguages ?language .\n    ?language rdfs:label \"Draconic\"@en .\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,11 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature \n+WHERE {\n+  ?creature rdf:type ns1:Beast .\n+  ?creature ns1:hasAlignment ?alignment .\n+  ?alignment rdfs:label \"chaotic good\"@en .\n+\n+  MINUS {\n+    ?creature ns1:hasLanguages ?language .\n+    ?language rdfs:label \"Draconic\"@en .\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.4,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.4444444444444445,
        "sparqlIrisSuffixPrecision": 0.4,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.4444444444444445,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature \nWHERE {\n  ?creature rdf:type ns1:Beast .\n  ?creature ns1:hasAlignment ?alignment .\n  ?alignment rdfs:label \"chaotic good\"@en .\n\n  MINUS {\n    ?creature ns1:hasLanguages ?language .\n    ?language rdfs:label \"Draconic\"@en .\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,11 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature \n+WHERE {\n+  ?creature rdf:type ns1:Beast .\n+  ?creature ns1:hasAlignment ?alignment .\n+  ?alignment rdfs:label \"chaotic good\"@en .\n+\n+  MINUS {\n+    ?creature ns1:hasLanguages ?language .\n+    ?language rdfs:label \"Draconic\"@en .\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.4,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.4444444444444445,
        "sparqlIrisSuffixPrecision": 0.4,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.4444444444444445,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary001",
      "question": "which creatures not speaking draconic language do have chaotic good alignment",
      "refSparql": "SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }",
      "refResultSet": [
        "ns1:Anhana",
        "ns1:Ataxian",
        "ns1:Azruverda",
        "ns1:BattleImp",
        "ns1:Biofreezer",
        "ns1:BlackButterfly",
        "ns1:Cayhound",
        "ns1:Caypup",
        "ns1:Celedeen",
        "ns1:Cynosoma",
        "ns1:Djinni",
        "ns1:Domovoi",
        "ns1:Dryad",
        "ns1:ElysianTitan",
        "ns1:Faun",
        "ns1:FungalNymph",
        "ns1:Gancanagh",
        "ns1:Garuda",
        "ns1:Hamadryad",
        "ns1:HeraldofDreams",
        "ns1:Munavri",
        "ns1:Muse",
        "ns1:Nisid",
        "ns1:NobleDjinniVizier",
        "ns1:Nymph",
        "ns1:RiftFlumph",
        "ns1:RimefireEidolon",
        "ns1:SapphireOoze",
        "ns1:SkirmishersTroop",
        "ns1:StarMonarch",
        "ns1:SwanMaiden",
        "ns1:Taniwha",
        "ns1:Unicorn",
        "ns1:WoodGiant",
        "ns1:caypup"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "schema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:14.876993",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:53:05.760099",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:which creatures not speaking draconic language do have chaotic good alignment\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\nns1:ChaoticBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:EvilBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Familiar a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:GoodBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Healer a owl:Class ;\n    rdfs:subClassOf ns1:Caster .\n\nns1:LawfulBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:NeutralBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Spells a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:atk a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:canMelee a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canRanged a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:cha a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:cmb a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:cmd a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:con a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:dex a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:hasACValue a owl:AnnotationProperty .\n\nns1:hasACvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasCRValue a owl:AnnotationProperty .\n\nns1:hasCRvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:float .\n\nns1:hasEnvironment a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Environment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFeats a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Feats ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFlatFootedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasFortValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPvalue a owl:AnnotationProperty .\n\nns1:hasInitValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLevel a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasOrganization a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Organization ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasRefValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpecAbils a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:SpecialAbilities ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpeedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:hasTouchValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasTreasure a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Treasure ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasWillValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasXPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger .\n\nns1:int a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:spokenBy a owl:ObjectProperty ;\n    rdfs:domain ns1:Language ;\n    rdfs:range ns1:Beast .\n\nns1:str a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:wis a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:Alignment a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Caster a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Defence a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Environment a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Feats a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Organization a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Resists a owl:Class ;\n    rdfs:subClassOf ns1:Defence .\n\nns1:SpecialAbilities a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:Treasure a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Language a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Offense a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Ecology a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:base a owl:DatatypeProperty .\n\nns1:offValues a owl:DatatypeProperty .\n\nns1:statistics a owl:DatatypeProperty .\n\nns1:defValues a owl:DatatypeProperty .\n\nns1:beastProps a owl:ObjectProperty .\n\nns1:Beast a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\n```"
      ],
      [
        "response",
        "2024-05-13T13:53:10.650025",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature rdf:type ns1:Beast .\n  ?creature ns1:hasAlignment ?alignment .\n  ?alignment rdfs:label \"chaotic good\"^^xsd:string .\n  OPTIONAL {?creature ns1:hasLanguages ?language .}\n  FILTER (!bound(?language) || ?language != ns1:Draconic)\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T13:53:10.712659",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T13:53:16.245220",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature rdf:type ns1:Beast .\n  ?creature ns1:hasAlignment ?alignment .\n  ?alignment rdfs:label \"Chaotic Good\"@en .\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages/ns1:spokenBy/ns1:Language ?language .\n    ?language rdfs:label \"Draconic\"@en .\n  }\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T13:53:16.276998",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T13:53:20.637084",
        "```sparql\nSELECT ?creature \nWHERE {\n  ?creature rdf:type ns1:Beast .\n  ?creature ns1:hasAlignment ?alignment .\n  ?alignment rdfs:label \"chaotic good\"@en .\n\n  MINUS {\n    ?creature ns1:hasLanguages ?language .\n    ?language rdfs:label \"Draconic\"@en .\n  }\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:53:30.090477",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSchema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 8153,
      "actualSize": 7778
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 0.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 0.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) AS ?creatureCount) \nWHERE {\n    ?language a ns1:Language ;\n              rdfs:label \"treant\" .\n    ?creature ns1:hasLanguages ?language .\n    ?creature ns1:hasAlignment ?alignment .\n    FILTER NOT EXISTS {\n        ?alignment rdfs:subClassOf ns1:NeutralBeast .\n    }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,10 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) AS ?creatureCount) \n+WHERE {\n+    ?language a ns1:Language ;\n+              rdfs:label \"treant\" .\n+    ?creature ns1:hasLanguages ?language .\n+    ?creature ns1:hasAlignment ?alignment .\n+    FILTER NOT EXISTS {\n+        ?alignment rdfs:subClassOf ns1:NeutralBeast .\n+    }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.2857142857142857,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.30769230769230765,
        "sparqlIrisSuffixPrecision": 0.2857142857142857,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.30769230769230765,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "0"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) AS ?creatureCount) \nWHERE {\n    ?language a ns1:Language ;\n              rdfs:label \"treant\" .\n    ?creature ns1:hasLanguages ?language .\n    ?creature ns1:hasAlignment ?alignment .\n    FILTER NOT EXISTS {\n        ?alignment rdfs:subClassOf ns1:NeutralBeast .\n    }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,10 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) AS ?creatureCount) \n+WHERE {\n+    ?language a ns1:Language ;\n+              rdfs:label \"treant\" .\n+    ?creature ns1:hasLanguages ?language .\n+    ?creature ns1:hasAlignment ?alignment .\n+    FILTER NOT EXISTS {\n+        ?alignment rdfs:subClassOf ns1:NeutralBeast .\n+    }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.2857142857142857,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.30769230769230765,
        "sparqlIrisSuffixPrecision": 0.2857142857142857,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.30769230769230765,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "0"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary005",
      "question": "how many creatures with non-neutral alignment do speak treant language",
      "refSparql": "SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }",
      "refResultSet": [
        "4"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "schema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:05.203061",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:53:30.090489",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:how many creatures with non-neutral alignment do speak treant language\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\nns1:ChaoticBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:EvilBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Familiar a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:GoodBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Healer a owl:Class ;\n    rdfs:subClassOf ns1:Caster .\n\nns1:LawfulBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:NeutralBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Spells a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:atk a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:canMelee a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canRanged a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:cha a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:cmb a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:cmd a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:con a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:dex a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:hasACValue a owl:AnnotationProperty .\n\nns1:hasACvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasCRValue a owl:AnnotationProperty .\n\nns1:hasCRvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:float .\n\nns1:hasEnvironment a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Environment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFeats a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Feats ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFlatFootedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasFortValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPvalue a owl:AnnotationProperty .\n\nns1:hasInitValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLevel a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasOrganization a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Organization ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasRefValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpecAbils a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:SpecialAbilities ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpeedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:hasTouchValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasTreasure a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Treasure ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasWillValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasXPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger .\n\nns1:int a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:spokenBy a owl:ObjectProperty ;\n    rdfs:domain ns1:Language ;\n    rdfs:range ns1:Beast .\n\nns1:str a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:wis a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:Alignment a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Caster a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Defence a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Environment a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Feats a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Organization a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Resists a owl:Class ;\n    rdfs:subClassOf ns1:Defence .\n\nns1:SpecialAbilities a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:Treasure a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Language a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Offense a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Ecology a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:base a owl:DatatypeProperty .\n\nns1:offValues a owl:DatatypeProperty .\n\nns1:statistics a owl:DatatypeProperty .\n\nns1:defValues a owl:DatatypeProperty .\n\nns1:beastProps a owl:ObjectProperty .\n\nns1:Beast a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\n```"
      ],
      [
        "response",
        "2024-05-13T13:53:35.293538",
        "```sparql\nSELECT (COUNT(?creature) AS ?creatureCount) \nWHERE {\n    ?language a ns1:Language ;\n              rdfs:label \"treant\" .\n    ?creature ns1:hasLanguages ?language .\n    ?creature ns1:hasAlignment ?alignment .\n    FILTER NOT EXISTS {\n        ?alignment rdfs:subClassOf ns1:NeutralBeast .\n    }\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:53:45.476233",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSchema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 7770,
      "actualSize": 7646
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ?aasimar ns1:canSpell ?spell .\n  ?caypup ns1:canSpell ?spell .\n  FILTER (?aasimar != ?caypup)\n  ?aasimar rdf:type ns1:Beast .\n  ?caypup rdf:type ns1:Beast .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ?aasimar ns1:canSpell ?spell .\n+  ?caypup ns1:canSpell ?spell .\n+  FILTER (?aasimar != ?caypup)\n+  ?aasimar rdf:type ns1:Beast .\n+  ?caypup rdf:type ns1:Beast .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 2,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:stabilize"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ?aasimar ns1:canSpell ?spell .\n  ?caypup ns1:canSpell ?spell .\n  FILTER (?aasimar != ?caypup)\n  ?aasimar rdf:type ns1:Beast .\n  ?caypup rdf:type ns1:Beast .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ?aasimar ns1:canSpell ?spell .\n+  ?caypup ns1:canSpell ?spell .\n+  FILTER (?aasimar != ?caypup)\n+  ?aasimar rdf:type ns1:Beast .\n+  ?caypup rdf:type ns1:Beast .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 2,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:stabilize"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary007",
      "question": "what spells Aasimar and Caypup do have in common",
      "refSparql": "SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }",
      "refResultSet": [
        "ns1:stabilize"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "schema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:05.400848",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:53:45.476241",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what spells Aasimar and Caypup do have in common\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\nns1:ChaoticBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:EvilBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Familiar a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:GoodBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Healer a owl:Class ;\n    rdfs:subClassOf ns1:Caster .\n\nns1:LawfulBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:NeutralBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Spells a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:atk a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:canMelee a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canRanged a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:cha a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:cmb a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:cmd a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:con a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:dex a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:hasACValue a owl:AnnotationProperty .\n\nns1:hasACvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasCRValue a owl:AnnotationProperty .\n\nns1:hasCRvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:float .\n\nns1:hasEnvironment a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Environment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFeats a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Feats ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFlatFootedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasFortValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPvalue a owl:AnnotationProperty .\n\nns1:hasInitValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLevel a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasOrganization a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Organization ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasRefValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpecAbils a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:SpecialAbilities ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpeedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:hasTouchValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasTreasure a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Treasure ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasWillValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasXPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger .\n\nns1:int a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:spokenBy a owl:ObjectProperty ;\n    rdfs:domain ns1:Language ;\n    rdfs:range ns1:Beast .\n\nns1:str a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:wis a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:Alignment a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Caster a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Defence a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Environment a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Feats a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Organization a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Resists a owl:Class ;\n    rdfs:subClassOf ns1:Defence .\n\nns1:SpecialAbilities a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:Treasure a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Language a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Offense a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Ecology a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:base a owl:DatatypeProperty .\n\nns1:offValues a owl:DatatypeProperty .\n\nns1:statistics a owl:DatatypeProperty .\n\nns1:defValues a owl:DatatypeProperty .\n\nns1:beastProps a owl:ObjectProperty .\n\nns1:Beast a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\n```"
      ],
      [
        "response",
        "2024-05-13T13:53:50.877081",
        "```sparql\nSELECT ?spell\nWHERE {\n  ?aasimar ns1:canSpell ?spell .\n  ?caypup ns1:canSpell ?spell .\n  FILTER (?aasimar != ?caypup)\n  ?aasimar rdf:type ns1:Beast .\n  ?caypup rdf:type ns1:Beast .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:57:51.194255",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSchema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 7601,
      "actualSize": 7595
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "precision": 0.5,
        "recall": 1.0
      },
      "mean": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "precision": 0.5,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignment (COUNT(?beast) AS ?count)\nWHERE {\n  ?beast ns1:hasAlignment ?alignment.\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignment (COUNT(?beast) AS ?count)\n+WHERE {\n+  ?beast ns1:hasAlignment ?alignment.\n+}\n+GROUP BY ?alignment\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 2,
        "answerSet": [
          "1762",
          "ns1:trueNeutral"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignment (COUNT(?beast) AS ?count)\nWHERE {\n  ?beast ns1:hasAlignment ?alignment.\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignment (COUNT(?beast) AS ?count)\n+WHERE {\n+  ?beast ns1:hasAlignment ?alignment.\n+}\n+GROUP BY ?alignment\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 2,
        "answerSet": [
          "1762",
          "ns1:trueNeutral"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary011",
      "question": "what is the most common alignment type",
      "refSparql": "SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1",
      "refResultSet": [
        "ns1:trueNeutral"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "schema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:03.758943",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:57:51.194263",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what is the most common alignment type\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\nns1:ChaoticBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:EvilBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Familiar a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:GoodBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Healer a owl:Class ;\n    rdfs:subClassOf ns1:Caster .\n\nns1:LawfulBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:NeutralBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Spells a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:atk a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:canMelee a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canRanged a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:cha a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:cmb a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:cmd a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:con a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:dex a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:hasACValue a owl:AnnotationProperty .\n\nns1:hasACvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasCRValue a owl:AnnotationProperty .\n\nns1:hasCRvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:float .\n\nns1:hasEnvironment a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Environment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFeats a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Feats ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFlatFootedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasFortValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPvalue a owl:AnnotationProperty .\n\nns1:hasInitValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLevel a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasOrganization a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Organization ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasRefValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpecAbils a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:SpecialAbilities ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpeedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:hasTouchValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasTreasure a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Treasure ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasWillValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasXPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger .\n\nns1:int a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:spokenBy a owl:ObjectProperty ;\n    rdfs:domain ns1:Language ;\n    rdfs:range ns1:Beast .\n\nns1:str a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:wis a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:Alignment a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Caster a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Defence a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Environment a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Feats a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Organization a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Resists a owl:Class ;\n    rdfs:subClassOf ns1:Defence .\n\nns1:SpecialAbilities a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:Treasure a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Language a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Offense a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Ecology a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:base a owl:DatatypeProperty .\n\nns1:offValues a owl:DatatypeProperty .\n\nns1:statistics a owl:DatatypeProperty .\n\nns1:defValues a owl:DatatypeProperty .\n\nns1:beastProps a owl:ObjectProperty .\n\nns1:Beast a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\n```"
      ],
      [
        "response",
        "2024-05-13T13:57:54.953198",
        "```sparql\nSELECT ?alignment (COUNT(?beast) AS ?count)\nWHERE {\n  ?beast ns1:hasAlignment ?alignment.\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:58:07.152372",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSchema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 7611,
      "actualSize": 7973
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ?resistance .\n  ?resistance rdfs:label \"cold\" .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ?resistance .\n+  ?resistance rdfs:label \"cold\" .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.5,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.5,
        "sparqlIrisSuffixPrecision": 0.5,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.5,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists/ns1:Resists \"cold\" .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,4 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists/ns1:Resists \"cold\" .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.5,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.5,
        "sparqlIrisSuffixPrecision": 0.5,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.5,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary019",
        "sparql": "SELECT DISTINCT ?creature\nWHERE {\n  ?creature ns1:hasResists ?resistance .\n  ?resistance rdfs:label \"cold\" .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT DISTINCT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ?resistance .\n+  ?resistance rdfs:label \"cold\" .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.5,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.5,
        "sparqlIrisSuffixPrecision": 0.5,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.5,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary019",
        "sparql": "SELECT DISTINCT ?creature\nWHERE {\n  ?creature ns1:hasResists ?resistance .\n  ?resistance rdfs:label \"cold\" .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT DISTINCT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ?resistance .\n+  ?resistance rdfs:label \"cold\" .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.5,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.5,
        "sparqlIrisSuffixPrecision": 0.5,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.5,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary019",
      "question": "what creatures do have cold resist",
      "refSparql": "SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }",
      "refResultSet": [
        "ns1:aasimar"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "schema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:07.441436",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:58:07.152385",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what creatures do have cold resist\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\nns1:ChaoticBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:EvilBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Familiar a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:GoodBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Healer a owl:Class ;\n    rdfs:subClassOf ns1:Caster .\n\nns1:LawfulBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:NeutralBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Spells a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:atk a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:canMelee a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canRanged a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:cha a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:cmb a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:cmd a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:con a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:dex a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:hasACValue a owl:AnnotationProperty .\n\nns1:hasACvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasCRValue a owl:AnnotationProperty .\n\nns1:hasCRvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:float .\n\nns1:hasEnvironment a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Environment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFeats a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Feats ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFlatFootedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasFortValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPvalue a owl:AnnotationProperty .\n\nns1:hasInitValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLevel a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasOrganization a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Organization ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasRefValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpecAbils a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:SpecialAbilities ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpeedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:hasTouchValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasTreasure a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Treasure ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasWillValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasXPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger .\n\nns1:int a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:spokenBy a owl:ObjectProperty ;\n    rdfs:domain ns1:Language ;\n    rdfs:range ns1:Beast .\n\nns1:str a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:wis a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:Alignment a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Caster a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Defence a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Environment a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Feats a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Organization a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Resists a owl:Class ;\n    rdfs:subClassOf ns1:Defence .\n\nns1:SpecialAbilities a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:Treasure a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Language a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Offense a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Ecology a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:base a owl:DatatypeProperty .\n\nns1:offValues a owl:DatatypeProperty .\n\nns1:statistics a owl:DatatypeProperty .\n\nns1:defValues a owl:DatatypeProperty .\n\nns1:beastProps a owl:ObjectProperty .\n\nns1:Beast a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\n```"
      ],
      [
        "response",
        "2024-05-13T13:58:10.061580",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ?resistance .\n  ?resistance rdfs:label \"cold\" .\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T13:58:10.093049",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T13:58:12.359167",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasResists/ns1:Resists \"cold\" .\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T13:58:12.390820",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T13:58:14.593808",
        "```sparql\nSELECT DISTINCT ?creature\nWHERE {\n  ?creature ns1:hasResists ?resistance .\n  ?resistance rdfs:label \"cold\" .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:58:25.776368",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSchema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 7821,
      "actualSize": 8431
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature rdf:type ns1:Beast .\n  ?creature ns1:hasAlignment ns1:ChaoticGood .\n  OPTIONAL {?creature ns1:hasLanguages ?language }\n  FILTER (!BOUND(?language) || ?language != ns1:DraconicLanguage)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature rdf:type ns1:Beast .\n+  ?creature ns1:hasAlignment ns1:ChaoticGood .\n+  OPTIONAL {?creature ns1:hasLanguages ?language }\n+  FILTER (!BOUND(?language) || ?language != ns1:DraconicLanguage)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.4,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.4,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature rdf:type ns1:Beast .\n  ?creature ns1:hasAlignment ns1:ChaoticGood .\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages/ns1:spokenBy ?language .\n    ?language rdfs:label \"Draconic\"\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,9 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature rdf:type ns1:Beast .\n+  ?creature ns1:hasAlignment ns1:ChaoticGood .\n+  FILTER NOT EXISTS {\n+    ?creature ns1:hasLanguages/ns1:spokenBy ?language .\n+    ?language rdfs:label \"Draconic\"\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.2857142857142857,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.36363636363636365,
        "sparqlIrisSuffixPrecision": 0.2857142857142857,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.36363636363636365,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature rdf:type/ns1:subClassOf* ns1:Beast .\n  ?creature ns1:hasAlignment ?alignment .\n  ?alignment rdfs:label \"Chaotic Good\" .\n  MINUS {\n    ?creature ns1:hasLanguages ?language .\n    ?language rdfs:label \"Draconic\" .\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,10 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature rdf:type/ns1:subClassOf* ns1:Beast .\n+  ?creature ns1:hasAlignment ?alignment .\n+  ?alignment rdfs:label \"Chaotic Good\" .\n+  MINUS {\n+    ?creature ns1:hasLanguages ?language .\n+    ?language rdfs:label \"Draconic\" .\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.4,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.4,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature rdf:type/ns1:subClassOf* ns1:Beast .\n  ?creature ns1:hasAlignment ?alignment .\n  ?alignment rdfs:label \"Chaotic Good\" .\n  MINUS {\n    ?creature ns1:hasLanguages ?language .\n    ?language rdfs:label \"Draconic\" .\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,10 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature rdf:type/ns1:subClassOf* ns1:Beast .\n+  ?creature ns1:hasAlignment ?alignment .\n+  ?alignment rdfs:label \"Chaotic Good\" .\n+  MINUS {\n+    ?creature ns1:hasLanguages ?language .\n+    ?language rdfs:label \"Draconic\" .\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.4,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.4,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary001",
      "question": "which creatures not speaking draconic language do have chaotic good alignment",
      "refSparql": "SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }",
      "refResultSet": [
        "ns1:Anhana",
        "ns1:Ataxian",
        "ns1:Azruverda",
        "ns1:BattleImp",
        "ns1:Biofreezer",
        "ns1:BlackButterfly",
        "ns1:Cayhound",
        "ns1:Caypup",
        "ns1:Celedeen",
        "ns1:Cynosoma",
        "ns1:Djinni",
        "ns1:Domovoi",
        "ns1:Dryad",
        "ns1:ElysianTitan",
        "ns1:Faun",
        "ns1:FungalNymph",
        "ns1:Gancanagh",
        "ns1:Garuda",
        "ns1:Hamadryad",
        "ns1:HeraldofDreams",
        "ns1:Munavri",
        "ns1:Muse",
        "ns1:Nisid",
        "ns1:NobleDjinniVizier",
        "ns1:Nymph",
        "ns1:RiftFlumph",
        "ns1:RimefireEidolon",
        "ns1:SapphireOoze",
        "ns1:SkirmishersTroop",
        "ns1:StarMonarch",
        "ns1:SwanMaiden",
        "ns1:Taniwha",
        "ns1:Unicorn",
        "ns1:WoodGiant",
        "ns1:caypup"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "schema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:15.531645",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:58:25.776375",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:which creatures not speaking draconic language do have chaotic good alignment\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\nns1:ChaoticBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:EvilBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Familiar a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:GoodBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Healer a owl:Class ;\n    rdfs:subClassOf ns1:Caster .\n\nns1:LawfulBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:NeutralBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Spells a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:atk a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:canMelee a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canRanged a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:cha a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:cmb a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:cmd a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:con a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:dex a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:hasACValue a owl:AnnotationProperty .\n\nns1:hasACvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasCRValue a owl:AnnotationProperty .\n\nns1:hasCRvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:float .\n\nns1:hasEnvironment a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Environment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFeats a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Feats ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFlatFootedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasFortValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPvalue a owl:AnnotationProperty .\n\nns1:hasInitValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLevel a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasOrganization a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Organization ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasRefValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpecAbils a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:SpecialAbilities ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpeedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:hasTouchValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasTreasure a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Treasure ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasWillValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasXPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger .\n\nns1:int a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:spokenBy a owl:ObjectProperty ;\n    rdfs:domain ns1:Language ;\n    rdfs:range ns1:Beast .\n\nns1:str a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:wis a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:Alignment a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Caster a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Defence a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Environment a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Feats a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Organization a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Resists a owl:Class ;\n    rdfs:subClassOf ns1:Defence .\n\nns1:SpecialAbilities a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:Treasure a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Language a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Offense a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Ecology a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:base a owl:DatatypeProperty .\n\nns1:offValues a owl:DatatypeProperty .\n\nns1:statistics a owl:DatatypeProperty .\n\nns1:defValues a owl:DatatypeProperty .\n\nns1:beastProps a owl:ObjectProperty .\n\nns1:Beast a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\n```"
      ],
      [
        "response",
        "2024-05-13T13:58:30.846386",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature rdf:type ns1:Beast .\n  ?creature ns1:hasAlignment ns1:ChaoticGood .\n  OPTIONAL {?creature ns1:hasLanguages ?language }\n  FILTER (!BOUND(?language) || ?language != ns1:DraconicLanguage)\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T13:58:30.899236",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T13:58:34.590747",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature rdf:type ns1:Beast .\n  ?creature ns1:hasAlignment ns1:ChaoticGood .\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages/ns1:spokenBy ?language .\n    ?language rdfs:label \"Draconic\"\n  }\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T13:58:34.623232",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T13:58:41.308013",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature rdf:type/ns1:subClassOf* ns1:Beast .\n  ?creature ns1:hasAlignment ?alignment .\n  ?alignment rdfs:label \"Chaotic Good\" .\n  MINUS {\n    ?creature ns1:hasLanguages ?language .\n    ?language rdfs:label \"Draconic\" .\n  }\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:58:51.699376",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSchema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 8153,
      "actualSize": 7714
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 0.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 0.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) AS ?count)\nWHERE {\n  ?creature ns1:hasAlignment ?alignment .\n  FILTER NOT EXISTS { ?creature ns1:hasAlignment ns1:NeutralBeast . }\n  ?language ns1:spokenBy ?creature .\n  ?language rdfs:label \"treant\" .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) AS ?count)\n+WHERE {\n+  ?creature ns1:hasAlignment ?alignment .\n+  FILTER NOT EXISTS { ?creature ns1:hasAlignment ns1:NeutralBeast . }\n+  ?language ns1:spokenBy ?creature .\n+  ?language rdfs:label \"treant\" .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.25,
        "sparqlIrisRecall": 0.16666666666666666,
        "sparqlIrisF1measure": 0.2,
        "sparqlIrisSuffixPrecision": 0.25,
        "sparqlIrisSuffixRecall": 0.16666666666666666,
        "sparqlIrisSuffixF1measure": 0.2,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "0"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) AS ?count)\nWHERE {\n  ?creature ns1:hasAlignment ?alignment .\n  FILTER NOT EXISTS { ?creature ns1:hasAlignment ns1:NeutralBeast . }\n  ?language ns1:spokenBy ?creature .\n  ?language rdfs:label \"treant\" .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) AS ?count)\n+WHERE {\n+  ?creature ns1:hasAlignment ?alignment .\n+  FILTER NOT EXISTS { ?creature ns1:hasAlignment ns1:NeutralBeast . }\n+  ?language ns1:spokenBy ?creature .\n+  ?language rdfs:label \"treant\" .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.25,
        "sparqlIrisRecall": 0.16666666666666666,
        "sparqlIrisF1measure": 0.2,
        "sparqlIrisSuffixPrecision": 0.25,
        "sparqlIrisSuffixRecall": 0.16666666666666666,
        "sparqlIrisSuffixF1measure": 0.2,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "0"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary005",
      "question": "how many creatures with non-neutral alignment do speak treant language",
      "refSparql": "SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }",
      "refResultSet": [
        "4"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "schema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:05.938603",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:58:51.699385",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:how many creatures with non-neutral alignment do speak treant language\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\nns1:ChaoticBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:EvilBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Familiar a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:GoodBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Healer a owl:Class ;\n    rdfs:subClassOf ns1:Caster .\n\nns1:LawfulBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:NeutralBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Spells a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:atk a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:canMelee a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canRanged a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:cha a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:cmb a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:cmd a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:con a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:dex a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:hasACValue a owl:AnnotationProperty .\n\nns1:hasACvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasCRValue a owl:AnnotationProperty .\n\nns1:hasCRvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:float .\n\nns1:hasEnvironment a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Environment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFeats a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Feats ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFlatFootedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasFortValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPvalue a owl:AnnotationProperty .\n\nns1:hasInitValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLevel a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasOrganization a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Organization ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasRefValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpecAbils a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:SpecialAbilities ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpeedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:hasTouchValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasTreasure a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Treasure ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasWillValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasXPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger .\n\nns1:int a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:spokenBy a owl:ObjectProperty ;\n    rdfs:domain ns1:Language ;\n    rdfs:range ns1:Beast .\n\nns1:str a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:wis a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:Alignment a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Caster a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Defence a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Environment a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Feats a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Organization a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Resists a owl:Class ;\n    rdfs:subClassOf ns1:Defence .\n\nns1:SpecialAbilities a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:Treasure a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Language a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Offense a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Ecology a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:base a owl:DatatypeProperty .\n\nns1:offValues a owl:DatatypeProperty .\n\nns1:statistics a owl:DatatypeProperty .\n\nns1:defValues a owl:DatatypeProperty .\n\nns1:beastProps a owl:ObjectProperty .\n\nns1:Beast a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\n```"
      ],
      [
        "response",
        "2024-05-13T13:58:57.637979",
        "```sparql\nSELECT (COUNT(?creature) AS ?count)\nWHERE {\n  ?creature ns1:hasAlignment ?alignment .\n  FILTER NOT EXISTS { ?creature ns1:hasAlignment ns1:NeutralBeast . }\n  ?language ns1:spokenBy ?creature .\n  ?language rdfs:label \"treant\" .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T13:59:10.488989",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSchema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 7770,
      "actualSize": 7655
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary007",
        "sparql": "SELECT DISTINCT ?spell\nWHERE {\n  ?aasimar ns1:canSpell ?spell .\n  ?caypup ns1:canSpell ?spell .\n  ?aasimar rdf:type ns1:Beast .\n  ?caypup rdf:type ns1:Beast .\n  FILTER (?aasimar != ?caypup)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT DISTINCT ?spell\n+WHERE {\n+  ?aasimar ns1:canSpell ?spell .\n+  ?caypup ns1:canSpell ?spell .\n+  ?aasimar rdf:type ns1:Beast .\n+  ?caypup rdf:type ns1:Beast .\n+  FILTER (?aasimar != ?caypup)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:stabilize"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary007",
        "sparql": "SELECT DISTINCT ?spell\nWHERE {\n  ?aasimar ns1:canSpell ?spell .\n  ?caypup ns1:canSpell ?spell .\n  ?aasimar rdf:type ns1:Beast .\n  ?caypup rdf:type ns1:Beast .\n  FILTER (?aasimar != ?caypup)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT DISTINCT ?spell\n+WHERE {\n+  ?aasimar ns1:canSpell ?spell .\n+  ?caypup ns1:canSpell ?spell .\n+  ?aasimar rdf:type ns1:Beast .\n+  ?caypup rdf:type ns1:Beast .\n+  FILTER (?aasimar != ?caypup)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:stabilize"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary007",
      "question": "what spells Aasimar and Caypup do have in common",
      "refSparql": "SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }",
      "refResultSet": [
        "ns1:stabilize"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "schema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:06.229753",
    "interactions": [
      [
        "prompt",
        "2024-05-13T13:59:10.488999",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what spells Aasimar and Caypup do have in common\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\nns1:ChaoticBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:EvilBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Familiar a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:GoodBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Healer a owl:Class ;\n    rdfs:subClassOf ns1:Caster .\n\nns1:LawfulBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:NeutralBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Spells a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:atk a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:canMelee a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canRanged a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:cha a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:cmb a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:cmd a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:con a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:dex a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:hasACValue a owl:AnnotationProperty .\n\nns1:hasACvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasCRValue a owl:AnnotationProperty .\n\nns1:hasCRvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:float .\n\nns1:hasEnvironment a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Environment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFeats a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Feats ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFlatFootedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasFortValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPvalue a owl:AnnotationProperty .\n\nns1:hasInitValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLevel a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasOrganization a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Organization ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasRefValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpecAbils a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:SpecialAbilities ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpeedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:hasTouchValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasTreasure a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Treasure ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasWillValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasXPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger .\n\nns1:int a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:spokenBy a owl:ObjectProperty ;\n    rdfs:domain ns1:Language ;\n    rdfs:range ns1:Beast .\n\nns1:str a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:wis a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:Alignment a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Caster a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Defence a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Environment a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Feats a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Organization a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Resists a owl:Class ;\n    rdfs:subClassOf ns1:Defence .\n\nns1:SpecialAbilities a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:Treasure a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Language a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Offense a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Ecology a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:base a owl:DatatypeProperty .\n\nns1:offValues a owl:DatatypeProperty .\n\nns1:statistics a owl:DatatypeProperty .\n\nns1:defValues a owl:DatatypeProperty .\n\nns1:beastProps a owl:ObjectProperty .\n\nns1:Beast a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\n```"
      ],
      [
        "response",
        "2024-05-13T13:59:16.718742",
        "```sparql\nSELECT DISTINCT ?spell\nWHERE {\n  ?aasimar ns1:canSpell ?spell .\n  ?caypup ns1:canSpell ?spell .\n  ?aasimar rdf:type ns1:Beast .\n  ?caypup rdf:type ns1:Beast .\n  FILTER (?aasimar != ?caypup)\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:03:17.491029",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSchema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 7601,
      "actualSize": 7626
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "precision": 0.5,
        "recall": 1.0
      },
      "mean": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "precision": 0.5,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignmentType (COUNT(?beast) AS ?numberOfBeasts)\nWHERE {\n  ?beast ns1:hasAlignment ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?numberOfBeasts)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignmentType (COUNT(?beast) AS ?numberOfBeasts)\n+WHERE {\n+  ?beast ns1:hasAlignment ?alignmentType .\n+}\n+GROUP BY ?alignmentType\n+ORDER BY DESC(?numberOfBeasts)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 2,
        "answerSet": [
          "1762",
          "ns1:trueNeutral"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignmentType (COUNT(?beast) AS ?numberOfBeasts)\nWHERE {\n  ?beast ns1:hasAlignment ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?numberOfBeasts)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignmentType (COUNT(?beast) AS ?numberOfBeasts)\n+WHERE {\n+  ?beast ns1:hasAlignment ?alignmentType .\n+}\n+GROUP BY ?alignmentType\n+ORDER BY DESC(?numberOfBeasts)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 2,
        "answerSet": [
          "1762",
          "ns1:trueNeutral"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary011",
      "question": "what is the most common alignment type",
      "refSparql": "SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1",
      "refResultSet": [
        "ns1:trueNeutral"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "schema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:04.703908",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:03:17.491038",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what is the most common alignment type\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\nns1:ChaoticBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:EvilBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Familiar a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:GoodBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Healer a owl:Class ;\n    rdfs:subClassOf ns1:Caster .\n\nns1:LawfulBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:NeutralBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Spells a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:atk a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:canMelee a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canRanged a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:cha a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:cmb a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:cmd a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:con a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:dex a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:hasACValue a owl:AnnotationProperty .\n\nns1:hasACvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasCRValue a owl:AnnotationProperty .\n\nns1:hasCRvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:float .\n\nns1:hasEnvironment a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Environment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFeats a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Feats ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFlatFootedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasFortValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPvalue a owl:AnnotationProperty .\n\nns1:hasInitValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLevel a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasOrganization a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Organization ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasRefValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpecAbils a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:SpecialAbilities ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpeedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:hasTouchValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasTreasure a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Treasure ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasWillValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasXPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger .\n\nns1:int a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:spokenBy a owl:ObjectProperty ;\n    rdfs:domain ns1:Language ;\n    rdfs:range ns1:Beast .\n\nns1:str a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:wis a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:Alignment a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Caster a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Defence a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Environment a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Feats a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Organization a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Resists a owl:Class ;\n    rdfs:subClassOf ns1:Defence .\n\nns1:SpecialAbilities a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:Treasure a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Language a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Offense a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Ecology a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:base a owl:DatatypeProperty .\n\nns1:offValues a owl:DatatypeProperty .\n\nns1:statistics a owl:DatatypeProperty .\n\nns1:defValues a owl:DatatypeProperty .\n\nns1:beastProps a owl:ObjectProperty .\n\nns1:Beast a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:03:22.194937",
        "```sparql\nSELECT ?alignmentType (COUNT(?beast) AS ?numberOfBeasts)\nWHERE {\n  ?beast ns1:hasAlignment ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?numberOfBeasts)\nLIMIT 1\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:03:33.574433",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSchema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 7611,
      "actualSize": 7992
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary019",
        "sparql": "SELECT DISTINCT ?creature\nWHERE {\n  ?creature ns1:hasResists/ns1:Resists \"cold\" .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,4 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT DISTINCT ?creature\n+WHERE {\n+  ?creature ns1:hasResists/ns1:Resists \"cold\" .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.5,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.5,
        "sparqlIrisSuffixPrecision": 0.5,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.5,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ?resist .\n  ?resist a ns1:Resists ;\n           rdfs:label \"cold\" .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ?resist .\n+  ?resist a ns1:Resists ;\n+           rdfs:label \"cold\" .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.25,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.25,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ?resistance .\n  ?resistance rdfs:label \"cold\" .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ?resistance .\n+  ?resistance rdfs:label \"cold\" .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.5,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.5,
        "sparqlIrisSuffixPrecision": 0.5,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.5,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ?resistance .\n  ?resistance rdfs:label \"cold\" .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ?resistance .\n+  ?resistance rdfs:label \"cold\" .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.5,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.5,
        "sparqlIrisSuffixPrecision": 0.5,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.5,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary019",
      "question": "what creatures do have cold resist",
      "refSparql": "SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }",
      "refResultSet": [
        "ns1:aasimar"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "schema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:08.630731",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:03:33.574441",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what creatures do have cold resist\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\nns1:ChaoticBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:EvilBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Familiar a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:GoodBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Healer a owl:Class ;\n    rdfs:subClassOf ns1:Caster .\n\nns1:LawfulBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:NeutralBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Spells a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:atk a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:canMelee a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canRanged a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:cha a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:cmb a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:cmd a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:con a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:dex a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:hasACValue a owl:AnnotationProperty .\n\nns1:hasACvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasCRValue a owl:AnnotationProperty .\n\nns1:hasCRvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:float .\n\nns1:hasEnvironment a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Environment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFeats a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Feats ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFlatFootedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasFortValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPvalue a owl:AnnotationProperty .\n\nns1:hasInitValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLevel a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasOrganization a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Organization ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasRefValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpecAbils a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:SpecialAbilities ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpeedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:hasTouchValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasTreasure a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Treasure ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasWillValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasXPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger .\n\nns1:int a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:spokenBy a owl:ObjectProperty ;\n    rdfs:domain ns1:Language ;\n    rdfs:range ns1:Beast .\n\nns1:str a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:wis a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:Alignment a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Caster a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Defence a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Environment a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Feats a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Organization a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Resists a owl:Class ;\n    rdfs:subClassOf ns1:Defence .\n\nns1:SpecialAbilities a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:Treasure a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Language a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Offense a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Ecology a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:base a owl:DatatypeProperty .\n\nns1:offValues a owl:DatatypeProperty .\n\nns1:statistics a owl:DatatypeProperty .\n\nns1:defValues a owl:DatatypeProperty .\n\nns1:beastProps a owl:ObjectProperty .\n\nns1:Beast a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:03:36.514758",
        "```sparql\nSELECT DISTINCT ?creature\nWHERE {\n  ?creature ns1:hasResists/ns1:Resists \"cold\" .\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:03:36.532468",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:03:39.652457",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ?resist .\n  ?resist a ns1:Resists ;\n           rdfs:label \"cold\" .\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:03:39.669440",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:03:42.205164",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ?resistance .\n  ?resistance rdfs:label \"cold\" .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:03:52.688864",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSchema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 7821,
      "actualSize": 8340
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature rdf:type ns1:Beast .\n  ?creature ns1:hasAlignment ns1:ChaoticGood .\n  OPTIONAL { ?creature ns1:hasLanguages ?language .}\n  FILTER (!BOUND(?language) || ?language != ns1:Draconic)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature rdf:type ns1:Beast .\n+  ?creature ns1:hasAlignment ns1:ChaoticGood .\n+  OPTIONAL { ?creature ns1:hasLanguages ?language .}\n+  FILTER (!BOUND(?language) || ?language != ns1:Draconic)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.4,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.4,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature rdf:type ns1:Beast .\n  ?creature ns1:hasAlignment ns1:ChaoticGood .\n  OPTIONAL { ?creature ns1:hasLanguages ?language }\n  FILTER (!BOUND(?language) || ?language != ns1:Draconic)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature rdf:type ns1:Beast .\n+  ?creature ns1:hasAlignment ns1:ChaoticGood .\n+  OPTIONAL { ?creature ns1:hasLanguages ?language }\n+  FILTER (!BOUND(?language) || ?language != ns1:Draconic)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.4,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.4,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature rdf:type ns1:Beast .\n  ?creature ns1:hasAlignment ns1:ChaoticGood .\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages ns1:Draconic\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature rdf:type ns1:Beast .\n+  ?creature ns1:hasAlignment ns1:ChaoticGood .\n+  FILTER NOT EXISTS {\n+    ?creature ns1:hasLanguages ns1:Draconic\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.4,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.4,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature rdf:type ns1:Beast .\n  ?creature ns1:hasAlignment ns1:ChaoticGood .\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages ns1:Draconic\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature rdf:type ns1:Beast .\n+  ?creature ns1:hasAlignment ns1:ChaoticGood .\n+  FILTER NOT EXISTS {\n+    ?creature ns1:hasLanguages ns1:Draconic\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.4,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.4,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary001",
      "question": "which creatures not speaking draconic language do have chaotic good alignment",
      "refSparql": "SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }",
      "refResultSet": [
        "ns1:Anhana",
        "ns1:Ataxian",
        "ns1:Azruverda",
        "ns1:BattleImp",
        "ns1:Biofreezer",
        "ns1:BlackButterfly",
        "ns1:Cayhound",
        "ns1:Caypup",
        "ns1:Celedeen",
        "ns1:Cynosoma",
        "ns1:Djinni",
        "ns1:Domovoi",
        "ns1:Dryad",
        "ns1:ElysianTitan",
        "ns1:Faun",
        "ns1:FungalNymph",
        "ns1:Gancanagh",
        "ns1:Garuda",
        "ns1:Hamadryad",
        "ns1:HeraldofDreams",
        "ns1:Munavri",
        "ns1:Muse",
        "ns1:Nisid",
        "ns1:NobleDjinniVizier",
        "ns1:Nymph",
        "ns1:RiftFlumph",
        "ns1:RimefireEidolon",
        "ns1:SapphireOoze",
        "ns1:SkirmishersTroop",
        "ns1:StarMonarch",
        "ns1:SwanMaiden",
        "ns1:Taniwha",
        "ns1:Unicorn",
        "ns1:WoodGiant",
        "ns1:caypup"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "schema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:13.519034",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:03:52.688873",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:which creatures not speaking draconic language do have chaotic good alignment\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\nns1:ChaoticBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:EvilBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Familiar a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:GoodBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Healer a owl:Class ;\n    rdfs:subClassOf ns1:Caster .\n\nns1:LawfulBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:NeutralBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Spells a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:atk a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:canMelee a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canRanged a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:cha a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:cmb a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:cmd a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:con a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:dex a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:hasACValue a owl:AnnotationProperty .\n\nns1:hasACvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasCRValue a owl:AnnotationProperty .\n\nns1:hasCRvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:float .\n\nns1:hasEnvironment a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Environment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFeats a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Feats ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFlatFootedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasFortValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPvalue a owl:AnnotationProperty .\n\nns1:hasInitValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLevel a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasOrganization a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Organization ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasRefValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpecAbils a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:SpecialAbilities ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpeedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:hasTouchValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasTreasure a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Treasure ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasWillValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasXPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger .\n\nns1:int a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:spokenBy a owl:ObjectProperty ;\n    rdfs:domain ns1:Language ;\n    rdfs:range ns1:Beast .\n\nns1:str a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:wis a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:Alignment a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Caster a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Defence a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Environment a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Feats a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Organization a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Resists a owl:Class ;\n    rdfs:subClassOf ns1:Defence .\n\nns1:SpecialAbilities a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:Treasure a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Language a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Offense a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Ecology a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:base a owl:DatatypeProperty .\n\nns1:offValues a owl:DatatypeProperty .\n\nns1:statistics a owl:DatatypeProperty .\n\nns1:defValues a owl:DatatypeProperty .\n\nns1:beastProps a owl:ObjectProperty .\n\nns1:Beast a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:03:57.599391",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature rdf:type ns1:Beast .\n  ?creature ns1:hasAlignment ns1:ChaoticGood .\n  OPTIONAL { ?creature ns1:hasLanguages ?language .}\n  FILTER (!BOUND(?language) || ?language != ns1:Draconic)\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:03:57.629687",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:04:02.917903",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature rdf:type ns1:Beast .\n  ?creature ns1:hasAlignment ns1:ChaoticGood .\n  OPTIONAL { ?creature ns1:hasLanguages ?language }\n  FILTER (!BOUND(?language) || ?language != ns1:Draconic)\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:04:02.964336",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:04:06.207898",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature rdf:type ns1:Beast .\n  ?creature ns1:hasAlignment ns1:ChaoticGood .\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages ns1:Draconic\n  }\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:04:18.735695",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSchema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 8153,
      "actualSize": 7689
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 0.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 0.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) AS ?count)\nWHERE {\n  ?creature ns1:hasAlignment ?alignment .\n  ?creature ns1:hasLanguages ?language .\n  ?language rdfs:label \"Treant\" .\n  FILTER(?alignment != ns1:NeutralBeast)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) AS ?count)\n+WHERE {\n+  ?creature ns1:hasAlignment ?alignment .\n+  ?creature ns1:hasLanguages ?language .\n+  ?language rdfs:label \"Treant\" .\n+  FILTER(?alignment != ns1:NeutralBeast)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.5,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.4,
        "sparqlIrisSuffixPrecision": 0.5,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.4,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "0"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) AS ?count)\nWHERE {\n  ?creature ns1:hasAlignment ?alignment .\n  ?creature ns1:hasLanguages ?language .\n  ?language rdfs:label \"Treant\" .\n  FILTER(?alignment != ns1:NeutralBeast)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) AS ?count)\n+WHERE {\n+  ?creature ns1:hasAlignment ?alignment .\n+  ?creature ns1:hasLanguages ?language .\n+  ?language rdfs:label \"Treant\" .\n+  FILTER(?alignment != ns1:NeutralBeast)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.5,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.4,
        "sparqlIrisSuffixPrecision": 0.5,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.4,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "0"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary005",
      "question": "how many creatures with non-neutral alignment do speak treant language",
      "refSparql": "SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }",
      "refResultSet": [
        "4"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "schema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:04.908599",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:04:18.735707",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:how many creatures with non-neutral alignment do speak treant language\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\nns1:ChaoticBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:EvilBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Familiar a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:GoodBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Healer a owl:Class ;\n    rdfs:subClassOf ns1:Caster .\n\nns1:LawfulBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:NeutralBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Spells a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:atk a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:canMelee a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canRanged a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:cha a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:cmb a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:cmd a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:con a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:dex a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:hasACValue a owl:AnnotationProperty .\n\nns1:hasACvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasCRValue a owl:AnnotationProperty .\n\nns1:hasCRvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:float .\n\nns1:hasEnvironment a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Environment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFeats a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Feats ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFlatFootedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasFortValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPvalue a owl:AnnotationProperty .\n\nns1:hasInitValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLevel a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasOrganization a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Organization ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasRefValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpecAbils a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:SpecialAbilities ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpeedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:hasTouchValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasTreasure a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Treasure ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasWillValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasXPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger .\n\nns1:int a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:spokenBy a owl:ObjectProperty ;\n    rdfs:domain ns1:Language ;\n    rdfs:range ns1:Beast .\n\nns1:str a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:wis a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:Alignment a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Caster a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Defence a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Environment a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Feats a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Organization a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Resists a owl:Class ;\n    rdfs:subClassOf ns1:Defence .\n\nns1:SpecialAbilities a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:Treasure a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Language a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Offense a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Ecology a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:base a owl:DatatypeProperty .\n\nns1:offValues a owl:DatatypeProperty .\n\nns1:statistics a owl:DatatypeProperty .\n\nns1:defValues a owl:DatatypeProperty .\n\nns1:beastProps a owl:ObjectProperty .\n\nns1:Beast a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:04:23.644294",
        "```sparql\nSELECT (COUNT(?creature) AS ?count)\nWHERE {\n  ?creature ns1:hasAlignment ?alignment .\n  ?creature ns1:hasLanguages ?language .\n  ?language rdfs:label \"Treant\" .\n  FILTER(?alignment != ns1:NeutralBeast)\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:04:33.641347",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSchema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 7770,
      "actualSize": 8054
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ns1:Aasimar ns1:canSpell ?spell .\n  ns1:Caypup ns1:canSpell ?spell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ns1:Aasimar ns1:canSpell ?spell .\n+  ns1:Caypup ns1:canSpell ?spell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?commonSpell\nWHERE {\n  ?aasimar ns1:canSpell ?commonSpell .\n  ?caypup ns1:canSpell ?commonSpell .\n  FILTER (?aasimar = ns1:Aasimar && ?caypup = ns1:Caypup)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?commonSpell\n+WHERE {\n+  ?aasimar ns1:canSpell ?commonSpell .\n+  ?caypup ns1:canSpell ?commonSpell .\n+  FILTER (?aasimar = ns1:Aasimar && ?caypup = ns1:Caypup)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ns1:Aasimar ns1:canSpell ?spell .\n  ns1:Caypup ns1:canSpell ?spell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ns1:Aasimar ns1:canSpell ?spell .\n+  ns1:Caypup ns1:canSpell ?spell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ns1:Aasimar ns1:canSpell ?spell .\n  ns1:Caypup ns1:canSpell ?spell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ns1:Aasimar ns1:canSpell ?spell .\n+  ns1:Caypup ns1:canSpell ?spell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary007",
      "question": "what spells Aasimar and Caypup do have in common",
      "refSparql": "SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }",
      "refResultSet": [
        "ns1:stabilize"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "schema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:28.247208",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:04:33.641355",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what spells Aasimar and Caypup do have in common\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\nns1:ChaoticBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:EvilBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Familiar a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:GoodBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Healer a owl:Class ;\n    rdfs:subClassOf ns1:Caster .\n\nns1:LawfulBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:NeutralBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Spells a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:atk a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:canMelee a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canRanged a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:cha a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:cmb a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:cmd a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:con a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:dex a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:hasACValue a owl:AnnotationProperty .\n\nns1:hasACvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasCRValue a owl:AnnotationProperty .\n\nns1:hasCRvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:float .\n\nns1:hasEnvironment a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Environment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFeats a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Feats ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFlatFootedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasFortValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPvalue a owl:AnnotationProperty .\n\nns1:hasInitValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLevel a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasOrganization a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Organization ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasRefValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpecAbils a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:SpecialAbilities ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpeedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:hasTouchValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasTreasure a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Treasure ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasWillValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasXPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger .\n\nns1:int a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:spokenBy a owl:ObjectProperty ;\n    rdfs:domain ns1:Language ;\n    rdfs:range ns1:Beast .\n\nns1:str a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:wis a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:Alignment a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Caster a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Defence a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Environment a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Feats a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Organization a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Resists a owl:Class ;\n    rdfs:subClassOf ns1:Defence .\n\nns1:SpecialAbilities a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:Treasure a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Language a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Offense a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Ecology a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:base a owl:DatatypeProperty .\n\nns1:offValues a owl:DatatypeProperty .\n\nns1:statistics a owl:DatatypeProperty .\n\nns1:defValues a owl:DatatypeProperty .\n\nns1:beastProps a owl:ObjectProperty .\n\nns1:Beast a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:04:37.041831",
        "```sparql\nSELECT ?spell\nWHERE {\n  ns1:Aasimar ns1:canSpell ?spell .\n  ns1:Caypup ns1:canSpell ?spell .\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:04:37.060497",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:04:59.036602",
        "```sparql\nSELECT ?commonSpell\nWHERE {\n  ?aasimar ns1:canSpell ?commonSpell .\n  ?caypup ns1:canSpell ?commonSpell .\n  FILTER (?aasimar = ns1:Aasimar && ?caypup = ns1:Caypup)\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:04:59.078980",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:05:01.888555",
        "```sparql\nSELECT ?spell\nWHERE {\n  ns1:Aasimar ns1:canSpell ?spell .\n  ns1:Caypup ns1:canSpell ?spell .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:05:10.925549",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSchema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 7601,
      "actualSize": 7596
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "precision": 0.5,
        "recall": 1.0
      },
      "mean": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "precision": 0.5,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignment (COUNT(?beast) AS ?count)\nWHERE {\n  ?beast ns1:hasAlignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignment (COUNT(?beast) AS ?count)\n+WHERE {\n+  ?beast ns1:hasAlignment ?alignment .\n+}\n+GROUP BY ?alignment\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 2,
        "answerSet": [
          "1762",
          "ns1:trueNeutral"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignment (COUNT(?beast) AS ?count)\nWHERE {\n  ?beast ns1:hasAlignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignment (COUNT(?beast) AS ?count)\n+WHERE {\n+  ?beast ns1:hasAlignment ?alignment .\n+}\n+GROUP BY ?alignment\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 2,
        "answerSet": [
          "1762",
          "ns1:trueNeutral"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary011",
      "question": "what is the most common alignment type",
      "refSparql": "SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1",
      "refResultSet": [
        "ns1:trueNeutral"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "schema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:04.862883",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:05:10.925557",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what is the most common alignment type\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\nns1:ChaoticBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:EvilBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Familiar a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:GoodBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Healer a owl:Class ;\n    rdfs:subClassOf ns1:Caster .\n\nns1:LawfulBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:NeutralBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Spells a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:atk a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:canMelee a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canRanged a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:cha a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:cmb a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:cmd a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:con a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:dex a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:hasACValue a owl:AnnotationProperty .\n\nns1:hasACvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasCRValue a owl:AnnotationProperty .\n\nns1:hasCRvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:float .\n\nns1:hasEnvironment a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Environment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFeats a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Feats ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFlatFootedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasFortValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPvalue a owl:AnnotationProperty .\n\nns1:hasInitValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLevel a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasOrganization a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Organization ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasRefValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpecAbils a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:SpecialAbilities ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpeedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:hasTouchValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasTreasure a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Treasure ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasWillValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasXPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger .\n\nns1:int a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:spokenBy a owl:ObjectProperty ;\n    rdfs:domain ns1:Language ;\n    rdfs:range ns1:Beast .\n\nns1:str a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:wis a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:Alignment a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Caster a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Defence a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Environment a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Feats a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Organization a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Resists a owl:Class ;\n    rdfs:subClassOf ns1:Defence .\n\nns1:SpecialAbilities a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:Treasure a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Language a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Offense a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Ecology a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:base a owl:DatatypeProperty .\n\nns1:offValues a owl:DatatypeProperty .\n\nns1:statistics a owl:DatatypeProperty .\n\nns1:defValues a owl:DatatypeProperty .\n\nns1:beastProps a owl:ObjectProperty .\n\nns1:Beast a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:05:15.788432",
        "```sparql\nSELECT ?alignment (COUNT(?beast) AS ?count)\nWHERE {\n  ?beast ns1:hasAlignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:05:26.035092",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSchema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 7611,
      "actualSize": 8102
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature rdf:type ns1:Beast ;\n            ns1:hasResists ?resists .\n  ?resists rdfs:label \"cold\" .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature rdf:type ns1:Beast ;\n+            ns1:hasResists ?resists .\n+  ?resists rdfs:label \"cold\" .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.25,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.25,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature rdf:type/rdfs:subClassOf* ns1:Beast ;\n            ns1:hasResists ?resist.\n  ?resist rdfs:label \"cold\" .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature rdf:type/rdfs:subClassOf* ns1:Beast ;\n+            ns1:hasResists ?resist.\n+  ?resist rdfs:label \"cold\" .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.2,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.28571428571428575,
        "sparqlIrisSuffixPrecision": 0.2,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.28571428571428575,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature rdf:type/rdfs:subClassOf* ns1:Beast .\n  ?creature ns1:hasResists ?resist .\n  ?resist ns1:Resists \"cold\" .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature rdf:type/rdfs:subClassOf* ns1:Beast .\n+  ?creature ns1:hasResists ?resist .\n+  ?resist ns1:Resists \"cold\" .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.2,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.28571428571428575,
        "sparqlIrisSuffixPrecision": 0.2,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.28571428571428575,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature rdf:type/rdfs:subClassOf* ns1:Beast .\n  ?creature ns1:hasResists ?resist .\n  ?resist ns1:Resists \"cold\" .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature rdf:type/rdfs:subClassOf* ns1:Beast .\n+  ?creature ns1:hasResists ?resist .\n+  ?resist ns1:Resists \"cold\" .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.2,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.28571428571428575,
        "sparqlIrisSuffixPrecision": 0.2,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.28571428571428575,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary019",
      "question": "what creatures do have cold resist",
      "refSparql": "SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }",
      "refResultSet": [
        "ns1:aasimar"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "schema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:10.192852",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:05:26.035099",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what creatures do have cold resist\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\nns1:ChaoticBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:EvilBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Familiar a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:GoodBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Healer a owl:Class ;\n    rdfs:subClassOf ns1:Caster .\n\nns1:LawfulBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:NeutralBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Spells a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:atk a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:canMelee a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canRanged a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:cha a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:cmb a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:cmd a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:con a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:dex a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:hasACValue a owl:AnnotationProperty .\n\nns1:hasACvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasCRValue a owl:AnnotationProperty .\n\nns1:hasCRvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:float .\n\nns1:hasEnvironment a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Environment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFeats a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Feats ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFlatFootedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasFortValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPvalue a owl:AnnotationProperty .\n\nns1:hasInitValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLevel a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasOrganization a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Organization ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasRefValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpecAbils a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:SpecialAbilities ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpeedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:hasTouchValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasTreasure a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Treasure ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasWillValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasXPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger .\n\nns1:int a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:spokenBy a owl:ObjectProperty ;\n    rdfs:domain ns1:Language ;\n    rdfs:range ns1:Beast .\n\nns1:str a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:wis a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:Alignment a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Caster a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Defence a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Environment a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Feats a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Organization a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Resists a owl:Class ;\n    rdfs:subClassOf ns1:Defence .\n\nns1:SpecialAbilities a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:Treasure a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Language a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Offense a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Ecology a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:base a owl:DatatypeProperty .\n\nns1:offValues a owl:DatatypeProperty .\n\nns1:statistics a owl:DatatypeProperty .\n\nns1:defValues a owl:DatatypeProperty .\n\nns1:beastProps a owl:ObjectProperty .\n\nns1:Beast a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:05:30.032284",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature rdf:type ns1:Beast ;\n            ns1:hasResists ?resists .\n  ?resists rdfs:label \"cold\" .\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:05:30.050435",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:05:33.099766",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature rdf:type/rdfs:subClassOf* ns1:Beast ;\n            ns1:hasResists ?resist.\n  ?resist rdfs:label \"cold\" .\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:05:33.116188",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:05:36.227944",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature rdf:type/rdfs:subClassOf* ns1:Beast .\n  ?creature ns1:hasResists ?resist .\n  ?resist ns1:Resists \"cold\" .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:05:46.456775",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSchema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 7821,
      "actualSize": 8344
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature a ns1:Beast .\n  ?creature ns1:hasAlignment ns1:ChaoticGood .\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages ?lang .\n    ?lang rdfs:label \"Draconic\"\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,9 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature a ns1:Beast .\n+  ?creature ns1:hasAlignment ns1:ChaoticGood .\n+  FILTER NOT EXISTS {\n+    ?creature ns1:hasLanguages ?lang .\n+    ?lang rdfs:label \"Draconic\"\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.4,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.4,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature a ns1:Beast .\n  ?creature ns1:hasAlignment ns1:ChaoticGood .\n  OPTIONAL {\n    ?creature ns1:hasLanguages ?language .\n    FILTER(?language = ns1:Draconic)\n  }\n  FILTER(!BOUND(?language))\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,10 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature a ns1:Beast .\n+  ?creature ns1:hasAlignment ns1:ChaoticGood .\n+  OPTIONAL {\n+    ?creature ns1:hasLanguages ?language .\n+    FILTER(?language = ns1:Draconic)\n+  }\n+  FILTER(!BOUND(?language))\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.4,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.4,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature \nWHERE {\n  ?creature a ns1:Beast .\n  ?creature ns1:hasAlignment ns1:ChaoticGood .\n  MINUS {\n    ?creature ns1:hasLanguages ?language .\n    ?language rdfs:label \"Draconic\"\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,9 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature \n+WHERE {\n+  ?creature a ns1:Beast .\n+  ?creature ns1:hasAlignment ns1:ChaoticGood .\n+  MINUS {\n+    ?creature ns1:hasLanguages ?language .\n+    ?language rdfs:label \"Draconic\"\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.4,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.4,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature \nWHERE {\n  ?creature a ns1:Beast .\n  ?creature ns1:hasAlignment ns1:ChaoticGood .\n  MINUS {\n    ?creature ns1:hasLanguages ?language .\n    ?language rdfs:label \"Draconic\"\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,9 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature \n+WHERE {\n+  ?creature a ns1:Beast .\n+  ?creature ns1:hasAlignment ns1:ChaoticGood .\n+  MINUS {\n+    ?creature ns1:hasLanguages ?language .\n+    ?language rdfs:label \"Draconic\"\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.4,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.4,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary001",
      "question": "which creatures not speaking draconic language do have chaotic good alignment",
      "refSparql": "SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }",
      "refResultSet": [
        "ns1:Anhana",
        "ns1:Ataxian",
        "ns1:Azruverda",
        "ns1:BattleImp",
        "ns1:Biofreezer",
        "ns1:BlackButterfly",
        "ns1:Cayhound",
        "ns1:Caypup",
        "ns1:Celedeen",
        "ns1:Cynosoma",
        "ns1:Djinni",
        "ns1:Domovoi",
        "ns1:Dryad",
        "ns1:ElysianTitan",
        "ns1:Faun",
        "ns1:FungalNymph",
        "ns1:Gancanagh",
        "ns1:Garuda",
        "ns1:Hamadryad",
        "ns1:HeraldofDreams",
        "ns1:Munavri",
        "ns1:Muse",
        "ns1:Nisid",
        "ns1:NobleDjinniVizier",
        "ns1:Nymph",
        "ns1:RiftFlumph",
        "ns1:RimefireEidolon",
        "ns1:SapphireOoze",
        "ns1:SkirmishersTroop",
        "ns1:StarMonarch",
        "ns1:SwanMaiden",
        "ns1:Taniwha",
        "ns1:Unicorn",
        "ns1:WoodGiant",
        "ns1:caypup"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "schema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:14.187281",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:05:46.456782",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:which creatures not speaking draconic language do have chaotic good alignment\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\nns1:ChaoticBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:EvilBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Familiar a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:GoodBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Healer a owl:Class ;\n    rdfs:subClassOf ns1:Caster .\n\nns1:LawfulBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:NeutralBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Spells a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:atk a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:canMelee a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canRanged a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:cha a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:cmb a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:cmd a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:con a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:dex a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:hasACValue a owl:AnnotationProperty .\n\nns1:hasACvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasCRValue a owl:AnnotationProperty .\n\nns1:hasCRvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:float .\n\nns1:hasEnvironment a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Environment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFeats a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Feats ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFlatFootedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasFortValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPvalue a owl:AnnotationProperty .\n\nns1:hasInitValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLevel a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasOrganization a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Organization ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasRefValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpecAbils a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:SpecialAbilities ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpeedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:hasTouchValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasTreasure a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Treasure ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasWillValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasXPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger .\n\nns1:int a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:spokenBy a owl:ObjectProperty ;\n    rdfs:domain ns1:Language ;\n    rdfs:range ns1:Beast .\n\nns1:str a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:wis a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:Alignment a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Caster a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Defence a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Environment a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Feats a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Organization a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Resists a owl:Class ;\n    rdfs:subClassOf ns1:Defence .\n\nns1:SpecialAbilities a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:Treasure a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Language a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Offense a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Ecology a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:base a owl:DatatypeProperty .\n\nns1:offValues a owl:DatatypeProperty .\n\nns1:statistics a owl:DatatypeProperty .\n\nns1:defValues a owl:DatatypeProperty .\n\nns1:beastProps a owl:ObjectProperty .\n\nns1:Beast a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:05:50.647381",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature a ns1:Beast .\n  ?creature ns1:hasAlignment ns1:ChaoticGood .\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages ?lang .\n    ?lang rdfs:label \"Draconic\"\n  }\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:05:50.681063",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:05:56.341887",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature a ns1:Beast .\n  ?creature ns1:hasAlignment ns1:ChaoticGood .\n  OPTIONAL {\n    ?creature ns1:hasLanguages ?language .\n    FILTER(?language = ns1:Draconic)\n  }\n  FILTER(!BOUND(?language))\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:05:56.416598",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:06:00.644056",
        "```sparql\nSELECT ?creature \nWHERE {\n  ?creature a ns1:Beast .\n  ?creature ns1:hasAlignment ns1:ChaoticGood .\n  MINUS {\n    ?creature ns1:hasLanguages ?language .\n    ?language rdfs:label \"Draconic\"\n  }\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:06:12.093278",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSchema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 8153,
      "actualSize": 7784
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 0.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 0.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) AS ?count)\nWHERE {\n  ?creature rdf:type/rdfs:subClassOf* ns1:Beast .\n  ?creature ns1:hasLanguages ?language .\n  ?language rdf:type ns1:Language .\n  FILTER NOT EXISTS { ?language rdf:type ns1:NeutralBeast }\n  ?language ns1:spokenBy ?name .\n  FILTER (STR(?name) = \"Treant\")\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,9 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) AS ?count)\n+WHERE {\n+  ?creature rdf:type/rdfs:subClassOf* ns1:Beast .\n+  ?creature ns1:hasLanguages ?language .\n+  ?language rdf:type ns1:Language .\n+  FILTER NOT EXISTS { ?language rdf:type ns1:NeutralBeast }\n+  ?language ns1:spokenBy ?name .\n+  FILTER (STR(?name) = \"Treant\")\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.14285714285714285,
        "sparqlIrisRecall": 0.16666666666666666,
        "sparqlIrisF1measure": 0.15384615384615383,
        "sparqlIrisSuffixPrecision": 0.14285714285714285,
        "sparqlIrisSuffixRecall": 0.16666666666666666,
        "sparqlIrisSuffixF1measure": 0.15384615384615383,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "0"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) AS ?count)\nWHERE {\n  ?creature rdf:type/rdfs:subClassOf* ns1:Beast .\n  ?creature ns1:hasLanguages ?language .\n  ?language rdf:type ns1:Language .\n  FILTER NOT EXISTS { ?language rdf:type ns1:NeutralBeast }\n  ?language ns1:spokenBy ?name .\n  FILTER (STR(?name) = \"Treant\")\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,9 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) AS ?count)\n+WHERE {\n+  ?creature rdf:type/rdfs:subClassOf* ns1:Beast .\n+  ?creature ns1:hasLanguages ?language .\n+  ?language rdf:type ns1:Language .\n+  FILTER NOT EXISTS { ?language rdf:type ns1:NeutralBeast }\n+  ?language ns1:spokenBy ?name .\n+  FILTER (STR(?name) = \"Treant\")\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.14285714285714285,
        "sparqlIrisRecall": 0.16666666666666666,
        "sparqlIrisF1measure": 0.15384615384615383,
        "sparqlIrisSuffixPrecision": 0.14285714285714285,
        "sparqlIrisSuffixRecall": 0.16666666666666666,
        "sparqlIrisSuffixF1measure": 0.15384615384615383,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "0"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary005",
      "question": "how many creatures with non-neutral alignment do speak treant language",
      "refSparql": "SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }",
      "refResultSet": [
        "4"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "schema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:06.724155",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:06:12.093285",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:how many creatures with non-neutral alignment do speak treant language\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\nns1:ChaoticBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:EvilBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Familiar a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:GoodBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Healer a owl:Class ;\n    rdfs:subClassOf ns1:Caster .\n\nns1:LawfulBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:NeutralBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Spells a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:atk a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:canMelee a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canRanged a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:cha a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:cmb a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:cmd a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:con a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:dex a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:hasACValue a owl:AnnotationProperty .\n\nns1:hasACvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasCRValue a owl:AnnotationProperty .\n\nns1:hasCRvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:float .\n\nns1:hasEnvironment a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Environment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFeats a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Feats ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFlatFootedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasFortValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPvalue a owl:AnnotationProperty .\n\nns1:hasInitValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLevel a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasOrganization a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Organization ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasRefValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpecAbils a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:SpecialAbilities ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpeedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:hasTouchValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasTreasure a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Treasure ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasWillValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasXPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger .\n\nns1:int a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:spokenBy a owl:ObjectProperty ;\n    rdfs:domain ns1:Language ;\n    rdfs:range ns1:Beast .\n\nns1:str a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:wis a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:Alignment a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Caster a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Defence a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Environment a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Feats a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Organization a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Resists a owl:Class ;\n    rdfs:subClassOf ns1:Defence .\n\nns1:SpecialAbilities a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:Treasure a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Language a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Offense a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Ecology a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:base a owl:DatatypeProperty .\n\nns1:offValues a owl:DatatypeProperty .\n\nns1:statistics a owl:DatatypeProperty .\n\nns1:defValues a owl:DatatypeProperty .\n\nns1:beastProps a owl:ObjectProperty .\n\nns1:Beast a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:06:18.817433",
        "```sparql\nSELECT (COUNT(?creature) AS ?count)\nWHERE {\n  ?creature rdf:type/rdfs:subClassOf* ns1:Beast .\n  ?creature ns1:hasLanguages ?language .\n  ?language rdf:type ns1:Language .\n  FILTER NOT EXISTS { ?language rdf:type ns1:NeutralBeast }\n  ?language ns1:spokenBy ?name .\n  FILTER (STR(?name) = \"Treant\")\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:06:38.937970",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSchema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 7770,
      "actualSize": 8118
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?commonSpell\nWHERE {\n  ns1:Aasimar ns1:canSpell ?commonSpell .\n  ns1:Caypup ns1:canSpell ?commonSpell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?commonSpell\n+WHERE {\n+  ns1:Aasimar ns1:canSpell ?commonSpell .\n+  ns1:Caypup ns1:canSpell ?commonSpell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?commonSpell\nWHERE {\n  ?aasimar a ns1:Aasimar ;\n           ns1:canSpell ?commonSpell .\n  ?caypup a ns1:Caypup ;\n          ns1:canSpell ?commonSpell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?commonSpell\n+WHERE {\n+  ?aasimar a ns1:Aasimar ;\n+           ns1:canSpell ?commonSpell .\n+  ?caypup a ns1:Caypup ;\n+          ns1:canSpell ?commonSpell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.25,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.28571428571428575,
        "sparqlIrisSuffixPrecision": 0.25,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.28571428571428575,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?Spell\nWHERE {\n  ?aasimar ns1:canSpell ?Spell .\n  ?caypup ns1:canSpell ?Spell .\n  FILTER (?aasimar = ns1:Aasimar && ?caypup = ns1:Caypup)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?Spell\n+WHERE {\n+  ?aasimar ns1:canSpell ?Spell .\n+  ?caypup ns1:canSpell ?Spell .\n+  FILTER (?aasimar = ns1:Aasimar && ?caypup = ns1:Caypup)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?Spell\nWHERE {\n  ?aasimar ns1:canSpell ?Spell .\n  ?caypup ns1:canSpell ?Spell .\n  FILTER (?aasimar = ns1:Aasimar && ?caypup = ns1:Caypup)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?Spell\n+WHERE {\n+  ?aasimar ns1:canSpell ?Spell .\n+  ?caypup ns1:canSpell ?Spell .\n+  FILTER (?aasimar = ns1:Aasimar && ?caypup = ns1:Caypup)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary007",
      "question": "what spells Aasimar and Caypup do have in common",
      "refSparql": "SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }",
      "refResultSet": [
        "ns1:stabilize"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "schema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:13.040056",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:06:38.937978",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what spells Aasimar and Caypup do have in common\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\nns1:ChaoticBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:EvilBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Familiar a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:GoodBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Healer a owl:Class ;\n    rdfs:subClassOf ns1:Caster .\n\nns1:LawfulBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:NeutralBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Spells a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:atk a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:canMelee a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canRanged a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:cha a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:cmb a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:cmd a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:con a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:dex a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:hasACValue a owl:AnnotationProperty .\n\nns1:hasACvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasCRValue a owl:AnnotationProperty .\n\nns1:hasCRvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:float .\n\nns1:hasEnvironment a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Environment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFeats a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Feats ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFlatFootedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasFortValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPvalue a owl:AnnotationProperty .\n\nns1:hasInitValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLevel a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasOrganization a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Organization ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasRefValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpecAbils a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:SpecialAbilities ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpeedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:hasTouchValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasTreasure a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Treasure ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasWillValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasXPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger .\n\nns1:int a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:spokenBy a owl:ObjectProperty ;\n    rdfs:domain ns1:Language ;\n    rdfs:range ns1:Beast .\n\nns1:str a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:wis a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:Alignment a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Caster a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Defence a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Environment a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Feats a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Organization a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Resists a owl:Class ;\n    rdfs:subClassOf ns1:Defence .\n\nns1:SpecialAbilities a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:Treasure a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Language a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Offense a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Ecology a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:base a owl:DatatypeProperty .\n\nns1:offValues a owl:DatatypeProperty .\n\nns1:statistics a owl:DatatypeProperty .\n\nns1:defValues a owl:DatatypeProperty .\n\nns1:beastProps a owl:ObjectProperty .\n\nns1:Beast a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:06:43.046357",
        "```sparql\nSELECT ?commonSpell\nWHERE {\n  ns1:Aasimar ns1:canSpell ?commonSpell .\n  ns1:Caypup ns1:canSpell ?commonSpell .\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:06:43.085597",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:06:47.232126",
        "```sparql\nSELECT ?commonSpell\nWHERE {\n  ?aasimar a ns1:Aasimar ;\n           ns1:canSpell ?commonSpell .\n  ?caypup a ns1:Caypup ;\n          ns1:canSpell ?commonSpell .\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:06:47.256775",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:06:51.978026",
        "```sparql\nSELECT ?Spell\nWHERE {\n  ?aasimar ns1:canSpell ?Spell .\n  ?caypup ns1:canSpell ?Spell .\n  FILTER (?aasimar = ns1:Aasimar && ?caypup = ns1:Caypup)\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:07:01.867033",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSchema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 7601,
      "actualSize": 7596
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "precision": 0.5,
        "recall": 1.0
      },
      "mean": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "precision": 0.5,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignment (COUNT(?beast) AS ?count)\nWHERE {\n  ?beast ns1:hasAlignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignment (COUNT(?beast) AS ?count)\n+WHERE {\n+  ?beast ns1:hasAlignment ?alignment .\n+}\n+GROUP BY ?alignment\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 2,
        "answerSet": [
          "1762",
          "ns1:trueNeutral"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignment (COUNT(?beast) AS ?count)\nWHERE {\n  ?beast ns1:hasAlignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignment (COUNT(?beast) AS ?count)\n+WHERE {\n+  ?beast ns1:hasAlignment ?alignment .\n+}\n+GROUP BY ?alignment\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 2,
        "answerSet": [
          "1762",
          "ns1:trueNeutral"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary011",
      "question": "what is the most common alignment type",
      "refSparql": "SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1",
      "refResultSet": [
        "ns1:trueNeutral"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "schema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:04.604630",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:07:01.867041",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what is the most common alignment type\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\nns1:ChaoticBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:EvilBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Familiar a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:GoodBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Healer a owl:Class ;\n    rdfs:subClassOf ns1:Caster .\n\nns1:LawfulBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:NeutralBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Spells a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:atk a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:canMelee a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canRanged a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:cha a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:cmb a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:cmd a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:con a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:dex a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:hasACValue a owl:AnnotationProperty .\n\nns1:hasACvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasCRValue a owl:AnnotationProperty .\n\nns1:hasCRvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:float .\n\nns1:hasEnvironment a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Environment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFeats a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Feats ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFlatFootedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasFortValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPvalue a owl:AnnotationProperty .\n\nns1:hasInitValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLevel a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasOrganization a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Organization ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasRefValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpecAbils a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:SpecialAbilities ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpeedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:hasTouchValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasTreasure a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Treasure ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasWillValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasXPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger .\n\nns1:int a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:spokenBy a owl:ObjectProperty ;\n    rdfs:domain ns1:Language ;\n    rdfs:range ns1:Beast .\n\nns1:str a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:wis a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:Alignment a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Caster a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Defence a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Environment a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Feats a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Organization a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Resists a owl:Class ;\n    rdfs:subClassOf ns1:Defence .\n\nns1:SpecialAbilities a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:Treasure a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Language a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Offense a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Ecology a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:base a owl:DatatypeProperty .\n\nns1:offValues a owl:DatatypeProperty .\n\nns1:statistics a owl:DatatypeProperty .\n\nns1:defValues a owl:DatatypeProperty .\n\nns1:beastProps a owl:ObjectProperty .\n\nns1:Beast a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:07:06.471663",
        "```sparql\nSELECT ?alignment (COUNT(?beast) AS ?count)\nWHERE {\n  ?beast ns1:hasAlignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:07:16.008502",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSchema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 7611,
      "actualSize": 8095
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature rdf:type/ns1:subClassOf* ns1:Beast .\n  ?creature ns1:hasResists/ns1:Resists \"Cold\" .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature rdf:type/ns1:subClassOf* ns1:Beast .\n+  ?creature ns1:hasResists/ns1:Resists \"Cold\" .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.2,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.28571428571428575,
        "sparqlIrisSuffixPrecision": 0.2,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.28571428571428575,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature rdf:type/ns1:subClassOf* ns1:Beast .\n  ?creature ns1:hasResists ?resist .\n  ?resist rdfs:label \"Cold\" .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature rdf:type/ns1:subClassOf* ns1:Beast .\n+  ?creature ns1:hasResists ?resist .\n+  ?resist rdfs:label \"Cold\" .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.2,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.28571428571428575,
        "sparqlIrisSuffixPrecision": 0.2,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.28571428571428575,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature rdf:type/ns1:subClassOf* ns1:Beast .\n  ?creature ns1:hasResists ?resist .\n  ?resist rdfs:label \"cold\" .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature rdf:type/ns1:subClassOf* ns1:Beast .\n+  ?creature ns1:hasResists ?resist .\n+  ?resist rdfs:label \"cold\" .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.2,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.28571428571428575,
        "sparqlIrisSuffixPrecision": 0.2,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.28571428571428575,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature rdf:type/ns1:subClassOf* ns1:Beast .\n  ?creature ns1:hasResists ?resist .\n  ?resist rdfs:label \"cold\" .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature rdf:type/ns1:subClassOf* ns1:Beast .\n+  ?creature ns1:hasResists ?resist .\n+  ?resist rdfs:label \"cold\" .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.2,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.28571428571428575,
        "sparqlIrisSuffixPrecision": 0.2,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.28571428571428575,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary019",
      "question": "what creatures do have cold resist",
      "refSparql": "SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }",
      "refResultSet": [
        "ns1:aasimar"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": "",
      "kgInfoType": "schema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:10.496097",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:07:16.008512",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what creatures do have cold resist\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\nns1:ChaoticBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:EvilBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Familiar a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:GoodBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Healer a owl:Class ;\n    rdfs:subClassOf ns1:Caster .\n\nns1:LawfulBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:NeutralBeast a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Spells a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:atk a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:canMelee a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canRanged a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:boolean ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:cha a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:cmb a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:cmd a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:base .\n\nns1:con a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:dex a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:hasACValue a owl:AnnotationProperty .\n\nns1:hasACvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasCRValue a owl:AnnotationProperty .\n\nns1:hasCRvalue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:float .\n\nns1:hasEnvironment a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Environment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFeats a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Feats ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasFlatFootedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasFortValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasHPvalue a owl:AnnotationProperty .\n\nns1:hasInitValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLevel a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer .\n\nns1:hasOrganization a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Organization ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasRefValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpecAbils a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:SpecialAbilities ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasSpeedValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:offValues .\n\nns1:hasTouchValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasTreasure a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Treasure ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasWillValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:integer ;\n    rdfs:subPropertyOf ns1:defValues .\n\nns1:hasXPValue a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger .\n\nns1:int a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:spokenBy a owl:ObjectProperty ;\n    rdfs:domain ns1:Language ;\n    rdfs:range ns1:Beast .\n\nns1:str a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:wis a owl:DatatypeProperty,\n        owl:FunctionalProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range xsd:nonNegativeInteger ;\n    rdfs:subPropertyOf ns1:statistics .\n\nns1:Alignment a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Caster a owl:Class ;\n    rdfs:subClassOf ns1:Beast .\n\nns1:Defence a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Environment a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Feats a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Organization a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Resists a owl:Class ;\n    rdfs:subClassOf ns1:Defence .\n\nns1:SpecialAbilities a owl:Class ;\n    rdfs:subClassOf ns1:Offense .\n\nns1:Treasure a owl:Class ;\n    rdfs:subClassOf ns1:Ecology .\n\nns1:Language a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Offense a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:Ecology a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\nns1:base a owl:DatatypeProperty .\n\nns1:offValues a owl:DatatypeProperty .\n\nns1:statistics a owl:DatatypeProperty .\n\nns1:defValues a owl:DatatypeProperty .\n\nns1:beastProps a owl:ObjectProperty .\n\nns1:Beast a owl:Class ;\n    rdfs:subClassOf owl:Thing .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:07:20.644083",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature rdf:type/ns1:subClassOf* ns1:Beast .\n  ?creature ns1:hasResists/ns1:Resists \"Cold\" .\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:07:20.661469",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:07:23.535063",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature rdf:type/ns1:subClassOf* ns1:Beast .\n  ?creature ns1:hasResists ?resist .\n  ?resist rdfs:label \"Cold\" .\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:07:23.573919",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:07:26.504599",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature rdf:type/ns1:subClassOf* ns1:Beast .\n  ?creature ns1:hasResists ?resist .\n  ?resist rdfs:label \"cold\" .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:07:38.365995",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubschema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 1312,
      "actualSize": 1825
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n           ns1:hasAlignment ns1:Chaotic_Good ;\n           ns1:hasLanguages ?lang .\n  FILTER NOT EXISTS {\n    ?lang ns1:languageType ns1:Draconic .\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,9 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature a ns1:Beast ;\n+           ns1:hasAlignment ns1:Chaotic_Good ;\n+           ns1:hasLanguages ?lang .\n+  FILTER NOT EXISTS {\n+    ?lang ns1:languageType ns1:Draconic .\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.2857142857142857,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.36363636363636365,
        "sparqlIrisSuffixPrecision": 0.2857142857142857,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.36363636363636365,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n           ns1:hasAlignment ns1:Chaotic_Good .\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages ?lang .\n    ?lang ns1:languageType ns1:Draconic .\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,9 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature a ns1:Beast ;\n+           ns1:hasAlignment ns1:Chaotic_Good .\n+  FILTER NOT EXISTS {\n+    ?creature ns1:hasLanguages ?lang .\n+    ?lang ns1:languageType ns1:Draconic .\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.2857142857142857,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.36363636363636365,
        "sparqlIrisSuffixPrecision": 0.2857142857142857,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.36363636363636365,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n           ns1:hasAlignment ns1:Chaotic_Good .\n  MINUS {\n    ?creature ns1:hasLanguages ?lang .\n    ?lang ns1:languageType ns1:Draconic .\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,9 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature a ns1:Beast ;\n+           ns1:hasAlignment ns1:Chaotic_Good .\n+  MINUS {\n+    ?creature ns1:hasLanguages ?lang .\n+    ?lang ns1:languageType ns1:Draconic .\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.2857142857142857,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.36363636363636365,
        "sparqlIrisSuffixPrecision": 0.2857142857142857,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.36363636363636365,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n           ns1:hasAlignment ns1:Chaotic_Good .\n  MINUS {\n    ?creature ns1:hasLanguages ?lang .\n    ?lang ns1:languageType ns1:Draconic .\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,9 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature a ns1:Beast ;\n+           ns1:hasAlignment ns1:Chaotic_Good .\n+  MINUS {\n+    ?creature ns1:hasLanguages ?lang .\n+    ?lang ns1:languageType ns1:Draconic .\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.2857142857142857,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.36363636363636365,
        "sparqlIrisSuffixPrecision": 0.2857142857142857,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.36363636363636365,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary001",
      "question": "which creatures not speaking draconic language do have chaotic good alignment",
      "refSparql": "SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }",
      "refResultSet": [
        "ns1:Anhana",
        "ns1:Ataxian",
        "ns1:Azruverda",
        "ns1:BattleImp",
        "ns1:Biofreezer",
        "ns1:BlackButterfly",
        "ns1:Cayhound",
        "ns1:Caypup",
        "ns1:Celedeen",
        "ns1:Cynosoma",
        "ns1:Djinni",
        "ns1:Domovoi",
        "ns1:Dryad",
        "ns1:ElysianTitan",
        "ns1:Faun",
        "ns1:FungalNymph",
        "ns1:Gancanagh",
        "ns1:Garuda",
        "ns1:Hamadryad",
        "ns1:HeraldofDreams",
        "ns1:Munavri",
        "ns1:Muse",
        "ns1:Nisid",
        "ns1:NobleDjinniVizier",
        "ns1:Nymph",
        "ns1:RiftFlumph",
        "ns1:RimefireEidolon",
        "ns1:SapphireOoze",
        "ns1:SkirmishersTroop",
        "ns1:StarMonarch",
        "ns1:SwanMaiden",
        "ns1:Taniwha",
        "ns1:Unicorn",
        "ns1:WoodGiant",
        "ns1:caypup"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n",
      "iris": "",
      "kgInfoType": "subschema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:06.114340",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:07:38.366004",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:which creatures not speaking draconic language do have chaotic good alignment\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:07:40.650176",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n           ns1:hasAlignment ns1:Chaotic_Good ;\n           ns1:hasLanguages ?lang .\n  FILTER NOT EXISTS {\n    ?lang ns1:languageType ns1:Draconic .\n  }\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:07:40.698925",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:07:42.532699",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n           ns1:hasAlignment ns1:Chaotic_Good .\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages ?lang .\n    ?lang ns1:languageType ns1:Draconic .\n  }\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:07:42.595149",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:07:44.480335",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n           ns1:hasAlignment ns1:Chaotic_Good .\n  MINUS {\n    ?creature ns1:hasLanguages ?lang .\n    ?lang ns1:languageType ns1:Draconic .\n  }\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:07:55.090837",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubschema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 1644,
      "actualSize": 1185
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 0.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 0.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) as ?count)\nWHERE {\n  ?creature a ns1:Beast ;\n            ns1:hasAlignment ?alignment ;\n            ns1:hasLanguages ns1:TreantLanguage .\n  FILTER(?alignment != ns1:NeutralAlignment)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) as ?count)\n+WHERE {\n+  ?creature a ns1:Beast ;\n+            ns1:hasAlignment ?alignment ;\n+            ns1:hasLanguages ns1:TreantLanguage .\n+  FILTER(?alignment != ns1:NeutralAlignment)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "0"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) as ?count)\nWHERE {\n  ?creature a ns1:Beast ;\n            ns1:hasAlignment ?alignment ;\n            ns1:hasLanguages ns1:TreantLanguage .\n  FILTER(?alignment != ns1:NeutralAlignment)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) as ?count)\n+WHERE {\n+  ?creature a ns1:Beast ;\n+            ns1:hasAlignment ?alignment ;\n+            ns1:hasLanguages ns1:TreantLanguage .\n+  FILTER(?alignment != ns1:NeutralAlignment)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "0"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary005",
      "question": "how many creatures with non-neutral alignment do speak treant language",
      "refSparql": "SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }",
      "refResultSet": [
        "4"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n",
      "iris": "",
      "kgInfoType": "subschema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:02.391591",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:07:55.090845",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:how many creatures with non-neutral alignment do speak treant language\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:07:57.482428",
        "```sparql\nSELECT (COUNT(?creature) as ?count)\nWHERE {\n  ?creature a ns1:Beast ;\n            ns1:hasAlignment ?alignment ;\n            ns1:hasLanguages ns1:TreantLanguage .\n  FILTER(?alignment != ns1:NeutralAlignment)\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:08:07.516705",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubschema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 1055,
      "actualSize": 1292
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ns1:Aasimar ns1:canSpell ?spell .\n  ns1:Caypup ns1:canSpell ?spell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ns1:Aasimar ns1:canSpell ?spell .\n+  ns1:Caypup ns1:canSpell ?spell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ?spell a ns1:Spell .\n  ns1:Aasimar ns1:canSpell ?spell .\n  ns1:Caypup ns1:canSpell ?spell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ?spell a ns1:Spell .\n+  ns1:Aasimar ns1:canSpell ?spell .\n+  ns1:Caypup ns1:canSpell ?spell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.2,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.25,
        "sparqlIrisSuffixPrecision": 0.2,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.25,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ns1:Aasimar ns1:canSpell ?spell .\n  ns1:Caypup ns1:canSpell ?spell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ns1:Aasimar ns1:canSpell ?spell .\n+  ns1:Caypup ns1:canSpell ?spell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ns1:Aasimar ns1:canSpell ?spell .\n  ns1:Caypup ns1:canSpell ?spell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ns1:Aasimar ns1:canSpell ?spell .\n+  ns1:Caypup ns1:canSpell ?spell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary007",
      "question": "what spells Aasimar and Caypup do have in common",
      "refSparql": "SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }",
      "refResultSet": [
        "ns1:stabilize"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n",
      "iris": "",
      "kgInfoType": "subschema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:05.208375",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:08:07.516715",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what spells Aasimar and Caypup do have in common\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:08:09.487930",
        "```sparql\nSELECT ?spell\nWHERE {\n  ns1:Aasimar ns1:canSpell ?spell .\n  ns1:Caypup ns1:canSpell ?spell .\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:08:09.510212",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:08:10.891238",
        "```sparql\nSELECT ?spell\nWHERE {\n  ?spell a ns1:Spell .\n  ns1:Aasimar ns1:canSpell ?spell .\n  ns1:Caypup ns1:canSpell ?spell .\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:08:10.916937",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:08:12.725080",
        "```sparql\nSELECT ?spell\nWHERE {\n  ns1:Aasimar ns1:canSpell ?spell .\n  ns1:Caypup ns1:canSpell ?spell .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:08:22.431539",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubschema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 953,
      "actualSize": 1743
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignmentType (COUNT(?alignmentType) as ?count)\nWHERE {\n  ?beast ns1:hasAlignment ?alignment .\n  ?alignment a ns1:Alignment ;\n             ns1:type ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,9 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignmentType (COUNT(?alignmentType) as ?count)\n+WHERE {\n+  ?beast ns1:hasAlignment ?alignment .\n+  ?alignment a ns1:Alignment ;\n+             ns1:type ?alignmentType .\n+}\n+GROUP BY ?alignmentType\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.25,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 0.4,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 0.5,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignmentType (COUNT(?alignmentType) as ?count)\nWHERE {\n  ?beast ns1:hasAlignment ?alignment .\n  ?alignment a ns1:Alignment ;\n             ns1:type ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(COUNT(?alignmentType))\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,9 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignmentType (COUNT(?alignmentType) as ?count)\n+WHERE {\n+  ?beast ns1:hasAlignment ?alignment .\n+  ?alignment a ns1:Alignment ;\n+             ns1:type ?alignmentType .\n+}\n+GROUP BY ?alignmentType\n+ORDER BY DESC(COUNT(?alignmentType))\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.25,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 0.4,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 0.5,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignmentType (COUNT(?alignmentType) as ?count)\nWHERE {\n  ?beast ns1:hasAlignment ?alignment .\n  ?alignment a ns1:Alignment ;\n             ns1:type ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,9 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignmentType (COUNT(?alignmentType) as ?count)\n+WHERE {\n+  ?beast ns1:hasAlignment ?alignment .\n+  ?alignment a ns1:Alignment ;\n+             ns1:type ?alignmentType .\n+}\n+GROUP BY ?alignmentType\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.25,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 0.4,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 0.5,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignmentType (COUNT(?alignmentType) as ?count)\nWHERE {\n  ?beast ns1:hasAlignment ?alignment .\n  ?alignment a ns1:Alignment ;\n             ns1:type ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,9 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignmentType (COUNT(?alignmentType) as ?count)\n+WHERE {\n+  ?beast ns1:hasAlignment ?alignment .\n+  ?alignment a ns1:Alignment ;\n+             ns1:type ?alignmentType .\n+}\n+GROUP BY ?alignmentType\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.25,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 0.4,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 0.5,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary011",
      "question": "what is the most common alignment type",
      "refSparql": "SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1",
      "refResultSet": [
        "ns1:trueNeutral"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n",
      "iris": "",
      "kgInfoType": "subschema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:05.565118",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:08:22.431546",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what is the most common alignment type\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:08:24.523177",
        "```sparql\nSELECT ?alignmentType (COUNT(?alignmentType) as ?count)\nWHERE {\n  ?beast ns1:hasAlignment ?alignment .\n  ?alignment a ns1:Alignment ;\n             ns1:type ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:08:24.599965",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:08:26.307716",
        "```sparql\nSELECT ?alignmentType (COUNT(?alignmentType) as ?count)\nWHERE {\n  ?beast ns1:hasAlignment ?alignment .\n  ?alignment a ns1:Alignment ;\n             ns1:type ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(COUNT(?alignmentType))\nLIMIT 1\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:08:26.400907",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:08:27.996657",
        "```sparql\nSELECT ?alignmentType (COUNT(?alignmentType) as ?count)\nWHERE {\n  ?beast ns1:hasAlignment ?alignment .\n  ?alignment a ns1:Alignment ;\n             ns1:type ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:08:39.396785",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubschema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 927,
      "actualSize": 1266
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:coldResist .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,4 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ns1:coldResist .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.5,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.5,
        "sparqlIrisSuffixPrecision": 0.5,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.5,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:coldResist .\n  ?creature a ns1:Beast .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ns1:coldResist .\n+  ?creature a ns1:Beast .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.25,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.25,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n            ns1:hasResists ns1:coldResist .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature a ns1:Beast ;\n+            ns1:hasResists ns1:coldResist .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.25,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.25,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n            ns1:hasResists ns1:coldResist .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature a ns1:Beast ;\n+            ns1:hasResists ns1:coldResist .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.25,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.25,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary019",
      "question": "what creatures do have cold resist",
      "refSparql": "SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }",
      "refResultSet": [
        "ns1:aasimar"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n",
      "iris": "",
      "kgInfoType": "subschema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:05.787114",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:08:39.396792",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what creatures do have cold resist\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:08:41.314750",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:coldResist .\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:08:41.344812",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:08:44.073615",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:coldResist .\n  ?creature a ns1:Beast .\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:08:44.104869",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:08:45.183899",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n            ns1:hasResists ns1:coldResist .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:08:55.347900",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubschema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 1312,
      "actualSize": 1755
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature \nWHERE {\n    ?creature a ns1:Beast ;\n             ns1:hasAlignment ns1:ChaoticGood ;\n             FILTER NOT EXISTS { ?creature ns1:hasLanguages ns1:Draconic }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature \n+WHERE {\n+    ?creature a ns1:Beast ;\n+             ns1:hasAlignment ns1:ChaoticGood ;\n+             FILTER NOT EXISTS { ?creature ns1:hasLanguages ns1:Draconic }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.4,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.4,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature \nWHERE {\n    ?creature a ns1:Beast ;\n             ns1:hasAlignment ns1:ChaoticGood .\n    FILTER NOT EXISTS { ?creature ns1:hasLanguages ns1:Draconic }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature \n+WHERE {\n+    ?creature a ns1:Beast ;\n+             ns1:hasAlignment ns1:ChaoticGood .\n+    FILTER NOT EXISTS { ?creature ns1:hasLanguages ns1:Draconic }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.4,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.4,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature \nWHERE {\n    ?creature a ns1:Beast ;\n             ns1:hasAlignment ns1:ChaoticGood .\n    FILTER NOT EXISTS { ?creature ns1:hasLanguages/ns1:languageName ns1:Draconic }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature \n+WHERE {\n+    ?creature a ns1:Beast ;\n+             ns1:hasAlignment ns1:ChaoticGood .\n+    FILTER NOT EXISTS { ?creature ns1:hasLanguages/ns1:languageName ns1:Draconic }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.2857142857142857,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.36363636363636365,
        "sparqlIrisSuffixPrecision": 0.2857142857142857,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.36363636363636365,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature \nWHERE {\n    ?creature a ns1:Beast ;\n             ns1:hasAlignment ns1:ChaoticGood .\n    FILTER NOT EXISTS { ?creature ns1:hasLanguages/ns1:languageName ns1:Draconic }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature \n+WHERE {\n+    ?creature a ns1:Beast ;\n+             ns1:hasAlignment ns1:ChaoticGood .\n+    FILTER NOT EXISTS { ?creature ns1:hasLanguages/ns1:languageName ns1:Draconic }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.2857142857142857,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.36363636363636365,
        "sparqlIrisSuffixPrecision": 0.2857142857142857,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.36363636363636365,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary001",
      "question": "which creatures not speaking draconic language do have chaotic good alignment",
      "refSparql": "SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }",
      "refResultSet": [
        "ns1:Anhana",
        "ns1:Ataxian",
        "ns1:Azruverda",
        "ns1:BattleImp",
        "ns1:Biofreezer",
        "ns1:BlackButterfly",
        "ns1:Cayhound",
        "ns1:Caypup",
        "ns1:Celedeen",
        "ns1:Cynosoma",
        "ns1:Djinni",
        "ns1:Domovoi",
        "ns1:Dryad",
        "ns1:ElysianTitan",
        "ns1:Faun",
        "ns1:FungalNymph",
        "ns1:Gancanagh",
        "ns1:Garuda",
        "ns1:Hamadryad",
        "ns1:HeraldofDreams",
        "ns1:Munavri",
        "ns1:Muse",
        "ns1:Nisid",
        "ns1:NobleDjinniVizier",
        "ns1:Nymph",
        "ns1:RiftFlumph",
        "ns1:RimefireEidolon",
        "ns1:SapphireOoze",
        "ns1:SkirmishersTroop",
        "ns1:StarMonarch",
        "ns1:SwanMaiden",
        "ns1:Taniwha",
        "ns1:Unicorn",
        "ns1:WoodGiant",
        "ns1:caypup"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n",
      "iris": "",
      "kgInfoType": "subschema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:06.172503",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:08:55.347907",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:which creatures not speaking draconic language do have chaotic good alignment\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:08:58.058726",
        "```sparql\nSELECT ?creature \nWHERE {\n    ?creature a ns1:Beast ;\n             ns1:hasAlignment ns1:ChaoticGood ;\n             FILTER NOT EXISTS { ?creature ns1:hasLanguages ns1:Draconic }\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:08:58.102427",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:08:59.784464",
        "```sparql\nSELECT ?creature \nWHERE {\n    ?creature a ns1:Beast ;\n             ns1:hasAlignment ns1:ChaoticGood .\n    FILTER NOT EXISTS { ?creature ns1:hasLanguages ns1:Draconic }\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:08:59.827830",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:09:01.520403",
        "```sparql\nSELECT ?creature \nWHERE {\n    ?creature a ns1:Beast ;\n             ns1:hasAlignment ns1:ChaoticGood .\n    FILTER NOT EXISTS { ?creature ns1:hasLanguages/ns1:languageName ns1:Draconic }\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:09:13.638150",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubschema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 1644,
      "actualSize": 1170
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 0.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 0.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) AS ?count)\nWHERE {\n\t?creature a ns1:Beast ;\n\t\t\t  ns1:hasAlignment ?alignment ;\n\t\t\t  ns1:hasLanguages ns1:TreantLanguage .\n\t?alignment rdf:type ns1:NonNeutralAlignment\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) AS ?count)\n+WHERE {\n+\t?creature a ns1:Beast ;\n+\t\t\t  ns1:hasAlignment ?alignment ;\n+\t\t\t  ns1:hasLanguages ns1:TreantLanguage .\n+\t?alignment rdf:type ns1:NonNeutralAlignment\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "0"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) AS ?count)\nWHERE {\n\t?creature a ns1:Beast ;\n\t\t\t  ns1:hasAlignment ?alignment ;\n\t\t\t  ns1:hasLanguages ns1:TreantLanguage .\n\t?alignment rdf:type ns1:NonNeutralAlignment\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) AS ?count)\n+WHERE {\n+\t?creature a ns1:Beast ;\n+\t\t\t  ns1:hasAlignment ?alignment ;\n+\t\t\t  ns1:hasLanguages ns1:TreantLanguage .\n+\t?alignment rdf:type ns1:NonNeutralAlignment\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "0"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary005",
      "question": "how many creatures with non-neutral alignment do speak treant language",
      "refSparql": "SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }",
      "refResultSet": [
        "4"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n",
      "iris": "",
      "kgInfoType": "subschema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:02.537676",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:09:13.638157",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:how many creatures with non-neutral alignment do speak treant language\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:09:16.175826",
        "```sparql\nSELECT (COUNT(?creature) AS ?count)\nWHERE {\n\t?creature a ns1:Beast ;\n\t\t\t  ns1:hasAlignment ?alignment ;\n\t\t\t  ns1:hasLanguages ns1:TreantLanguage .\n\t?alignment rdf:type ns1:NonNeutralAlignment\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:09:26.266175",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubschema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 1055,
      "actualSize": 1292
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ns1:Aasimar ns1:canSpell ?spell .\n  ns1:Caypup ns1:canSpell ?spell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ns1:Aasimar ns1:canSpell ?spell .\n+  ns1:Caypup ns1:canSpell ?spell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ?spell a ns1:Spell .\n  ns1:Aasimar ns1:canSpell ?spell .\n  ns1:Caypup ns1:canSpell ?spell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ?spell a ns1:Spell .\n+  ns1:Aasimar ns1:canSpell ?spell .\n+  ns1:Caypup ns1:canSpell ?spell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.2,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.25,
        "sparqlIrisSuffixPrecision": 0.2,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.25,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ns1:Aasimar ns1:canSpell ?spell .\n  ns1:Caypup ns1:canSpell ?spell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ns1:Aasimar ns1:canSpell ?spell .\n+  ns1:Caypup ns1:canSpell ?spell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ns1:Aasimar ns1:canSpell ?spell .\n  ns1:Caypup ns1:canSpell ?spell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ns1:Aasimar ns1:canSpell ?spell .\n+  ns1:Caypup ns1:canSpell ?spell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary007",
      "question": "what spells Aasimar and Caypup do have in common",
      "refSparql": "SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }",
      "refResultSet": [
        "ns1:stabilize"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n",
      "iris": "",
      "kgInfoType": "subschema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:05.534175",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:09:26.266184",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what spells Aasimar and Caypup do have in common\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:09:28.428042",
        "```sparql\nSELECT ?spell\nWHERE {\n  ns1:Aasimar ns1:canSpell ?spell .\n  ns1:Caypup ns1:canSpell ?spell .\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:09:28.453877",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:09:29.822638",
        "```sparql\nSELECT ?spell\nWHERE {\n  ?spell a ns1:Spell .\n  ns1:Aasimar ns1:canSpell ?spell .\n  ns1:Caypup ns1:canSpell ?spell .\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:09:29.847423",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:09:31.800350",
        "```sparql\nSELECT ?spell\nWHERE {\n  ns1:Aasimar ns1:canSpell ?spell .\n  ns1:Caypup ns1:canSpell ?spell .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:09:41.803168",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubschema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 953,
      "actualSize": 968
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "precision": 0.5,
        "recall": 1.0
      },
      "mean": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "precision": 0.5,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignmentType (COUNT(?alignmentType) AS ?count)\nWHERE {\n  ?beast ns1:hasAlignment ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignmentType (COUNT(?alignmentType) AS ?count)\n+WHERE {\n+  ?beast ns1:hasAlignment ?alignmentType .\n+}\n+GROUP BY ?alignmentType\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 2,
        "answerSet": [
          "1762",
          "ns1:trueNeutral"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignmentType (COUNT(?alignmentType) AS ?count)\nWHERE {\n  ?beast ns1:hasAlignment ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignmentType (COUNT(?alignmentType) AS ?count)\n+WHERE {\n+  ?beast ns1:hasAlignment ?alignmentType .\n+}\n+GROUP BY ?alignmentType\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 2,
        "answerSet": [
          "1762",
          "ns1:trueNeutral"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary011",
      "question": "what is the most common alignment type",
      "refSparql": "SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1",
      "refResultSet": [
        "ns1:trueNeutral"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n",
      "iris": "",
      "kgInfoType": "subschema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:03.027990",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:09:41.803177",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what is the most common alignment type\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:09:44.831158",
        "```sparql\nSELECT ?alignmentType (COUNT(?alignmentType) AS ?count)\nWHERE {\n  ?beast ns1:hasAlignment ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:09:54.561789",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubschema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 927,
      "actualSize": 1266
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:ColdResist .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,4 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ns1:ColdResist .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.5,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.5,
        "sparqlIrisSuffixPrecision": 0.5,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.5,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:ColdResist .\n  ?creature a ns1:Beast .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ns1:ColdResist .\n+  ?creature a ns1:Beast .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.25,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.25,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n            ns1:hasResists ns1:ColdResist .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature a ns1:Beast ;\n+            ns1:hasResists ns1:ColdResist .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.25,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.25,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n            ns1:hasResists ns1:ColdResist .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature a ns1:Beast ;\n+            ns1:hasResists ns1:ColdResist .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.25,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.25,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary019",
      "question": "what creatures do have cold resist",
      "refSparql": "SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }",
      "refResultSet": [
        "ns1:aasimar"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n",
      "iris": "",
      "kgInfoType": "subschema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:04.354031",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:09:54.561810",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what creatures do have cold resist\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:09:56.277336",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:ColdResist .\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:09:56.303931",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:09:57.566700",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:ColdResist .\n  ?creature a ns1:Beast .\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:09:57.600200",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:09:58.915820",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n            ns1:hasResists ns1:ColdResist .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:10:10.136075",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubschema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 1312,
      "actualSize": 1955
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature WHERE {\n  ?creature a ns1:Beast.\n  ?creature ns1:hasAlignment ?alignment.\n  ?alignment rdfs:label \"chaotic good\" .\n  FILTER NOT EXISTS { \n    ?creature ns1:hasLanguages ?language .\n    ?language rdfs:label \"draconic\" .\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,9 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature WHERE {\n+  ?creature a ns1:Beast.\n+  ?creature ns1:hasAlignment ?alignment.\n+  ?alignment rdfs:label \"chaotic good\" .\n+  FILTER NOT EXISTS { \n+    ?creature ns1:hasLanguages ?language .\n+    ?language rdfs:label \"draconic\" .\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.4,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.4444444444444445,
        "sparqlIrisSuffixPrecision": 0.4,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.4444444444444445,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature WHERE {\n  ?creature a ns1:Beast.\n  ?creature ns1:hasAlignment ?alignment.\n  ?alignment rdfs:label \"chaotic good\"@en .\n  FILTER NOT EXISTS { \n    ?creature ns1:hasLanguages ?language.\n    ?language rdfs:label \"draconic\"@en .\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,9 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature WHERE {\n+  ?creature a ns1:Beast.\n+  ?creature ns1:hasAlignment ?alignment.\n+  ?alignment rdfs:label \"chaotic good\"@en .\n+  FILTER NOT EXISTS { \n+    ?creature ns1:hasLanguages ?language.\n+    ?language rdfs:label \"draconic\"@en .\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.4,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.4444444444444445,
        "sparqlIrisSuffixPrecision": 0.4,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.4444444444444445,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature WHERE {\n  ?creature a ns1:Beast.\n  ?creature ns1:hasAlignment ?alignment.\n  FILTER NOT EXISTS { \n    ?creature ns1:hasLanguages ?language.\n    ?language rdfs:label \"draconic\"@en .\n  }\n  ?alignment rdfs:label \"chaotic good\"@en .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,9 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature WHERE {\n+  ?creature a ns1:Beast.\n+  ?creature ns1:hasAlignment ?alignment.\n+  FILTER NOT EXISTS { \n+    ?creature ns1:hasLanguages ?language.\n+    ?language rdfs:label \"draconic\"@en .\n+  }\n+  ?alignment rdfs:label \"chaotic good\"@en .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.4,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.4444444444444445,
        "sparqlIrisSuffixPrecision": 0.4,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.4444444444444445,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature WHERE {\n  ?creature a ns1:Beast.\n  ?creature ns1:hasAlignment ?alignment.\n  FILTER NOT EXISTS { \n    ?creature ns1:hasLanguages ?language.\n    ?language rdfs:label \"draconic\"@en .\n  }\n  ?alignment rdfs:label \"chaotic good\"@en .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,9 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature WHERE {\n+  ?creature a ns1:Beast.\n+  ?creature ns1:hasAlignment ?alignment.\n+  FILTER NOT EXISTS { \n+    ?creature ns1:hasLanguages ?language.\n+    ?language rdfs:label \"draconic\"@en .\n+  }\n+  ?alignment rdfs:label \"chaotic good\"@en .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.4,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.4444444444444445,
        "sparqlIrisSuffixPrecision": 0.4,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.4444444444444445,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary001",
      "question": "which creatures not speaking draconic language do have chaotic good alignment",
      "refSparql": "SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }",
      "refResultSet": [
        "ns1:Anhana",
        "ns1:Ataxian",
        "ns1:Azruverda",
        "ns1:BattleImp",
        "ns1:Biofreezer",
        "ns1:BlackButterfly",
        "ns1:Cayhound",
        "ns1:Caypup",
        "ns1:Celedeen",
        "ns1:Cynosoma",
        "ns1:Djinni",
        "ns1:Domovoi",
        "ns1:Dryad",
        "ns1:ElysianTitan",
        "ns1:Faun",
        "ns1:FungalNymph",
        "ns1:Gancanagh",
        "ns1:Garuda",
        "ns1:Hamadryad",
        "ns1:HeraldofDreams",
        "ns1:Munavri",
        "ns1:Muse",
        "ns1:Nisid",
        "ns1:NobleDjinniVizier",
        "ns1:Nymph",
        "ns1:RiftFlumph",
        "ns1:RimefireEidolon",
        "ns1:SapphireOoze",
        "ns1:SkirmishersTroop",
        "ns1:StarMonarch",
        "ns1:SwanMaiden",
        "ns1:Taniwha",
        "ns1:Unicorn",
        "ns1:WoodGiant",
        "ns1:caypup"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n",
      "iris": "",
      "kgInfoType": "subschema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:14.706303",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:10:10.136085",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:which creatures not speaking draconic language do have chaotic good alignment\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:10:15.573017",
        "```sparql\nSELECT ?creature WHERE {\n  ?creature a ns1:Beast.\n  ?creature ns1:hasAlignment ?alignment.\n  ?alignment rdfs:label \"chaotic good\" .\n  FILTER NOT EXISTS { \n    ?creature ns1:hasLanguages ?language .\n    ?language rdfs:label \"draconic\" .\n  }\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:10:15.606003",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:10:21.495124",
        "```sparql\nSELECT ?creature WHERE {\n  ?creature a ns1:Beast.\n  ?creature ns1:hasAlignment ?alignment.\n  ?alignment rdfs:label \"chaotic good\"@en .\n  FILTER NOT EXISTS { \n    ?creature ns1:hasLanguages ?language.\n    ?language rdfs:label \"draconic\"@en .\n  }\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:10:21.537200",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:10:24.842378",
        "```sparql\nSELECT ?creature WHERE {\n  ?creature a ns1:Beast.\n  ?creature ns1:hasAlignment ?alignment.\n  FILTER NOT EXISTS { \n    ?creature ns1:hasLanguages ?language.\n    ?language rdfs:label \"draconic\"@en .\n  }\n  ?alignment rdfs:label \"chaotic good\"@en .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:10:34.533633",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubschema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 1644,
      "actualSize": 1206
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 0.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 0.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) AS ?nonNeutralSpeakingCreatureCount)\nWHERE {\n  ?creature ns1:hasAlignment ?alignment.\n  ?creature ns1:hasLanguages ?language.\n  FILTER(?alignment != ns1:Neutral)\n  FILTER(?language = ns1:TreantLanguage)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) AS ?nonNeutralSpeakingCreatureCount)\n+WHERE {\n+  ?creature ns1:hasAlignment ?alignment.\n+  ?creature ns1:hasLanguages ?language.\n+  FILTER(?alignment != ns1:Neutral)\n+  FILTER(?language = ns1:TreantLanguage)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.5,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.4,
        "sparqlIrisSuffixPrecision": 0.5,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.4,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "0"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) AS ?nonNeutralSpeakingCreatureCount)\nWHERE {\n  ?creature ns1:hasAlignment ?alignment.\n  ?creature ns1:hasLanguages ?language.\n  FILTER(?alignment != ns1:Neutral)\n  FILTER(?language = ns1:TreantLanguage)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) AS ?nonNeutralSpeakingCreatureCount)\n+WHERE {\n+  ?creature ns1:hasAlignment ?alignment.\n+  ?creature ns1:hasLanguages ?language.\n+  FILTER(?alignment != ns1:Neutral)\n+  FILTER(?language = ns1:TreantLanguage)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.5,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.4,
        "sparqlIrisSuffixPrecision": 0.5,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.4,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "0"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary005",
      "question": "how many creatures with non-neutral alignment do speak treant language",
      "refSparql": "SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }",
      "refResultSet": [
        "4"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n",
      "iris": "",
      "kgInfoType": "subschema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:04.640778",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:10:34.533641",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:how many creatures with non-neutral alignment do speak treant language\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:10:39.174411",
        "```sparql\nSELECT (COUNT(?creature) AS ?nonNeutralSpeakingCreatureCount)\nWHERE {\n  ?creature ns1:hasAlignment ?alignment.\n  ?creature ns1:hasLanguages ?language.\n  FILTER(?alignment != ns1:Neutral)\n  FILTER(?language = ns1:TreantLanguage)\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:10:50.310494",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubschema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 1055,
      "actualSize": 1347
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ?aas ns1:canSpell ?spell .\n  ?cay ns1:canSpell ?spell .\n  ?aas a ns1:Aasimar .\n  ?cay a ns1:Caypup .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ?aas ns1:canSpell ?spell .\n+  ?cay ns1:canSpell ?spell .\n+  ?aas a ns1:Aasimar .\n+  ?cay a ns1:Caypup .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.25,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.28571428571428575,
        "sparqlIrisSuffixPrecision": 0.25,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.28571428571428575,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ?aasimar ns1:canSpell ?spell .\n  ?caypup ns1:canSpell ?spell .\n  ?aasimar a ns1:Aasimar .\n  ?caypup a ns1:Caypup .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ?aasimar ns1:canSpell ?spell .\n+  ?caypup ns1:canSpell ?spell .\n+  ?aasimar a ns1:Aasimar .\n+  ?caypup a ns1:Caypup .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.25,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.28571428571428575,
        "sparqlIrisSuffixPrecision": 0.25,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.28571428571428575,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ns1:Aasimar ns1:canSpell ?spell .\n  ns1:Caypup ns1:canSpell ?spell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ns1:Aasimar ns1:canSpell ?spell .\n+  ns1:Caypup ns1:canSpell ?spell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ns1:Aasimar ns1:canSpell ?spell .\n  ns1:Caypup ns1:canSpell ?spell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ns1:Aasimar ns1:canSpell ?spell .\n+  ns1:Caypup ns1:canSpell ?spell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary007",
      "question": "what spells Aasimar and Caypup do have in common",
      "refSparql": "SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }",
      "refResultSet": [
        "ns1:stabilize"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n",
      "iris": "",
      "kgInfoType": "subschema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:11.045464",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:10:50.310502",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what spells Aasimar and Caypup do have in common\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:10:55.117391",
        "```sparql\nSELECT ?spell\nWHERE {\n  ?aas ns1:canSpell ?spell .\n  ?cay ns1:canSpell ?spell .\n  ?aas a ns1:Aasimar .\n  ?cay a ns1:Caypup .\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:10:55.156678",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:10:58.509925",
        "```sparql\nSELECT ?spell\nWHERE {\n  ?aasimar ns1:canSpell ?spell .\n  ?caypup ns1:canSpell ?spell .\n  ?aasimar a ns1:Aasimar .\n  ?caypup a ns1:Caypup .\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:10:58.537481",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:11:01.355958",
        "```sparql\nSELECT ?spell\nWHERE {\n  ns1:Aasimar ns1:canSpell ?spell .\n  ns1:Caypup ns1:canSpell ?spell .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:11:10.771634",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubschema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 953,
      "actualSize": 952
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "precision": 0.5,
        "recall": 1.0
      },
      "mean": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "precision": 0.5,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignment (COUNT(?alignment) AS ?count)\nWHERE {\n  ?beast ns1:hasAlignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignment (COUNT(?alignment) AS ?count)\n+WHERE {\n+  ?beast ns1:hasAlignment ?alignment .\n+}\n+GROUP BY ?alignment\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 2,
        "answerSet": [
          "1762",
          "ns1:trueNeutral"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignment (COUNT(?alignment) AS ?count)\nWHERE {\n  ?beast ns1:hasAlignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignment (COUNT(?alignment) AS ?count)\n+WHERE {\n+  ?beast ns1:hasAlignment ?alignment .\n+}\n+GROUP BY ?alignment\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 2,
        "answerSet": [
          "1762",
          "ns1:trueNeutral"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary011",
      "question": "what is the most common alignment type",
      "refSparql": "SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1",
      "refResultSet": [
        "ns1:trueNeutral"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n",
      "iris": "",
      "kgInfoType": "subschema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:03.952452",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:11:10.771684",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what is the most common alignment type\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:11:14.724086",
        "```sparql\nSELECT ?alignment (COUNT(?alignment) AS ?count)\nWHERE {\n  ?beast ns1:hasAlignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:11:25.884525",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubschema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 927,
      "actualSize": 1375
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature rdf:type ns1:Beast ; \n            ns1:hasResists ns1:ColdResist .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature rdf:type ns1:Beast ; \n+            ns1:hasResists ns1:ColdResist .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.25,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.25,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ?resist .\n  ?resist rdfs:label ?label .\n  FILTER(CONTAINS(LCASE(?label), \"cold\"))\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ?resist .\n+  ?resist rdfs:label ?label .\n+  FILTER(CONTAINS(LCASE(?label), \"cold\"))\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.5,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.5,
        "sparqlIrisSuffixPrecision": 0.5,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.5,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature rdf:type ns1:Beast .\n  ?creature ns1:hasResists ?resist .\n  ?resist rdfs:label \"ColdResist\" .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature rdf:type ns1:Beast .\n+  ?creature ns1:hasResists ?resist .\n+  ?resist rdfs:label \"ColdResist\" .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.25,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.25,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature rdf:type ns1:Beast .\n  ?creature ns1:hasResists ?resist .\n  ?resist rdfs:label \"ColdResist\" .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature rdf:type ns1:Beast .\n+  ?creature ns1:hasResists ?resist .\n+  ?resist rdfs:label \"ColdResist\" .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.25,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.25,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary019",
      "question": "what creatures do have cold resist",
      "refSparql": "SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }",
      "refResultSet": [
        "ns1:aasimar"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n",
      "iris": "",
      "kgInfoType": "subschema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:08.822566",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:11:25.884533",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what creatures do have cold resist\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:11:29.099095",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature rdf:type ns1:Beast ; \n            ns1:hasResists ns1:ColdResist .\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:11:29.131820",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:11:31.948552",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ?resist .\n  ?resist rdfs:label ?label .\n  FILTER(CONTAINS(LCASE(?label), \"cold\"))\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:11:32.017322",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:11:34.707091",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature rdf:type ns1:Beast .\n  ?creature ns1:hasResists ?resist .\n  ?resist rdfs:label \"ColdResist\" .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:11:45.596543",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubschema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 1312,
      "actualSize": 1863
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n            ns1:hasAlignment ?alignment .\n  MINUS {\n    ?creature ns1:hasLanguages ns1:Draconic .\n  }\n  FILTER EXISTS {\n    ?alignment rdfs:label \"Chaotic Good\"@en .\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,11 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature a ns1:Beast ;\n+            ns1:hasAlignment ?alignment .\n+  MINUS {\n+    ?creature ns1:hasLanguages ns1:Draconic .\n+  }\n+  FILTER EXISTS {\n+    ?alignment rdfs:label \"Chaotic Good\"@en .\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.4,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.4,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n            ns1:hasAlignment ?alignment .\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages ?language .\n    ?language rdfs:label \"Draconic\"@en .\n  }\n  ?alignment rdfs:label \"Chaotic Good\"@en .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,10 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature a ns1:Beast ;\n+            ns1:hasAlignment ?alignment .\n+  FILTER NOT EXISTS {\n+    ?creature ns1:hasLanguages ?language .\n+    ?language rdfs:label \"Draconic\"@en .\n+  }\n+  ?alignment rdfs:label \"Chaotic Good\"@en .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.4,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.4444444444444445,
        "sparqlIrisSuffixPrecision": 0.4,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.4444444444444445,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n            ns1:hasAlignment ns1:ChaoticGood .\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages ns1:Draconic .\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature a ns1:Beast ;\n+            ns1:hasAlignment ns1:ChaoticGood .\n+  FILTER NOT EXISTS {\n+    ?creature ns1:hasLanguages ns1:Draconic .\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.4,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.4,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n            ns1:hasAlignment ns1:ChaoticGood .\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages ns1:Draconic .\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature a ns1:Beast ;\n+            ns1:hasAlignment ns1:ChaoticGood .\n+  FILTER NOT EXISTS {\n+    ?creature ns1:hasLanguages ns1:Draconic .\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.4,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.4,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary001",
      "question": "which creatures not speaking draconic language do have chaotic good alignment",
      "refSparql": "SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }",
      "refResultSet": [
        "ns1:Anhana",
        "ns1:Ataxian",
        "ns1:Azruverda",
        "ns1:BattleImp",
        "ns1:Biofreezer",
        "ns1:BlackButterfly",
        "ns1:Cayhound",
        "ns1:Caypup",
        "ns1:Celedeen",
        "ns1:Cynosoma",
        "ns1:Djinni",
        "ns1:Domovoi",
        "ns1:Dryad",
        "ns1:ElysianTitan",
        "ns1:Faun",
        "ns1:FungalNymph",
        "ns1:Gancanagh",
        "ns1:Garuda",
        "ns1:Hamadryad",
        "ns1:HeraldofDreams",
        "ns1:Munavri",
        "ns1:Muse",
        "ns1:Nisid",
        "ns1:NobleDjinniVizier",
        "ns1:Nymph",
        "ns1:RiftFlumph",
        "ns1:RimefireEidolon",
        "ns1:SapphireOoze",
        "ns1:SkirmishersTroop",
        "ns1:StarMonarch",
        "ns1:SwanMaiden",
        "ns1:Taniwha",
        "ns1:Unicorn",
        "ns1:WoodGiant",
        "ns1:caypup"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n",
      "iris": "",
      "kgInfoType": "subschema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:14.287941",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:11:45.596552",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:which creatures not speaking draconic language do have chaotic good alignment\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:11:52.146293",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n            ns1:hasAlignment ?alignment .\n  MINUS {\n    ?creature ns1:hasLanguages ns1:Draconic .\n  }\n  FILTER EXISTS {\n    ?alignment rdfs:label \"Chaotic Good\"@en .\n  }\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:11:53.209978",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:11:56.944493",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n            ns1:hasAlignment ?alignment .\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages ?language .\n    ?language rdfs:label \"Draconic\"@en .\n  }\n  ?alignment rdfs:label \"Chaotic Good\"@en .\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:11:57.006709",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:11:59.884484",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n            ns1:hasAlignment ns1:ChaoticGood .\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages ns1:Draconic .\n  }\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:12:11.780650",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubschema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 1644,
      "actualSize": 1192
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 0.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 0.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) AS ?creatureCount)\nWHERE {\n  ?creature ns1:hasAlignment ?alignment .\n  ?creature ns1:hasLanguages ?language .\n  ?language rdfs:label \"treant\" .\n  FILTER(?alignment != ns1:NeutralAlignment)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) AS ?creatureCount)\n+WHERE {\n+  ?creature ns1:hasAlignment ?alignment .\n+  ?creature ns1:hasLanguages ?language .\n+  ?language rdfs:label \"treant\" .\n+  FILTER(?alignment != ns1:NeutralAlignment)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.5,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.4,
        "sparqlIrisSuffixPrecision": 0.5,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.4,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "0"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) AS ?creatureCount)\nWHERE {\n  ?creature ns1:hasAlignment ?alignment .\n  ?creature ns1:hasLanguages ?language .\n  ?language rdfs:label \"treant\" .\n  FILTER(?alignment != ns1:NeutralAlignment)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) AS ?creatureCount)\n+WHERE {\n+  ?creature ns1:hasAlignment ?alignment .\n+  ?creature ns1:hasLanguages ?language .\n+  ?language rdfs:label \"treant\" .\n+  FILTER(?alignment != ns1:NeutralAlignment)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.5,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.4,
        "sparqlIrisSuffixPrecision": 0.5,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.4,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "0"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary005",
      "question": "how many creatures with non-neutral alignment do speak treant language",
      "refSparql": "SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }",
      "refResultSet": [
        "4"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n",
      "iris": "",
      "kgInfoType": "subschema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:03.776261",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:12:11.780662",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:how many creatures with non-neutral alignment do speak treant language\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:12:15.556911",
        "```sparql\nSELECT (COUNT(?creature) AS ?creatureCount)\nWHERE {\n  ?creature ns1:hasAlignment ?alignment .\n  ?creature ns1:hasLanguages ?language .\n  ?language rdfs:label \"treant\" .\n  FILTER(?alignment != ns1:NeutralAlignment)\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:12:27.113644",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubschema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 1055,
      "actualSize": 1375
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ns1:Aasimar ns1:canSpell ?spell .\n  ns1:Caypup ns1:canSpell ?spell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ns1:Aasimar ns1:canSpell ?spell .\n+  ns1:Caypup ns1:canSpell ?spell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ?aasimar ns1:canSpell ?spell .\n  ?caypup ns1:canSpell ?spell .\n  ?aasimar a ns1:Aasimar .\n  ?caypup a ns1:Caypup .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ?aasimar ns1:canSpell ?spell .\n+  ?caypup ns1:canSpell ?spell .\n+  ?aasimar a ns1:Aasimar .\n+  ?caypup a ns1:Caypup .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.25,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.28571428571428575,
        "sparqlIrisSuffixPrecision": 0.25,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.28571428571428575,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ?aasimar rdf:type ns1:Aasimar ;\n           ns1:canSpell ?spell .\n  ?caypup rdf:type ns1:Caypup ;\n          ns1:canSpell ?spell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ?aasimar rdf:type ns1:Aasimar ;\n+           ns1:canSpell ?spell .\n+  ?caypup rdf:type ns1:Caypup ;\n+          ns1:canSpell ?spell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.25,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.28571428571428575,
        "sparqlIrisSuffixPrecision": 0.25,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.28571428571428575,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ?aasimar rdf:type ns1:Aasimar ;\n           ns1:canSpell ?spell .\n  ?caypup rdf:type ns1:Caypup ;\n          ns1:canSpell ?spell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ?aasimar rdf:type ns1:Aasimar ;\n+           ns1:canSpell ?spell .\n+  ?caypup rdf:type ns1:Caypup ;\n+          ns1:canSpell ?spell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.25,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.28571428571428575,
        "sparqlIrisSuffixPrecision": 0.25,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.28571428571428575,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary007",
      "question": "what spells Aasimar and Caypup do have in common",
      "refSparql": "SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }",
      "refResultSet": [
        "ns1:stabilize"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n",
      "iris": "",
      "kgInfoType": "subschema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:15.251661",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:12:27.113652",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what spells Aasimar and Caypup do have in common\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:12:32.914029",
        "```sparql\nSELECT ?spell\nWHERE {\n  ns1:Aasimar ns1:canSpell ?spell .\n  ns1:Caypup ns1:canSpell ?spell .\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:12:32.928595",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:12:37.727468",
        "```sparql\nSELECT ?spell\nWHERE {\n  ?aasimar ns1:canSpell ?spell .\n  ?caypup ns1:canSpell ?spell .\n  ?aasimar a ns1:Aasimar .\n  ?caypup a ns1:Caypup .\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:12:37.774292",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:12:42.365305",
        "```sparql\nSELECT ?spell\nWHERE {\n  ?aasimar rdf:type ns1:Aasimar ;\n           ns1:canSpell ?spell .\n  ?caypup rdf:type ns1:Caypup ;\n          ns1:canSpell ?spell .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:12:54.917438",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubschema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 953,
      "actualSize": 1688
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary011",
        "sparql": "SELECT (COUNT(?alignment) as ?count) ?alignmentType\nWHERE {\n  ?beast a ns1:Beast .\n  ?beast ns1:hasAlignment ?alignment .\n  ?alignment rdfs:label ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,9 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT (COUNT(?alignment) as ?count) ?alignmentType\n+WHERE {\n+  ?beast a ns1:Beast .\n+  ?beast ns1:hasAlignment ?alignment .\n+  ?alignment rdfs:label ?alignmentType .\n+}\n+GROUP BY ?alignmentType\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.25,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 0.4,
        "sparqlIrisSuffixPrecision": 0.25,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 0.4,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignmentType (COUNT(?alignmentType) as ?alignmentCount)\nWHERE {\n  ?beast ns1:hasAlignment ?alignment .\n  ?alignment rdfs:label ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?alignmentCount)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignmentType (COUNT(?alignmentType) as ?alignmentCount)\n+WHERE {\n+  ?beast ns1:hasAlignment ?alignment .\n+  ?alignment rdfs:label ?alignmentType .\n+}\n+GROUP BY ?alignmentType\n+ORDER BY DESC(?alignmentCount)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.5,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 0.6666666666666666,
        "sparqlIrisSuffixPrecision": 0.5,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 0.6666666666666666,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignmentType (COUNT(?beast) AS ?NumberOfBeasts)\nWHERE {\n  ?beast ns1:hasAlignment ?alignment .\n  ?alignment rdfs:label ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?NumberOfBeasts)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignmentType (COUNT(?beast) AS ?NumberOfBeasts)\n+WHERE {\n+  ?beast ns1:hasAlignment ?alignment .\n+  ?alignment rdfs:label ?alignmentType .\n+}\n+GROUP BY ?alignmentType\n+ORDER BY DESC(?NumberOfBeasts)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.5,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 0.6666666666666666,
        "sparqlIrisSuffixPrecision": 0.5,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 0.6666666666666666,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignmentType (COUNT(?beast) AS ?NumberOfBeasts)\nWHERE {\n  ?beast ns1:hasAlignment ?alignment .\n  ?alignment rdfs:label ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?NumberOfBeasts)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignmentType (COUNT(?beast) AS ?NumberOfBeasts)\n+WHERE {\n+  ?beast ns1:hasAlignment ?alignment .\n+  ?alignment rdfs:label ?alignmentType .\n+}\n+GROUP BY ?alignmentType\n+ORDER BY DESC(?NumberOfBeasts)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.5,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 0.6666666666666666,
        "sparqlIrisSuffixPrecision": 0.5,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 0.6666666666666666,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary011",
      "question": "what is the most common alignment type",
      "refSparql": "SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1",
      "refResultSet": [
        "ns1:trueNeutral"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n",
      "iris": "",
      "kgInfoType": "subschema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:10.658761",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:12:54.917454",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what is the most common alignment type\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:12:58.625628",
        "```sparql\nSELECT (COUNT(?alignment) as ?count) ?alignmentType\nWHERE {\n  ?beast a ns1:Beast .\n  ?beast ns1:hasAlignment ?alignment .\n  ?alignment rdfs:label ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:12:58.988719",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:13:02.244512",
        "```sparql\nSELECT ?alignmentType (COUNT(?alignmentType) as ?alignmentCount)\nWHERE {\n  ?beast ns1:hasAlignment ?alignment .\n  ?alignment rdfs:label ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?alignmentCount)\nLIMIT 1\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:13:02.308341",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:13:05.576199",
        "```sparql\nSELECT ?alignmentType (COUNT(?beast) AS ?NumberOfBeasts)\nWHERE {\n  ?beast ns1:hasAlignment ?alignment .\n  ?alignment rdfs:label ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?NumberOfBeasts)\nLIMIT 1\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:13:17.111370",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubschema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 927,
      "actualSize": 1322
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists/ns1:coldResist ?resistance.\n  FILTER(?resistance > 0)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists/ns1:coldResist ?resistance.\n+  FILTER(?resistance > 0)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.5,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.5,
        "sparqlIrisSuffixPrecision": 0.5,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.5,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ?resist.\n  ?resist ns1:coldResist ?value.\n  FILTER(?value = true)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ?resist.\n+  ?resist ns1:coldResist ?value.\n+  FILTER(?value = true)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.5,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.5,
        "sparqlIrisSuffixPrecision": 0.5,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.5,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ?resist.\n  ?resist rdfs:label \"cold\" .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ?resist.\n+  ?resist rdfs:label \"cold\" .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.5,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.5,
        "sparqlIrisSuffixPrecision": 0.5,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.5,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ?resist.\n  ?resist rdfs:label \"cold\" .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ?resist.\n+  ?resist rdfs:label \"cold\" .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.5,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.5,
        "sparqlIrisSuffixPrecision": 0.5,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.5,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary019",
      "question": "what creatures do have cold resist",
      "refSparql": "SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }",
      "refResultSet": [
        "ns1:aasimar"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n",
      "iris": "",
      "kgInfoType": "subschema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:08.930116",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:13:17.111378",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what creatures do have cold resist\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:13:21.176384",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasResists/ns1:coldResist ?resistance.\n  FILTER(?resistance > 0)\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:13:21.203356",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:13:23.547300",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ?resist.\n  ?resist ns1:coldResist ?value.\n  FILTER(?value = true)\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:13:23.603665",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:13:26.041486",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ?resist.\n  ?resist rdfs:label \"cold\" .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:13:37.987343",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubschema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 1312,
      "actualSize": 1973
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature a ns1:Beast .\n  ?creature ns1:hasAlignment ?alignment .\n  ?alignment rdfs:label \"Chaotic Good\"@en .\n  \n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages ?language .\n    ?language rdfs:label \"Draconic\"@en .\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,11 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature a ns1:Beast .\n+  ?creature ns1:hasAlignment ?alignment .\n+  ?alignment rdfs:label \"Chaotic Good\"@en .\n+  \n+  FILTER NOT EXISTS {\n+    ?creature ns1:hasLanguages ?language .\n+    ?language rdfs:label \"Draconic\"@en .\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.4,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.4444444444444445,
        "sparqlIrisSuffixPrecision": 0.4,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.4444444444444445,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature a ns1:Beast .\n  ?creature ns1:hasAlignment ?alignment .\n  ?alignment rdfs:label \"Chaotic Good\"@en .\n\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages ?language .\n    FILTER (?language IN (ns1:Draconic))\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,11 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature a ns1:Beast .\n+  ?creature ns1:hasAlignment ?alignment .\n+  ?alignment rdfs:label \"Chaotic Good\"@en .\n+\n+  FILTER NOT EXISTS {\n+    ?creature ns1:hasLanguages ?language .\n+    FILTER (?language IN (ns1:Draconic))\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.4,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.4,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature a ns1:Beast .\n  ?creature ns1:hasAlignment ?alignment .\n  ?alignment rdfs:label \"Chaotic Good\"@en .\n  \n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages ?language .\n    ?language rdfs:label \"Draconic\"@en .\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,11 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature a ns1:Beast .\n+  ?creature ns1:hasAlignment ?alignment .\n+  ?alignment rdfs:label \"Chaotic Good\"@en .\n+  \n+  FILTER NOT EXISTS {\n+    ?creature ns1:hasLanguages ?language .\n+    ?language rdfs:label \"Draconic\"@en .\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.4,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.4444444444444445,
        "sparqlIrisSuffixPrecision": 0.4,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.4444444444444445,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature a ns1:Beast .\n  ?creature ns1:hasAlignment ?alignment .\n  ?alignment rdfs:label \"Chaotic Good\"@en .\n  \n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages ?language .\n    ?language rdfs:label \"Draconic\"@en .\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,11 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature a ns1:Beast .\n+  ?creature ns1:hasAlignment ?alignment .\n+  ?alignment rdfs:label \"Chaotic Good\"@en .\n+  \n+  FILTER NOT EXISTS {\n+    ?creature ns1:hasLanguages ?language .\n+    ?language rdfs:label \"Draconic\"@en .\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.4,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.4444444444444445,
        "sparqlIrisSuffixPrecision": 0.4,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.4444444444444445,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary001",
      "question": "which creatures not speaking draconic language do have chaotic good alignment",
      "refSparql": "SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }",
      "refResultSet": [
        "ns1:Anhana",
        "ns1:Ataxian",
        "ns1:Azruverda",
        "ns1:BattleImp",
        "ns1:Biofreezer",
        "ns1:BlackButterfly",
        "ns1:Cayhound",
        "ns1:Caypup",
        "ns1:Celedeen",
        "ns1:Cynosoma",
        "ns1:Djinni",
        "ns1:Domovoi",
        "ns1:Dryad",
        "ns1:ElysianTitan",
        "ns1:Faun",
        "ns1:FungalNymph",
        "ns1:Gancanagh",
        "ns1:Garuda",
        "ns1:Hamadryad",
        "ns1:HeraldofDreams",
        "ns1:Munavri",
        "ns1:Muse",
        "ns1:Nisid",
        "ns1:NobleDjinniVizier",
        "ns1:Nymph",
        "ns1:RiftFlumph",
        "ns1:RimefireEidolon",
        "ns1:SapphireOoze",
        "ns1:SkirmishersTroop",
        "ns1:StarMonarch",
        "ns1:SwanMaiden",
        "ns1:Taniwha",
        "ns1:Unicorn",
        "ns1:WoodGiant",
        "ns1:caypup"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n",
      "iris": "",
      "kgInfoType": "subschema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:15.150268",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:13:37.987351",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:which creatures not speaking draconic language do have chaotic good alignment\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:13:43.411007",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature a ns1:Beast .\n  ?creature ns1:hasAlignment ?alignment .\n  ?alignment rdfs:label \"Chaotic Good\"@en .\n  \n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages ?language .\n    ?language rdfs:label \"Draconic\"@en .\n  }\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:13:43.438810",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:13:49.055765",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature a ns1:Beast .\n  ?creature ns1:hasAlignment ?alignment .\n  ?alignment rdfs:label \"Chaotic Good\"@en .\n\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages ?language .\n    FILTER (?language IN (ns1:Draconic))\n  }\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:13:49.103571",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:13:53.137611",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature a ns1:Beast .\n  ?creature ns1:hasAlignment ?alignment .\n  ?alignment rdfs:label \"Chaotic Good\"@en .\n  \n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages ?language .\n    ?language rdfs:label \"Draconic\"@en .\n  }\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:14:03.674298",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubschema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 1644,
      "actualSize": 1243
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 0.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 0.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) as ?Count)\nWHERE {\n  ?creature a ns1:Beast .\n  ?creature ns1:hasAlignment ?alignment .\n  ?alignment ns1:name ?alignmentName .\n  FILTER(?alignmentName != \"neutral\")\n  \n  ?creature ns1:hasLanguages ?language .\n  ?language ns1:name \"treant\" .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,10 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) as ?Count)\n+WHERE {\n+  ?creature a ns1:Beast .\n+  ?creature ns1:hasAlignment ?alignment .\n+  ?alignment ns1:name ?alignmentName .\n+  FILTER(?alignmentName != \"neutral\")\n+  \n+  ?creature ns1:hasLanguages ?language .\n+  ?language ns1:name \"treant\" .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.4,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3636363636363636,
        "sparqlIrisSuffixPrecision": 0.4,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3636363636363636,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "0"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) as ?Count)\nWHERE {\n  ?creature a ns1:Beast .\n  ?creature ns1:hasAlignment ?alignment .\n  ?alignment ns1:name ?alignmentName .\n  FILTER(?alignmentName != \"neutral\")\n  \n  ?creature ns1:hasLanguages ?language .\n  ?language ns1:name \"treant\" .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,10 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) as ?Count)\n+WHERE {\n+  ?creature a ns1:Beast .\n+  ?creature ns1:hasAlignment ?alignment .\n+  ?alignment ns1:name ?alignmentName .\n+  FILTER(?alignmentName != \"neutral\")\n+  \n+  ?creature ns1:hasLanguages ?language .\n+  ?language ns1:name \"treant\" .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.4,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3636363636363636,
        "sparqlIrisSuffixPrecision": 0.4,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3636363636363636,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "0"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary005",
      "question": "how many creatures with non-neutral alignment do speak treant language",
      "refSparql": "SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }",
      "refResultSet": [
        "4"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n",
      "iris": "",
      "kgInfoType": "subschema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:13.414356",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:14:03.674306",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:how many creatures with non-neutral alignment do speak treant language\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:14:17.088654",
        "```sparql\nSELECT (COUNT(?creature) as ?Count)\nWHERE {\n  ?creature a ns1:Beast .\n  ?creature ns1:hasAlignment ?alignment .\n  ?alignment ns1:name ?alignmentName .\n  FILTER(?alignmentName != \"neutral\")\n  \n  ?creature ns1:hasLanguages ?language .\n  ?language ns1:name \"treant\" .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:14:26.900697",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubschema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 1055,
      "actualSize": 1349
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?commonSpell\nWHERE {\n    ns1:Aasimar ns1:canSpell ?commonSpell .\n    ns1:Caypup ns1:canSpell ?commonSpell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?commonSpell\n+WHERE {\n+    ns1:Aasimar ns1:canSpell ?commonSpell .\n+    ns1:Caypup ns1:canSpell ?commonSpell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?commonSpell\nWHERE {\n    ?commonSpell ns1:canSpell ns1:Aasimar .\n    ?commonSpell ns1:canSpell ns1:Caypup .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?commonSpell\n+WHERE {\n+    ?commonSpell ns1:canSpell ns1:Aasimar .\n+    ?commonSpell ns1:canSpell ns1:Caypup .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ?spell rdf:type ns1:Spell ;\n         ns1:canBeCastBy ns1:Aasimar ;\n         ns1:canBeCastBy ns1:Caypup .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ?spell rdf:type ns1:Spell ;\n+         ns1:canBeCastBy ns1:Aasimar ;\n+         ns1:canBeCastBy ns1:Caypup .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ?spell rdf:type ns1:Spell ;\n         ns1:canBeCastBy ns1:Aasimar ;\n         ns1:canBeCastBy ns1:Caypup .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ?spell rdf:type ns1:Spell ;\n+         ns1:canBeCastBy ns1:Aasimar ;\n+         ns1:canBeCastBy ns1:Caypup .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.0,
        "sparqlIrisRecall": 0.0,
        "sparqlIrisF1measure": 0.0,
        "sparqlIrisSuffixPrecision": 0.0,
        "sparqlIrisSuffixRecall": 0.0,
        "sparqlIrisSuffixF1measure": 0.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary007",
      "question": "what spells Aasimar and Caypup do have in common",
      "refSparql": "SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }",
      "refResultSet": [
        "ns1:stabilize"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n",
      "iris": "",
      "kgInfoType": "subschema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:09.468710",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:14:26.900704",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what spells Aasimar and Caypup do have in common\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:14:30.059328",
        "```sparql\nSELECT ?commonSpell\nWHERE {\n    ns1:Aasimar ns1:canSpell ?commonSpell .\n    ns1:Caypup ns1:canSpell ?commonSpell .\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:14:30.073158",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:14:33.016337",
        "```sparql\nSELECT ?commonSpell\nWHERE {\n    ?commonSpell ns1:canSpell ns1:Aasimar .\n    ?commonSpell ns1:canSpell ns1:Caypup .\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:14:33.034658",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:14:36.369407",
        "```sparql\nSELECT ?spell\nWHERE {\n  ?spell rdf:type ns1:Spell ;\n         ns1:canBeCastBy ns1:Aasimar ;\n         ns1:canBeCastBy ns1:Caypup .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:14:46.343846",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubschema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 953,
      "actualSize": 975
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "precision": 0.5,
        "recall": 1.0
      },
      "mean": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "precision": 0.5,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignment (COUNT(?alignment) AS ?count)\nWHERE {\n  ?beast a ns1:Beast .\n  ?beast ns1:hasAlignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignment (COUNT(?alignment) AS ?count)\n+WHERE {\n+  ?beast a ns1:Beast .\n+  ?beast ns1:hasAlignment ?alignment .\n+}\n+GROUP BY ?alignment\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 0.5,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 0.5,
        "answerResultLength": 1,
        "answerSetSize": 2,
        "answerSet": [
          "1762",
          "ns1:trueNeutral"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignment (COUNT(?alignment) AS ?count)\nWHERE {\n  ?beast a ns1:Beast .\n  ?beast ns1:hasAlignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignment (COUNT(?alignment) AS ?count)\n+WHERE {\n+  ?beast a ns1:Beast .\n+  ?beast ns1:hasAlignment ?alignment .\n+}\n+GROUP BY ?alignment\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 0.5,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 0.5,
        "answerResultLength": 1,
        "answerSetSize": 2,
        "answerSet": [
          "1762",
          "ns1:trueNeutral"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary011",
      "question": "what is the most common alignment type",
      "refSparql": "SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1",
      "refResultSet": [
        "ns1:trueNeutral"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n",
      "iris": "",
      "kgInfoType": "subschema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:04.726984",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:14:46.343854",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what is the most common alignment type\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:14:51.070830",
        "```sparql\nSELECT ?alignment (COUNT(?alignment) AS ?count)\nWHERE {\n  ?beast a ns1:Beast .\n  ?beast ns1:hasAlignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:15:02.104605",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubschema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 927,
      "actualSize": 1273
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:ColdResist .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,4 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ns1:ColdResist .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.5,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.5,
        "sparqlIrisSuffixPrecision": 0.5,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.5,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ?resist .\n  ?resist rdfs:label \"Cold\" .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ?resist .\n+  ?resist rdfs:label \"Cold\" .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.5,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.5,
        "sparqlIrisSuffixPrecision": 0.5,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.5,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ?resistance .\n  ?resistance rdfs:label \"ColdResist\".\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ?resistance .\n+  ?resistance rdfs:label \"ColdResist\".\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.5,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.5,
        "sparqlIrisSuffixPrecision": 0.5,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.5,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ?resistance .\n  ?resistance rdfs:label \"ColdResist\".\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ?resistance .\n+  ?resistance rdfs:label \"ColdResist\".\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.5,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.5,
        "sparqlIrisSuffixPrecision": 0.5,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.5,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary019",
      "question": "what creatures do have cold resist",
      "refSparql": "SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }",
      "refResultSet": [
        "ns1:aasimar"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n",
      "iris": "",
      "kgInfoType": "subschema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:08.893349",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:15:02.104611",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what creatures do have cold resist\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:15:04.463754",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:ColdResist .\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:15:04.496995",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:15:07.740707",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ?resist .\n  ?resist rdfs:label \"Cold\" .\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:15:07.781999",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:15:10.997954",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ?resistance .\n  ?resistance rdfs:label \"ColdResist\".\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:15:23.472307",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubschema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 1312,
      "actualSize": 1995
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature rdf:type ns1:Beast .\n  ?creature ns1:hasAlignment ?alignment .\n  ?alignment rdfs:label \"Chaotic Good\" .\n  \n  OPTIONAL {\n    ?creature ns1:hasLanguages ?language .\n    FILTER (str(?language) = \"Draconic\")\n  }\n  FILTER (!BOUND(?language))\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,12 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature rdf:type ns1:Beast .\n+  ?creature ns1:hasAlignment ?alignment .\n+  ?alignment rdfs:label \"Chaotic Good\" .\n+  \n+  OPTIONAL {\n+    ?creature ns1:hasLanguages ?language .\n+    FILTER (str(?language) = \"Draconic\")\n+  }\n+  FILTER (!BOUND(?language))\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.4,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.4444444444444445,
        "sparqlIrisSuffixPrecision": 0.4,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.4444444444444445,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature rdf:type ns1:Beast .\n  ?creature ns1:hasAlignment ?alignment .\n  ?alignment rdfs:label \"Chaotic Good\" .\n  \n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages ?language .\n    ?language rdfs:label \"Draconic\"\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,11 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature rdf:type ns1:Beast .\n+  ?creature ns1:hasAlignment ?alignment .\n+  ?alignment rdfs:label \"Chaotic Good\" .\n+  \n+  FILTER NOT EXISTS {\n+    ?creature ns1:hasLanguages ?language .\n+    ?language rdfs:label \"Draconic\"\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.4,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.4444444444444445,
        "sparqlIrisSuffixPrecision": 0.4,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.4444444444444445,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature rdf:type ns1:Beast .\n  ?creature ns1:hasAlignment ?alignment .\n  ?alignment rdfs:label \"Chaotic Good\" .\n\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages ?language .\n    ?language rdfs:label \"Draconic\"\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,11 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature rdf:type ns1:Beast .\n+  ?creature ns1:hasAlignment ?alignment .\n+  ?alignment rdfs:label \"Chaotic Good\" .\n+\n+  FILTER NOT EXISTS {\n+    ?creature ns1:hasLanguages ?language .\n+    ?language rdfs:label \"Draconic\"\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.4,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.4444444444444445,
        "sparqlIrisSuffixPrecision": 0.4,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.4444444444444445,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature rdf:type ns1:Beast .\n  ?creature ns1:hasAlignment ?alignment .\n  ?alignment rdfs:label \"Chaotic Good\" .\n\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages ?language .\n    ?language rdfs:label \"Draconic\"\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,11 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature rdf:type ns1:Beast .\n+  ?creature ns1:hasAlignment ?alignment .\n+  ?alignment rdfs:label \"Chaotic Good\" .\n+\n+  FILTER NOT EXISTS {\n+    ?creature ns1:hasLanguages ?language .\n+    ?language rdfs:label \"Draconic\"\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.4,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.4444444444444445,
        "sparqlIrisSuffixPrecision": 0.4,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.4444444444444445,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary001",
      "question": "which creatures not speaking draconic language do have chaotic good alignment",
      "refSparql": "SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }",
      "refResultSet": [
        "ns1:Anhana",
        "ns1:Ataxian",
        "ns1:Azruverda",
        "ns1:BattleImp",
        "ns1:Biofreezer",
        "ns1:BlackButterfly",
        "ns1:Cayhound",
        "ns1:Caypup",
        "ns1:Celedeen",
        "ns1:Cynosoma",
        "ns1:Djinni",
        "ns1:Domovoi",
        "ns1:Dryad",
        "ns1:ElysianTitan",
        "ns1:Faun",
        "ns1:FungalNymph",
        "ns1:Gancanagh",
        "ns1:Garuda",
        "ns1:Hamadryad",
        "ns1:HeraldofDreams",
        "ns1:Munavri",
        "ns1:Muse",
        "ns1:Nisid",
        "ns1:NobleDjinniVizier",
        "ns1:Nymph",
        "ns1:RiftFlumph",
        "ns1:RimefireEidolon",
        "ns1:SapphireOoze",
        "ns1:SkirmishersTroop",
        "ns1:StarMonarch",
        "ns1:SwanMaiden",
        "ns1:Taniwha",
        "ns1:Unicorn",
        "ns1:WoodGiant",
        "ns1:caypup"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n",
      "iris": "",
      "kgInfoType": "subschema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:20.984997",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:15:23.472315",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:which creatures not speaking draconic language do have chaotic good alignment\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:15:28.423711",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature rdf:type ns1:Beast .\n  ?creature ns1:hasAlignment ?alignment .\n  ?alignment rdfs:label \"Chaotic Good\" .\n  \n  OPTIONAL {\n    ?creature ns1:hasLanguages ?language .\n    FILTER (str(?language) = \"Draconic\")\n  }\n  FILTER (!BOUND(?language))\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:15:28.455603",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:15:32.426682",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature rdf:type ns1:Beast .\n  ?creature ns1:hasAlignment ?alignment .\n  ?alignment rdfs:label \"Chaotic Good\" .\n  \n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages ?language .\n    ?language rdfs:label \"Draconic\"\n  }\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:15:32.490827",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:15:44.457304",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature rdf:type ns1:Beast .\n  ?creature ns1:hasAlignment ?alignment .\n  ?alignment rdfs:label \"Chaotic Good\" .\n\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages ?language .\n    ?language rdfs:label \"Draconic\"\n  }\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:15:56.603674",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubschema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 1644,
      "actualSize": 1196
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 0.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 0.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) AS ?count)\nWHERE {\n  ?creature ns1:hasAlignment ?alignment .\n  ?alignment rdf:type ?alignmentType .\n  FILTER(?alignmentType != ns1:Neutral)\n  \n  ?creature ns1:hasLanguages ns1:TreantLanguage .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) AS ?count)\n+WHERE {\n+  ?creature ns1:hasAlignment ?alignment .\n+  ?alignment rdf:type ?alignmentType .\n+  FILTER(?alignmentType != ns1:Neutral)\n+  \n+  ?creature ns1:hasLanguages ns1:TreantLanguage .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.4,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3636363636363636,
        "sparqlIrisSuffixPrecision": 0.4,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3636363636363636,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "0"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) AS ?count)\nWHERE {\n  ?creature ns1:hasAlignment ?alignment .\n  ?alignment rdf:type ?alignmentType .\n  FILTER(?alignmentType != ns1:Neutral)\n  \n  ?creature ns1:hasLanguages ns1:TreantLanguage .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) AS ?count)\n+WHERE {\n+  ?creature ns1:hasAlignment ?alignment .\n+  ?alignment rdf:type ?alignmentType .\n+  FILTER(?alignmentType != ns1:Neutral)\n+  \n+  ?creature ns1:hasLanguages ns1:TreantLanguage .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.4,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3636363636363636,
        "sparqlIrisSuffixPrecision": 0.4,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3636363636363636,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "0"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary005",
      "question": "how many creatures with non-neutral alignment do speak treant language",
      "refSparql": "SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }",
      "refResultSet": [
        "4"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n",
      "iris": "",
      "kgInfoType": "subschema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:07.046161",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:15:56.603684",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:how many creatures with non-neutral alignment do speak treant language\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\nns1:hasLanguages a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Language ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:16:03.649835",
        "```sparql\nSELECT (COUNT(?creature) AS ?count)\nWHERE {\n  ?creature ns1:hasAlignment ?alignment .\n  ?alignment rdf:type ?alignmentType .\n  FILTER(?alignmentType != ns1:Neutral)\n  \n  ?creature ns1:hasLanguages ns1:TreantLanguage .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:16:14.135774",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubschema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 1055,
      "actualSize": 1269
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ns1:Aasimar ns1:canSpell ?spell .\n  ns1:Caypup ns1:canSpell ?spell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ns1:Aasimar ns1:canSpell ?spell .\n+  ns1:Caypup ns1:canSpell ?spell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ns1:Aasimar ns1:canSpell ?spell .\n  ns1:Caypup ns1:canSpell ?spell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ns1:Aasimar ns1:canSpell ?spell .\n+  ns1:Caypup ns1:canSpell ?spell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ns1:Aasimar ns1:canSpell ?spell .\n  ns1:Caypup ns1:canSpell ?spell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ns1:Aasimar ns1:canSpell ?spell .\n+  ns1:Caypup ns1:canSpell ?spell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ns1:Aasimar ns1:canSpell ?spell .\n  ns1:Caypup ns1:canSpell ?spell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ns1:Aasimar ns1:canSpell ?spell .\n+  ns1:Caypup ns1:canSpell ?spell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.3333333333333333,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.3333333333333333,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary007",
      "question": "what spells Aasimar and Caypup do have in common",
      "refSparql": "SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }",
      "refResultSet": [
        "ns1:stabilize"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n",
      "iris": "",
      "kgInfoType": "subschema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:10.528298",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:16:14.135781",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what spells Aasimar and Caypup do have in common\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:canSpell a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:16:17.948678",
        "```sparql\nSELECT ?spell\nWHERE {\n  ns1:Aasimar ns1:canSpell ?spell .\n  ns1:Caypup ns1:canSpell ?spell .\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:16:18.676058",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:16:21.471815",
        "```sparql\nSELECT ?spell\nWHERE {\n  ns1:Aasimar ns1:canSpell ?spell .\n  ns1:Caypup ns1:canSpell ?spell .\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:16:21.502167",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:16:24.664072",
        "```sparql\nSELECT ?spell\nWHERE {\n  ns1:Aasimar ns1:canSpell ?spell .\n  ns1:Caypup ns1:canSpell ?spell .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:16:35.888929",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubschema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 953,
      "actualSize": 948
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "precision": 0.5,
        "recall": 1.0
      },
      "mean": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "precision": 0.5,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignment (COUNT(?beast) AS ?count)\nWHERE {\n  ?beast ns1:hasAlignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignment (COUNT(?beast) AS ?count)\n+WHERE {\n+  ?beast ns1:hasAlignment ?alignment .\n+}\n+GROUP BY ?alignment\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 2,
        "answerSet": [
          "1762",
          "ns1:trueNeutral"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignment (COUNT(?beast) AS ?count)\nWHERE {\n  ?beast ns1:hasAlignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignment (COUNT(?beast) AS ?count)\n+WHERE {\n+  ?beast ns1:hasAlignment ?alignment .\n+}\n+GROUP BY ?alignment\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 2,
        "answerSet": [
          "1762",
          "ns1:trueNeutral"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary011",
      "question": "what is the most common alignment type",
      "refSparql": "SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1",
      "refResultSet": [
        "ns1:trueNeutral"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n",
      "iris": "",
      "kgInfoType": "subschema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:05.982550",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:16:35.888936",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what is the most common alignment type\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasAlignment a owl:FunctionalProperty,\n        owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Alignment ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:16:41.871479",
        "```sparql\nSELECT ?alignment (COUNT(?beast) AS ?count)\nWHERE {\n  ?beast ns1:hasAlignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:16:51.826248",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryTurtleSubschema",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 927,
      "actualSize": 1602
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary019",
        "sparql": "PREFIX ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#>\n\nSELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n            ns1:hasResists ns1:ColdResist .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+PREFIX ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#>\n+\n+SELECT ?creature\n+WHERE {\n+  ?creature a ns1:Beast ;\n+            ns1:hasResists ns1:ColdResist .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.25,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.3333333333333333,
        "sparqlIrisSuffixPrecision": 0.25,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.3333333333333333,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary019",
        "sparql": "PREFIX ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#>\n\nSELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n            ns1:hasResists ?resist.\n  ?resist ns1:isColdResist \"true\"^^xsd:boolean .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+PREFIX ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#>\n+\n+SELECT ?creature\n+WHERE {\n+  ?creature a ns1:Beast ;\n+            ns1:hasResists ?resist.\n+  ?resist ns1:isColdResist \"true\"^^xsd:boolean .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.2,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.28571428571428575,
        "sparqlIrisSuffixPrecision": 0.2,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.28571428571428575,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary019",
        "sparql": "PREFIX ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#>\n\nSELECT ?creature\nWHERE {\n  ?creature a ns1:Beast .\n  ?creature ns1:hasResists ?resist .\n  FILTER regex(str(?resist), \"ColdResist\", \"i\")\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+PREFIX ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#>\n+\n+SELECT ?creature\n+WHERE {\n+  ?creature a ns1:Beast .\n+  ?creature ns1:hasResists ?resist .\n+  FILTER regex(str(?resist), \"ColdResist\", \"i\")\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.4,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.4,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary019",
        "sparql": "PREFIX ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#>\n\nSELECT ?creature\nWHERE {\n  ?creature a ns1:Beast .\n  ?creature ns1:hasResists ?resist .\n  FILTER regex(str(?resist), \"ColdResist\", \"i\")\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+PREFIX ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#>\n+\n+SELECT ?creature\n+WHERE {\n+  ?creature a ns1:Beast .\n+  ?creature ns1:hasResists ?resist .\n+  FILTER regex(str(?resist), \"ColdResist\", \"i\")\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.3333333333333333,
        "sparqlIrisRecall": 0.5,
        "sparqlIrisF1measure": 0.4,
        "sparqlIrisSuffixPrecision": 0.3333333333333333,
        "sparqlIrisSuffixRecall": 0.5,
        "sparqlIrisSuffixF1measure": 0.4,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary019",
      "question": "what creatures do have cold resist",
      "refSparql": "SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }",
      "refResultSet": [
        "ns1:aasimar"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n",
      "iris": "",
      "kgInfoType": "subschema",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:21.294752",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:16:51.826257",
        "Please generate a SPARQL query for a RDF graph described by the given schema and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what creatures do have cold resist\n\nschema:\n```turtle\n@prefix ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n\nns1:hasResists a owl:ObjectProperty ;\n    rdfs:domain ns1:Beast ;\n    rdfs:range ns1:Resists ;\n    rdfs:subPropertyOf ns1:beastProps .\n\n```"
      ],
      [
        "response",
        "2024-05-13T14:17:01.160334",
        "```sparql\nPREFIX ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#>\n\nSELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n            ns1:hasResists ns1:ColdResist .\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:17:01.197624",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:17:05.480076",
        "```sparql\nPREFIX ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#>\n\nSELECT ?creature\nWHERE {\n  ?creature a ns1:Beast ;\n            ns1:hasResists ?resist.\n  ?resist ns1:isColdResist \"true\"^^xsd:boolean .\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:17:05.515939",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:17:13.121000",
        "```sparql\nPREFIX ns1: <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#>\n\nSELECT ?creature\nWHERE {\n  ?creature a ns1:Beast .\n  ?creature ns1:hasResists ?resist .\n  FILTER regex(str(?resist), \"ColdResist\", \"i\")\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:17:24.517864",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryIris",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 843,
      "actualSize": 641
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasAlignment ns1:chaoticGood .\n  MINUS { ?creature ns1:hasLanguages ns1:DraconicL }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasAlignment ns1:chaoticGood .\n+  MINUS { ?creature ns1:hasLanguages ns1:DraconicL }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 35,
        "answerSetSize": 35,
        "answerSet": [
          "ns1:Anhana",
          "ns1:Ataxian",
          "ns1:Azruverda",
          "ns1:BattleImp",
          "ns1:Biofreezer",
          "ns1:BlackButterfly",
          "ns1:Cayhound",
          "ns1:Caypup",
          "ns1:Celedeen",
          "ns1:Cynosoma",
          "ns1:Djinni",
          "ns1:Domovoi",
          "ns1:Dryad",
          "ns1:ElysianTitan",
          "ns1:Faun",
          "..."
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasAlignment ns1:chaoticGood .\n  MINUS { ?creature ns1:hasLanguages ns1:DraconicL }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasAlignment ns1:chaoticGood .\n+  MINUS { ?creature ns1:hasLanguages ns1:DraconicL }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 35,
        "answerSetSize": 35,
        "answerSet": [
          "ns1:Anhana",
          "ns1:Ataxian",
          "ns1:Azruverda",
          "ns1:BattleImp",
          "ns1:Biofreezer",
          "ns1:BlackButterfly",
          "ns1:Cayhound",
          "ns1:Caypup",
          "ns1:Celedeen",
          "ns1:Cynosoma",
          "ns1:Djinni",
          "ns1:Domovoi",
          "ns1:Dryad",
          "ns1:ElysianTitan",
          "ns1:Faun",
          "..."
        ]
      }
    },
    "taskData": {
      "uid": "beastiary001",
      "question": "which creatures not speaking draconic language do have chaotic good alignment",
      "refSparql": "SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }",
      "refResultSet": [
        "ns1:Anhana",
        "ns1:Ataxian",
        "ns1:Azruverda",
        "ns1:BattleImp",
        "ns1:Biofreezer",
        "ns1:BlackButterfly",
        "ns1:Cayhound",
        "ns1:Caypup",
        "ns1:Celedeen",
        "ns1:Cynosoma",
        "ns1:Djinni",
        "ns1:Domovoi",
        "ns1:Dryad",
        "ns1:ElysianTitan",
        "ns1:Faun",
        "ns1:FungalNymph",
        "ns1:Gancanagh",
        "ns1:Garuda",
        "ns1:Hamadryad",
        "ns1:HeraldofDreams",
        "ns1:Munavri",
        "ns1:Muse",
        "ns1:Nisid",
        "ns1:NobleDjinniVizier",
        "ns1:Nymph",
        "ns1:RiftFlumph",
        "ns1:RimefireEidolon",
        "ns1:SapphireOoze",
        "ns1:SkirmishersTroop",
        "ns1:StarMonarch",
        "ns1:SwanMaiden",
        "ns1:Taniwha",
        "ns1:Unicorn",
        "ns1:WoodGiant",
        "ns1:caypup"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": [
        "ns1:chaoticGood",
        "ns1:DraconicL",
        "ns1:hasAlignment",
        "ns1:hasLanguages"
      ],
      "kgInfoType": "iris",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:01.917506",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:17:24.517871",
        "Please generate a SPARQL query for the given RDF graph iris and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:which creatures not speaking draconic language do have chaotic good alignment\n\nns1:chaoticGood\nns1:DraconicL\nns1:hasAlignment\nns1:hasLanguages"
      ],
      [
        "response",
        "2024-05-13T14:17:26.435370",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasAlignment ns1:chaoticGood .\n  MINUS { ?creature ns1:hasLanguages ns1:DraconicL }\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:17:37.051649",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryIris",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 1210,
      "actualSize": 783
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) AS ?count)\nWHERE {\n  ?creature ns1:hasAlignment ?alignment.\n  ?creature ns1:hasLanguages ns1:TreantL.\n  FILTER (?alignment != ns1:trueNeutral && ?alignment != ns1:chaoticNeutral && ?alignment != ns1:lawfulNeutral)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) AS ?count)\n+WHERE {\n+  ?creature ns1:hasAlignment ?alignment.\n+  ?creature ns1:hasLanguages ns1:TreantL.\n+  FILTER (?alignment != ns1:trueNeutral && ?alignment != ns1:chaoticNeutral && ?alignment != ns1:lawfulNeutral)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "4"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) AS ?count)\nWHERE {\n  ?creature ns1:hasAlignment ?alignment.\n  ?creature ns1:hasLanguages ns1:TreantL.\n  FILTER (?alignment != ns1:trueNeutral && ?alignment != ns1:chaoticNeutral && ?alignment != ns1:lawfulNeutral)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) AS ?count)\n+WHERE {\n+  ?creature ns1:hasAlignment ?alignment.\n+  ?creature ns1:hasLanguages ns1:TreantL.\n+  FILTER (?alignment != ns1:trueNeutral && ?alignment != ns1:chaoticNeutral && ?alignment != ns1:lawfulNeutral)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "4"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary005",
      "question": "how many creatures with non-neutral alignment do speak treant language",
      "refSparql": "SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }",
      "refResultSet": [
        "4"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": [
        "ns1:TreantL",
        "ns1:trueNeutral",
        "ns1:chaoticNeutral",
        "ns1:lawfulNeutral",
        "ns1:hasLanguages",
        "ns1:hasAlignment"
      ],
      "kgInfoType": "iris",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:02.692950",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:17:37.051657",
        "Please generate a SPARQL query for the given RDF graph iris and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:how many creatures with non-neutral alignment do speak treant language\n\nns1:TreantL\nns1:trueNeutral\nns1:chaoticNeutral\nns1:lawfulNeutral\nns1:hasLanguages\nns1:hasAlignment"
      ],
      [
        "response",
        "2024-05-13T14:17:39.744599",
        "```sparql\nSELECT (COUNT(?creature) AS ?count)\nWHERE {\n  ?creature ns1:hasAlignment ?alignment.\n  ?creature ns1:hasLanguages ns1:TreantL.\n  FILTER (?alignment != ns1:trueNeutral && ?alignment != ns1:chaoticNeutral && ?alignment != ns1:lawfulNeutral)\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:17:49.415129",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryIris",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 764,
      "actualSize": 561
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary007",
        "sparql": "SELECT DISTINCT ?spell\nWHERE {\n  ns1:aasimar ns1:canSpell ?spell .\n  ns1:caypup ns1:canSpell ?spell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT DISTINCT ?spell\n+WHERE {\n+  ns1:aasimar ns1:canSpell ?spell .\n+  ns1:caypup ns1:canSpell ?spell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:stabilize"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary007",
        "sparql": "SELECT DISTINCT ?spell\nWHERE {\n  ns1:aasimar ns1:canSpell ?spell .\n  ns1:caypup ns1:canSpell ?spell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT DISTINCT ?spell\n+WHERE {\n+  ns1:aasimar ns1:canSpell ?spell .\n+  ns1:caypup ns1:canSpell ?spell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:stabilize"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary007",
      "question": "what spells Aasimar and Caypup do have in common",
      "refSparql": "SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }",
      "refResultSet": [
        "ns1:stabilize"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": [
        "ns1:aasimar",
        "ns1:caypup",
        "ns1:canSpell"
      ],
      "kgInfoType": "iris",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:01.620472",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:17:49.415137",
        "Please generate a SPARQL query for the given RDF graph iris and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what spells Aasimar and Caypup do have in common\n\nns1:aasimar\nns1:caypup\nns1:canSpell"
      ],
      [
        "response",
        "2024-05-13T14:17:51.035601",
        "```sparql\nSELECT DISTINCT ?spell\nWHERE {\n  ns1:aasimar ns1:canSpell ?spell .\n  ns1:caypup ns1:canSpell ?spell .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:18:02.101645",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryIris",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 576,
      "actualSize": 585
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "precision": 0.5,
        "recall": 1.0
      },
      "mean": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "precision": 0.5,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignmentType (COUNT(?alignmentType) AS ?count)\nWHERE {\n  ?s ns1:hasAlignment ?alignmentType\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignmentType (COUNT(?alignmentType) AS ?count)\n+WHERE {\n+  ?s ns1:hasAlignment ?alignmentType\n+}\n+GROUP BY ?alignmentType\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 2,
        "answerSet": [
          "1762",
          "ns1:trueNeutral"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignmentType (COUNT(?alignmentType) AS ?count)\nWHERE {\n  ?s ns1:hasAlignment ?alignmentType\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignmentType (COUNT(?alignmentType) AS ?count)\n+WHERE {\n+  ?s ns1:hasAlignment ?alignmentType\n+}\n+GROUP BY ?alignmentType\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 2,
        "answerSet": [
          "1762",
          "ns1:trueNeutral"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary011",
      "question": "what is the most common alignment type",
      "refSparql": "SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1",
      "refResultSet": [
        "ns1:trueNeutral"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": [
        "ns1:hasAlignment"
      ],
      "kgInfoType": "iris",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:02.098896",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:18:02.101652",
        "Please generate a SPARQL query for the given RDF graph iris and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what is the most common alignment type\n\nns1:hasAlignment"
      ],
      [
        "response",
        "2024-05-13T14:18:04.200541",
        "```sparql\nSELECT ?alignmentType (COUNT(?alignmentType) AS ?count)\nWHERE {\n  ?s ns1:hasAlignment ?alignmentType\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:18:15.314396",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryIris",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 593,
      "actualSize": 494
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,4 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ns1:cold\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:aasimar"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,4 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ns1:cold\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:aasimar"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary019",
      "question": "what creatures do have cold resist",
      "refSparql": "SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }",
      "refResultSet": [
        "ns1:aasimar"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": [
        "ns1:cold",
        "ns1:hasResists"
      ],
      "kgInfoType": "iris",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:03.155738",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:18:15.314404",
        "Please generate a SPARQL query for the given RDF graph iris and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what creatures do have cold resist\n\nns1:cold\nns1:hasResists"
      ],
      [
        "response",
        "2024-05-13T14:18:18.470134",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:18:29.758546",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryIris",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 843,
      "actualSize": 1282
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "2": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      },
      "mean": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.2,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.20000000000000004,
        "f1measure": 0.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.2,
        "f1measure": 0.0,
        "precision": 1.0,
        "recall": 0.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary001",
        "sparql": "PREFIX ns1: <http://example.org/>\n\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasAlignment ns1:chaoticGood .\n  MINUS { ?creature ns1:hasLanguages ns1:DraconicL }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+PREFIX ns1: <http://example.org/>\n+\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasAlignment ns1:chaoticGood .\n+  MINUS { ?creature ns1:hasLanguages ns1:DraconicL }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "1": {
        "testUid": "beastiary001",
        "sparql": "PREFIX ns1: <http://example.org/>\n\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasAlignment ns1:chaoticGood .\n  FILTER NOT EXISTS { \n    ?creature ns1:hasLanguages ns1:DraconicL \n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,9 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+PREFIX ns1: <http://example.org/>\n+\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasAlignment ns1:chaoticGood .\n+  FILTER NOT EXISTS { \n+    ?creature ns1:hasLanguages ns1:DraconicL \n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "2": {
        "testUid": "beastiary001",
        "sparql": "PREFIX ns1: <http://example.org/>\n\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasAlignment ns1:chaoticGood .\n  FILTER NOT EXISTS { \n    ?creature ns1:hasLanguages/ns1:name \"Draconic\" \n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,9 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+PREFIX ns1: <http://example.org/>\n+\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasAlignment ns1:chaoticGood .\n+  FILTER NOT EXISTS { \n+    ?creature ns1:hasLanguages/ns1:name \"Draconic\" \n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.75,
        "sparqlIrisRecall": 0.75,
        "sparqlIrisF1measure": 0.75,
        "sparqlIrisSuffixPrecision": 0.75,
        "sparqlIrisSuffixRecall": 0.75,
        "sparqlIrisSuffixF1measure": 0.75,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      },
      "multiShotCount": 3,
      "last": {
        "testUid": "beastiary001",
        "sparql": "PREFIX ns1: <http://example.org/>\n\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasAlignment ns1:chaoticGood .\n  FILTER NOT EXISTS { \n    ?creature ns1:hasLanguages/ns1:name \"Draconic\" \n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,9 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+PREFIX ns1: <http://example.org/>\n+\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasAlignment ns1:chaoticGood .\n+  FILTER NOT EXISTS { \n+    ?creature ns1:hasLanguages/ns1:name \"Draconic\" \n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 0.75,
        "sparqlIrisRecall": 0.75,
        "sparqlIrisF1measure": 0.75,
        "sparqlIrisSuffixPrecision": 0.75,
        "sparqlIrisSuffixRecall": 0.75,
        "sparqlIrisSuffixF1measure": 0.75,
        "answerResultLength": 0,
        "answerSetSize": 0,
        "answerSet": []
      }
    },
    "taskData": {
      "uid": "beastiary001",
      "question": "which creatures not speaking draconic language do have chaotic good alignment",
      "refSparql": "SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }",
      "refResultSet": [
        "ns1:Anhana",
        "ns1:Ataxian",
        "ns1:Azruverda",
        "ns1:BattleImp",
        "ns1:Biofreezer",
        "ns1:BlackButterfly",
        "ns1:Cayhound",
        "ns1:Caypup",
        "ns1:Celedeen",
        "ns1:Cynosoma",
        "ns1:Djinni",
        "ns1:Domovoi",
        "ns1:Dryad",
        "ns1:ElysianTitan",
        "ns1:Faun",
        "ns1:FungalNymph",
        "ns1:Gancanagh",
        "ns1:Garuda",
        "ns1:Hamadryad",
        "ns1:HeraldofDreams",
        "ns1:Munavri",
        "ns1:Muse",
        "ns1:Nisid",
        "ns1:NobleDjinniVizier",
        "ns1:Nymph",
        "ns1:RiftFlumph",
        "ns1:RimefireEidolon",
        "ns1:SapphireOoze",
        "ns1:SkirmishersTroop",
        "ns1:StarMonarch",
        "ns1:SwanMaiden",
        "ns1:Taniwha",
        "ns1:Unicorn",
        "ns1:WoodGiant",
        "ns1:caypup"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": [
        "ns1:chaoticGood",
        "ns1:DraconicL",
        "ns1:hasAlignment",
        "ns1:hasLanguages"
      ],
      "kgInfoType": "iris",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:06.427195",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:18:29.758553",
        "Please generate a SPARQL query for the given RDF graph iris and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:which creatures not speaking draconic language do have chaotic good alignment\n\nns1:chaoticGood\nns1:DraconicL\nns1:hasAlignment\nns1:hasLanguages"
      ],
      [
        "response",
        "2024-05-13T14:18:32.584865",
        "```sparql\nPREFIX ns1: <http://example.org/>\n\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasAlignment ns1:chaoticGood .\n  MINUS { ?creature ns1:hasLanguages ns1:DraconicL }\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:18:32.633018",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:18:34.442974",
        "```sparql\nPREFIX ns1: <http://example.org/>\n\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasAlignment ns1:chaoticGood .\n  FILTER NOT EXISTS { \n    ?creature ns1:hasLanguages ns1:DraconicL \n  }\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:18:34.488852",
        "Maybe you want to think again about your answer. Your SPARQL query returns an empty result when executed."
      ],
      [
        "response",
        "2024-05-13T14:18:36.185741",
        "```sparql\nPREFIX ns1: <http://example.org/>\n\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasAlignment ns1:chaoticGood .\n  FILTER NOT EXISTS { \n    ?creature ns1:hasLanguages/ns1:name \"Draconic\" \n  }\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:18:48.153514",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryIris",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 1210,
      "actualSize": 791
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) AS ?numCreatures)\nWHERE {\n  ?creature ns1:hasAlignment ?alignment .\n  ?creature ns1:hasLanguages ns1:TreantL .\n  FILTER(?alignment != ns1:trueNeutral && ?alignment != ns1:chaoticNeutral && ?alignment != ns1:lawfulNeutral)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) AS ?numCreatures)\n+WHERE {\n+  ?creature ns1:hasAlignment ?alignment .\n+  ?creature ns1:hasLanguages ns1:TreantL .\n+  FILTER(?alignment != ns1:trueNeutral && ?alignment != ns1:chaoticNeutral && ?alignment != ns1:lawfulNeutral)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "4"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) AS ?numCreatures)\nWHERE {\n  ?creature ns1:hasAlignment ?alignment .\n  ?creature ns1:hasLanguages ns1:TreantL .\n  FILTER(?alignment != ns1:trueNeutral && ?alignment != ns1:chaoticNeutral && ?alignment != ns1:lawfulNeutral)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) AS ?numCreatures)\n+WHERE {\n+  ?creature ns1:hasAlignment ?alignment .\n+  ?creature ns1:hasLanguages ns1:TreantL .\n+  FILTER(?alignment != ns1:trueNeutral && ?alignment != ns1:chaoticNeutral && ?alignment != ns1:lawfulNeutral)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "4"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary005",
      "question": "how many creatures with non-neutral alignment do speak treant language",
      "refSparql": "SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }",
      "refResultSet": [
        "4"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": [
        "ns1:TreantL",
        "ns1:trueNeutral",
        "ns1:chaoticNeutral",
        "ns1:lawfulNeutral",
        "ns1:hasLanguages",
        "ns1:hasAlignment"
      ],
      "kgInfoType": "iris",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:04.947549",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:18:48.153521",
        "Please generate a SPARQL query for the given RDF graph iris and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:how many creatures with non-neutral alignment do speak treant language\n\nns1:TreantL\nns1:trueNeutral\nns1:chaoticNeutral\nns1:lawfulNeutral\nns1:hasLanguages\nns1:hasAlignment"
      ],
      [
        "response",
        "2024-05-13T14:18:53.101063",
        "```sparql\nSELECT (COUNT(?creature) AS ?numCreatures)\nWHERE {\n  ?creature ns1:hasAlignment ?alignment .\n  ?creature ns1:hasLanguages ns1:TreantL .\n  FILTER(?alignment != ns1:trueNeutral && ?alignment != ns1:chaoticNeutral && ?alignment != ns1:lawfulNeutral)\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:19:04.988033",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryIris",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 764,
      "actualSize": 552
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ns1:aasimar ns1:canSpell ?spell .\n  ns1:caypup ns1:canSpell ?spell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ns1:aasimar ns1:canSpell ?spell .\n+  ns1:caypup ns1:canSpell ?spell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:stabilize"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?spell\nWHERE {\n  ns1:aasimar ns1:canSpell ?spell .\n  ns1:caypup ns1:canSpell ?spell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?spell\n+WHERE {\n+  ns1:aasimar ns1:canSpell ?spell .\n+  ns1:caypup ns1:canSpell ?spell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:stabilize"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary007",
      "question": "what spells Aasimar and Caypup do have in common",
      "refSparql": "SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }",
      "refResultSet": [
        "ns1:stabilize"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": [
        "ns1:aasimar",
        "ns1:caypup",
        "ns1:canSpell"
      ],
      "kgInfoType": "iris",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:02.157454",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:19:04.988042",
        "Please generate a SPARQL query for the given RDF graph iris and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what spells Aasimar and Caypup do have in common\n\nns1:aasimar\nns1:caypup\nns1:canSpell"
      ],
      [
        "response",
        "2024-05-13T14:19:07.145487",
        "```sparql\nSELECT ?spell\nWHERE {\n  ns1:aasimar ns1:canSpell ?spell .\n  ns1:caypup ns1:canSpell ?spell .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:19:18.262198",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryIris",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 576,
      "actualSize": 587
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "precision": 0.5,
        "recall": 1.0
      },
      "mean": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "precision": 0.5,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignmentType (COUNT(?alignmentType) AS ?count)\nWHERE {\n  ?s ns1:hasAlignment ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignmentType (COUNT(?alignmentType) AS ?count)\n+WHERE {\n+  ?s ns1:hasAlignment ?alignmentType .\n+}\n+GROUP BY ?alignmentType\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 2,
        "answerSet": [
          "1762",
          "ns1:trueNeutral"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignmentType (COUNT(?alignmentType) AS ?count)\nWHERE {\n  ?s ns1:hasAlignment ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignmentType (COUNT(?alignmentType) AS ?count)\n+WHERE {\n+  ?s ns1:hasAlignment ?alignmentType .\n+}\n+GROUP BY ?alignmentType\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 2,
        "answerSet": [
          "1762",
          "ns1:trueNeutral"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary011",
      "question": "what is the most common alignment type",
      "refSparql": "SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1",
      "refResultSet": [
        "ns1:trueNeutral"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": [
        "ns1:hasAlignment"
      ],
      "kgInfoType": "iris",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:02.119348",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:19:18.262205",
        "Please generate a SPARQL query for the given RDF graph iris and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what is the most common alignment type\n\nns1:hasAlignment"
      ],
      [
        "response",
        "2024-05-13T14:19:20.381546",
        "```sparql\nSELECT ?alignmentType (COUNT(?alignmentType) AS ?count)\nWHERE {\n  ?s ns1:hasAlignment ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:19:31.197322",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-3.5-turbo-0125--gpt-3.5-turbo-0125",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryIris",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 593,
      "actualSize": 494
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,4 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ns1:cold\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:aasimar"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,4 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ns1:cold\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:aasimar"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary019",
      "question": "what creatures do have cold resist",
      "refSparql": "SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }",
      "refResultSet": [
        "ns1:aasimar"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": [
        "ns1:cold",
        "ns1:hasResists"
      ],
      "kgInfoType": "iris",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:01.652047",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:19:31.197330",
        "Please generate a SPARQL query for the given RDF graph iris and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what creatures do have cold resist\n\nns1:cold\nns1:hasResists"
      ],
      [
        "response",
        "2024-05-13T14:19:32.849369",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:19:44.286322",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryIris",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 843,
      "actualSize": 1225
    },
    "scores": {
      "0": {
        "answerParse": 0.0,
        "combined": 0.0
      },
      "1": {
        "answerParse": 1.0,
        "combined": 0.611764705882353,
        "f1measure": 0.5147058823529412,
        "precision": 0.3465346534653465,
        "recall": 1.0
      },
      "mean": {
        "combined": 0.3058823529411765,
        "f1measure": 0.2573529411764706,
        "answerParse": 0.5
      },
      "max": {
        "combined": 0.611764705882353,
        "f1measure": 0.5147058823529412,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.407843137254902,
        "f1measure": 0.34313725490196084,
        "answerParse": 0.6666666666666666
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.611764705882353,
        "f1measure": 0.5147058823529412,
        "precision": 0.3465346534653465,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasAlignment ns1:chaoticGood.\n  OPTIONAL {?creature ns1:hasLanguages ns1:DraconicL.}\n  FILTER(!BOUND(?creature ns1:hasLanguages ns1:DraconicL))\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasAlignment ns1:chaoticGood.\n+  OPTIONAL {?creature ns1:hasLanguages ns1:DraconicL.}\n+  FILTER(!BOUND(?creature ns1:hasLanguages ns1:DraconicL))\n+}",
        "parseError": "Expected SelectQuery, found 'FILTER'  (at char 128), (line:5, col:3)",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "FILTER",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false
      },
      "1": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasAlignment ns1:chaoticGood.\n  OPTIONAL {?creature ns1:hasLanguages ns1:DraconicL.}\n  FILTER(!BOUND(?language))\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasAlignment ns1:chaoticGood.\n+  OPTIONAL {?creature ns1:hasLanguages ns1:DraconicL.}\n+  FILTER(!BOUND(?language))\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 101,
        "answerSetSize": 101,
        "answerSet": [
          "ns1:AdultBrassDragon",
          "ns1:AdultCopperDragon",
          "ns1:AdultCrystalDragon",
          "ns1:AdultSeaDragon",
          "ns1:AncientBrassDragon",
          "ns1:AncientCopperDragon",
          "ns1:AncientCrystalDragon",
          "ns1:AncientSeaDragon",
          "ns1:Androsphinx",
          "ns1:Anhana",
          "ns1:Ataxian",
          "ns1:AuwazCouatl",
          "ns1:Azruverda",
          "ns1:BattleImp",
          "ns1:Biofreezer",
          "..."
        ]
      },
      "multiShotCount": 2,
      "last": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasAlignment ns1:chaoticGood.\n  OPTIONAL {?creature ns1:hasLanguages ns1:DraconicL.}\n  FILTER(!BOUND(?language))\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasAlignment ns1:chaoticGood.\n+  OPTIONAL {?creature ns1:hasLanguages ns1:DraconicL.}\n+  FILTER(!BOUND(?language))\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 101,
        "answerSetSize": 101,
        "answerSet": [
          "ns1:AdultBrassDragon",
          "ns1:AdultCopperDragon",
          "ns1:AdultCrystalDragon",
          "ns1:AdultSeaDragon",
          "ns1:AncientBrassDragon",
          "ns1:AncientCopperDragon",
          "ns1:AncientCrystalDragon",
          "ns1:AncientSeaDragon",
          "ns1:Androsphinx",
          "ns1:Anhana",
          "ns1:Ataxian",
          "ns1:AuwazCouatl",
          "ns1:Azruverda",
          "ns1:BattleImp",
          "ns1:Biofreezer",
          "..."
        ]
      }
    },
    "taskData": {
      "uid": "beastiary001",
      "question": "which creatures not speaking draconic language do have chaotic good alignment",
      "refSparql": "SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }",
      "refResultSet": [
        "ns1:Anhana",
        "ns1:Ataxian",
        "ns1:Azruverda",
        "ns1:BattleImp",
        "ns1:Biofreezer",
        "ns1:BlackButterfly",
        "ns1:Cayhound",
        "ns1:Caypup",
        "ns1:Celedeen",
        "ns1:Cynosoma",
        "ns1:Djinni",
        "ns1:Domovoi",
        "ns1:Dryad",
        "ns1:ElysianTitan",
        "ns1:Faun",
        "ns1:FungalNymph",
        "ns1:Gancanagh",
        "ns1:Garuda",
        "ns1:Hamadryad",
        "ns1:HeraldofDreams",
        "ns1:Munavri",
        "ns1:Muse",
        "ns1:Nisid",
        "ns1:NobleDjinniVizier",
        "ns1:Nymph",
        "ns1:RiftFlumph",
        "ns1:RimefireEidolon",
        "ns1:SapphireOoze",
        "ns1:SkirmishersTroop",
        "ns1:StarMonarch",
        "ns1:SwanMaiden",
        "ns1:Taniwha",
        "ns1:Unicorn",
        "ns1:WoodGiant",
        "ns1:caypup"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": [
        "ns1:chaoticGood",
        "ns1:DraconicL",
        "ns1:hasAlignment",
        "ns1:hasLanguages"
      ],
      "kgInfoType": "iris",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:07.575690",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:19:44.286329",
        "Please generate a SPARQL query for the given RDF graph iris and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:which creatures not speaking draconic language do have chaotic good alignment\n\nns1:chaoticGood\nns1:DraconicL\nns1:hasAlignment\nns1:hasLanguages"
      ],
      [
        "response",
        "2024-05-13T14:19:48.284608",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasAlignment ns1:chaoticGood.\n  OPTIONAL {?creature ns1:hasLanguages ns1:DraconicL.}\n  FILTER(!BOUND(?creature ns1:hasLanguages ns1:DraconicL))\n}\n```"
      ],
      [
        "prompt",
        "2024-05-13T14:19:48.300758",
        "Please try to correct your answer. Your SPARQL query has syntax errors: Expected SelectQuery, found 'FILTER'  (at char 128), (line:5, col:3)\n\nSPARQL given:\n```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasAlignment ns1:chaoticGood.\n  OPTIONAL {?creature ns1:hasLanguages ns1:DraconicL.}\n  FILTER(!BOUND(?creature ns1:hasLanguages ns1:DraconicL))\n}```"
      ],
      [
        "response",
        "2024-05-13T14:19:51.862012",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasAlignment ns1:chaoticGood.\n  OPTIONAL {?creature ns1:hasLanguages ns1:DraconicL.}\n  FILTER(!BOUND(?language))\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:20:03.211708",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryIris",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 1210,
      "actualSize": 794
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) AS ?countCreatures)\nWHERE {\n  ?creature ns1:hasLanguages ns1:TreantL .\n  ?creature ns1:hasAlignment ?alignment .\n  FILTER (?alignment != ns1:trueNeutral && ?alignment != ns1:chaoticNeutral && ?alignment != ns1:lawfulNeutral)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) AS ?countCreatures)\n+WHERE {\n+  ?creature ns1:hasLanguages ns1:TreantL .\n+  ?creature ns1:hasAlignment ?alignment .\n+  FILTER (?alignment != ns1:trueNeutral && ?alignment != ns1:chaoticNeutral && ?alignment != ns1:lawfulNeutral)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "4"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) AS ?countCreatures)\nWHERE {\n  ?creature ns1:hasLanguages ns1:TreantL .\n  ?creature ns1:hasAlignment ?alignment .\n  FILTER (?alignment != ns1:trueNeutral && ?alignment != ns1:chaoticNeutral && ?alignment != ns1:lawfulNeutral)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) AS ?countCreatures)\n+WHERE {\n+  ?creature ns1:hasLanguages ns1:TreantL .\n+  ?creature ns1:hasAlignment ?alignment .\n+  FILTER (?alignment != ns1:trueNeutral && ?alignment != ns1:chaoticNeutral && ?alignment != ns1:lawfulNeutral)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "4"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary005",
      "question": "how many creatures with non-neutral alignment do speak treant language",
      "refSparql": "SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }",
      "refResultSet": [
        "4"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": [
        "ns1:TreantL",
        "ns1:trueNeutral",
        "ns1:chaoticNeutral",
        "ns1:lawfulNeutral",
        "ns1:hasLanguages",
        "ns1:hasAlignment"
      ],
      "kgInfoType": "iris",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:04.911967",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:20:03.211718",
        "Please generate a SPARQL query for the given RDF graph iris and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:how many creatures with non-neutral alignment do speak treant language\n\nns1:TreantL\nns1:trueNeutral\nns1:chaoticNeutral\nns1:lawfulNeutral\nns1:hasLanguages\nns1:hasAlignment"
      ],
      [
        "response",
        "2024-05-13T14:20:08.123675",
        "```sparql\nSELECT (COUNT(?creature) AS ?countCreatures)\nWHERE {\n  ?creature ns1:hasLanguages ns1:TreantL .\n  ?creature ns1:hasAlignment ?alignment .\n  FILTER (?alignment != ns1:trueNeutral && ?alignment != ns1:chaoticNeutral && ?alignment != ns1:lawfulNeutral)\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:20:19.614239",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryIris",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 764,
      "actualSize": 571
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?commonSpell \nWHERE {\n  ns1:aasimar ns1:canSpell ?commonSpell .\n  ns1:caypup ns1:canSpell ?commonSpell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?commonSpell \n+WHERE {\n+  ns1:aasimar ns1:canSpell ?commonSpell .\n+  ns1:caypup ns1:canSpell ?commonSpell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:stabilize"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?commonSpell \nWHERE {\n  ns1:aasimar ns1:canSpell ?commonSpell .\n  ns1:caypup ns1:canSpell ?commonSpell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?commonSpell \n+WHERE {\n+  ns1:aasimar ns1:canSpell ?commonSpell .\n+  ns1:caypup ns1:canSpell ?commonSpell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:stabilize"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary007",
      "question": "what spells Aasimar and Caypup do have in common",
      "refSparql": "SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }",
      "refResultSet": [
        "ns1:stabilize"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": [
        "ns1:aasimar",
        "ns1:caypup",
        "ns1:canSpell"
      ],
      "kgInfoType": "iris",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:04.120716",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:20:19.614247",
        "Please generate a SPARQL query for the given RDF graph iris and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what spells Aasimar and Caypup do have in common\n\nns1:aasimar\nns1:caypup\nns1:canSpell"
      ],
      [
        "response",
        "2024-05-13T14:20:23.734955",
        "```sparql\nSELECT ?commonSpell \nWHERE {\n  ns1:aasimar ns1:canSpell ?commonSpell .\n  ns1:caypup ns1:canSpell ?commonSpell .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:20:35.004041",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryIris",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 576,
      "actualSize": 570
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "precision": 0.5,
        "recall": 1.0
      },
      "mean": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "precision": 0.5,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignment (COUNT(?alignment) AS ?count)\nWHERE {\n  ?s ns1:hasAlignment ?alignment.\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignment (COUNT(?alignment) AS ?count)\n+WHERE {\n+  ?s ns1:hasAlignment ?alignment.\n+}\n+GROUP BY ?alignment\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 2,
        "answerSet": [
          "1762",
          "ns1:trueNeutral"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignment (COUNT(?alignment) AS ?count)\nWHERE {\n  ?s ns1:hasAlignment ?alignment.\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignment (COUNT(?alignment) AS ?count)\n+WHERE {\n+  ?s ns1:hasAlignment ?alignment.\n+}\n+GROUP BY ?alignment\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 2,
        "answerSet": [
          "1762",
          "ns1:trueNeutral"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary011",
      "question": "what is the most common alignment type",
      "refSparql": "SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1",
      "refResultSet": [
        "ns1:trueNeutral"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": [
        "ns1:hasAlignment"
      ],
      "kgInfoType": "iris",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:03.372663",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:20:35.004048",
        "Please generate a SPARQL query for the given RDF graph iris and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what is the most common alignment type\n\nns1:hasAlignment"
      ],
      [
        "response",
        "2024-05-13T14:20:38.376704",
        "```sparql\nSELECT ?alignment (COUNT(?alignment) AS ?count)\nWHERE {\n  ?s ns1:hasAlignment ?alignment.\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:20:49.169988",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryIris",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 593,
      "actualSize": 496
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,4 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ns1:cold .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:aasimar"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,4 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ns1:cold .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:aasimar"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary019",
      "question": "what creatures do have cold resist",
      "refSparql": "SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }",
      "refResultSet": [
        "ns1:aasimar"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": [
        "ns1:cold",
        "ns1:hasResists"
      ],
      "kgInfoType": "iris",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:02.232047",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:20:49.169996",
        "Please generate a SPARQL query for the given RDF graph iris and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what creatures do have cold resist\n\nns1:cold\nns1:hasResists"
      ],
      [
        "response",
        "2024-05-13T14:20:51.402035",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:21:02.112181",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryIris",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 843,
      "actualSize": 659
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasAlignment ns1:chaoticGood.\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages ns1:DraconicL.\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasAlignment ns1:chaoticGood.\n+  FILTER NOT EXISTS {\n+    ?creature ns1:hasLanguages ns1:DraconicL.\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 35,
        "answerSetSize": 35,
        "answerSet": [
          "ns1:Anhana",
          "ns1:Ataxian",
          "ns1:Azruverda",
          "ns1:BattleImp",
          "ns1:Biofreezer",
          "ns1:BlackButterfly",
          "ns1:Cayhound",
          "ns1:Caypup",
          "ns1:Celedeen",
          "ns1:Cynosoma",
          "ns1:Djinni",
          "ns1:Domovoi",
          "ns1:Dryad",
          "ns1:ElysianTitan",
          "ns1:Faun",
          "..."
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasAlignment ns1:chaoticGood.\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages ns1:DraconicL.\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasAlignment ns1:chaoticGood.\n+  FILTER NOT EXISTS {\n+    ?creature ns1:hasLanguages ns1:DraconicL.\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 35,
        "answerSetSize": 35,
        "answerSet": [
          "ns1:Anhana",
          "ns1:Ataxian",
          "ns1:Azruverda",
          "ns1:BattleImp",
          "ns1:Biofreezer",
          "ns1:BlackButterfly",
          "ns1:Cayhound",
          "ns1:Caypup",
          "ns1:Celedeen",
          "ns1:Cynosoma",
          "ns1:Djinni",
          "ns1:Domovoi",
          "ns1:Dryad",
          "ns1:ElysianTitan",
          "ns1:Faun",
          "..."
        ]
      }
    },
    "taskData": {
      "uid": "beastiary001",
      "question": "which creatures not speaking draconic language do have chaotic good alignment",
      "refSparql": "SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }",
      "refResultSet": [
        "ns1:Anhana",
        "ns1:Ataxian",
        "ns1:Azruverda",
        "ns1:BattleImp",
        "ns1:Biofreezer",
        "ns1:BlackButterfly",
        "ns1:Cayhound",
        "ns1:Caypup",
        "ns1:Celedeen",
        "ns1:Cynosoma",
        "ns1:Djinni",
        "ns1:Domovoi",
        "ns1:Dryad",
        "ns1:ElysianTitan",
        "ns1:Faun",
        "ns1:FungalNymph",
        "ns1:Gancanagh",
        "ns1:Garuda",
        "ns1:Hamadryad",
        "ns1:HeraldofDreams",
        "ns1:Munavri",
        "ns1:Muse",
        "ns1:Nisid",
        "ns1:NobleDjinniVizier",
        "ns1:Nymph",
        "ns1:RiftFlumph",
        "ns1:RimefireEidolon",
        "ns1:SapphireOoze",
        "ns1:SkirmishersTroop",
        "ns1:StarMonarch",
        "ns1:SwanMaiden",
        "ns1:Taniwha",
        "ns1:Unicorn",
        "ns1:WoodGiant",
        "ns1:caypup"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": [
        "ns1:chaoticGood",
        "ns1:DraconicL",
        "ns1:hasAlignment",
        "ns1:hasLanguages"
      ],
      "kgInfoType": "iris",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:03.513108",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:21:02.112188",
        "Please generate a SPARQL query for the given RDF graph iris and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:which creatures not speaking draconic language do have chaotic good alignment\n\nns1:chaoticGood\nns1:DraconicL\nns1:hasAlignment\nns1:hasLanguages"
      ],
      [
        "response",
        "2024-05-13T14:21:05.625289",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasAlignment ns1:chaoticGood.\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages ns1:DraconicL.\n  }\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:21:17.064565",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryIris",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 1210,
      "actualSize": 794
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) AS ?countCreatures)\nWHERE {\n  ?creature ns1:hasLanguages ns1:TreantL .\n  ?creature ns1:hasAlignment ?alignment .\n  FILTER (?alignment != ns1:trueNeutral && ?alignment != ns1:chaoticNeutral && ?alignment != ns1:lawfulNeutral)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) AS ?countCreatures)\n+WHERE {\n+  ?creature ns1:hasLanguages ns1:TreantL .\n+  ?creature ns1:hasAlignment ?alignment .\n+  FILTER (?alignment != ns1:trueNeutral && ?alignment != ns1:chaoticNeutral && ?alignment != ns1:lawfulNeutral)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "4"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) AS ?countCreatures)\nWHERE {\n  ?creature ns1:hasLanguages ns1:TreantL .\n  ?creature ns1:hasAlignment ?alignment .\n  FILTER (?alignment != ns1:trueNeutral && ?alignment != ns1:chaoticNeutral && ?alignment != ns1:lawfulNeutral)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) AS ?countCreatures)\n+WHERE {\n+  ?creature ns1:hasLanguages ns1:TreantL .\n+  ?creature ns1:hasAlignment ?alignment .\n+  FILTER (?alignment != ns1:trueNeutral && ?alignment != ns1:chaoticNeutral && ?alignment != ns1:lawfulNeutral)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "4"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary005",
      "question": "how many creatures with non-neutral alignment do speak treant language",
      "refSparql": "SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }",
      "refResultSet": [
        "4"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": [
        "ns1:TreantL",
        "ns1:trueNeutral",
        "ns1:chaoticNeutral",
        "ns1:lawfulNeutral",
        "ns1:hasLanguages",
        "ns1:hasAlignment"
      ],
      "kgInfoType": "iris",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:04.457524",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:21:17.064576",
        "Please generate a SPARQL query for the given RDF graph iris and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:how many creatures with non-neutral alignment do speak treant language\n\nns1:TreantL\nns1:trueNeutral\nns1:chaoticNeutral\nns1:lawfulNeutral\nns1:hasLanguages\nns1:hasAlignment"
      ],
      [
        "response",
        "2024-05-13T14:21:21.522089",
        "```sparql\nSELECT (COUNT(?creature) AS ?countCreatures)\nWHERE {\n  ?creature ns1:hasLanguages ns1:TreantL .\n  ?creature ns1:hasAlignment ?alignment .\n  FILTER (?alignment != ns1:trueNeutral && ?alignment != ns1:chaoticNeutral && ?alignment != ns1:lawfulNeutral)\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:21:32.765725",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryIris",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 764,
      "actualSize": 570
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?commonSpell\nWHERE {\n  ns1:aasimar ns1:canSpell ?commonSpell .\n  ns1:caypup ns1:canSpell ?commonSpell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?commonSpell\n+WHERE {\n+  ns1:aasimar ns1:canSpell ?commonSpell .\n+  ns1:caypup ns1:canSpell ?commonSpell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:stabilize"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?commonSpell\nWHERE {\n  ns1:aasimar ns1:canSpell ?commonSpell .\n  ns1:caypup ns1:canSpell ?commonSpell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?commonSpell\n+WHERE {\n+  ns1:aasimar ns1:canSpell ?commonSpell .\n+  ns1:caypup ns1:canSpell ?commonSpell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:stabilize"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary007",
      "question": "what spells Aasimar and Caypup do have in common",
      "refSparql": "SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }",
      "refResultSet": [
        "ns1:stabilize"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": [
        "ns1:aasimar",
        "ns1:caypup",
        "ns1:canSpell"
      ],
      "kgInfoType": "iris",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:03.215440",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:21:32.765733",
        "Please generate a SPARQL query for the given RDF graph iris and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what spells Aasimar and Caypup do have in common\n\nns1:aasimar\nns1:caypup\nns1:canSpell"
      ],
      [
        "response",
        "2024-05-13T14:21:35.981165",
        "```sparql\nSELECT ?commonSpell\nWHERE {\n  ns1:aasimar ns1:canSpell ?commonSpell .\n  ns1:caypup ns1:canSpell ?commonSpell .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:21:46.950375",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryIris",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 576,
      "actualSize": 574
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "precision": 0.5,
        "recall": 1.0
      },
      "mean": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "precision": 0.5,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignment (COUNT(?alignment) as ?count)\nWHERE {\n  ?iris ns1:hasAlignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignment (COUNT(?alignment) as ?count)\n+WHERE {\n+  ?iris ns1:hasAlignment ?alignment .\n+}\n+GROUP BY ?alignment\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 2,
        "answerSet": [
          "1762",
          "ns1:trueNeutral"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignment (COUNT(?alignment) as ?count)\nWHERE {\n  ?iris ns1:hasAlignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignment (COUNT(?alignment) as ?count)\n+WHERE {\n+  ?iris ns1:hasAlignment ?alignment .\n+}\n+GROUP BY ?alignment\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 2,
        "answerSet": [
          "1762",
          "ns1:trueNeutral"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary011",
      "question": "what is the most common alignment type",
      "refSparql": "SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1",
      "refResultSet": [
        "ns1:trueNeutral"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": [
        "ns1:hasAlignment"
      ],
      "kgInfoType": "iris",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:03.005572",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:21:46.950383",
        "Please generate a SPARQL query for the given RDF graph iris and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what is the most common alignment type\n\nns1:hasAlignment"
      ],
      [
        "response",
        "2024-05-13T14:21:49.955947",
        "```sparql\nSELECT ?alignment (COUNT(?alignment) as ?count)\nWHERE {\n  ?iris ns1:hasAlignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:22:01.222792",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-1106-preview--gpt-4-1106-preview",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryIris",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 593,
      "actualSize": 496
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,4 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ns1:cold .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:aasimar"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,4 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ns1:cold .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:aasimar"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary019",
      "question": "what creatures do have cold resist",
      "refSparql": "SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }",
      "refResultSet": [
        "ns1:aasimar"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": [
        "ns1:cold",
        "ns1:hasResists"
      ],
      "kgInfoType": "iris",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:02.207907",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:22:01.222802",
        "Please generate a SPARQL query for the given RDF graph iris and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what creatures do have cold resist\n\nns1:cold\nns1:hasResists"
      ],
      [
        "response",
        "2024-05-13T14:22:03.430699",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:22:15.365375",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryIris",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 843,
      "actualSize": 668
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary001",
        "sparql": "SELECT DISTINCT ?creature\nWHERE {\n  ?creature ns1:hasAlignment ns1:chaoticGood.\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages ns1:DraconicL.\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT DISTINCT ?creature\n+WHERE {\n+  ?creature ns1:hasAlignment ns1:chaoticGood.\n+  FILTER NOT EXISTS {\n+    ?creature ns1:hasLanguages ns1:DraconicL.\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 35,
        "answerSetSize": 35,
        "answerSet": [
          "ns1:Anhana",
          "ns1:Ataxian",
          "ns1:Azruverda",
          "ns1:BattleImp",
          "ns1:Biofreezer",
          "ns1:BlackButterfly",
          "ns1:Cayhound",
          "ns1:Caypup",
          "ns1:Celedeen",
          "ns1:Cynosoma",
          "ns1:Djinni",
          "ns1:Domovoi",
          "ns1:Dryad",
          "ns1:ElysianTitan",
          "ns1:Faun",
          "..."
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary001",
        "sparql": "SELECT DISTINCT ?creature\nWHERE {\n  ?creature ns1:hasAlignment ns1:chaoticGood.\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages ns1:DraconicL.\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT DISTINCT ?creature\n+WHERE {\n+  ?creature ns1:hasAlignment ns1:chaoticGood.\n+  FILTER NOT EXISTS {\n+    ?creature ns1:hasLanguages ns1:DraconicL.\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 35,
        "answerSetSize": 35,
        "answerSet": [
          "ns1:Anhana",
          "ns1:Ataxian",
          "ns1:Azruverda",
          "ns1:BattleImp",
          "ns1:Biofreezer",
          "ns1:BlackButterfly",
          "ns1:Cayhound",
          "ns1:Caypup",
          "ns1:Celedeen",
          "ns1:Cynosoma",
          "ns1:Djinni",
          "ns1:Domovoi",
          "ns1:Dryad",
          "ns1:ElysianTitan",
          "ns1:Faun",
          "..."
        ]
      }
    },
    "taskData": {
      "uid": "beastiary001",
      "question": "which creatures not speaking draconic language do have chaotic good alignment",
      "refSparql": "SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }",
      "refResultSet": [
        "ns1:Anhana",
        "ns1:Ataxian",
        "ns1:Azruverda",
        "ns1:BattleImp",
        "ns1:Biofreezer",
        "ns1:BlackButterfly",
        "ns1:Cayhound",
        "ns1:Caypup",
        "ns1:Celedeen",
        "ns1:Cynosoma",
        "ns1:Djinni",
        "ns1:Domovoi",
        "ns1:Dryad",
        "ns1:ElysianTitan",
        "ns1:Faun",
        "ns1:FungalNymph",
        "ns1:Gancanagh",
        "ns1:Garuda",
        "ns1:Hamadryad",
        "ns1:HeraldofDreams",
        "ns1:Munavri",
        "ns1:Muse",
        "ns1:Nisid",
        "ns1:NobleDjinniVizier",
        "ns1:Nymph",
        "ns1:RiftFlumph",
        "ns1:RimefireEidolon",
        "ns1:SapphireOoze",
        "ns1:SkirmishersTroop",
        "ns1:StarMonarch",
        "ns1:SwanMaiden",
        "ns1:Taniwha",
        "ns1:Unicorn",
        "ns1:WoodGiant",
        "ns1:caypup"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": [
        "ns1:chaoticGood",
        "ns1:DraconicL",
        "ns1:hasAlignment",
        "ns1:hasLanguages"
      ],
      "kgInfoType": "iris",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:03.203159",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:22:15.365383",
        "Please generate a SPARQL query for the given RDF graph iris and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:which creatures not speaking draconic language do have chaotic good alignment\n\nns1:chaoticGood\nns1:DraconicL\nns1:hasAlignment\nns1:hasLanguages"
      ],
      [
        "response",
        "2024-05-13T14:22:18.568534",
        "```sparql\nSELECT DISTINCT ?creature\nWHERE {\n  ?creature ns1:hasAlignment ns1:chaoticGood.\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages ns1:DraconicL.\n  }\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:22:29.028499",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryIris",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 1210,
      "actualSize": 784
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) AS ?count)\nWHERE {\n  ?creature ns1:hasLanguages ns1:TreantL .\n  ?creature ns1:hasAlignment ?alignment .\n  FILTER(?alignment != ns1:trueNeutral && ?alignment != ns1:chaoticNeutral && ?alignment != ns1:lawfulNeutral)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) AS ?count)\n+WHERE {\n+  ?creature ns1:hasLanguages ns1:TreantL .\n+  ?creature ns1:hasAlignment ?alignment .\n+  FILTER(?alignment != ns1:trueNeutral && ?alignment != ns1:chaoticNeutral && ?alignment != ns1:lawfulNeutral)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "4"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) AS ?count)\nWHERE {\n  ?creature ns1:hasLanguages ns1:TreantL .\n  ?creature ns1:hasAlignment ?alignment .\n  FILTER(?alignment != ns1:trueNeutral && ?alignment != ns1:chaoticNeutral && ?alignment != ns1:lawfulNeutral)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,6 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) AS ?count)\n+WHERE {\n+  ?creature ns1:hasLanguages ns1:TreantL .\n+  ?creature ns1:hasAlignment ?alignment .\n+  FILTER(?alignment != ns1:trueNeutral && ?alignment != ns1:chaoticNeutral && ?alignment != ns1:lawfulNeutral)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "4"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary005",
      "question": "how many creatures with non-neutral alignment do speak treant language",
      "refSparql": "SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }",
      "refResultSet": [
        "4"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": [
        "ns1:TreantL",
        "ns1:trueNeutral",
        "ns1:chaoticNeutral",
        "ns1:lawfulNeutral",
        "ns1:hasLanguages",
        "ns1:hasAlignment"
      ],
      "kgInfoType": "iris",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:05.429133",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:22:29.028506",
        "Please generate a SPARQL query for the given RDF graph iris and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:how many creatures with non-neutral alignment do speak treant language\n\nns1:TreantL\nns1:trueNeutral\nns1:chaoticNeutral\nns1:lawfulNeutral\nns1:hasLanguages\nns1:hasAlignment"
      ],
      [
        "response",
        "2024-05-13T14:22:34.457632",
        "```sparql\nSELECT (COUNT(?creature) AS ?count)\nWHERE {\n  ?creature ns1:hasLanguages ns1:TreantL .\n  ?creature ns1:hasAlignment ?alignment .\n  FILTER(?alignment != ns1:trueNeutral && ?alignment != ns1:chaoticNeutral && ?alignment != ns1:lawfulNeutral)\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:22:45.649287",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryIris",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 764,
      "actualSize": 570
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?commonSpell\nWHERE {\n  ns1:aasimar ns1:canSpell ?commonSpell .\n  ns1:caypup ns1:canSpell ?commonSpell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?commonSpell\n+WHERE {\n+  ns1:aasimar ns1:canSpell ?commonSpell .\n+  ns1:caypup ns1:canSpell ?commonSpell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:stabilize"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?commonSpell\nWHERE {\n  ns1:aasimar ns1:canSpell ?commonSpell .\n  ns1:caypup ns1:canSpell ?commonSpell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?commonSpell\n+WHERE {\n+  ns1:aasimar ns1:canSpell ?commonSpell .\n+  ns1:caypup ns1:canSpell ?commonSpell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:stabilize"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary007",
      "question": "what spells Aasimar and Caypup do have in common",
      "refSparql": "SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }",
      "refResultSet": [
        "ns1:stabilize"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": [
        "ns1:aasimar",
        "ns1:caypup",
        "ns1:canSpell"
      ],
      "kgInfoType": "iris",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:05.098325",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:22:45.649294",
        "Please generate a SPARQL query for the given RDF graph iris and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what spells Aasimar and Caypup do have in common\n\nns1:aasimar\nns1:caypup\nns1:canSpell"
      ],
      [
        "response",
        "2024-05-13T14:22:50.747612",
        "```sparql\nSELECT ?commonSpell\nWHERE {\n  ns1:aasimar ns1:canSpell ?commonSpell .\n  ns1:caypup ns1:canSpell ?commonSpell .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:23:02.657154",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryIris",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 576,
      "actualSize": 587
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "precision": 0.5,
        "recall": 1.0
      },
      "mean": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "precision": 0.5,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignmentType (COUNT(?alignmentType) AS ?count)\nWHERE {\n  ?s ns1:hasAlignment ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignmentType (COUNT(?alignmentType) AS ?count)\n+WHERE {\n+  ?s ns1:hasAlignment ?alignmentType .\n+}\n+GROUP BY ?alignmentType\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 2,
        "answerSet": [
          "1762",
          "ns1:trueNeutral"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignmentType (COUNT(?alignmentType) AS ?count)\nWHERE {\n  ?s ns1:hasAlignment ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignmentType (COUNT(?alignmentType) AS ?count)\n+WHERE {\n+  ?s ns1:hasAlignment ?alignmentType .\n+}\n+GROUP BY ?alignmentType\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 2,
        "answerSet": [
          "1762",
          "ns1:trueNeutral"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary011",
      "question": "what is the most common alignment type",
      "refSparql": "SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1",
      "refResultSet": [
        "ns1:trueNeutral"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": [
        "ns1:hasAlignment"
      ],
      "kgInfoType": "iris",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:06.032409",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:23:02.657165",
        "Please generate a SPARQL query for the given RDF graph iris and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what is the most common alignment type\n\nns1:hasAlignment"
      ],
      [
        "response",
        "2024-05-13T14:23:08.689563",
        "```sparql\nSELECT ?alignmentType (COUNT(?alignmentType) AS ?count)\nWHERE {\n  ?s ns1:hasAlignment ?alignmentType .\n}\nGROUP BY ?alignmentType\nORDER BY DESC(?count)\nLIMIT 1\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:23:20.649673",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryIris",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 593,
      "actualSize": 495
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold.\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,4 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ns1:cold.\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:aasimar"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold.\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,4 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ns1:cold.\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:aasimar"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary019",
      "question": "what creatures do have cold resist",
      "refSparql": "SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }",
      "refResultSet": [
        "ns1:aasimar"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": [
        "ns1:cold",
        "ns1:hasResists"
      ],
      "kgInfoType": "iris",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:02.685242",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:23:20.649680",
        "Please generate a SPARQL query for the given RDF graph iris and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what creatures do have cold resist\n\nns1:cold\nns1:hasResists"
      ],
      [
        "response",
        "2024-05-13T14:23:23.334915",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold.\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:23:34.184198",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryIris",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 843,
      "actualSize": 659
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasAlignment ns1:chaoticGood.\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages ns1:DraconicL.\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasAlignment ns1:chaoticGood.\n+  FILTER NOT EXISTS {\n+    ?creature ns1:hasLanguages ns1:DraconicL.\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 35,
        "answerSetSize": 35,
        "answerSet": [
          "ns1:Anhana",
          "ns1:Ataxian",
          "ns1:Azruverda",
          "ns1:BattleImp",
          "ns1:Biofreezer",
          "ns1:BlackButterfly",
          "ns1:Cayhound",
          "ns1:Caypup",
          "ns1:Celedeen",
          "ns1:Cynosoma",
          "ns1:Djinni",
          "ns1:Domovoi",
          "ns1:Dryad",
          "ns1:ElysianTitan",
          "ns1:Faun",
          "..."
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary001",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasAlignment ns1:chaoticGood.\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages ns1:DraconicL.\n  }\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasAlignment ns1:chaoticGood.\n+  FILTER NOT EXISTS {\n+    ?creature ns1:hasLanguages ns1:DraconicL.\n+  }\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 35,
        "answerSetSize": 35,
        "answerSet": [
          "ns1:Anhana",
          "ns1:Ataxian",
          "ns1:Azruverda",
          "ns1:BattleImp",
          "ns1:Biofreezer",
          "ns1:BlackButterfly",
          "ns1:Cayhound",
          "ns1:Caypup",
          "ns1:Celedeen",
          "ns1:Cynosoma",
          "ns1:Djinni",
          "ns1:Domovoi",
          "ns1:Dryad",
          "ns1:ElysianTitan",
          "ns1:Faun",
          "..."
        ]
      }
    },
    "taskData": {
      "uid": "beastiary001",
      "question": "which creatures not speaking draconic language do have chaotic good alignment",
      "refSparql": "SELECT ?v1 WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticGood> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#DraconicL>} }",
      "refResultSet": [
        "ns1:Anhana",
        "ns1:Ataxian",
        "ns1:Azruverda",
        "ns1:BattleImp",
        "ns1:Biofreezer",
        "ns1:BlackButterfly",
        "ns1:Cayhound",
        "ns1:Caypup",
        "ns1:Celedeen",
        "ns1:Cynosoma",
        "ns1:Djinni",
        "ns1:Domovoi",
        "ns1:Dryad",
        "ns1:ElysianTitan",
        "ns1:Faun",
        "ns1:FungalNymph",
        "ns1:Gancanagh",
        "ns1:Garuda",
        "ns1:Hamadryad",
        "ns1:HeraldofDreams",
        "ns1:Munavri",
        "ns1:Muse",
        "ns1:Nisid",
        "ns1:NobleDjinniVizier",
        "ns1:Nymph",
        "ns1:RiftFlumph",
        "ns1:RimefireEidolon",
        "ns1:SapphireOoze",
        "ns1:SkirmishersTroop",
        "ns1:StarMonarch",
        "ns1:SwanMaiden",
        "ns1:Taniwha",
        "ns1:Unicorn",
        "ns1:WoodGiant",
        "ns1:caypup"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": [
        "ns1:chaoticGood",
        "ns1:DraconicL",
        "ns1:hasAlignment",
        "ns1:hasLanguages"
      ],
      "kgInfoType": "iris",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:03.704776",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:23:34.184206",
        "Please generate a SPARQL query for the given RDF graph iris and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:which creatures not speaking draconic language do have chaotic good alignment\n\nns1:chaoticGood\nns1:DraconicL\nns1:hasAlignment\nns1:hasLanguages"
      ],
      [
        "response",
        "2024-05-13T14:23:37.888974",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasAlignment ns1:chaoticGood.\n  FILTER NOT EXISTS {\n    ?creature ns1:hasLanguages ns1:DraconicL.\n  }\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:23:48.866568",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryIris",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 1210,
      "actualSize": 807
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) as ?count)\nWHERE {\n  ?creature ns1:hasLanguages ns1:TreantL .\n  ?creature ns1:hasAlignment ?alignment .\n  FILTER (?alignment != ns1:trueNeutral && \n          ?alignment != ns1:chaoticNeutral && \n          ?alignment != ns1:lawfulNeutral)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) as ?count)\n+WHERE {\n+  ?creature ns1:hasLanguages ns1:TreantL .\n+  ?creature ns1:hasAlignment ?alignment .\n+  FILTER (?alignment != ns1:trueNeutral && \n+          ?alignment != ns1:chaoticNeutral && \n+          ?alignment != ns1:lawfulNeutral)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "4"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary005",
        "sparql": "SELECT (COUNT(?creature) as ?count)\nWHERE {\n  ?creature ns1:hasLanguages ns1:TreantL .\n  ?creature ns1:hasAlignment ?alignment .\n  FILTER (?alignment != ns1:trueNeutral && \n          ?alignment != ns1:chaoticNeutral && \n          ?alignment != ns1:lawfulNeutral)\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,8 @@\n\n-SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }\n+SELECT (COUNT(?creature) as ?count)\n+WHERE {\n+  ?creature ns1:hasLanguages ns1:TreantL .\n+  ?creature ns1:hasAlignment ?alignment .\n+  FILTER (?alignment != ns1:trueNeutral && \n+          ?alignment != ns1:chaoticNeutral && \n+          ?alignment != ns1:lawfulNeutral)\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "4"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary005",
      "question": "how many creatures with non-neutral alignment do speak treant language",
      "refSparql": "SELECT (COUNT(?v1) as ?v2) WHERE {  ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasLanguages> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#TreantL> MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#trueNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#chaoticNeutral>} MINUS{?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#lawfulNeutral>} }",
      "refResultSet": [
        "4"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": [
        "ns1:TreantL",
        "ns1:trueNeutral",
        "ns1:chaoticNeutral",
        "ns1:lawfulNeutral",
        "ns1:hasLanguages",
        "ns1:hasAlignment"
      ],
      "kgInfoType": "iris",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:06.123621",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:23:48.866575",
        "Please generate a SPARQL query for the given RDF graph iris and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:how many creatures with non-neutral alignment do speak treant language\n\nns1:TreantL\nns1:trueNeutral\nns1:chaoticNeutral\nns1:lawfulNeutral\nns1:hasLanguages\nns1:hasAlignment"
      ],
      [
        "response",
        "2024-05-13T14:23:54.990189",
        "```sparql\nSELECT (COUNT(?creature) as ?count)\nWHERE {\n  ?creature ns1:hasLanguages ns1:TreantL .\n  ?creature ns1:hasAlignment ?alignment .\n  FILTER (?alignment != ns1:trueNeutral && \n          ?alignment != ns1:chaoticNeutral && \n          ?alignment != ns1:lawfulNeutral)\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:24:06.484973",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryIris",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 764,
      "actualSize": 571
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?commonSpell \nWHERE {\n  ns1:aasimar ns1:canSpell ?commonSpell .\n  ns1:caypup ns1:canSpell ?commonSpell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?commonSpell \n+WHERE {\n+  ns1:aasimar ns1:canSpell ?commonSpell .\n+  ns1:caypup ns1:canSpell ?commonSpell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:stabilize"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary007",
        "sparql": "SELECT ?commonSpell \nWHERE {\n  ns1:aasimar ns1:canSpell ?commonSpell .\n  ns1:caypup ns1:canSpell ?commonSpell .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,5 @@\n\n-SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }\n+SELECT ?commonSpell \n+WHERE {\n+  ns1:aasimar ns1:canSpell ?commonSpell .\n+  ns1:caypup ns1:canSpell ?commonSpell .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:stabilize"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary007",
      "question": "what spells Aasimar and Caypup do have in common",
      "refSparql": "SELECT ?v1 WHERE { <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#aasimar> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1. <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#caypup> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#canSpell> ?v1 }",
      "refResultSet": [
        "ns1:stabilize"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": [
        "ns1:aasimar",
        "ns1:caypup",
        "ns1:canSpell"
      ],
      "kgInfoType": "iris",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:03.459532",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:24:06.484983",
        "Please generate a SPARQL query for the given RDF graph iris and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what spells Aasimar and Caypup do have in common\n\nns1:aasimar\nns1:caypup\nns1:canSpell"
      ],
      [
        "response",
        "2024-05-13T14:24:09.944505",
        "```sparql\nSELECT ?commonSpell \nWHERE {\n  ns1:aasimar ns1:canSpell ?commonSpell .\n  ns1:caypup ns1:canSpell ?commonSpell .\n}\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:24:21.904782",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryIris",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 576,
      "actualSize": 579
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "precision": 0.5,
        "recall": 1.0
      },
      "mean": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "max": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 0.7333333333333334,
        "f1measure": 0.6666666666666666,
        "precision": 0.5,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignment (COUNT(?character) AS ?count)\nWHERE {\n  ?character ns1:hasAlignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignment (COUNT(?character) AS ?count)\n+WHERE {\n+  ?character ns1:hasAlignment ?alignment .\n+}\n+GROUP BY ?alignment\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 2,
        "answerSet": [
          "1762",
          "ns1:trueNeutral"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary011",
        "sparql": "SELECT ?alignment (COUNT(?character) AS ?count)\nWHERE {\n  ?character ns1:hasAlignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,7 @@\n\n-SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1\n+SELECT ?alignment (COUNT(?character) AS ?count)\n+WHERE {\n+  ?character ns1:hasAlignment ?alignment .\n+}\n+GROUP BY ?alignment\n+ORDER BY DESC(?count)\n+LIMIT 1",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 2,
        "answerSet": [
          "1762",
          "ns1:trueNeutral"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary011",
      "question": "what is the most common alignment type",
      "refSparql": "SELECT ?v1 WHERE { ?v2 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasAlignment> ?v1 } GROUP BY ?v1 ORDER BY DESC (COUNT(?v1)) LIMIT 1",
      "refResultSet": [
        "ns1:trueNeutral"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": [
        "ns1:hasAlignment"
      ],
      "kgInfoType": "iris",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:05.725998",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:24:21.904789",
        "Please generate a SPARQL query for the given RDF graph iris and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what is the most common alignment type\n\nns1:hasAlignment"
      ],
      [
        "response",
        "2024-05-13T14:24:27.630780",
        "```sparql\nSELECT ?alignment (COUNT(?character) AS ?count)\nWHERE {\n  ?character ns1:hasAlignment ?alignment .\n}\nGROUP BY ?alignment\nORDER BY DESC(?count)\nLIMIT 1\n```"
      ]
    ]
  },
  {
    "startTime": "2024-05-13T14:24:38.631969",
    "reevalOriginalTime": null,
    "modelId": "GPT--gpt-4-turbo-2024-04-09--gpt-4-turbo-2024-04-09",
    "taskInfo": {
      "taskId": "Text2SparqlExecEvalListBeastiary",
      "taskLabel": "Text2SparqlExecEvalListBeastiaryIris",
      "version": "2.2",
      "gitCommit": "86a8f4ae63d5b8235614d4ca5af8a952ac4a47ab"
    },
    "taskSizeInfo": {
      "targetSize": null,
      "estimatedSize": 593,
      "actualSize": 496
    },
    "scores": {
      "0": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      },
      "mean": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "max": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "meanExt": {
        "combined": 1.0,
        "f1measure": 1.0,
        "answerParse": 1.0
      },
      "last": {
        "answerParse": 1.0,
        "combined": 1.0,
        "f1measure": 1.0,
        "precision": 1.0,
        "recall": 1.0
      }
    },
    "info": {
      "0": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,4 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ns1:cold .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:aasimar"
        ]
      },
      "multiShotCount": 1,
      "last": {
        "testUid": "beastiary019",
        "sparql": "SELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold .\n}",
        "diffSparql": "--- optimal\n\n+++ answer\n\n@@ -1 +1,4 @@\n\n-SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }\n+SELECT ?creature\n+WHERE {\n+  ?creature ns1:hasResists ns1:cold .\n+}",
        "parseError": "The SPARQL query syntax is correct.",
        "parseErrorPrefix": "",
        "parseErrorUnexpected": "",
        "parseErrorEmpty": false,
        "parseErrorSPARQL": false,
        "sparqlIrisPrecision": 1.0,
        "sparqlIrisRecall": 1.0,
        "sparqlIrisF1measure": 1.0,
        "sparqlIrisSuffixPrecision": 1.0,
        "sparqlIrisSuffixRecall": 1.0,
        "sparqlIrisSuffixF1measure": 1.0,
        "answerResultLength": 1,
        "answerSetSize": 1,
        "answerSet": [
          "ns1:aasimar"
        ]
      }
    },
    "taskData": {
      "uid": "beastiary019",
      "question": "what creatures do have cold resist",
      "refSparql": "SELECT  ?v1 WHERE { ?v1 <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#hasResists> <http://www.semanticweb.org/annab/ontologies/2022/3/ontology#cold> }",
      "refResultSet": [
        "ns1:aasimar"
      ],
      "entityLabelMapping": null,
      "multishotLimit": 3,
      "multishotSyntaxLimit": 3,
      "multishotResultLimit": 3,
      "subGraph": "\n",
      "subSchema": "\n",
      "iris": [
        "ns1:cold",
        "ns1:hasResists"
      ],
      "kgInfoType": "iris",
      "kgInfoFormat": "turtle"
    },
    "duration": "0:00:02.484803",
    "interactions": [
      [
        "prompt",
        "2024-05-13T14:24:38.631977",
        "Please generate a SPARQL query for the given RDF graph iris and the given question. Assume common prefixes like foaf, rdf or ns1 to be defined.\nTo support automated parsing, please answer with just a markdown fenced code block (start and end with ```) containing the sparql query, no other text.\n\nExample for Answer format:\n```sparql\nSELECT ...\n```\n\nQuestion:what creatures do have cold resist\n\nns1:cold\nns1:hasResists"
      ],
      [
        "response",
        "2024-05-13T14:24:41.116772",
        "```sparql\nSELECT ?creature\nWHERE {\n  ?creature ns1:hasResists ns1:cold .\n}\n```"
      ]
    ]
  }
]